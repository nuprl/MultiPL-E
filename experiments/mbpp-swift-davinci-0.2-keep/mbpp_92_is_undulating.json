{
  "name": "mbpp_92_is_undulating",
  "language": "swift",
  "prompt": "\n/// Write a function to check whether the given number is undulating or not.\nfunc is_undulating(n: Int) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_92_is_undulating.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_undulating(n: 1212121) == true)\nassert(is_undulating(n: 1991) == false)\nassert(is_undulating(n: 121) == true)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    var next = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr || curr == next {\n            return false\n        }\n        prev = curr\n        curr = next\n        next = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev != curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    let s = String(n)\n    var i = 0\n    while i < s.count - 2 {\n        let a = Int(String(s[s.index(s.startIndex, offsetBy: i)]))!\n        let b = Int(String(s[s.index(s.startIndex, offsetBy: i + 1)]))!\n        let c = Int(String(s[s.index(s.startIndex, offsetBy: i + 2)]))!\n        if a == b || b == c || a == c {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == next_digit {\n            return false\n        }\n        last_digit = next_digit\n        next_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let cur = n % 10\n        if prev != cur {\n            return false\n        }\n        prev = cur\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_undulating = false\n    while n > 0 {\n        let digit = n % 10\n        if last_digit == digit {\n            return false\n        }\n        is_undulating = !is_undulating\n        last_digit = digit\n        n /= 10\n    }\n    return is_undulating",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_undulating = false\n    for i in 0..<digits.count - 2 {\n        if digits[i] % 2 == 0 && digits[i + 1] % 2 == 1 && digits[i + 2] % 2 == 0 {\n            is_undulating = true\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = 0\n    var curr = 0\n    var next = 0\n    var is_undulating = false\n    while n > 0 {\n        prev = curr\n        curr = next\n        next = n % 10\n        if prev != 0 {\n            if prev > curr && curr < next || prev < curr && curr > next {\n                is_undulating = true\n            } else {\n                is_undulating = false\n            }\n        }\n        n /= 10\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var second_last_digit = (n / 10) % 10\n    while n > 0 {\n        if last_digit == second_last_digit {\n            return false\n        }\n        n /= 10\n        second_last_digit = last_digit\n        last_digit = n % 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var is_increasing = true\n    while n > 0 {\n        n /= 10\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        last_digit = digit\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if current_digit == last_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last = n % 10\n    n /= 10\n    var current = n % 10\n    n /= 10\n    while n > 0 {\n        if last == current {\n            return false\n        }\n        last = current\n        current = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var next_digit = 0\n    var is_undulating = true\n    while n > 0 {\n        n /= 10\n        next_digit = n % 10\n        if last_digit == next_digit {\n            is_undulating = false\n            break\n        }\n        last_digit = next_digit\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    var is_increasing = true\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing && digit > last_digit {\n            return false\n        }\n        if !is_increasing && digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    for i in 0..<digits.count - 2 {\n        if digits[i] != digits[i + 2] {\n            return false\n        }\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev != curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var current_digit = 0\n    var is_undulating = true\n    while n > 0 {\n        n /= 10\n        current_digit = n % 10\n        if current_digit == last_digit {\n            is_undulating = false\n            break\n        }\n        last_digit = current_digit\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = false\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var last_digit = n % 10\n    var n = n / 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var second_last_digit = (n / 10) % 10\n    var is_increasing = last_digit > second_last_digit\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        is_increasing = !is_increasing\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_odd = true\n    for i in 0..<digits.count - 1 {\n        if is_odd {\n            if digits[i] >= digits[i + 1] {\n                return false\n            }\n        } else {\n            if digits[i] <= digits[i + 1] {\n                return false\n            }\n        }\n        is_odd = !is_odd\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var last_diff = digits[0] - digits[1]\n    for i in 1..<digits.count - 1 {\n        let diff = digits[i] - digits[i + 1]\n        if diff * last_diff >= 0 {\n            return false\n        }\n        last_diff = diff\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    digits.reverse()\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 1] {\n            i += 1\n            continue\n        }\n        if digits[i] > digits[i + 1] {\n            if digits[i + 1] < digits[i + 2] {\n                return false\n            }\n        } else {\n            if digits[i + 1] > digits[i + 2] {\n                return false\n            }\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var next_digit = (n / 10) % 10\n    var is_increasing = last_digit < next_digit\n    n /= 10\n    while n > 0 {\n        last_digit = next_digit\n        next_digit = n % 10\n        if is_increasing {\n            if last_digit > next_digit {\n                is_increasing = false\n            } else {\n                return false\n            }\n        } else {\n            if last_digit < next_digit {\n                is_increasing = true\n            } else {\n                return false\n            }\n        }\n        n /= 10\n    }\n    return true",
    "    var prev_diff = 0\n    var curr_diff = 0\n    var prev_digit = 0\n    var curr_digit = 0\n    var n = n\n    while n > 0 {\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        prev_diff = curr_diff\n        curr_diff = curr_digit - prev_digit\n        if prev_diff * curr_diff >= 0 {\n            return false\n        }\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    while n > 0 {\n        if current_digit == last_digit {\n            return false\n        }\n        last_digit = current_digit\n        n /= 10\n        current_digit = n % 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if last_digit == digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_undulating = true\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 1] || digits[i + 1] == digits[i + 2] {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var lastDigit = n % 10\n    n /= 10\n    var isUndulating = true\n    while n > 0 {\n        let digit = n % 10\n        if digit == lastDigit {\n            isUndulating = false\n            break\n        }\n        lastDigit = digit\n        n /= 10\n    }\n    return isUndulating",
    "    var last_digit = n % 10\n    var n = n / 10\n    var is_ascending = true\n    while n > 0 {\n        let digit = n % 10\n        if is_ascending {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_ascending = !is_ascending\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if prev_digit == curr_digit {\n            return false\n        }\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n            if digit < last_digit {\n                is_increasing = false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n            if digit > last_digit {\n                is_increasing = true\n            }\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing && digits[i] < digits[i-1] {\n            is_increasing = false\n        } else if !is_increasing && digits[i] > digits[i-1] {\n            return false\n        }\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if last_digit == digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    var i = 0\n    while i < s.count - 1 {\n        if s[i] == s[i + 1] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var second_last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit && digit != second_last_digit {\n            return false\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var prev = n % 10\n    var n = n / 10\n    var curr = n % 10\n    var n = n / 10\n    var is_increasing = prev < curr\n    while n > 0 {\n        prev = curr\n        curr = n % 10\n        n = n / 10\n        if is_increasing && prev > curr {\n            return false\n        }\n        if !is_increasing && prev < curr {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var is_increasing = true\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if prev_digit != curr_digit {\n            return false\n        }\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 0..<digits.count - 1 {\n        if is_increasing {\n            if digits[i] > digits[i + 1] {\n                is_increasing = false\n            } else {\n                return false\n            }\n        } else {\n            if digits[i] < digits[i + 1] {\n                is_increasing = true\n            } else {\n                return false\n            }\n        }\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if current_digit == last_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit < current_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if last_digit < current_digit {\n                return false\n            }\n        } else {\n            if last_digit > current_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_ascending = true\n    while n > 0 {\n        let digit = n % 10\n        if is_ascending {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_ascending = !is_ascending\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if current_digit == last_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var undulating = false\n    var last_digit = n % 10\n    var n = n / 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            undulating = !undulating\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return undulating",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var str = String(n)\n    var i = 0\n    while i < str.count - 1 {\n        if str[i] == str[i + 1] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    let s = String(n)\n    let l = s.count\n    if l < 3 {\n        return false\n    }\n    var i = 0\n    while i < l - 2 {\n        if s[i] == s[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    digits.reverse()\n    var i = 0\n    while i < digits.count - 1 {\n        if digits[i] == digits[i + 1] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if current_digit == last_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    var is_increasing = prev_digit > curr_digit\n    while n > 0 {\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n        if is_increasing && prev_digit < curr_digit {\n            return false\n        }\n        if !is_increasing && prev_digit > curr_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    let s = String(n)\n    for i in 1..<s.count {\n        let a = s[s.index(s.startIndex, offsetBy: i-1)]\n        let b = s[s.index(s.startIndex, offsetBy: i)]\n        if a == b {\n            return false\n        }\n    }\n    return true",
    "    let s = String(n)\n    var i = 0\n    while i < s.count - 2 {\n        let a = Int(String(s[s.index(s.startIndex, offsetBy: i)]))!\n        let b = Int(String(s[s.index(s.startIndex, offsetBy: i + 1)]))!\n        let c = Int(String(s[s.index(s.startIndex, offsetBy: i + 2)]))!\n        if (a > b && b < c) || (a < b && b > c) {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    let digits = String(n).map { Int(String($0))! }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 1] {\n            i += 1\n        } else if digits[i] < digits[i + 1] && digits[i + 1] > digits[i + 2] {\n            i += 2\n        } else if digits[i] > digits[i + 1] && digits[i + 1] < digits[i + 2] {\n            i += 2\n        } else {\n            return false\n        }\n    }\n    return true",
    "    let s = String(n)\n    let c = s.characters\n    var i = c.startIndex\n    var j = c.index(after: i)\n    var k = c.index(after: j)\n    while k < c.endIndex {\n        if c[i] == c[j] && c[j] == c[k] {\n            return false\n        }\n        i = j\n        j = k\n        k = c.index(after: k)\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = n.digits\n    var is_undulating = true\n    for i in 1..<digits.count - 1 {\n        if digits[i - 1] == digits[i] || digits[i] == digits[i + 1] {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr != prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && current_digit > last_digit {\n            return false\n        }\n        if !is_increasing && current_digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_undulating = true\n    while n > 0 {\n        let digit = n % 10\n        if last_digit == digit {\n            is_undulating = false\n            break\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if increasing {\n            if current_digit > last_digit {\n                return false\n            }\n        } else {\n            if current_digit < last_digit {\n                return false\n            }\n        }\n        increasing = !increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if prev_digit == curr_digit {\n            return false\n        }\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    while n > 0 {\n        if next_digit == last_digit {\n            return false\n        }\n        last_digit = next_digit\n        n /= 10\n        next_digit = n % 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit < current_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && last_digit < current_digit {\n            return false\n        }\n        if !is_increasing && last_digit > current_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var second_last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit && digit != second_last_digit {\n            return false\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = n.digits\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    let digits = n.digits\n    guard digits.count > 2 else { return false }\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    var is_increasing = prev_digit > curr_digit\n    while n > 0 {\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n        if is_increasing && prev_digit < curr_digit {\n            return false\n        }\n        if !is_increasing && prev_digit > curr_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var is_increasing = true\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && current_digit > last_digit {\n            return false\n        } else if !is_increasing && current_digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let next_digit = n % 10\n        if (last_digit > current_digit && current_digit > next_digit) ||\n            (last_digit < current_digit && current_digit < next_digit) {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = next_digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    var i = 0\n    while i < s.count - 2 {\n        let c1 = s[s.index(s.startIndex, offsetBy: i)]\n        let c2 = s[s.index(s.startIndex, offsetBy: i + 1)]\n        let c3 = s[s.index(s.startIndex, offsetBy: i + 2)]\n        if c1 != c2 && c2 != c3 && c1 != c3 {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev != curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if current_digit > last_digit {\n                return false\n            }\n        } else {\n            if current_digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if last_digit != digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if prev_digit == curr_digit {\n            return false\n        }\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    let digits = s.map { Int(String($0))! }\n    var last_diff = digits[0] - digits[1]\n    for i in 1..<digits.count - 1 {\n        let diff = digits[i] - digits[i + 1]\n        if diff == last_diff {\n            return false\n        }\n        last_diff = diff\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if last_digit != digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if current_digit == last_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = get_digits(n)\n    var is_undulating = false\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            is_undulating = true\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if (prev_digit - curr_digit) * (curr_digit - n % 10) < 0 {\n            return false\n        }\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit < current_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && last_digit < current_digit {\n            return false\n        } else if !is_increasing && last_digit > current_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing {\n            if digits[i] < digits[i - 1] {\n                is_increasing = false\n            }\n        } else {\n            if digits[i] > digits[i - 1] {\n                return false\n            }\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        last_digit = digit\n        n /= 10\n        is_increasing = !is_increasing\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    var is_decreasing = true\n    for i in 1..<digits.count {\n        if digits[i] < digits[i - 1] {\n            is_increasing = false\n        }\n        if digits[i] > digits[i - 1] {\n            is_decreasing = false\n        }\n    }\n    return is_increasing || is_decreasing",
    "    return false",
    "    var n = n\n    var last_digit = n % 10\n    var current_digit = 0\n    var is_undulating = false\n    while n > 0 {\n        n /= 10\n        current_digit = n % 10\n        if last_digit != current_digit {\n            is_undulating = !is_undulating\n        }\n        last_digit = current_digit\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr != prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    let str = String(n)\n    var last_digit = str.first!\n    var is_increasing = true\n    for digit in str.dropFirst() {\n        if digit == last_digit {\n            return false\n        }\n        if is_increasing {\n            if digit < last_digit {\n                is_increasing = false\n            }\n        } else {\n            if digit > last_digit {\n                return false\n            }\n        }\n        last_digit = digit\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == next_digit {\n            return false\n        }\n        last_digit = next_digit\n        next_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    var is_increasing = prev < curr\n    while n > 0 {\n        prev = curr\n        curr = n % 10\n        n /= 10\n        if is_increasing {\n            if prev > curr {\n                is_increasing = false\n            }\n        } else {\n            if prev < curr {\n                return false\n            }\n        }\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_undulating = true\n    for i in 1..<digits.count - 1 {\n        if digits[i - 1] == digits[i + 1] {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        last_digit = digit\n        is_increasing = !is_increasing\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && current_digit > last_digit {\n            return false\n        }\n        if !is_increasing && current_digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    var is_increasing = curr_digit > prev_digit\n    var is_undulating = false\n    while n > 0 {\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        if is_increasing {\n            if curr_digit < prev_digit {\n                is_increasing = false\n                is_undulating = true\n            }\n        } else {\n            if curr_digit > prev_digit {\n                is_increasing = true\n                is_undulating = true\n            }\n        }\n        n /= 10\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == next_digit {\n            return false\n        }\n        last_digit = next_digit\n        next_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).compactMap { Int(String($0)) }\n    return digits.enumerated().allSatisfy { $0.offset % 2 == 0 ? $0.element % 2 == 0 : $0.element % 2 == 1 }",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    var is_increasing = prev_digit < curr_digit\n    while n > 0 {\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if prev_digit < curr_digit {\n                return false\n            }\n        } else {\n            if prev_digit > curr_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var second_last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if (digit != last_digit) && (digit != second_last_digit) {\n            return false\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var is_undulating = true\n    var is_increasing = true\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                is_undulating = false\n                break\n            }\n        } else {\n            if digit < last_digit {\n                is_undulating = false\n                break\n            }\n        }\n        last_digit = digit\n        is_increasing = !is_increasing\n        n /= 10\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var prev = n % 10\n    var n = n / 10\n    var is_increasing = true\n    while n > 0 {\n        let curr = n % 10\n        if is_increasing {\n            if curr > prev {\n                return false\n            }\n        } else {\n            if curr < prev {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit > current_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if last_digit < current_digit {\n                return false\n            }\n        } else {\n            if last_digit > current_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var second_last_digit = (n / 10) % 10\n    var is_increasing = last_digit > second_last_digit\n    while n > 0 {\n        n /= 10\n        second_last_digit = last_digit\n        last_digit = n % 10\n        if is_increasing && last_digit > second_last_digit {\n            return false\n        } else if !is_increasing && last_digit < second_last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit < next_digit\n    while n > 0 {\n        last_digit = next_digit\n        next_digit = n % 10\n        n /= 10\n        if is_increasing && next_digit >= last_digit {\n            return false\n        }\n        if !is_increasing && next_digit <= last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    let digits = String(n).compactMap { Int(String($0)) }\n    var is_undulating = true\n    for i in 0..<digits.count-2 {\n        if digits[i] == digits[i+1] || digits[i+1] == digits[i+2] {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if last_digit != digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if current_digit == last_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var second_last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        if digit == second_last_digit {\n            return false\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    let l = s.characters.count\n    if l < 3 {\n        return false\n    }\n    var i = 1\n    while i < l {\n        let c1 = s[s.index(s.startIndex, offsetBy: i-1)]\n        let c2 = s[s.index(s.startIndex, offsetBy: i)]\n        let c3 = s[s.index(s.startIndex, offsetBy: i+1)]\n        if c1 == c3 {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var num = n\n    var last_digit = num % 10\n    var next_digit = 0\n    var is_increasing = true\n    num /= 10\n    while num > 0 {\n        next_digit = num % 10\n        if is_increasing {\n            if next_digit > last_digit {\n                return false\n            }\n        } else {\n            if next_digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = next_digit\n        num /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    var is_increasing = prev_digit > curr_digit\n    while n > 0 {\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n        if is_increasing && prev_digit < curr_digit {\n            return false\n        } else if !is_increasing && prev_digit > curr_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing {\n            if digits[i] > digits[i - 1] {\n                return false\n            }\n        } else {\n            if digits[i] < digits[i - 1] {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev != curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if current_digit > last_digit {\n                return false\n            }\n        } else {\n            if current_digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    digits.reverse()\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    let digits = String(n).compactMap { Int(String($0)) }\n    var last_diff = 0\n    for i in 1..<digits.count {\n        let diff = digits[i] - digits[i - 1]\n        if last_diff == diff {\n            return false\n        }\n        last_diff = diff\n    }\n    return true",
    "    var s = String(n)\n    var i = 0\n    while i < s.count - 2 {\n        let a = s[s.index(s.startIndex, offsetBy: i)]\n        let b = s[s.index(s.startIndex, offsetBy: i + 1)]\n        let c = s[s.index(s.startIndex, offsetBy: i + 2)]\n        if a == c {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last = n % 10\n    n /= 10\n    while n > 0 {\n        let d = n % 10\n        if d == last {\n            return false\n        }\n        last = d\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    let l = s.count\n    if l < 3 {\n        return false\n    }\n    var i = 1\n    while i < l {\n        if s[i] == s[i-1] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 1 {\n        if digits[i] == digits[i + 1] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var current_digit = 0\n    var is_undulating = true\n    while n > 0 {\n        n /= 10\n        current_digit = n % 10\n        if last_digit == current_digit {\n            is_undulating = false\n            break\n        }\n        last_digit = current_digit\n    }\n    return is_undulating",
    "    var n = n\n    var last = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last {\n            return false\n        }\n        last = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing && digit > last_digit {\n            return false\n        }\n        if !is_increasing && digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true"
  ]
}
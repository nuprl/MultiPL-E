{
  "name": "mbpp_91_find_substring",
  "language": "swift",
  "prompt": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for item in str1 {\n        if item.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b97b3e7ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b97b3b75561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b97b3b75286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b97b3b7513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b97b3b74bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b97b3ccfe40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b97b3cd485c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b97b3ba1920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b97b385cb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b97b385bb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b97b385cced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b97b384242d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b97b3840840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b97b3840e70 StringProtocol.contains(_:) + 64\n14   tmp369_ehvp                        0x0000563c0163fbec <unavailable> + 7148\n15   tmp369_ehvp                        0x0000563c0163f7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b97b406a460 __libc_start_main + 245\n17   tmp369_ehvp                        0x0000563c0163f239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af490d5ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af490a55561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af490a55286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af490a5513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af490a54bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af490bafe40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af490bb485c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af490a81920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af49073cb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af49073bb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af49073cced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af49072242d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af490720840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af490720e70 StringProtocol.contains(_:) + 64\n14   tmp5r334ki3                        0x000055d759c54d25 <unavailable> + 7461\n15   tmp5r334ki3                        0x000055d759c548c3 <unavailable> + 6339\n16   libc.so.6                          0x00002af490f4a460 __libc_start_main + 245\n17   tmp5r334ki3                        0x000055d759c54309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b114aafcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b114a7f3561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b114a7f3286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b114a7f313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b114a7f2bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b114a94de40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b114a95285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b114a81f920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b114a4dab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b114a4d9b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b114a4daced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b114a4c042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b114a4be840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b114a4bee70 StringProtocol.contains(_:) + 64\n14   tmpcd6rdt95                        0x0000562a0cd5cd0b <unavailable> + 7435\n15   tmpcd6rdt95                        0x0000562a0cd5c8c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b114ace8460 __libc_start_main + 245\n17   tmpcd6rdt95                        0x0000562a0cd5c309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ef1b23c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ef181a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ef181a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ef181a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ef1819bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b4ef1974e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b4ef197985c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b4ef1846920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b4ef1502b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b4ef1501b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b4ef1502ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b4ef14e842d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b4ef14e6840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b4ef14e6e70 StringProtocol.contains(_:) + 64\n14   tmptyln7yrc                        0x0000561bac2fec09 <unavailable> + 7177\n15   tmptyln7yrc                        0x0000561bac2fe7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b4ef1d0f460 __libc_start_main + 245\n17   tmptyln7yrc                        0x0000561bac2fe239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af490d5ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af490a55561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af490a55286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af490a5513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af490a54bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af490bafe40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af490bb485c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af490a81920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af49073cb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af49073bb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af49073cced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af49072242d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af490720840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af490720e70 StringProtocol.contains(_:) + 64\n14   tmp5r334ki3                        0x000055d759c54d25 <unavailable> + 7461\n15   tmp5r334ki3                        0x000055d759c548c3 <unavailable> + 6339\n16   libc.so.6                          0x00002af490f4a460 __libc_start_main + 245\n17   tmp5r334ki3                        0x000055d759c54309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var found = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            found = true\n            break\n        }\n    }\n    return found\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b29b2a1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b29b2715561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b29b2715286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b29b271513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b29b2714bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b29b286fe40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b29b287485c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b29b2741920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b29b23fdb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b29b23fcb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b29b23fdced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b29b23e342d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b29b23e1840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b29b23e1e70 StringProtocol.contains(_:) + 64\n14   tmpnm3d9s7z                        0x0000555adb07bc09 <unavailable> + 7177\n15   tmpnm3d9s7z                        0x0000555adb07b7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b29b2c0a460 __libc_start_main + 245\n17   tmpnm3d9s7z                        0x0000555adb07b239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for item in str1 {\n        if item.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b97b3e7ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b97b3b75561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b97b3b75286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b97b3b7513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b97b3b74bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b97b3ccfe40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b97b3cd485c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b97b3ba1920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b97b385cb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b97b385bb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b97b385cced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b97b384242d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b97b3840840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b97b3840e70 StringProtocol.contains(_:) + 64\n14   tmp369_ehvp                        0x0000563c0163fbec <unavailable> + 7148\n15   tmp369_ehvp                        0x0000563c0163f7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b97b406a460 __libc_start_main + 245\n17   tmp369_ehvp                        0x0000563c0163f239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var found = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            found = true\n            break\n        }\n    }\n    return found\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b29b2a1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b29b2715561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b29b2715286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b29b271513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b29b2714bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b29b286fe40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b29b287485c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b29b2741920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b29b23fdb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b29b23fcb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b29b23fdced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b29b23e342d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b29b23e1840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b29b23e1e70 StringProtocol.contains(_:) + 64\n14   tmpnm3d9s7z                        0x0000555adb07bc09 <unavailable> + 7177\n15   tmpnm3d9s7z                        0x0000555adb07b7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b29b2c0a460 __libc_start_main + 245\n17   tmpnm3d9s7z                        0x0000555adb07b239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ef1b23c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ef181a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ef181a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ef181a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ef1819bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b4ef1974e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b4ef197985c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b4ef1846920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b4ef1502b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b4ef1501b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b4ef1502ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b4ef14e842d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b4ef14e6840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b4ef14e6e70 StringProtocol.contains(_:) + 64\n14   tmptyln7yrc                        0x0000561bac2fec09 <unavailable> + 7177\n15   tmptyln7yrc                        0x0000561bac2fe7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b4ef1d0f460 __libc_start_main + 245\n17   tmptyln7yrc                        0x0000561bac2fe239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in str1 {\n        if i.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b31bfcc5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b31bf9bc561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b31bf9bc286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b31bf9bc13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b31bf9bbbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b31bfb16e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b31bfb1b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b31bf9e8920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b31bf6a4b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b31bf6a3b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b31bf6a4ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b31bf68a42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b31bf688840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b31bf688e70 StringProtocol.contains(_:) + 64\n14   tmp9f1lea1l                        0x0000559026b95c09 <unavailable> + 7177\n15   tmp9f1lea1l                        0x0000559026b957f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b31bfeb1460 __libc_start_main + 245\n17   tmp9f1lea1l                        0x0000559026b95239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in str1 {\n        if i.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b31bfcc5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b31bf9bc561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b31bf9bc286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b31bf9bc13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b31bf9bbbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b31bfb16e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b31bfb1b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b31bf9e8920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b31bf6a4b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b31bf6a3b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b31bf6a4ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b31bf68a42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b31bf688840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b31bf688e70 StringProtocol.contains(_:) + 64\n14   tmp9f1lea1l                        0x0000559026b95c09 <unavailable> + 7177\n15   tmp9f1lea1l                        0x0000559026b957f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b31bfeb1460 __libc_start_main + 245\n17   tmp9f1lea1l                        0x0000559026b95239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in str1 {\n        if i.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b31bfcc5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b31bf9bc561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b31bf9bc286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b31bf9bc13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b31bf9bbbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b31bfb16e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b31bfb1b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b31bf9e8920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b31bf6a4b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b31bf6a3b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b31bf6a4ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b31bf68a42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b31bf688840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b31bf688e70 StringProtocol.contains(_:) + 64\n14   tmp9f1lea1l                        0x0000559026b95c09 <unavailable> + 7177\n15   tmp9f1lea1l                        0x0000559026b957f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b31bfeb1460 __libc_start_main + 245\n17   tmp9f1lea1l                        0x0000559026b95239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b46471d3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4646eca561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4646eca286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4646eca13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4646ec9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b4647024e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b464702985c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b4646ef6920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b4646bb2b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b4646bb1b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b4646bb2ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b4646b9842d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b4646b96840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b4646b96e70 StringProtocol.contains(_:) + 64\n14   tmptziy10j8                        0x000055812fd5cd25 <unavailable> + 7461\n15   tmptziy10j8                        0x000055812fd5c8c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b46473bf460 __libc_start_main + 245\n17   tmptziy10j8                        0x000055812fd5c309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ef1b23c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ef181a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ef181a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ef181a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ef1819bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b4ef1974e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b4ef197985c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b4ef1846920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b4ef1502b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b4ef1501b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b4ef1502ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b4ef14e842d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b4ef14e6840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b4ef14e6e70 StringProtocol.contains(_:) + 64\n14   tmptyln7yrc                        0x0000561bac2fec09 <unavailable> + 7177\n15   tmptyln7yrc                        0x0000561bac2fe7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b4ef1d0f460 __libc_start_main + 245\n17   tmptyln7yrc                        0x0000561bac2fe239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ef1b23c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ef181a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ef181a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ef181a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ef1819bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b4ef1974e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b4ef197985c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b4ef1846920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b4ef1502b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b4ef1501b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b4ef1502ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b4ef14e842d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b4ef14e6840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b4ef14e6e70 StringProtocol.contains(_:) + 64\n14   tmptyln7yrc                        0x0000561bac2fec09 <unavailable> + 7177\n15   tmptyln7yrc                        0x0000561bac2fe7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b4ef1d0f460 __libc_start_main + 245\n17   tmptyln7yrc                        0x0000561bac2fe239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b114aafcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b114a7f3561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b114a7f3286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b114a7f313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b114a7f2bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b114a94de40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b114a95285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b114a81f920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b114a4dab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b114a4d9b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b114a4daced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b114a4c042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b114a4be840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b114a4bee70 StringProtocol.contains(_:) + 64\n14   tmpcd6rdt95                        0x0000562a0cd5cd0b <unavailable> + 7435\n15   tmpcd6rdt95                        0x0000562a0cd5c8c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b114ace8460 __libc_start_main + 245\n17   tmpcd6rdt95                        0x0000562a0cd5c309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b114aafcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b114a7f3561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b114a7f3286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b114a7f313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b114a7f2bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b114a94de40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b114a95285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b114a81f920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b114a4dab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b114a4d9b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b114a4daced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b114a4c042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b114a4be840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b114a4bee70 StringProtocol.contains(_:) + 64\n14   tmpcd6rdt95                        0x0000562a0cd5cd0b <unavailable> + 7435\n15   tmpcd6rdt95                        0x0000562a0cd5c8c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b114ace8460 __libc_start_main + 245\n17   tmpcd6rdt95                        0x0000562a0cd5c309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b114aafcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b114a7f3561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b114a7f3286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b114a7f313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b114a7f2bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b114a94de40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b114a95285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b114a81f920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b114a4dab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b114a4d9b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b114a4daced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b114a4c042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b114a4be840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b114a4bee70 StringProtocol.contains(_:) + 64\n14   tmpcd6rdt95                        0x0000562a0cd5cd0b <unavailable> + 7435\n15   tmpcd6rdt95                        0x0000562a0cd5c8c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b114ace8460 __libc_start_main + 245\n17   tmpcd6rdt95                        0x0000562a0cd5c309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ef1b23c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ef181a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ef181a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ef181a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ef1819bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b4ef1974e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b4ef197985c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b4ef1846920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b4ef1502b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b4ef1501b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b4ef1502ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b4ef14e842d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b4ef14e6840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b4ef14e6e70 StringProtocol.contains(_:) + 64\n14   tmptyln7yrc                        0x0000561bac2fec09 <unavailable> + 7177\n15   tmptyln7yrc                        0x0000561bac2fe7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b4ef1d0f460 __libc_start_main + 245\n17   tmptyln7yrc                        0x0000561bac2fe239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ef1b23c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ef181a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ef181a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ef181a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ef1819bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b4ef1974e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b4ef197985c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b4ef1846920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b4ef1502b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b4ef1501b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b4ef1502ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b4ef14e842d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b4ef14e6840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b4ef14e6e70 StringProtocol.contains(_:) + 64\n14   tmptyln7yrc                        0x0000561bac2fec09 <unavailable> + 7177\n15   tmptyln7yrc                        0x0000561bac2fe7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b4ef1d0f460 __libc_start_main + 245\n17   tmptyln7yrc                        0x0000561bac2fe239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in str1 {\n        if i.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2429dabc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2429aa2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b2429aa2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b2429aa213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b2429aa1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b2429bfce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b2429c0185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b2429ace920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b242978ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b2429789b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b242978aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b242977042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b242976e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b242976ee70 StringProtocol.contains(_:) + 64\n14   tmp6log198w                        0x0000556b96ba2c09 <unavailable> + 7177\n15   tmp6log198w                        0x0000556b96ba27f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b2429f97460 __libc_start_main + 245\n17   tmp6log198w                        0x0000556b96ba2239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b114aafcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b114a7f3561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b114a7f3286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b114a7f313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b114a7f2bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b114a94de40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b114a95285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b114a81f920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b114a4dab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b114a4d9b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b114a4daced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b114a4c042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b114a4be840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b114a4bee70 StringProtocol.contains(_:) + 64\n14   tmpcd6rdt95                        0x0000562a0cd5cd0b <unavailable> + 7435\n15   tmpcd6rdt95                        0x0000562a0cd5c8c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b114ace8460 __libc_start_main + 245\n17   tmpcd6rdt95                        0x0000562a0cd5c309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122757,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ef1b23c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ef181a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ef181a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ef181a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ef1819bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b4ef1974e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b4ef197985c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b4ef1846920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b4ef1502b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b4ef1501b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b4ef1502ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b4ef14e842d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b4ef14e6840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b4ef14e6e70 StringProtocol.contains(_:) + 64\n14   tmptyln7yrc                        0x0000561bac2fec09 <unavailable> + 7177\n15   tmptyln7yrc                        0x0000561bac2fe7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b4ef1d0f460 __libc_start_main + 245\n17   tmptyln7yrc                        0x0000561bac2fe239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7047f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7044ec561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba7044ec286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba7044ec13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba7044ebbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ba704646e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ba70464b85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ba704518920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ba7041d3b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ba7041d2b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ba7041d3ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ba7041b942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ba7041b7840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ba7041b7e70 StringProtocol.contains(_:) + 64\n14   tmp6zlk7v2a                        0x000055b2b2a18bec <unavailable> + 7148\n15   tmp6zlk7v2a                        0x000055b2b2a187f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ba7049e1460 __libc_start_main + 245\n17   tmp6zlk7v2a                        0x000055b2b2a18239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e53098c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e52d8f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7e52d8f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7e52d8f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7e52d8ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b7e52ee9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b7e52eee85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b7e52dbb920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b7e52a76b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b7e52a75b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b7e52a76ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b7e52a5c42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b7e52a5a840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b7e52a5ae70 StringProtocol.contains(_:) + 64\n14   tmp5l8jw61i                        0x00005588d57a1c09 <unavailable> + 7177\n15   tmp5l8jw61i                        0x00005588d57a17f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b7e53284460 __libc_start_main + 245\n17   tmp5l8jw61i                        0x00005588d57a1239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given list of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510247,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad16158cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad161283561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad161283286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad16128313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad161282bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ad1613dde40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ad1613e285c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ad1612af920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ad160f6ab82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ad160f69b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ad160f6aced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ad160f5042d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ad160f4e840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ad160f4ee70 StringProtocol.contains(_:) + 64\n14   tmpuhah176s                        0x000056455f1fbbec <unavailable> + 7148\n15   tmpuhah176s                        0x000056455f1fb7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ad161778460 __libc_start_main + 245\n17   tmpuhah176s                        0x000056455f1fb239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
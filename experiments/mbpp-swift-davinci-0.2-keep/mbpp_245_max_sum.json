{
  "name": "mbpp_245_max_sum",
  "language": "swift",
  "prompt": "\n/// Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunc max_sum(arr: [Int]) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(max_sum(arr: [1, 15, 51, 45, 33, 100, 12, 18, 9]) == 194)\nassert(max_sum(arr: [80, 60, 30, 40, 20, 10]) == 210)\nassert(max_sum(arr: [2, 3, 14, 16, 21, 23, 29, 30]) == 138)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_till_now = 0\n    for i in 0..<arr.count {\n        max_sum_till_now = max(arr[i], max_sum_till_now + arr[i])\n        max_sum = max(max_sum, max_sum_till_now)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 1..<arr.count {\n        if arr[i] > arr[i-1] {\n            max_sum_left[i] = max_sum_left[i-1] + arr[i]\n        } else {\n            max_sum_left[i] = arr[i]\n        }\n    }\n    \n    for i in (0..<arr.count-1).reversed() {\n        if arr[i] > arr[i+1] {\n            max_sum_right[i] = max_sum_right[i+1] + arr[i]\n        } else {\n            max_sum_right[i] = arr[i]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n            }\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            if sum_arr.count == 0 {\n                sum_arr.append(arr[j])\n                sum += arr[j]\n            } else {\n                if sum_arr.last! < arr[j] {\n                    sum_arr.append(arr[j])\n                    sum += arr[j]\n                } else {\n                    break\n                }\n            }\n        }\n        for j in (0..<i).reversed() {\n            if sum_arr.count == 0 {\n                sum_arr.append(arr[j])\n                sum += arr[j]\n            } else {\n                if sum_arr.last! > arr[j] {\n                    sum_arr.append(arr[j])\n                    sum += arr[j]\n                } else {\n                    break\n                }\n            }\n        }\n        if sum > max_sum {\n            max_sum = sum\n            max_sum_arr = sum_arr\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_starting_here = 0\n    var max_sum_ending_here_reverse = 0\n    var max_sum_starting_here_reverse = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max(max_sum_ending_here + arr[i], arr[i])\n        max_sum_starting_here = max(max_sum_starting_here + arr[arr.count - i - 1], arr[arr.count - i - 1])\n        max_sum = max(max_sum, max_sum_ending_here)\n        max_sum = max(max_sum, max_sum_starting_here)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var sum = 0\n    var sum_arr = [Int]()\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        sum_arr.append(arr[i])\n        if sum > max_sum {\n            max_sum = sum\n            max_sum_arr = sum_arr\n        }\n        if sum < 0 {\n            sum = 0\n            sum_arr = []\n        }\n        i += 1\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int](repeating: 0, count: arr.count)\n    var max_sum_arr_rev = [Int](repeating: 0, count: arr.count)\n    var max_sum_arr_rev_rev = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_arr[i] = arr[i]\n        max_sum_arr_rev[i] = arr[i]\n        max_sum_arr_rev_rev[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i] {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in (0..<arr.count-1).reversed() {\n        for j in (i+1..<arr.count).reversed() {\n            if arr[i] > arr[j] && max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[i] {\n                max_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum_arr_rev_rev[i] = max_sum_arr_rev[arr.count - 1 - i]\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_arr[i] + max_sum_arr_rev_rev[i] - arr[i] {\n            max_sum = max_sum_arr[i] + max_sum_arr_rev_rev[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumSoFar2 = 0\n    for i in 0..<arr.count {\n        maxSumSoFar = max(maxSumSoFar + arr[i], arr[i])\n        maxSum = max(maxSum, maxSumSoFar)\n        maxSumSoFar2 = max(maxSumSoFar2 + arr[arr.count - 1 - i], arr[arr.count - 1 - i])\n        maxSum = max(maxSum, maxSumSoFar2)\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        if i > 0 && arr[i] > arr[i-1] {\n            max_sum_left[i] += max_sum_left[i-1]\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        max_sum_right[i] = arr[i]\n        if i < arr.count-1 && arr[i] > arr[i+1] {\n            max_sum_right[i] += max_sum_right[i+1]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum < max_sum_so_far {\n            max_sum = max_sum_so_far\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_inc[i] = arr[i]\n        max_sum_dec[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i] {\n                max_sum_inc[i] = max_sum_inc[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in (0..<arr.count-1).reversed() {\n        for j in (i+1..<arr.count).reversed() {\n            if arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i] {\n                max_sum_dec[i] = max_sum_dec[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_inc[i] + max_sum_dec[i] - arr[i] {\n            max_sum = max_sum_inc[i] + max_sum_dec[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var sum = 0\n    var maxSum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > maxSum {\n            maxSum = sum\n        }\n    }\n    return maxSum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    for i in 0..<arr.count {\n        maxSumSoFar += arr[i]\n        if maxSumSoFar < 0 {\n            maxSumSoFar = 0\n        }\n        if maxSum < maxSumSoFar {\n            maxSum = maxSumSoFar\n        }\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    var max_sum_ending_here_so_far_index = 0\n    var max_sum_ending_here_index = 0\n    var max_sum_ending_here_index_so_far = 0\n    var max_sum_ending_here_index_so_far_index = 0\n    var max_sum_ending_here_index_so_far_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index_index",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far = max(arr[i], max_sum_so_far + arr[i])\n        max_sum = max(max_sum, max_sum_so_far)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    \n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        var sum_arr_rev = [Int]()\n        var sum_arr_rev_rev = [Int]()\n        var sum_arr_rev_rev_rev = [Int]()\n        \n        for j in i..<arr.count {\n            sum += arr[j]\n            sum_arr.append(arr[j])\n            sum_arr_rev.append(arr[j])\n            sum_arr_rev_rev.append(arr[j])\n            sum_arr_rev_rev_rev.append(arr[j])\n            \n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = sum_arr\n                max_sum_arr_rev = sum_arr_rev\n                max_sum_arr_rev_rev = sum_arr_rev_rev\n                max_sum_arr_rev_rev_rev = sum_arr_rev_rev_rev\n            }\n        }\n    }\n    \n    max_sum_arr_rev.reverse()\n    max_sum_arr_rev_rev = max_sum_arr_rev.reversed()\n    max_sum_arr_rev_rev_rev = max_sum_arr_rev_rev.reversed()\n    \n    print(max_sum_arr)\n    print(max_sum_arr_rev)\n    print(max_sum_arr_rev_rev)\n    print(max_sum_arr_rev_rev_rev)\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1], arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1], arr[i])\n    }\n    var sum = 0\n    for i in 0..<arr.count {\n        sum = max(sum, inc[i] + dec[i] - arr[i])\n    }\n    return sum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max(arr[i], max_sum_ending_here + arr[i])\n        max_sum = max(max_sum, max_sum_ending_here)\n    }\n    return max_sum",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    var maxSumStartingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(maxSumEndingHere + arr[i], arr[i])\n        maxSum = max(maxSum, maxSumEndingHere)\n    }\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        maxSumStartingHere = max(maxSumStartingHere + arr[i], arr[i])\n        maxSum = max(maxSum, maxSumStartingHere)\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    var max_so_far = 0\n    for i in 0..<arr.count {\n        max_so_far = max(max_so_far + arr[i], arr[i])\n        max_sum_left[i] = max_so_far\n    }\n    \n    max_so_far = 0\n    for i in (0..<arr.count).reversed() {\n        max_so_far = max(max_so_far + arr[i], arr[i])\n        max_sum_right[i] = max_so_far\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    }\n    var maxSum = inc[0] + dec[0] - arr[0]\n    for i in 1..<arr.count {\n        maxSum = max(maxSum, inc[i] + dec[i] - arr[i])\n    }\n    return maxSum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1], arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1], arr[i])\n    }\n    var sum = 0\n    for i in 0..<arr.count {\n        sum = max(sum, inc[i] + dec[i] - arr[i])\n    }\n    return sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_so_far_rev = 0\n    \n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum_so_far > max_sum {\n            max_sum = max_sum_so_far\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        max_sum_so_far_rev += arr[i]\n        if max_sum_so_far_rev < 0 {\n            max_sum_so_far_rev = 0\n        }\n        if max_sum_so_far_rev > max_sum {\n            max_sum = max_sum_so_far_rev\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum < max_sum_so_far {\n            max_sum = max_sum_so_far\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n            }\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(arr[i], max_sum_left[i - 1] + arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(arr[i], max_sum_right[i + 1] + arr[i])\n    }\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int](repeating: 0, count: arr.count)\n    var max_sum_arr_rev = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_arr[0] = arr[0]\n    max_sum_arr_rev[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_arr[i] = max(max_sum_arr[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_arr_rev[i] = max(max_sum_arr_rev[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_arr[i] + max_sum_arr_rev[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_inc[0] = arr[0]\n    max_sum_dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_inc[i] = max(arr[i], arr[i] + max_sum_inc[i - 1])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_dec[i] = max(arr[i], arr[i] + max_sum_dec[i + 1])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            if sum_arr.count == 0 {\n                sum_arr.append(arr[j])\n                sum += arr[j]\n            } else {\n                if arr[j] > sum_arr.last! {\n                    sum_arr.append(arr[j])\n                    sum += arr[j]\n                } else if arr[j] < sum_arr.last! {\n                    sum_arr.append(arr[j])\n                    sum += arr[j]\n                    break\n                }\n            }\n        }\n        if sum > max_sum {\n            max_sum = sum\n            max_sum_arr = sum_arr\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    \n    // max sum from right\n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(arr[i], max_sum_right[i - 1] + arr[i])\n        }\n    }\n    \n    // max sum from left\n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(arr[i], max_sum_left[i + 1] + arr[i])\n        }\n    }\n    \n    // max sum\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_right[i] + max_sum_left[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1], arr[i])\n    }\n    \n    var sum = 0\n    for i in 0..<arr.count {\n        sum = max(sum, inc[i] + dec[i])\n    }\n    \n    return sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    var max_sum_ending_here_so_far_index = 0\n    var max_sum_ending_here_index = 0\n    var max_sum_ending_here_so_far_index_temp = 0\n    var max_sum_ending_here_index_temp = 0\n    var max_sum_ending_here_so_far_temp = 0\n    var max_sum_ending_here_temp = 0\n    var max_sum_ending_here_so_far_temp_index = 0\n    var max_sum_ending_here_temp_index = 0\n    var max_sum_ending_here_so_far_temp_index_temp = 0\n    var max_sum_ending_here_temp_index_temp = 0\n    var max_sum_ending_here_so_far_temp_temp = 0\n    var max_sum_ending_here_temp_temp = 0\n    var max_sum_ending_here_so_far_temp_temp_index = 0\n    var max_sum_ending_here_temp_temp_index = 0\n    var max_sum_ending_here_so_far_temp_temp_index_temp = 0\n    var max_sum_ending_here_temp_temp_index_temp = 0\n    var max_sum_ending_here_so_far_temp_temp_temp = 0\n    var max_sum_ending_here_temp_temp_temp = 0\n    var max_sum_ending_here_so_far_temp_temp_temp_index = 0\n    var max_sum_ending_here_temp_temp_temp_index = 0\n    var max_sum_ending_here_so_far_temp_temp_temp_index_temp = 0\n    var max_sum_ending_here_temp_temp_temp_index_temp = 0\n    var max_sum_ending_here_so_far_temp_temp_temp_temp = 0\n    var max_sum_ending_here_temp",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = maxSumEndingHere + arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum = maxSumSoFar\n    maxSumSoFar = 0\n    maxSumEndingHere = 0\n    for i in (0..<arr.count).reversed() {\n        maxSumEndingHere = maxSumEndingHere + arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum = max(maxSum, maxSumSoFar)\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_inc[0] = arr[0]\n    max_sum_dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count-2, through: 0, by: -1) {\n        for j in stride(from: arr.count-1, through: i, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        } else if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n            }\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    var inc = true\n    while i < j {\n        if arr[i] < arr[i + 1] {\n            sum += arr[i]\n            i += 1\n        } else {\n            inc = false\n            sum += arr[i]\n            break\n        }\n    }\n    while j > i {\n        if arr[j] < arr[j - 1] {\n            sum += arr[j]\n            j -= 1\n        } else {\n            sum += arr[j]\n            break\n        }\n    }\n    if inc {\n        sum += arr[i]\n    }\n    max_sum = sum\n    sum = 0\n    i = 0\n    j = arr.count - 1\n    inc = false\n    while i < j {\n        if arr[i] < arr[i + 1] {\n            sum += arr[i]\n            i += 1\n        } else {\n            inc = true\n            sum += arr[i]\n            break\n        }\n    }\n    while j > i {\n        if arr[j] < arr[j - 1] {\n            sum += arr[j]\n            j -= 1\n        } else {\n            sum += arr[j]\n            break\n        }\n    }\n    if inc {\n        sum += arr[i]\n    }\n    if sum > max_sum {\n        max_sum = sum\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            sum += arr[j]\n            sum_arr.append(arr[j])\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = sum_arr\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    \n    var maxSum = Int.min\n    for i in 0..<arr.count {\n        maxSum = max(maxSum, inc[i] + dec[i] - arr[i])\n    }\n    \n    return maxSum",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    var maxSumStartingHere = 0\n    var maxSumStartingHereEndingHere = 0\n    \n    for i in 0..<arr.count {\n        maxSumEndingHere = max(maxSumEndingHere + arr[i], arr[i])\n        maxSum = max(maxSum, maxSumEndingHere)\n        \n        maxSumStartingHereEndingHere = max(maxSumStartingHereEndingHere + arr[i], maxSumStartingHere + arr[i])\n        maxSumStartingHere = max(maxSumStartingHere + arr[i], arr[i])\n    }\n    \n    return maxSum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_element = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum_so_far > max_sum {\n            max_sum = max_sum_so_far\n            max_element = arr[i]\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count-1] = arr[arr.count-1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i-1], arr[i])\n    }\n    \n    for i in stride(from: arr.count-2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i+1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(arr[i], maxSumEndingHere + arr[i])\n        maxSum = max(maxSum, maxSumEndingHere)\n    }\n    return maxSum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // max sum of increasing subsequence from left to right\n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        for j in 0..<i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i])\n            }\n        }\n    }\n    \n    // max sum of increasing subsequence from right to left\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_right[i] = arr[i]\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i])\n            }\n        }\n    }\n    \n    // max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    \n    for i in 0..<arr.count {\n        max_sum_arr.append(arr[i])\n        max_sum_arr_rev.append(arr[i])\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i] {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[i] {\n                max_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_arr[i] + max_sum_arr_rev[i] - arr[i] {\n            max_sum = max_sum_arr[i] + max_sum_arr_rev[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        sum = sum + arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        max_sum_left[i] = max(max_sum_left[i-1], sum)\n    }\n    \n    sum = 0\n    for i in stride(from: arr.count-1, through: 0, by: -1) {\n        sum = sum + arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        max_sum_right[i] = max(max_sum_right[i+1], sum)\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i])\n    }\n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum = maxSumSoFar\n    maxSumSoFar = 0\n    maxSumEndingHere = 0\n    for i in (0..<arr.count).reversed() {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum += maxSumSoFar\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum < max_sum_so_far {\n            max_sum = max_sum_so_far\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far = max(max_sum_so_far + arr[i], arr[i])\n        max_sum = max(max_sum, max_sum_so_far)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            sum += arr[j]\n            sum_arr.append(arr[j])\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = sum_arr\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    var max_sum_left_right = [Int](repeating: 0, count: arr.count)\n    \n    // max sum from left to right\n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        for j in 0..<i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i])\n            }\n        }\n    }\n    \n    // max sum from right to left\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_right[i] = arr[i]\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i])\n            }\n        }\n    }\n    \n    // max sum from left to right and right to left\n    for i in 0..<arr.count {\n        max_sum_left_right[i] = max_sum_left[i] + max_sum_right[i] - arr[i]\n    }\n    \n    max_sum = max_sum_left_right.max()!\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    var max_sum_ending_here_so_far_index = 0\n    var max_sum_ending_here_index = 0\n    var max_sum_ending_here_index_so_far = 0\n    var max_sum_ending_here_index_so_far_index = 0\n    var max_sum_ending_here_index_so_far_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index_index",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        sum = max(arr[i], sum + arr[i])\n        max_sum = max(max_sum, sum)\n        max_sum_left[i] = max_sum\n    }\n    \n    sum = 0\n    max_sum = 0\n    for i in (0..<arr.count).reversed() {\n        sum = max(arr[i], sum + arr[i])\n        max_sum = max(max_sum, sum)\n        max_sum_right[i] = max_sum\n    }\n    \n    max_sum = 0\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_ending_here = 0\n    var min_ending_here = 0\n    var min_sum_so_far = 0\n    var min_sum = 0\n    for i in 0..<arr.count {\n        max_ending_here += arr[i]\n        if max_ending_here < 0 {\n            max_ending_here = 0\n        }\n        if max_sum_so_far < max_ending_here {\n            max_sum_so_far = max_ending_here\n        }\n        min_ending_here += arr[arr.count - 1 - i]\n        if min_ending_here > 0 {\n            min_ending_here = 0\n        }\n        if min_sum_so_far > min_ending_here {\n            min_sum_so_far = min_ending_here\n        }\n    }\n    min_sum = min_sum_so_far\n    max_sum = max_sum_so_far\n    for i in 0..<arr.count - 1 {\n        max_sum_so_far = max_sum_so_far - arr[i]\n        min_sum_so_far = min_sum_so_far + arr[arr.count - 2 - i]\n        if max_sum < max_sum_so_far + min_sum_so_far {\n            max_sum = max_sum_so_far + min_sum_so_far\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_till_now = 0\n    for i in 0..<arr.count {\n        max_sum_till_now += arr[i]\n        if max_sum_till_now < 0 {\n            max_sum_till_now = 0\n        }\n        if max_sum < max_sum_till_now {\n            max_sum = max_sum_till_now\n        }\n    }\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    }\n    \n    var max_sum = 0\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum = maxSumSoFar\n    maxSumSoFar = 0\n    maxSumEndingHere = 0\n    for i in (0..<arr.count).reversed() {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum += maxSumSoFar\n    return maxSum",
    "    var maxSum = 0\n    var maxSumLeft = [Int](repeating: 0, count: arr.count)\n    var maxSumRight = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        maxSumLeft[i] = arr[i]\n        maxSumRight[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && maxSumLeft[i] < maxSumLeft[j] + arr[i] {\n                maxSumLeft[i] = maxSumLeft[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && maxSumRight[i] < maxSumRight[j] + arr[i] {\n                maxSumRight[i] = maxSumRight[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if maxSum < maxSumLeft[i] + maxSumRight[i] - arr[i] {\n            maxSum = maxSumLeft[i] + maxSumRight[i] - arr[i]\n        }\n    }\n    \n    return maxSum",
    "    var maxSum = 0\n    var maxSumLeft = [Int](repeating: 0, count: arr.count)\n    var maxSumRight = [Int](repeating: 0, count: arr.count)\n    \n    // find max sum from left to right\n    for i in 0..<arr.count {\n        if i == 0 {\n            maxSumLeft[i] = arr[i]\n        } else {\n            maxSumLeft[i] = max(maxSumLeft[i-1], arr[i])\n        }\n    }\n    \n    // find max sum from right to left\n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            maxSumRight[i] = arr[i]\n        } else {\n            maxSumRight[i] = max(maxSumRight[i+1], arr[i])\n        }\n    }\n    \n    // find max sum\n    for i in 0..<arr.count {\n        maxSum = max(maxSum, maxSumLeft[i] + maxSumRight[i] - arr[i])\n    }\n    \n    return maxSum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i])\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i])\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        sum += arr[i]\n        max_sum_left[i] = sum\n    }\n    \n    sum = 0\n    for i in (0..<arr.count).reversed() {\n        sum += arr[i]\n        max_sum_right[i] = sum\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    var max_sum_ending_here_so_far_index = 0\n    var max_sum_ending_here_index = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n            max_sum_ending_here_index = i + 1\n        } else if max_sum_ending_here > max_sum_ending_here_so_far {\n            max_sum_ending_here_so_far = max_sum_ending_here\n            max_sum_ending_here_so_far_index = max_sum_ending_here_index\n        }\n    }\n    max_sum_ending_here = 0\n    max_sum_ending_here_index = arr.count - 1\n    for i in (0..<arr.count).reversed() {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n            max_sum_ending_here_index = i - 1\n        } else if max_sum_ending_here > max_sum_ending_here_so_far {\n            max_sum_ending_here_so_far = max_sum_ending_here\n            max_sum_ending_here_so_far_index = max_sum_ending_here_index\n        }\n    }\n    max_sum_so_far = max_sum_ending_here_so_far\n    max_sum_ending_here = 0\n    max_sum_ending_here_index = 0\n    for i in 0..<max_sum_ending_here_so_far_index {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n            max_sum_ending_here",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var maxSum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        maxSum = max(maxSum, sum)\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            sum += arr[j]\n            sum_arr.append(arr[j])\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = sum_arr\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n            }\n            j += 1\n        }\n        i += 1\n    }\n    return max_sum",
    "    var dp1 = Array(repeating: 0, count: arr.count)\n    var dp2 = Array(repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        dp1[i] = arr[i]\n        for j in 0..<i {\n            if arr[i] > arr[j] && dp1[i] < dp1[j] + arr[i] {\n                dp1[i] = dp1[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        dp2[i] = arr[i]\n        for j in (i+1..<arr.count).reversed() {\n            if arr[i] > arr[j] && dp2[i] < dp2[j] + arr[i] {\n                dp2[i] = dp2[j] + arr[i]\n            }\n        }\n    }\n    \n    var max = 0\n    for i in 0..<arr.count {\n        if dp1[i] + dp2[i] - arr[i] > max {\n            max = dp1[i] + dp2[i] - arr[i]\n        }\n    }\n    \n    return max",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1], arr[i])\n    }\n    \n    var maxSum = 0\n    for i in 0..<arr.count {\n        maxSum = max(maxSum, inc[i] + dec[i])\n    }\n    \n    return maxSum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var maxSum = 0\n    var maxSumLeft = [Int](repeating: 0, count: arr.count)\n    var maxSumRight = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        maxSumLeft[i] = arr[i]\n        maxSumRight[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && maxSumLeft[i] < maxSumLeft[j] + arr[i] {\n                maxSumLeft[i] = maxSumLeft[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in (0..<arr.count-1).reversed() {\n        for j in (i+1..<arr.count).reversed() {\n            if arr[i] > arr[j] && maxSumRight[i] < maxSumRight[j] + arr[i] {\n                maxSumRight[i] = maxSumRight[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if maxSum < maxSumLeft[i] + maxSumRight[i] - arr[i] {\n            maxSum = maxSumLeft[i] + maxSumRight[i] - arr[i]\n        }\n    }\n    \n    return maxSum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_so_far_reverse = 0\n    var max_sum_so_far_reverse_temp = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum_so_far > max_sum {\n            max_sum = max_sum_so_far\n        }\n    }\n    for i in (0..<arr.count).reversed() {\n        max_sum_so_far_reverse_temp += arr[i]\n        if max_sum_so_far_reverse_temp < 0 {\n            max_sum_so_far_reverse_temp = 0\n        }\n        if max_sum_so_far_reverse_temp > max_sum_so_far_reverse {\n            max_sum_so_far_reverse = max_sum_so_far_reverse_temp\n        }\n    }\n    return max_sum + max_sum_so_far_reverse",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    var maxSumSoFar = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    return maxSumSoFar",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_arr = [Int]()\n    var sum_arr = [Int]()\n    for i in 0..<arr.count {\n        sum = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = Array(arr[i...j])\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = 0\n    while i < arr.count {\n        sum = 0\n        j = i\n        while j < arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n            }\n            j += 1\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(arr[i], max_sum_left[i - 1] + arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(arr[i], max_sum_right[i + 1] + arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var sum = 0\n    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n            max_sum_arr.append(arr[i])\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var sum = 0\n    var max = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max {\n            max = sum\n        }\n    }\n    return max",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_inc[0] = arr[0]\n    max_sum_dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // Fill max_sum_left\n    max_sum_left[0] = arr[0]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i-1], arr[i])\n    }\n    \n    // Fill max_sum_right\n    max_sum_right[arr.count-1] = arr[arr.count-1]\n    for i in stride(from: arr.count-2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i+1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum < max_sum_so_far {\n            max_sum = max_sum_so_far\n        }\n    }\n    return max_sum",
    "    var maxSum = 0\n    var maxSumArr = [Int]()\n    var maxSumArrIndex = [Int]()\n    var maxSumArrIndex2 = [Int]()\n    var maxSumArrIndex3 = [Int]()\n    var maxSumArrIndex4 = [Int]()\n    var maxSumArrIndex5 = [Int]()\n    var maxSumArrIndex6 = [Int]()\n    var maxSumArrIndex7 = [Int]()\n    var maxSumArrIndex8 = [Int]()\n    var maxSumArrIndex9 = [Int]()\n    var maxSumArrIndex10 = [Int]()\n    var maxSumArrIndex11 = [Int]()\n    var maxSumArrIndex12 = [Int]()\n    var maxSumArrIndex13 = [Int]()\n    var maxSumArrIndex14 = [Int]()\n    var maxSumArrIndex15 = [Int]()\n    var maxSumArrIndex16 = [Int]()\n    var maxSumArrIndex17 = [Int]()\n    var maxSumArrIndex18 = [Int]()\n    var maxSumArrIndex19 = [Int]()\n    var maxSumArrIndex20 = [Int]()\n    var maxSumArrIndex21 = [Int]()\n    var maxSumArrIndex22 = [Int]()\n    var maxSumArrIndex23 = [Int]()\n    var maxSumArrIndex24 = [Int]()\n    var maxSumArrIndex25 = [Int]()\n    var maxSumArrIndex26 = [Int]()\n    var maxSumArrIndex27 = [Int]()\n    var maxSumArrIndex28 = [Int]()\n    var maxSumArrIndex29 = [Int]()\n    var maxSumArrIndex30 = [Int]()\n    var maxSumArrIndex31 = [Int]()\n    var maxSumArrIndex32 = [Int]()\n    var maxSumArrIndex33 = [Int]()\n    var maxSumArrIndex34 = [Int]()\n    var maxSumArrIndex35 = [Int]()\n    var max",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // max sum from left to right\n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n        }\n    }\n    \n    // max sum from right to left\n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n        }\n    }\n    \n    // max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var maxSum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > maxSum {\n            maxSum = sum\n        }\n    }\n    return maxSum",
    "    var inc = Array(repeating: 0, count: arr.count)\n    var dec = Array(repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1], arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1], arr[i])\n    }\n    var max_sum = 0\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var maxSum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > maxSum {\n            maxSum = sum\n        }\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far = max(arr[i], max_sum_so_far + arr[i])\n        max_sum = max(max_sum, max_sum_so_far)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    var max_sum_left_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in (0..<arr.count-1).reversed() {\n        for j in (i+1..<arr.count).reversed() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum_left_right[i] = max_sum_left[i] + max_sum_right[i] - arr[i]\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_left_right[i] {\n            max_sum = max_sum_left_right[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_so_far_reverse = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        max_sum_so_far_reverse += arr[arr.count - 1 - i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum_so_far_reverse < 0 {\n            max_sum_so_far_reverse = 0\n        }\n        max_sum = max(max_sum, max_sum_so_far + max_sum_so_far_reverse - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_ending_here = 0\n    var max_so_far = 0\n    var max_ending_here_reverse = 0\n    var max_so_far_reverse = 0\n    for i in 0..<arr.count {\n        max_ending_here += arr[i]\n        if max_ending_here < 0 {\n            max_ending_here = 0\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    for i in stride(from: arr.count-1, through: 0, by: -1) {\n        max_ending_here_reverse += arr[i]\n        if max_ending_here_reverse < 0 {\n            max_ending_here_reverse = 0\n        }\n        if max_so_far_reverse < max_ending_here_reverse {\n            max_so_far_reverse = max_ending_here_reverse\n        }\n    }\n    max_sum = max_so_far + max_so_far_reverse\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1], arr[i])\n    }\n    \n    var maxSum = 0\n    for i in 0..<arr.count {\n        maxSum = max(maxSum, inc[i] + dec[i] - arr[i])\n    }\n    \n    return maxSum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    var maxSumEndingHere2 = 0\n    var maxSumSoFar2 = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(maxSumEndingHere + arr[i], arr[i])\n        maxSumSoFar = max(maxSumSoFar, maxSumEndingHere)\n    }\n    for i in (0..<arr.count).reversed() {\n        maxSumEndingHere2 = max(maxSumEndingHere2 + arr[i], arr[i])\n        maxSumSoFar2 = max(maxSumSoFar2, maxSumEndingHere2)\n    }\n    maxSum = max(maxSumSoFar, maxSumSoFar2)\n    return maxSum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    \n    var max_sum = 0\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var sum = 0\n    for i in 0..<arr.count {\n        var temp = 0\n        for j in i..<arr.count {\n            temp += arr[j]\n            if temp > sum {\n                sum = temp\n            }\n        }\n    }\n    return sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max(max_sum_ending_here + arr[i], arr[i])\n        max_sum_so_far = max(max_sum_so_far, max_sum_ending_here)\n    }\n    max_sum = max_sum_so_far\n    max_sum_so_far = 0\n    max_sum_ending_here = 0\n    for i in (0..<arr.count).reversed() {\n        max_sum_ending_here = max(max_sum_ending_here + arr[i], arr[i])\n        max_sum_so_far = max(max_sum_so_far, max_sum_ending_here)\n    }\n    max_sum = max(max_sum, max_sum_so_far)\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // find max sum of increasing subsequence from left to right\n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        for j in 0..<i {\n            if arr[j] < arr[i] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    // find max sum of increasing subsequence from right to left\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_right[i] = arr[i]\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[j] < arr[i] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    // find max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    \n    // max sum increasing\n    for i in 0..<arr.count {\n        max_sum_inc[i] = arr[i]\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i] {\n                max_sum_inc[i] = max_sum_inc[j] + arr[i]\n            }\n        }\n    }\n    \n    // max sum decreasing\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_dec[i] = arr[i]\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i] {\n                max_sum_dec[i] = max_sum_dec[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_inc[i] + max_sum_dec[i] - arr[i] {\n            max_sum = max_sum_inc[i] + max_sum_dec[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    \n    var maxSum = 0\n    for i in 0..<arr.count {\n        maxSum = max(maxSum, inc[i] + dec[i] - arr[i])\n    }\n    \n    return maxSum",
    "    var max_sum = 0\n    var max_sum_arr = [Int](repeating: 0, count: arr.count)\n    for i in 0..<arr.count {\n        max_sum_arr[i] = arr[i]\n        for j in 0..<i {\n            if arr[j] < arr[i] {\n                max_sum_arr[i] = max(max_sum_arr[i], max_sum_arr[j] + arr[i])\n            }\n        }\n        max_sum = max(max_sum, max_sum_arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var maxSum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        maxSum = max(maxSum, sum)\n    }\n    return maxSum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        } else if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var sum = 0\n    var max = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max {\n            max = sum\n        }\n    }\n    return max",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    \n    var maxSum = Int.min\n    for i in 0..<arr.count {\n        maxSum = max(maxSum, inc[i] + dec[i] - arr[i])\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i])\n            }\n        }\n    }\n    for i in (0..<arr.count-1).reversed() {\n        for j in (i+1..<arr.count).reversed() {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i])\n            }\n        }\n    }\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    return max_sum",
    "    var maxSum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum > maxSum {\n            maxSum = sum\n        }\n        i += 1\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_reverse = 0\n    var max_sum_ending_here_reverse_temp = 0\n    var max_sum_ending_here_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_temp_reverse_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse",
    "    var sum = 0\n    var max_sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_reverse = 0\n    var max_sum_so_far_reverse = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_ending_here_reverse += arr[i]\n        if max_sum_ending_here_reverse < 0 {\n            max_sum_ending_here_reverse = 0\n        }\n        if max_sum_so_far_reverse < max_sum_ending_here_reverse {\n            max_sum_so_far_reverse = max_sum_ending_here_reverse\n        }\n    }\n    max_sum = max_sum_so_far + max_sum_so_far_reverse\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far = max(max_sum_so_far + arr[i], arr[i])\n        max_sum = max(max_sum, max_sum_so_far)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far = max(arr[i], max_sum_so_far + arr[i])\n        max_sum = max(max_sum, max_sum_so_far)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum < max_sum_so_far {\n            max_sum = max_sum_so_far\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    var max_sum_ending_here_so_far_index = 0\n    var max_sum_ending_here_index = 0\n    var max_sum_ending_here_index_so_far = 0\n    var max_sum_ending_here_index_so_far_index = 0\n    var max_sum_ending_here_index_so_far_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index_index",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_arr = [Int]()\n    var sum_arr = [Int]()\n    for i in 0..<arr.count {\n        sum_arr.append(arr[i])\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n            sum_arr.removeAll()\n        }\n        if sum > max_sum {\n            max_sum = sum\n            max_sum_arr = sum_arr\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    var maxSumStartingHere = 0\n    var maxSumStartingHereEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(arr[i], maxSumEndingHere + arr[i])\n        maxSum = max(maxSum, maxSumEndingHere)\n    }\n    for i in (0..<arr.count).reversed() {\n        maxSumStartingHere = max(arr[i], maxSumStartingHere + arr[i])\n        maxSum = max(maxSum, maxSumStartingHere)\n    }\n    for i in 0..<arr.count {\n        maxSumStartingHereEndingHere = max(arr[i], maxSumStartingHereEndingHere + arr[i])\n        maxSumStartingHereEndingHere = max(0, maxSumStartingHereEndingHere)\n    }\n    return maxSum - maxSumStartingHereEndingHere",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    var maxSumStartingHere = 0\n    var maxSumStartingHereEndingHere = 0\n    var maxSumStartingHereEndingHereReverse = 0\n    var maxSumEndingHereReverse = 0\n    var maxSumStartingHereReverse = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(maxSumEndingHere + arr[i], arr[i])\n        maxSum = max(maxSum, maxSumEndingHere)\n        maxSumStartingHereEndingHere = max(maxSumStartingHereEndingHere + arr[i], maxSumStartingHere + arr[i])\n        maxSumStartingHere = max(maxSumStartingHere + arr[i], arr[i])\n        maxSumStartingHereEndingHereReverse = max(maxSumStartingHereEndingHereReverse + arr[arr.count - 1 - i], maxSumStartingHereReverse + arr[arr.count - 1 - i])\n        maxSumStartingHereReverse = max(maxSumStartingHereReverse + arr[arr.count - 1 - i], arr[arr.count - 1 - i])\n        maxSumEndingHereReverse = max(maxSumEndingHereReverse + arr[arr.count - 1 - i], arr[arr.count - 1 - i])\n    }\n    return max(maxSum, max(maxSumStartingHereEndingHere, max(maxSumStartingHereEndingHereReverse, max(maxSumEndingHereReverse, maxSumStartingHereReverse))))",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        if i > 0 && max_sum_left[i] < max_sum_left[i - 1] + arr[i] {\n            max_sum_left[i] = max_sum_left[i - 1] + arr[i]\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        max_sum_right[i] = arr[i]\n        if i < arr.count - 1 && max_sum_right[i] < max_sum_right[i + 1] + arr[i] {\n            max_sum_right[i] = max_sum_right[i + 1] + arr[i]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    var maxSumEndingHere2 = 0\n    var maxSumSoFar2 = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumEndingHere > maxSumSoFar {\n            maxSumSoFar = maxSumEndingHere\n        }\n        maxSumEndingHere2 += arr[arr.count - 1 - i]\n        if maxSumEndingHere2 < 0 {\n            maxSumEndingHere2 = 0\n        }\n        if maxSumEndingHere2 > maxSumSoFar2 {\n            maxSumSoFar2 = maxSumEndingHere2\n        }\n    }\n    maxSum = maxSumSoFar + maxSumSoFar2\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    \n    for i in 0..<arr.count {\n        max_sum_arr.append(arr[i])\n        max_sum_arr_rev.append(arr[i])\n        max_sum_arr_rev_rev.append(arr[i])\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i] {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in (0..<arr.count-1).reversed() {\n        for j in (i+1..<arr.count).reversed() {\n            if arr[i] > arr[j] && max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[i] {\n                max_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum_arr_rev_rev[i] = max_sum_arr_rev[arr.count-1-i]\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_arr[i] + max_sum_arr_rev_rev[i] - arr[i] {\n            max_sum = max_sum_arr[i] + max_sum_arr_rev_rev[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int](repeating: 0, count: arr.count)\n    var max_sum_arr_rev = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_arr[i] = arr[i]\n        max_sum_arr_rev[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i] {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[i] > arr[j] && max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[i] {\n                max_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_arr[i] + max_sum_arr_rev[i] - arr[i] {\n            max_sum = max_sum_arr[i] + max_sum_arr_rev[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    var max_sum_ending_here_so_far_index = 0\n    var max_sum_ending_here_index = 0\n    var max_sum_ending_here_index_so_far = 0\n    var max_sum_ending_here_index_so_far_index = 0\n    var max_sum_ending_here_index_so_far_index_index = 0\n    var max_sum_ending_here_index_index = 0\n    var max_sum_ending_here_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // max sum from left to right\n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n        }\n    }\n    \n    // max sum from right to left\n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n        }\n    }\n    \n    // max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // max sum from left to right\n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(arr[i], max_sum_left[i-1] + arr[i])\n        }\n    }\n    \n    // max sum from right to left\n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(arr[i], max_sum_right[i+1] + arr[i])\n        }\n    }\n    \n    // find the max sum\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        } else if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    var max_sum_left_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n        }\n    }\n    \n    for i in stride(from: arr.count-1, through: 0, by: -1) {\n        if i == arr.count-1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left_right[i] = max_sum_right[i]\n        } else if i == arr.count-1 {\n            max_sum_left_right[i] = max_sum_left[i]\n        } else {\n            max_sum_left_right[i] = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left_right[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        if i > 0 && arr[i] > arr[i-1] {\n            max_sum_left[i] += max_sum_left[i-1]\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        max_sum_right[i] = arr[i]\n        if i < arr.count-1 && arr[i] > arr[i+1] {\n            max_sum_right[i] += max_sum_right[i+1]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var left = [Int](repeating: 0, count: arr.count)\n    var right = [Int](repeating: 0, count: arr.count)\n    var max_sum = 0\n    \n    for i in 0..<arr.count {\n        left[i] = arr[i]\n        if i > 0 && arr[i] > arr[i-1] {\n            left[i] += left[i-1]\n        }\n    }\n    \n    for i in stride(from: arr.count-1, through: 0, by: -1) {\n        right[i] = arr[i]\n        if i < arr.count-1 && arr[i] > arr[i+1] {\n            right[i] += right[i+1]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, left[i] + right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var sum = 0\n    var max = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max {\n            max = sum\n        }\n    }\n    return max",
    "    var maxSum = 0\n    var maxSumLeft = [Int](repeating: 0, count: arr.count)\n    var maxSumRight = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        maxSumLeft[i] = arr[i]\n        if i > 0 && arr[i] > arr[i-1] {\n            maxSumLeft[i] = maxSumLeft[i] + maxSumLeft[i-1]\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        maxSumRight[i] = arr[i]\n        if i < arr.count - 1 && arr[i] > arr[i+1] {\n            maxSumRight[i] = maxSumRight[i] + maxSumRight[i+1]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        maxSum = max(maxSum, maxSumLeft[i] + maxSumRight[i] - arr[i])\n    }\n    \n    return maxSum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = 0\n    while i < arr.count {\n        sum = 0\n        j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count-1] = arr[arr.count-1]\n    for i in 1..<arr.count {\n        inc[i] = max(inc[i-1], arr[i])\n    }\n    for i in (0..<arr.count-1).reversed() {\n        dec[i] = max(dec[i+1], arr[i])\n    }\n    var sum = 0\n    for i in 0..<arr.count {\n        sum = max(sum, inc[i] + dec[i] - arr[i])\n    }\n    return sum",
    "    var sum = 0\n    var max = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max {\n            max = sum\n        }\n    }\n    return max",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    \n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_rev = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            sum_rev += arr[arr.count - j - 1]\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = Array(arr[i...j])\n            }\n            if sum_rev > max_sum {\n                max_sum = sum_rev\n                max_sum_arr_rev = Array(arr[arr.count - j - 1...arr.count - i - 1])\n            }\n        }\n    }\n    \n    if max_sum_arr.count > max_sum_arr_rev.count {\n        return max_sum\n    } else {\n        return max_sum_arr_rev.reduce(0, +)\n    }",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n            }\n            j += 1\n        }\n    }\n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    for i in 0..<arr.count {\n        maxSumSoFar = max(maxSumSoFar + arr[i], arr[i])\n        maxSum = max(maxSum, maxSumSoFar)\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    max_sum = max_sum_so_far\n    max_sum_so_far = 0\n    max_sum_ending_here = 0\n    for i in (0..<arr.count).reversed() {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    max_sum += max_sum_so_far\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            sum += arr[j]\n            sum_arr.append(arr[j])\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = sum_arr\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var left = [Int](repeating: 0, count: arr.count)\n    var right = [Int](repeating: 0, count: arr.count)\n    \n    left[0] = arr[0]\n    for i in 1..<arr.count {\n        left[i] = max(arr[i], left[i - 1] + arr[i])\n    }\n    \n    right[arr.count - 1] = arr[arr.count - 1]\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        right[i] = max(arr[i], right[i + 1] + arr[i])\n    }\n    \n    var max_sum = Int.min\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, left[i] + right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here_reverse = 0\n    var max_sum_so_far_reverse = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_ending_here_reverse += arr[i]\n        if max_sum_ending_here_reverse < 0 {\n            max_sum_ending_here_reverse = 0\n        }\n        if max_sum_so_far_reverse < max_sum_ending_here_reverse {\n            max_sum_so_far_reverse = max_sum_ending_here_reverse\n        }\n    }\n    max_sum = max_sum_so_far + max_sum_so_far_reverse\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else if arr[i] > arr[j] {\n            sum += arr[j]\n            j -= 1\n        } else {\n            sum += arr[i]\n            i += 1\n            j -= 1\n        }\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_inc = 0\n    var max_sum_dec = 0\n    var max_sum_inc_arr = [Int]()\n    var max_sum_dec_arr = [Int]()\n    var max_sum_arr = [Int]()\n    \n    for i in 0..<arr.count {\n        max_sum_inc_arr.append(arr[i])\n        max_sum_dec_arr.append(arr[i])\n        max_sum_arr.append(arr[i])\n        \n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_inc_arr[i] < max_sum_inc_arr[j] + arr[i] {\n                max_sum_inc_arr[i] = max_sum_inc_arr[j] + arr[i]\n            }\n        }\n        \n        if max_sum_inc < max_sum_inc_arr[i] {\n            max_sum_inc = max_sum_inc_arr[i]\n        }\n    }\n    \n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[i] > arr[j] && max_sum_dec_arr[i] < max_sum_dec_arr[j] + arr[i] {\n                max_sum_dec_arr[i] = max_sum_dec_arr[j] + arr[i]\n            }\n        }\n        \n        if max_sum_dec < max_sum_dec_arr[i] {\n            max_sum_dec = max_sum_dec_arr[i]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr[i] {\n            max_sum = max_sum_inc_arr[i] + max_sum_dec_arr[i] - arr",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n            }\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum"
  ]
}
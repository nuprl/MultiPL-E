{
  "name": "mbpp_782_odd_length_sum",
  "language": "swift",
  "prompt": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            let length = j - i + 1\n            if length % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            let length = j - i + 1\n            if length % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            var k = i\n            while k <= j {\n                sum += arr[k]\n                k += 1\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmprf6vnmn0/tmprf6vnmn0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0059f8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0059c82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0059c82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0059c817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprf6vnmn0                        0x000055c96ff06542 <unavailable> + 5442\n5    libc.so.6                          0x00002b005a177460 __libc_start_main + 245\n6    tmprf6vnmn0                        0x000055c96ff061a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var count = 0\n        for j in i..<arr.count {\n            count += 1\n            if count % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "tmp4q_go7r0/tmp4q_go7r0.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5a5144c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac5a4e3bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac5a4e3b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5a4e3a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4q_go7r0                        0x000055d305233542 <unavailable> + 5442\n5    libc.so.6                          0x00002ac5a5330460 __libc_start_main + 245\n6    tmp4q_go7r0                        0x000055d3052331a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var count = 0\n        for j in i..<arr.count {\n            count += 1\n            if count % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "tmp4q_go7r0/tmp4q_go7r0.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5a5144c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac5a4e3bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac5a4e3b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5a4e3a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4q_go7r0                        0x000055d305233542 <unavailable> + 5442\n5    libc.so.6                          0x00002ac5a5330460 __libc_start_main + 245\n6    tmp4q_go7r0                        0x000055d3052331a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            var k = i\n            while k <= j {\n                sum += arr[k]\n                k += 1\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmprf6vnmn0/tmprf6vnmn0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0059f8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0059c82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0059c82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0059c817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprf6vnmn0                        0x000055c96ff06542 <unavailable> + 5442\n5    libc.so.6                          0x00002b005a177460 __libc_start_main + 245\n6    tmprf6vnmn0                        0x000055c96ff061a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var count = 0\n        for j in i..<arr.count {\n            count += 1\n            sum += arr[j]\n            if count % 2 == 0 {\n                break\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "tmpe1pirvbp/tmpe1pirvbp.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5e4fc83c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5e4f97ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5e4f97a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5e4f9797b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe1pirvbp                        0x00005641c19d3542 <unavailable> + 5442\n5    libc.so.6                          0x00002b5e4fe6f460 __libc_start_main + 245\n6    tmpe1pirvbp                        0x00005641c19d31a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i) % 2 == 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            let subarr = Array(arr[i...j])\n            if subarr.count % 2 != 0 {\n                sum += subarr.reduce(0, +)\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "tmpzkwd0ce4/tmpzkwd0ce4.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b737a7fec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b737a4f5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b737a4f5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b737a4f47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzkwd0ce4                        0x00005606e6176542 <unavailable> + 5442\n5    libc.so.6                          0x00002b737a9ea460 __libc_start_main + 245\n6    tmpzkwd0ce4                        0x00005606e61761a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var count = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            count += 1\n            if count % 2 == 0 {\n                break\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "tmpw48si1jv/tmpw48si1jv.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b03cd704c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b03cd3fbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b03cd3fb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03cd3fa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw48si1jv                        0x000056279556e542 <unavailable> + 5442\n5    libc.so.6                          0x00002b03cd8f0460 __libc_start_main + 245\n6    tmpw48si1jv                        0x000056279556e1a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            var k = i\n            while k <= j {\n                sum += arr[k]\n                k += 1\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmprf6vnmn0/tmprf6vnmn0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0059f8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0059c82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0059c82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0059c817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprf6vnmn0                        0x000055c96ff06542 <unavailable> + 5442\n5    libc.so.6                          0x00002b005a177460 __libc_start_main + 245\n6    tmprf6vnmn0                        0x000055c96ff061a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            var len = j - i + 1\n            if len % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "tmpuy7vmdfl/tmpuy7vmdfl.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b169bd27c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b169ba1eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b169ba1e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b169ba1d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuy7vmdfl                        0x000056056c6a4542 <unavailable> + 5442\n5    libc.so.6                          0x00002b169bf13460 __libc_start_main + 245\n6    tmpuy7vmdfl                        0x000056056c6a41a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            let length = j - i + 1\n            if length % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j-i+1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            var k = i\n            while k <= j {\n                sum += arr[k]\n                k += 1\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmprf6vnmn0/tmprf6vnmn0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0059f8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0059c82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0059c82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0059c817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprf6vnmn0                        0x000055c96ff06542 <unavailable> + 5442\n5    libc.so.6                          0x00002b005a177460 __libc_start_main + 245\n6    tmprf6vnmn0                        0x000055c96ff061a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j-i+1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i..<j+1].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            let subarr = Array(arr[i...j])\n            if subarr.count % 2 != 0 {\n                sum += subarr.reduce(0, +)\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            var k = i\n            while k <= j {\n                sum += arr[k]\n                k += 1\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmprf6vnmn0/tmprf6vnmn0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0059f8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0059c82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0059c82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0059c817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprf6vnmn0                        0x000055c96ff06542 <unavailable> + 5442\n5    libc.so.6                          0x00002b005a177460 __libc_start_main + 245\n6    tmprf6vnmn0                        0x000055c96ff061a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            var k = i\n            while k <= j {\n                sum += arr[k]\n                k += 1\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmprf6vnmn0/tmprf6vnmn0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0059f8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0059c82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0059c82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0059c817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprf6vnmn0                        0x000055c96ff06542 <unavailable> + 5442\n5    libc.so.6                          0x00002b005a177460 __libc_start_main + 245\n6    tmprf6vnmn0                        0x000055c96ff061a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j-i+1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            let sub_arr = Array(arr[i...j])\n            if sub_arr.count % 2 != 0 {\n                sum += sub_arr.reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            var k = i\n            while k <= j {\n                sum += arr[k]\n                k += 1\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmprf6vnmn0/tmprf6vnmn0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0059f8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0059c82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0059c82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0059c817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprf6vnmn0                        0x000055c96ff06542 <unavailable> + 5442\n5    libc.so.6                          0x00002b005a177460 __libc_start_main + 245\n6    tmprf6vnmn0                        0x000055c96ff061a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i) % 2 == 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmppw_kip50/tmppw_kip50.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b2d12ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b2ce25b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b2ce25988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b2ce247b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppw_kip50                        0x000055c098d91542 <unavailable> + 5442\n5    libc.so.6                          0x00002b6b2d31a460 __libc_start_main + 245\n6    tmppw_kip50                        0x000055c098d911a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            var k = i\n            while k <= j {\n                sum += arr[k]\n                k += 1\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmprf6vnmn0/tmprf6vnmn0.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0059f8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0059c82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0059c82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0059c817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprf6vnmn0                        0x000055c96ff06542 <unavailable> + 5442\n5    libc.so.6                          0x00002b005a177460 __libc_start_main + 245\n6    tmprf6vnmn0                        0x000055c96ff061a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var count = 0\n        for j in i..<arr.count {\n            count += 1\n            sum += arr[j]\n            if count % 2 == 0 {\n                break\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122452,
      "stdout": "",
      "stderr": "tmpe1pirvbp/tmpe1pirvbp.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5e4fc83c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5e4f97ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5e4f97a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5e4f9797b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe1pirvbp                        0x00005641c19d3542 <unavailable> + 5442\n5    libc.so.6                          0x00002b5e4fe6f460 __libc_start_main + 245\n6    tmpe1pirvbp                        0x00005641c19d31a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            let len = j - i + 1\n            if len % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j-i+1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            sum += arr[i..<j+1].reduce(0, +)\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmp6p219r95/tmp6p219r95.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ba983c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ba67ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ba67a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ba6797b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6p219r95                        0x0000555f80cc9652 <unavailable> + 5714\n5    libc.so.6                          0x00002af2bab6f460 __libc_start_main + 245\n6    tmp6p219r95                        0x0000555f80cc92b9 <unavailable> + 4793\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            var sub_sum = 0\n            for k in i...j {\n                sub_sum += arr[k]\n            }\n            if (j - i + 1) % 2 != 0 {\n                sum += sub_sum\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1666122453,
      "stdout": "",
      "stderr": "tmpncsk5_sn/tmpncsk5_sn.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5f33c74c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5f3396bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5f3396b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5f3396a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpncsk5_sn                        0x0000559a87b22542 <unavailable> + 5442\n5    libc.so.6                          0x00002b5f33e60460 __libc_start_main + 245\n6    tmpncsk5_sn                        0x0000559a87b221a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[i...j].reduce(0, +)\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                sum += arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpvgyy7pdb/tmpvgyy7pdb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba2cd2c9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba2ccfc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba2ccfc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba2ccfbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgyy7pdb                        0x000055b5b1770542 <unavailable> + 5442\n5    libc.so.6                          0x00002ba2cd4b5460 __libc_start_main + 245\n6    tmpvgyy7pdb                        0x000055b5b17701a9 <unavailable> + 4521\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 == 1 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        for j in i..<arr.count {\n            if (j - i + 1) % 2 != 0 {\n                for k in i...j {\n                    sum += arr[k]\n                }\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/\nfunc odd_length_sum(arr: [Int]) -> Int {\n    var sum = 0\n    for i in 0..<arr.count {\n        var j = i\n        while j < arr.count {\n            for k in i...j {\n                sum += arr[k]\n            }\n            j += 1\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(odd_length_sum(arr: [1, 2, 4]) == 14)\nassert(odd_length_sum(arr: [1, 2, 1, 2]) == 15)\nassert(odd_length_sum(arr: [1, 7]) == 8)",
      "timestamp": 1665509929,
      "stdout": "",
      "stderr": "tmpuzf441gu/tmpuzf441gu.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad922bf9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9228f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad9228f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad9228ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzf441gu                        0x000056081fc21632 <unavailable> + 5682\n5    libc.so.6                          0x00002ad922de5460 __libc_start_main + 245\n6    tmpuzf441gu                        0x000056081fc21299 <unavailable> + 4761\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
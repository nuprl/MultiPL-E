{
  "name": "mbpp_464_check_value",
  "language": "swift",
  "prompt": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_464_check_value.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (key, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (key, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (key, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (key, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    var count = 0\n    for (_, value) in dict {\n        if value == n {\n            count += 1\n        }\n    }\n    if count == dict.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    var count = 0\n    for (_, value) in dict {\n        if value == n {\n            count += 1\n        }\n    }\n    if count == dict.count {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (key, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (key, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (key, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    var flag = true\n    for (_, value) in dict {\n        if value != n {\n            flag = false\n        }\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123687,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    var count = 0\n    for (_, value) in dict {\n        if value == n {\n            count += 1\n        }\n    }\n    return count == dict.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    var count = 0\n    for (_, value) in dict {\n        if value == n {\n            count += 1\n        }\n    }\n    return count == dict.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, v) in dict {\n        if v != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1666123686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to check if all values are same in a dictionary.\nfunc check_value(dict: [String : Int], n: Int) -> Bool {\n    for (_, value) in dict {\n        if value != n {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 10) == false)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 12) == true)\nassert(check_value(dict: [\"Cierra Vega\" : 12, \"Alden Cantrell\" : 12, \"Kierra Gentry\" : 12, \"Pierre Cox\" : 12], n: 5) == false)",
      "timestamp": 1665510636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
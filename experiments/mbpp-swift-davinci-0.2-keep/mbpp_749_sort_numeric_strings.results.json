{
  "name": "mbpp_749_sort_numeric_strings",
  "language": "swift",
  "prompt": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map({Int($0)!}).sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp9fx4a3rg/tmp9fx4a3rg.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5f4f7e9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5f4f4e0561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b5f4f4e0286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b5f4f4e013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b5f4f4dfbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp9fx4a3rg                        0x0000561e0ae6d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b5f4f4c8820 Collection.map<A>(_:) + 426\n7    tmp9fx4a3rg                        0x0000561e0ae6d267 <unavailable> + 8807\n8    tmp9fx4a3rg                        0x0000561e0ae6d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b5f4f9d5460 __libc_start_main + 245\n10   tmp9fx4a3rg                        0x0000561e0ae6c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp1729e9ic/tmp1729e9ic.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6556335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b655602c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b655602c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b655602c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b655602bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp1729e9ic                        0x00005605c82f33cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b6556014820 Collection.map<A>(_:) + 426\n7    tmp1729e9ic                        0x00005605c82f326f <unavailable> + 8815\n8    tmp1729e9ic                        0x00005605c82f3093 <unavailable> + 8339\n9    libc.so.6                          0x00002b6556521460 __libc_start_main + 245\n10   tmp1729e9ic                        0x00005605c82f2319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.compactMap { Int($0) }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "tmp1nptc2m6/tmp1nptc2m6.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5ec6308c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5ec5fffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5ec5fff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5ec5ffe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nptc2m6                        0x0000561115c56141 <unavailable> + 8513\n5    libc.so.6                          0x00002b5ec64f4460 __libc_start_main + 245\n6    tmp1nptc2m6                        0x0000561115c55259 <unavailable> + 4697\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp04d27xbb/tmp04d27xbb.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ff5e6fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ff5b66561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ff5b66286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ff5b6613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ff5b65bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp04d27xbb                        0x0000563904bce5eb <unavailable> + 9707\n6    tmp04d27xbb                        0x0000563904bce283 <unavailable> + 8835\n7    libc.so.6                          0x00002b4ff605b460 __libc_start_main + 245\n8    tmp04d27xbb                        0x0000563904bcd509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpndyovz4a/tmpndyovz4a.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f620a8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f61d9f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b0f61d9f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b0f61d9f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b0f61d9ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpndyovz4a                        0x00005582c09445a6 <unavailable> + 9638\n6    tmpndyovz4a                        0x00005582c0944233 <unavailable> + 8755\n7    libc.so.6                          0x00002b0f62294460 __libc_start_main + 245\n8    tmpndyovz4a                        0x00005582c09434b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp1729e9ic/tmp1729e9ic.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6556335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b655602c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b655602c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b655602c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b655602bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp1729e9ic                        0x00005605c82f33cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b6556014820 Collection.map<A>(_:) + 426\n7    tmp1729e9ic                        0x00005605c82f326f <unavailable> + 8815\n8    tmp1729e9ic                        0x00005605c82f3093 <unavailable> + 8339\n9    libc.so.6                          0x00002b6556521460 __libc_start_main + 245\n10   tmp1729e9ic                        0x00005605c82f2319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int = [Int]()\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpgwskyi3y/tmpgwskyi3y.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b42fb3a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b42fb09e561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b42fb09e286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b42fb09e13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b42fb09dbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpgwskyi3y                        0x000056391d2745eb <unavailable> + 9707\n6    tmpgwskyi3y                        0x000056391d274283 <unavailable> + 8835\n7    libc.so.6                          0x00002b42fb593460 __libc_start_main + 245\n8    tmpgwskyi3y                        0x000056391d273509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpqf7g89et/tmpqf7g89et.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b0999bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b09692561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4b09692286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4b0969213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4b09691bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqf7g89et                        0x000055cdb1d3f46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b4b0967a820 Collection.map<A>(_:) + 426\n7    tmpqf7g89et                        0x000055cdb1d3f2ff <unavailable> + 8959\n8    tmpqf7g89et                        0x000055cdb1d3f123 <unavailable> + 8483\n9    libc.so.6                          0x00002b4b09b87460 __libc_start_main + 245\n10   tmpqf7g89et                        0x000055cdb1d3e3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpndyovz4a/tmpndyovz4a.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f620a8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f61d9f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b0f61d9f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b0f61d9f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b0f61d9ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpndyovz4a                        0x00005582c09445a6 <unavailable> + 9638\n6    tmpndyovz4a                        0x00005582c0944233 <unavailable> + 8755\n7    libc.so.6                          0x00002b0f62294460 __libc_start_main + 245\n8    tmpndyovz4a                        0x00005582c09434b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp04d27xbb/tmp04d27xbb.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ff5e6fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ff5b66561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ff5b66286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ff5b6613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ff5b65bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp04d27xbb                        0x0000563904bce5eb <unavailable> + 9707\n6    tmp04d27xbb                        0x0000563904bce283 <unavailable> + 8835\n7    libc.so.6                          0x00002b4ff605b460 __libc_start_main + 245\n8    tmp04d27xbb                        0x0000563904bcd509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map{Int($0)!}.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9zz6ra2c/tmp9zz6ra2c.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b10fb260c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b10faf57561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b10faf57286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b10faf5713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b10faf56bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp9zz6ra2c                        0x00005642cdcae3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b10faf3f820 Collection.map<A>(_:) + 426\n7    tmp9zz6ra2c                        0x00005642cdcae267 <unavailable> + 8807\n8    tmp9zz6ra2c                        0x00005642cdcae093 <unavailable> + 8339\n9    libc.so.6                          0x00002b10fb44c460 __libc_start_main + 245\n10   tmp9zz6ra2c                        0x00005642cdcad319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpdgbzqoef/tmpdgbzqoef.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac9a7a12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac9a7709561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac9a7709286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac9a770913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac9a7708bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpdgbzqoef                        0x0000560e72d8c532 <unavailable> + 9522\n6    tmpdgbzqoef                        0x0000560e72d8c1b3 <unavailable> + 8627\n7    libc.so.6                          0x00002ac9a7bfe460 __libc_start_main + 245\n8    tmpdgbzqoef                        0x0000560e72d8b439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.compactMap { Int($0) }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "tmp1nptc2m6/tmp1nptc2m6.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5ec6308c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5ec5fffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5ec5fff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5ec5ffe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nptc2m6                        0x0000561115c56141 <unavailable> + 8513\n5    libc.so.6                          0x00002b5ec64f4460 __libc_start_main + 245\n6    tmp1nptc2m6                        0x0000561115c55259 <unavailable> + 4697\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp0sh_4ex9/tmp0sh_4ex9.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b536fb9ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b536f895561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b536f895286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b536f89513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b536f894bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp0sh_4ex9                        0x000055b0fe2555a6 <unavailable> + 9638\n6    tmp0sh_4ex9                        0x000055b0fe255233 <unavailable> + 8755\n7    libc.so.6                          0x00002b536fd8a460 __libc_start_main + 245\n8    tmp0sh_4ex9                        0x000055b0fe2544b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpj799qu63/tmpj799qu63.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b011e4d1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b011e1c8561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b011e1c8286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b011e1c813c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b011e1c7bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpj799qu63                        0x00005561ca1ec577 <unavailable> + 9591\n6    tmpj799qu63                        0x00005561ca1ec203 <unavailable> + 8707\n7    libc.so.6                          0x00002b011e6bd460 __libc_start_main + 245\n8    tmpj799qu63                        0x00005561ca1eb489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.compactMap { Int($0) }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "tmp1nptc2m6/tmp1nptc2m6.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5ec6308c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5ec5fffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5ec5fff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5ec5ffe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nptc2m6                        0x0000561115c56141 <unavailable> + 8513\n5    libc.so.6                          0x00002b5ec64f4460 __libc_start_main + 245\n6    tmp1nptc2m6                        0x0000561115c55259 <unavailable> + 4697\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpndyovz4a/tmpndyovz4a.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f620a8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f61d9f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b0f61d9f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b0f61d9f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b0f61d9ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpndyovz4a                        0x00005582c09445a6 <unavailable> + 9638\n6    tmpndyovz4a                        0x00005582c0944233 <unavailable> + 8755\n7    libc.so.6                          0x00002b0f62294460 __libc_start_main + 245\n8    tmpndyovz4a                        0x00005582c09434b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpqf7g89et/tmpqf7g89et.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b0999bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b09692561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4b09692286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4b0969213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4b09691bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqf7g89et                        0x000055cdb1d3f46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b4b0967a820 Collection.map<A>(_:) + 426\n7    tmpqf7g89et                        0x000055cdb1d3f2ff <unavailable> + 8959\n8    tmpqf7g89et                        0x000055cdb1d3f123 <unavailable> + 8483\n9    libc.so.6                          0x00002b4b09b87460 __libc_start_main + 245\n10   tmpqf7g89et                        0x000055cdb1d3e3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int = [Int]()\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpr3e9dsei/tmpr3e9dsei.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32ac58dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32ac284561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32ac284286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32ac28413c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32ac283bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpr3e9dsei                        0x0000557499c515eb <unavailable> + 9707\n6    tmpr3e9dsei                        0x0000557499c51283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32ac779460 __libc_start_main + 245\n8    tmpr3e9dsei                        0x0000557499c50509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpj799qu63/tmpj799qu63.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b011e4d1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b011e1c8561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b011e1c8286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b011e1c813c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b011e1c7bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpj799qu63                        0x00005561ca1ec577 <unavailable> + 9591\n6    tmpj799qu63                        0x00005561ca1ec203 <unavailable> + 8707\n7    libc.so.6                          0x00002b011e6bd460 __libc_start_main + 245\n8    tmpj799qu63                        0x00005561ca1eb489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int = [Int]()\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpr3e9dsei/tmpr3e9dsei.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32ac58dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32ac284561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32ac284286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32ac28413c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32ac283bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpr3e9dsei                        0x0000557499c515eb <unavailable> + 9707\n6    tmpr3e9dsei                        0x0000557499c51283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32ac779460 __libc_start_main + 245\n8    tmpr3e9dsei                        0x0000557499c50509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpj799qu63/tmpj799qu63.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b011e4d1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b011e1c8561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b011e1c8286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b011e1c813c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b011e1c7bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpj799qu63                        0x00005561ca1ec577 <unavailable> + 9591\n6    tmpj799qu63                        0x00005561ca1ec203 <unavailable> + 8707\n7    libc.so.6                          0x00002b011e6bd460 __libc_start_main + 245\n8    tmpj799qu63                        0x00005561ca1eb489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.compactMap { Int($0) }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "tmp1nptc2m6/tmp1nptc2m6.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5ec6308c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5ec5fffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5ec5fff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5ec5ffe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nptc2m6                        0x0000561115c56141 <unavailable> + 8513\n5    libc.so.6                          0x00002b5ec64f4460 __libc_start_main + 245\n6    tmp1nptc2m6                        0x0000561115c55259 <unavailable> + 4697\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map{Int($0)!}.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9zz6ra2c/tmp9zz6ra2c.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b10fb260c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b10faf57561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b10faf57286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b10faf5713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b10faf56bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp9zz6ra2c                        0x00005642cdcae3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b10faf3f820 Collection.map<A>(_:) + 426\n7    tmp9zz6ra2c                        0x00005642cdcae267 <unavailable> + 8807\n8    tmp9zz6ra2c                        0x00005642cdcae093 <unavailable> + 8339\n9    libc.so.6                          0x00002b10fb44c460 __libc_start_main + 245\n10   tmp9zz6ra2c                        0x00005642cdcad319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp04d27xbb/tmp04d27xbb.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ff5e6fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ff5b66561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ff5b66286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ff5b6613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ff5b65bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp04d27xbb                        0x0000563904bce5eb <unavailable> + 9707\n6    tmp04d27xbb                        0x0000563904bce283 <unavailable> + 8835\n7    libc.so.6                          0x00002b4ff605b460 __libc_start_main + 245\n8    tmp04d27xbb                        0x0000563904bcd509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpqf7g89et/tmpqf7g89et.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b0999bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b09692561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4b09692286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4b0969213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4b09691bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqf7g89et                        0x000055cdb1d3f46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b4b0967a820 Collection.map<A>(_:) + 426\n7    tmpqf7g89et                        0x000055cdb1d3f2ff <unavailable> + 8959\n8    tmpqf7g89et                        0x000055cdb1d3f123 <unavailable> + 8483\n9    libc.so.6                          0x00002b4b09b87460 __libc_start_main + 245\n10   tmpqf7g89et                        0x000055cdb1d3e3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp1729e9ic/tmp1729e9ic.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6556335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b655602c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b655602c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b655602c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b655602bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp1729e9ic                        0x00005605c82f33cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b6556014820 Collection.map<A>(_:) + 426\n7    tmp1729e9ic                        0x00005605c82f326f <unavailable> + 8815\n8    tmp1729e9ic                        0x00005605c82f3093 <unavailable> + 8339\n9    libc.so.6                          0x00002b6556521460 __libc_start_main + 245\n10   tmp1729e9ic                        0x00005605c82f2319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp73o78rga/tmp73o78rga.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0b9a080c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0b99d77561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b0b99d77286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b0b99d7713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b0b99d76bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp73o78rga                        0x000055f35133a5a6 <unavailable> + 9638\n6    tmp73o78rga                        0x000055f35133a233 <unavailable> + 8755\n7    libc.so.6                          0x00002b0b9a26c460 __libc_start_main + 245\n8    tmp73o78rga                        0x000055f3513394b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map{Int($0)!}.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9zz6ra2c/tmp9zz6ra2c.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b10fb260c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b10faf57561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b10faf57286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b10faf5713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b10faf56bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp9zz6ra2c                        0x00005642cdcae3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b10faf3f820 Collection.map<A>(_:) + 426\n7    tmp9zz6ra2c                        0x00005642cdcae267 <unavailable> + 8807\n8    tmp9zz6ra2c                        0x00005642cdcae093 <unavailable> + 8339\n9    libc.so.6                          0x00002b10fb44c460 __libc_start_main + 245\n10   tmp9zz6ra2c                        0x00005642cdcad319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp1729e9ic/tmp1729e9ic.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6556335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b655602c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b655602c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b655602c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b655602bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp1729e9ic                        0x00005605c82f33cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b6556014820 Collection.map<A>(_:) + 426\n7    tmp1729e9ic                        0x00005605c82f326f <unavailable> + 8815\n8    tmp1729e9ic                        0x00005605c82f3093 <unavailable> + 8339\n9    libc.so.6                          0x00002b6556521460 __libc_start_main + 245\n10   tmp1729e9ic                        0x00005605c82f2319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp04d27xbb/tmp04d27xbb.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ff5e6fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ff5b66561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4ff5b66286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4ff5b6613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4ff5b65bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp04d27xbb                        0x0000563904bce5eb <unavailable> + 9707\n6    tmp04d27xbb                        0x0000563904bce283 <unavailable> + 8835\n7    libc.so.6                          0x00002b4ff605b460 __libc_start_main + 245\n8    tmp04d27xbb                        0x0000563904bcd509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp1729e9ic/tmp1729e9ic.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6556335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b655602c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b655602c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b655602c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b655602bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp1729e9ic                        0x00005605c82f33cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b6556014820 Collection.map<A>(_:) + 426\n7    tmp1729e9ic                        0x00005605c82f326f <unavailable> + 8815\n8    tmp1729e9ic                        0x00005605c82f3093 <unavailable> + 8339\n9    libc.so.6                          0x00002b6556521460 __libc_start_main + 245\n10   tmp1729e9ic                        0x00005605c82f2319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map{Int($0)!}.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9zz6ra2c/tmp9zz6ra2c.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b10fb260c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b10faf57561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b10faf57286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b10faf5713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b10faf56bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp9zz6ra2c                        0x00005642cdcae3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b10faf3f820 Collection.map<A>(_:) + 426\n7    tmp9zz6ra2c                        0x00005642cdcae267 <unavailable> + 8807\n8    tmp9zz6ra2c                        0x00005642cdcae093 <unavailable> + 8339\n9    libc.so.6                          0x00002b10fb44c460 __libc_start_main + 245\n10   tmp9zz6ra2c                        0x00005642cdcad319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpndyovz4a/tmpndyovz4a.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f620a8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f61d9f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b0f61d9f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b0f61d9f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b0f61d9ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpndyovz4a                        0x00005582c09445a6 <unavailable> + 9638\n6    tmpndyovz4a                        0x00005582c0944233 <unavailable> + 8755\n7    libc.so.6                          0x00002b0f62294460 __libc_start_main + 245\n8    tmpndyovz4a                        0x00005582c09434b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int = [Int]()\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpr3e9dsei/tmpr3e9dsei.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32ac58dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32ac284561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32ac284286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32ac28413c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32ac283bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpr3e9dsei                        0x0000557499c515eb <unavailable> + 9707\n6    tmpr3e9dsei                        0x0000557499c51283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32ac779460 __libc_start_main + 245\n8    tmpr3e9dsei                        0x0000557499c50509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmppb50bmvd/tmppb50bmvd.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad1677bec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad1674b5561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad1674b5286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad1674b513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad1674b4bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmppb50bmvd                        0x00005650375a1532 <unavailable> + 9522\n6    tmppb50bmvd                        0x00005650375a11b3 <unavailable> + 8627\n7    libc.so.6                          0x00002ad1679aa460 __libc_start_main + 245\n8    tmppb50bmvd                        0x00005650375a0439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.compactMap { Int($0) }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "tmp1nptc2m6/tmp1nptc2m6.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5ec6308c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5ec5fffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5ec5fff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5ec5ffe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nptc2m6                        0x0000561115c56141 <unavailable> + 8513\n5    libc.so.6                          0x00002b5ec64f4460 __libc_start_main + 245\n6    tmp1nptc2m6                        0x0000561115c55259 <unavailable> + 4697\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map{Int($0)!}.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9zz6ra2c/tmp9zz6ra2c.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b10fb260c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b10faf57561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b10faf57286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b10faf5713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b10faf56bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp9zz6ra2c                        0x00005642cdcae3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b10faf3f820 Collection.map<A>(_:) + 426\n7    tmp9zz6ra2c                        0x00005642cdcae267 <unavailable> + 8807\n8    tmp9zz6ra2c                        0x00005642cdcae093 <unavailable> + 8339\n9    libc.so.6                          0x00002b10fb44c460 __libc_start_main + 245\n10   tmp9zz6ra2c                        0x00005642cdcad319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpqf7g89et/tmpqf7g89et.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b0999bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b09692561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4b09692286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4b0969213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4b09691bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqf7g89et                        0x000055cdb1d3f46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b4b0967a820 Collection.map<A>(_:) + 426\n7    tmpqf7g89et                        0x000055cdb1d3f2ff <unavailable> + 8959\n8    tmpqf7g89et                        0x000055cdb1d3f123 <unavailable> + 8483\n9    libc.so.6                          0x00002b4b09b87460 __libc_start_main + 245\n10   tmpqf7g89et                        0x000055cdb1d3e3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpqf7g89et/tmpqf7g89et.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b0999bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b09692561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4b09692286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4b0969213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4b09691bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqf7g89et                        0x000055cdb1d3f46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b4b0967a820 Collection.map<A>(_:) + 426\n7    tmpqf7g89et                        0x000055cdb1d3f2ff <unavailable> + 8959\n8    tmpqf7g89et                        0x000055cdb1d3f123 <unavailable> + 8483\n9    libc.so.6                          0x00002b4b09b87460 __libc_start_main + 245\n10   tmpqf7g89et                        0x000055cdb1d3e3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp1729e9ic/tmp1729e9ic.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6556335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b655602c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b655602c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b655602c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b655602bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp1729e9ic                        0x00005605c82f33cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b6556014820 Collection.map<A>(_:) + 426\n7    tmp1729e9ic                        0x00005605c82f326f <unavailable> + 8815\n8    tmp1729e9ic                        0x00005605c82f3093 <unavailable> + 8339\n9    libc.so.6                          0x00002b6556521460 __libc_start_main + 245\n10   tmp1729e9ic                        0x00005605c82f2319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.compactMap { Int($0) }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "tmp1nptc2m6/tmp1nptc2m6.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5ec6308c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5ec5fffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5ec5fff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5ec5ffe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nptc2m6                        0x0000561115c56141 <unavailable> + 8513\n5    libc.so.6                          0x00002b5ec64f4460 __libc_start_main + 245\n6    tmp1nptc2m6                        0x0000561115c55259 <unavailable> + 4697\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpqf7g89et/tmpqf7g89et.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b0999bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b09692561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4b09692286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4b0969213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4b09691bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqf7g89et                        0x000055cdb1d3f46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b4b0967a820 Collection.map<A>(_:) + 426\n7    tmpqf7g89et                        0x000055cdb1d3f2ff <unavailable> + 8959\n8    tmpqf7g89et                        0x000055cdb1d3f123 <unavailable> + 8483\n9    libc.so.6                          0x00002b4b09b87460 __libc_start_main + 245\n10   tmpqf7g89et                        0x000055cdb1d3e3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.compactMap { Int($0) }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "tmp1nptc2m6/tmp1nptc2m6.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5ec6308c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5ec5fffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5ec5fff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5ec5ffe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nptc2m6                        0x0000561115c56141 <unavailable> + 8513\n5    libc.so.6                          0x00002b5ec64f4460 __libc_start_main + 245\n6    tmp1nptc2m6                        0x0000561115c55259 <unavailable> + 4697\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpj799qu63/tmpj799qu63.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b011e4d1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b011e1c8561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b011e1c8286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b011e1c813c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b011e1c7bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpj799qu63                        0x00005561ca1ec577 <unavailable> + 9591\n6    tmpj799qu63                        0x00005561ca1ec203 <unavailable> + 8707\n7    libc.so.6                          0x00002b011e6bd460 __libc_start_main + 245\n8    tmpj799qu63                        0x00005561ca1eb489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp1729e9ic/tmp1729e9ic.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6556335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b655602c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b655602c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b655602c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b655602bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp1729e9ic                        0x00005605c82f33cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b6556014820 Collection.map<A>(_:) + 426\n7    tmp1729e9ic                        0x00005605c82f326f <unavailable> + 8815\n8    tmp1729e9ic                        0x00005605c82f3093 <unavailable> + 8339\n9    libc.so.6                          0x00002b6556521460 __libc_start_main + 245\n10   tmp1729e9ic                        0x00005605c82f2319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map{Int($0)!}.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9zz6ra2c/tmp9zz6ra2c.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b10fb260c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b10faf57561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b10faf57286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b10faf5713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b10faf56bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp9zz6ra2c                        0x00005642cdcae3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b10faf3f820 Collection.map<A>(_:) + 426\n7    tmp9zz6ra2c                        0x00005642cdcae267 <unavailable> + 8807\n8    tmp9zz6ra2c                        0x00005642cdcae093 <unavailable> + 8339\n9    libc.so.6                          0x00002b10fb44c460 __libc_start_main + 245\n10   tmp9zz6ra2c                        0x00005642cdcad319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpbrjtorwn/tmpbrjtorwn.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0d7c28c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0d791f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae0d791f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae0d791f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae0d791ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpbrjtorwn                        0x0000559b8e4165a6 <unavailable> + 9638\n6    tmpbrjtorwn                        0x0000559b8e416233 <unavailable> + 8755\n7    libc.so.6                          0x00002ae0d7e14460 __libc_start_main + 245\n8    tmpbrjtorwn                        0x0000559b8e4154b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp0sh_4ex9/tmp0sh_4ex9.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b536fb9ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b536f895561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b536f895286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b536f89513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b536f894bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp0sh_4ex9                        0x000055b0fe2555a6 <unavailable> + 9638\n6    tmp0sh_4ex9                        0x000055b0fe255233 <unavailable> + 8755\n7    libc.so.6                          0x00002b536fd8a460 __libc_start_main + 245\n8    tmp0sh_4ex9                        0x000055b0fe2544b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmppb50bmvd/tmppb50bmvd.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad1677bec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad1674b5561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad1674b5286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad1674b513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad1674b4bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmppb50bmvd                        0x00005650375a1532 <unavailable> + 9522\n6    tmppb50bmvd                        0x00005650375a11b3 <unavailable> + 8627\n7    libc.so.6                          0x00002ad1679aa460 __libc_start_main + 245\n8    tmppb50bmvd                        0x00005650375a0439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpqf7g89et/tmpqf7g89et.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b0999bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b09692561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b4b09692286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b4b0969213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b4b09691bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqf7g89et                        0x000055cdb1d3f46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b4b0967a820 Collection.map<A>(_:) + 426\n7    tmpqf7g89et                        0x000055cdb1d3f2ff <unavailable> + 8959\n8    tmpqf7g89et                        0x000055cdb1d3f123 <unavailable> + 8483\n9    libc.so.6                          0x00002b4b09b87460 __libc_start_main + 245\n10   tmpqf7g89et                        0x000055cdb1d3e3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp1729e9ic/tmp1729e9ic.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6556335c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b655602c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b655602c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b655602c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b655602bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp1729e9ic                        0x00005605c82f33cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b6556014820 Collection.map<A>(_:) + 426\n7    tmp1729e9ic                        0x00005605c82f326f <unavailable> + 8815\n8    tmp1729e9ic                        0x00005605c82f3093 <unavailable> + 8339\n9    libc.so.6                          0x00002b6556521460 __libc_start_main + 245\n10   tmp1729e9ic                        0x00005605c82f2319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpndyovz4a/tmpndyovz4a.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f620a8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f61d9f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b0f61d9f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b0f61d9f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b0f61d9ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpndyovz4a                        0x00005582c09445a6 <unavailable> + 9638\n6    tmpndyovz4a                        0x00005582c0944233 <unavailable> + 8755\n7    libc.so.6                          0x00002b0f62294460 __libc_start_main + 245\n8    tmpndyovz4a                        0x00005582c09434b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpa13mxl9x/tmpa13mxl9x.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8dfc53c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8df94a561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac8df94a286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac8df94a13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac8df949bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpa13mxl9x                        0x00005586eb9153cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002ac8df932820 Collection.map<A>(_:) + 426\n7    tmpa13mxl9x                        0x00005586eb91526f <unavailable> + 8815\n8    tmpa13mxl9x                        0x00005586eb915093 <unavailable> + 8339\n9    libc.so.6                          0x00002ac8dfe3f460 __libc_start_main + 245\n10   tmpa13mxl9x                        0x00005586eb914319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmppb50bmvd/tmppb50bmvd.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad1677bec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad1674b5561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad1674b5286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad1674b513c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad1674b4bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmppb50bmvd                        0x00005650375a1532 <unavailable> + 9522\n6    tmppb50bmvd                        0x00005650375a11b3 <unavailable> + 8627\n7    libc.so.6                          0x00002ad1679aa460 __libc_start_main + 245\n8    tmppb50bmvd                        0x00005650375a0439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.compactMap { Int($0) }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510071,
      "stdout": "",
      "stderr": "tmp1nptc2m6/tmp1nptc2m6.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5ec6308c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5ec5fffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5ec5fff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5ec5ffe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nptc2m6                        0x0000561115c56141 <unavailable> + 8513\n5    libc.so.6                          0x00002b5ec64f4460 __libc_start_main + 245\n6    tmp1nptc2m6                        0x0000561115c55259 <unavailable> + 4697\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp73o78rga/tmp73o78rga.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0b9a080c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0b99d77561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b0b99d77286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b0b99d7713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b0b99d76bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp73o78rga                        0x000055f35133a5a6 <unavailable> + 9638\n6    tmp73o78rga                        0x000055f35133a233 <unavailable> + 8755\n7    libc.so.6                          0x00002b0b9a26c460 __libc_start_main + 245\n8    tmp73o78rga                        0x000055f3513394b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp78m17tyj/tmp78m17tyj.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade16b12c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade16809561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade16809286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade1680913c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade16808bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp78m17tyj                        0x000055b0959f53bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002ade167f1820 Collection.map<A>(_:) + 426\n7    tmp78m17tyj                        0x000055b0959f5267 <unavailable> + 8807\n8    tmp78m17tyj                        0x000055b0959f5093 <unavailable> + 8339\n9    libc.so.6                          0x00002ade16cfe460 __libc_start_main + 245\n10   tmp78m17tyj                        0x000055b0959f4319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpndyovz4a/tmpndyovz4a.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f620a8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f61d9f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b0f61d9f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b0f61d9f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b0f61d9ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpndyovz4a                        0x00005582c09445a6 <unavailable> + 9638\n6    tmpndyovz4a                        0x00005582c0944233 <unavailable> + 8755\n7    libc.so.6                          0x00002b0f62294460 __libc_start_main + 245\n8    tmpndyovz4a                        0x00005582c09434b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmplrmn5wit/tmplrmn5wit.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae576b8cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae576883561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae576883286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae57688313c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae576882bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmplrmn5wit                        0x0000557268ce55eb <unavailable> + 9707\n6    tmplrmn5wit                        0x0000557268ce5283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae576d78460 __libc_start_main + 245\n8    tmplrmn5wit                        0x0000557268ce4509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
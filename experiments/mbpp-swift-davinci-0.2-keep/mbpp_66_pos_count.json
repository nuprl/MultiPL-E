{
  "name": "mbpp_66_pos_count",
  "language": "swift",
  "prompt": "\n/// Write a python function to count the number of positive numbers in a list.\nfunc pos_count(list: [Int]) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_66_pos_count.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pos_count(list: [1, -2, 3, -4]) == 2)\nassert(pos_count(list: [3, 4, 5, -1]) == 3)\nassert(pos_count(list: [1, 2, 3, 4]) == 4)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var count = 0\n    for number in list {\n        if number > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    return list.filter { $0 > 0 }.count",
    "    var count = 0\n    for i in list {\n        if i > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    return list.filter { $0 > 0 }.count",
    "    var count = 0\n    for i in list {\n        if i > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for num in list {\n        if num > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    return list.filter { $0 > 0 }.count",
    "    var count = 0\n    for item in list {\n        if item > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    return list.filter { $0 > 0 }.count",
    "    var count = 0\n    for num in list {\n        if num > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for num in list {\n        if num > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for num in list {\n        if num > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in list {\n        if i > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for num in list {\n        if num > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    return list.filter { $0 > 0 }.count",
    "    var count = 0\n    for i in list {\n        if i > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in list {\n        if i > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in list {\n        if i > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in list {\n        if i > 0 {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in list {\n        if i > 0 {\n            count += 1\n        }\n    }\n    return count"
  ]
}
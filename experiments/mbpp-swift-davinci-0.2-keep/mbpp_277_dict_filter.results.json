{
  "name": "mbpp_277_dict_filter",
  "language": "swift",
  "prompt": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_277_dict_filter.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var new_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            new_dict[key] = value\n        }\n    }\n    return new_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var new_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            new_dict[key] = value\n        }\n    }\n    return new_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var dict_filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            dict_filtered[key] = value\n        }\n    }\n    return dict_filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1666122639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filtered[key] = value\n        }\n    }\n    return filtered\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var result: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            result[key] = value\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1666122637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict: [String : Int] = [:]\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filteredDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filteredDict[key] = value\n        }\n    }\n    return filteredDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var newDict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            newDict[key] = value\n        }\n    }\n    return newDict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.\nfunc dict_filter(dict: [String : Int], n: Int) -> [String : Int] {\n    var filtered_dict = [String : Int]()\n    for (key, value) in dict {\n        if value >= n {\n            filtered_dict[key] = value\n        }\n    }\n    return filtered_dict\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 170) == [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 180) == [\"Alden Cantrell\" : 180, \"Pierre Cox\" : 190])\nassert(dict_filter(dict: [\"Cierra Vega\" : 175, \"Alden Cantrell\" : 180, \"Kierra Gentry\" : 165, \"Pierre Cox\" : 190], n: 190) == [\"Pierre Cox\" : 190])",
      "timestamp": 1665510113,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
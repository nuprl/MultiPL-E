{
  "name": "mbpp_479_first_Digit",
  "language": "swift",
  "prompt": "\n/// Write a python function to find the first digit of a given number.\nfunc first_Digit(n: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(first_Digit(n: 123) == 1)\nassert(first_Digit(n: 456) == 4)\nassert(first_Digit(n: 12) == 1)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var num = n\n    while num >= 10 {\n        num /= 10\n    }\n    return num",
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var num = n\n    while num >= 10 {\n        num /= 10\n    }\n    return num",
    "    return Int(String(n).first!)!",
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var num = n\n    while num >= 10 {\n        num /= 10\n    }\n    return num",
    "    return Int(String(n).first!)!",
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var num = n\n    while num >= 10 {\n        num /= 10\n    }\n    return num",
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var num = n\n    while num > 9 {\n        num /= 10\n    }\n    return num",
    "    var n = n\n    while n > 9 {\n        n /= 10\n    }\n    return n",
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var n = n\n    while n > 9 {\n        n /= 10\n    }\n    return n",
    "    var n = n\n    while n >= 10 {\n        n /= 10\n    }\n    return n",
    "    var num = n\n    while num > 9 {\n        num /= 10\n    }\n    return num"
  ]
}
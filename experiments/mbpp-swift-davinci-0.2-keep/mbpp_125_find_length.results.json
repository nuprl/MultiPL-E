{
  "name": "mbpp_125_find_length",
  "language": "swift",
  "prompt": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, string.distance(from: string.startIndex, to: char))\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "/tmp/tmph8p_ge8c.swift:13:87: error: cannot convert value of type 'Character' to expected argument type 'String.Index'\n            max_length = max(max_length, string.distance(from: string.startIndex, to: char))\n                                                                                      ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for i in 0..<string.count {\n        if string[i] == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for i in (0..<string.count).reversed() {\n        if string[i] == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "/tmp/tmpa64ea695.swift:8:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n/tmp/tmpa64ea695.swift:20:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var currentLength = 0\n    var countZero = 0\n    var countOne = 0\n    \n    for char in string {\n        if char == \"0\" {\n            countZero += 1\n            currentLength += 1\n        } else {\n            countOne += 1\n            currentLength -= 1\n        }\n        \n        if currentLength < 0 {\n            currentLength = 0\n            countZero = 0\n            countOne = 0\n        }\n        \n        if countZero == countOne {\n            maxLength = max(maxLength, currentLength)\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpjfruhv6p/tmpjfruhv6p.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6a1f958c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6a1f64fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6a1f64f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6a1f64e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjfruhv6p                        0x0000561c4136b4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b6a1fb44460 __libc_start_main + 245\n6    tmpjfruhv6p                        0x0000561c4136b129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpwmf5jukm/tmpwmf5jukm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b407104ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4070d41b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4070d41988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4070d407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwmf5jukm                        0x00005626bce384a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b4071236460 __libc_start_main + 245\n6    tmpwmf5jukm                        0x00005626bce38129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var zeros = 0\n    var ones = 0\n    var max_length = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        if zeros == ones {\n            max_length = max(max_length, zeros + ones)\n        } else if zeros > ones {\n            zeros = 0\n            ones = 0\n        }\n    }\n    zeros = 0\n    ones = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        if zeros == ones {\n            max_length = max(max_length, zeros + ones)\n        } else if zeros < ones {\n            zeros = 0\n            ones = 0\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpw3wy7h7j/tmpw3wy7h7j.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1403b05c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b14037fcb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b14037fc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b14037fb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw3wy7h7j                        0x00005602816b3714 <unavailable> + 5908\n5    libc.so.6                          0x00002b1403cf1460 __libc_start_main + 245\n6    tmpw3wy7h7j                        0x00005602816b3399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count && j < string.count {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n        }\n        if count < 0 {\n            i = j + 1\n            j = i\n            count = 0\n        } else {\n            j += 1\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "/tmp/tmpgguv84ng.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpwmf5jukm/tmpwmf5jukm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b407104ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4070d41b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4070d41988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4070d407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwmf5jukm                        0x00005626bce384a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b4071236460 __libc_start_main + 245\n6    tmpwmf5jukm                        0x00005626bce38129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count && j < string.count {\n        if string[string.index(string.startIndex, offsetBy: j)] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n            j += 1\n        } else if count < 0 {\n            i = j + 1\n            j = i\n            count = 0\n        } else {\n            j += 1\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpfd5hibmq/tmpfd5hibmq.swift:41: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5e7c4fdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5e7c1f4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5e7c1f4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5e7c1f37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfd5hibmq                        0x000055b0dae6e554 <unavailable> + 5460\n5    libc.so.6                          0x00002b5e7c6e9460 __libc_start_main + 245\n6    tmpfd5hibmq                        0x000055b0dae6e1d9 <unavailable> + 4569\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero * 2)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero * 2)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmph1ygttl8/tmph1ygttl8.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b58d82efc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b58d7fe6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b58d7fe6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b58d7fe57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph1ygttl8                        0x0000562f70858714 <unavailable> + 5908\n5    libc.so.6                          0x00002b58d84db460 __libc_start_main + 245\n6    tmph1ygttl8                        0x0000562f70858399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    \n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpfihjfuwa/tmpfihjfuwa.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8bf5eac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8bf2e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac8bf2e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac8bf2e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfihjfuwa                        0x000056060992a714 <unavailable> + 5908\n5    libc.so.6                          0x00002ac8bf7d6460 __libc_start_main + 245\n6    tmpfihjfuwa                        0x000056060992a399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpz7ec7x_c/tmpz7ec7x_c.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b65b49a4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b65b469bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b65b469b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b65b469a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7ec7x_c                        0x000055ff82bac714 <unavailable> + 5908\n5    libc.so.6                          0x00002b65b4b90460 __libc_start_main + 245\n6    tmpz7ec7x_c                        0x000055ff82bac399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        maxLength = max(maxLength, count)\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpz7ec7x_c/tmpz7ec7x_c.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b65b49a4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b65b469bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b65b469b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b65b469a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7ec7x_c                        0x000055ff82bac714 <unavailable> + 5908\n5    libc.so.6                          0x00002b65b4b90460 __libc_start_main + 245\n6    tmpz7ec7x_c                        0x000055ff82bac399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpz7ec7x_c/tmpz7ec7x_c.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b65b49a4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b65b469bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b65b469b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b65b469a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7ec7x_c                        0x000055ff82bac714 <unavailable> + 5908\n5    libc.so.6                          0x00002b65b4b90460 __libc_start_main + 245\n6    tmpz7ec7x_c                        0x000055ff82bac399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, string.distance(from: string.startIndex, to: char))\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpudgsfje2.swift:13:87: error: cannot convert value of type 'Character' to expected argument type 'String.Index'\n            max_length = max(max_length, string.distance(from: string.startIndex, to: char))\n                                                                                      ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, string.distance(from: string.startIndex, to: char))\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "/tmp/tmph8p_ge8c.swift:13:87: error: cannot convert value of type 'Character' to expected argument type 'String.Index'\n            max_length = max(max_length, string.distance(from: string.startIndex, to: char))\n                                                                                      ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, string.count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpgcct_pyl/tmpgcct_pyl.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7487daac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7487aa1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7487aa1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7487aa07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgcct_pyl                        0x000055f056a6c4f4 <unavailable> + 5364\n5    libc.so.6                          0x00002b7487f96460 __libc_start_main + 245\n6    tmpgcct_pyl                        0x000055f056a6c179 <unavailable> + 4473\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    var zero = 0\n    var one = 0\n    for char in string {\n        if char == \"0\" {\n            zero += 1\n        } else {\n            one += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero == one {\n                max = max > count ? max : count\n            }\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmph_6an_n0/tmph_6an_n0.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8642de2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8642ad9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8642ad9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8642ad87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph_6an_n0                        0x0000563c1ba3b4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b8642fce460 __libc_start_main + 245\n6    tmph_6an_n0                        0x0000563c1ba3b129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count > max_length {\n            max_length = count\n        }\n        if zero_count == one_count {\n            count = 0\n            zero_count = 0\n            one_count = 0\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpx9rg8h_y/tmpx9rg8h_y.swift:40: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4e5e714c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4e5e40bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4e5e40b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4e5e40a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx9rg8h_y                        0x000055838a156414 <unavailable> + 5140\n5    libc.so.6                          0x00002b4e5e900460 __libc_start_main + 245\n6    tmpx9rg8h_y                        0x000055838a156099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpaucxl0q8/tmpaucxl0q8.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b74c0ab3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b74c07aab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b74c07aa988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b74c07a97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpaucxl0q8                        0x000056421105d414 <unavailable> + 5140\n5    libc.so.6                          0x00002b74c0c9f460 __libc_start_main + 245\n6    tmpaucxl0q8                        0x000056421105d099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpz7ec7x_c/tmpz7ec7x_c.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b65b49a4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b65b469bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b65b469b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b65b469a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7ec7x_c                        0x000055ff82bac714 <unavailable> + 5908\n5    libc.so.6                          0x00002b65b4b90460 __libc_start_main + 245\n6    tmpz7ec7x_c                        0x000055ff82bac399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var zeros = 0\n    var ones = 0\n    var max_diff = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        max_diff = max(max_diff, abs(zeros - ones))\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpvenff2zx/tmpvenff2zx.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4ee04dcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ee01d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4ee01d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4ee01d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvenff2zx                        0x000055be47554554 <unavailable> + 5460\n5    libc.so.6                          0x00002b4ee06c8460 __libc_start_main + 245\n6    tmpvenff2zx                        0x000055be475541d9 <unavailable> + 4569\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        max = max > count ? max : count\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpacdzifcq/tmpacdzifcq.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b3858ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b38281b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4b38281988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4b382807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpacdzifcq                        0x0000555793ac9414 <unavailable> + 5140\n5    libc.so.6                          0x00002b4b38776460 __libc_start_main + 245\n6    tmpacdzifcq                        0x0000555793ac9099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_len = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if zero_count == one_count {\n            max_len = max(max_len, count)\n        }\n    }\n    count = 0\n    zero_count = 0\n    one_count = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if zero_count == one_count {\n            max_len = max(max_len, count)\n        }\n    }\n    return max_len\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpy3fl1fv9/tmpy3fl1fv9.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae2b286dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae2b2564b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae2b2564988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae2b25637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy3fl1fv9                        0x00005559a519a714 <unavailable> + 5908\n5    libc.so.6                          0x00002ae2b2a59460 __libc_start_main + 245\n6    tmpy3fl1fv9                        0x00005559a519a399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        } else if zero_count > one_count {\n            zero_count = 0\n            one_count = 0\n        }\n    }\n    zero_count = 0\n    one_count = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        } else if zero_count > one_count {\n            zero_count = 0\n            one_count = 0\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmp_5sf1ivi/tmp_5sf1ivi.swift:54: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b960f959c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b960f650b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b960f650988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b960f64f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_5sf1ivi                        0x00005618a5ab2714 <unavailable> + 5908\n5    libc.so.6                          0x00002b960fb45460 __libc_start_main + 245\n6    tmp_5sf1ivi                        0x00005618a5ab2399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"1\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        maxLength = max(maxLength, count)\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpkiv8d625/tmpkiv8d625.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc08429c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc08120b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc08120988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc0811f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkiv8d625                        0x000055c83ab324a4 <unavailable> + 5284\n5    libc.so.6                          0x00002afc08615460 __libc_start_main + 245\n6    tmpkiv8d625                        0x000055c83ab32129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0 + count_1)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9ffv47ru/tmp9ffv47ru.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b85a4732c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b85a4429b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b85a4429988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b85a44287b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9ffv47ru                        0x000056066f9d3714 <unavailable> + 5908\n5    libc.so.6                          0x00002b85a491e460 __libc_start_main + 245\n6    tmp9ffv47ru                        0x000056066f9d3399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpwmf5jukm/tmpwmf5jukm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b407104ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4070d41b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4070d41988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4070d407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwmf5jukm                        0x00005626bce384a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b4071236460 __libc_start_main + 245\n6    tmpwmf5jukm                        0x00005626bce38129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        count += 1\n        \n        if zeroCount == oneCount {\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    zeroCount = 0\n    oneCount = 0\n    count = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        count += 1\n        \n        if zeroCount == oneCount {\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcpty0qjo/tmpcpty0qjo.swift:57: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b41ed347c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b41ed03eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b41ed03e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b41ed03d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcpty0qjo                        0x000055856059d714 <unavailable> + 5908\n5    libc.so.6                          0x00002b41ed533460 __libc_start_main + 245\n6    tmpcpty0qjo                        0x000055856059d399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    \n    var maxLength = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount * 2)\n        } else if zeroCount > oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    \n    zeroCount = 0\n    oneCount = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount * 2)\n        } else if zeroCount < oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpl4v3x4ha/tmpl4v3x4ha.swift:58: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7affa2dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7aff724b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7aff724988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7aff7237b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl4v3x4ha                        0x0000561add62f714 <unavailable> + 5908\n5    libc.so.6                          0x00002b7affc19460 __libc_start_main + 245\n6    tmpl4v3x4ha                        0x0000561add62f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, string.distance(from: string.startIndex, to: char))\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmp80ukl8pe.swift:13:85: error: cannot convert value of type 'Character' to expected argument type 'String.Index'\n            maxLength = max(maxLength, string.distance(from: string.startIndex, to: char))\n                                                                                    ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        \n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0 + count_1)\n        }\n    }\n    \n    count_0 = 0\n    count_1 = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        \n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0 + count_1)\n        }\n    }\n    \n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpk2g5dtez/tmpk2g5dtez.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba78b8d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba78b5ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba78b5cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba78b5cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk2g5dtez                        0x0000560eb93b4714 <unavailable> + 5908\n5    libc.so.6                          0x00002ba78bac1460 __libc_start_main + 245\n6    tmpk2g5dtez                        0x0000560eb93b4399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"1\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        maxLength = max(maxLength, count)\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpkiv8d625/tmpkiv8d625.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc08429c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc08120b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc08120988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc0811f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkiv8d625                        0x000055c83ab324a4 <unavailable> + 5284\n5    libc.so.6                          0x00002afc08615460 __libc_start_main + 245\n6    tmpkiv8d625                        0x000055c83ab32129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count && j < string.count {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n        }\n        if count < 0 {\n            i = j + 1\n            j = i\n            count = 0\n        } else {\n            j += 1\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "/tmp/tmpgguv84ng.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeros = 0\n    var ones = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeros == ones {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpw0n9byyv/tmpw0n9byyv.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac0373c7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac0370beb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac0370be988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac0370bd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw0n9byyv                        0x000055f1e813e534 <unavailable> + 5428\n5    libc.so.6                          0x00002ac0375b3460 __libc_start_main + 245\n6    tmpw0n9byyv                        0x000055f1e813e1b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpwmf5jukm/tmpwmf5jukm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b407104ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4070d41b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4070d41988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4070d407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwmf5jukm                        0x00005626bce384a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b4071236460 __libc_start_main + 245\n6    tmpwmf5jukm                        0x00005626bce38129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount * 2)\n        } else if zeroCount > oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    zeroCount = 0\n    oneCount = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount * 2)\n        } else if zeroCount < oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpvnerk3mx/tmpvnerk3mx.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5310dd8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5310acfb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5310acf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5310ace7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnerk3mx                        0x0000559c39925714 <unavailable> + 5908\n5    libc.so.6                          0x00002b5310fc4460 __libc_start_main + 245\n6    tmpvnerk3mx                        0x0000559c39925399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, i - j + 1)\n        }\n        if count < 0 {\n            i = j + 1\n            j = i\n            count = 0\n        } else {\n            i += 1\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp5pe393zm.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero * 2)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero * 2)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmph1ygttl8/tmph1ygttl8.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b58d82efc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b58d7fe6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b58d7fe6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b58d7fe57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph1ygttl8                        0x0000562f70858714 <unavailable> + 5908\n5    libc.so.6                          0x00002b58d84db460 __libc_start_main + 245\n6    tmph1ygttl8                        0x0000562f70858399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        \n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0)\n        }\n    }\n    \n    count_0 = 0\n    count_1 = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        \n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0)\n        }\n    }\n    \n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmp2be60u3c/tmp2be60u3c.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5c9e230c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5c9df27b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5c9df27988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5c9df267b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2be60u3c                        0x0000562d09f52714 <unavailable> + 5908\n5    libc.so.6                          0x00002b5c9e41c460 __libc_start_main + 245\n6    tmp2be60u3c                        0x0000562d09f52399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        let diff = abs(count_zero - count_one)\n        if diff > max_diff {\n            max_diff = diff\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpztihq1ma/tmpztihq1ma.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1bcd301c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1bccff8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1bccff8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1bccff77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpztihq1ma                        0x0000558ea360c504 <unavailable> + 5380\n5    libc.so.6                          0x00002b1bcd4ed460 __libc_start_main + 245\n6    tmpztihq1ma                        0x0000558ea360c189 <unavailable> + 4489\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero * 2)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero * 2)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpdfy2owbk/tmpdfy2owbk.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b179980bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1799502b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1799502988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17995017b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdfy2owbk                        0x0000556de1620714 <unavailable> + 5908\n5    libc.so.6                          0x00002b17999f7460 __libc_start_main + 245\n6    tmpdfy2owbk                        0x0000556de1620399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpulerjmpm/tmpulerjmpm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae536d9ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae536a91b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae536a91988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae536a907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpulerjmpm                        0x000055664783d4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002ae536f86460 __libc_start_main + 245\n6    tmpulerjmpm                        0x000055664783d129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        maxLength = max(maxLength, count)\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount * 2)\n        } else if zeroCount > oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    zeroCount = 0\n    oneCount = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        if zeroCount == oneCount {\n            maxLength = max(maxLength, zeroCount * 2)\n        } else if zeroCount < oneCount {\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpvnerk3mx/tmpvnerk3mx.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5310dd8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5310acfb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5310acf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5310ace7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnerk3mx                        0x0000559c39925714 <unavailable> + 5908\n5    libc.so.6                          0x00002b5310fc4460 __libc_start_main + 245\n6    tmpvnerk3mx                        0x0000559c39925399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        maxLength = max(maxLength, count)\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zeros = 0\n    var ones = 0\n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if zeros == ones {\n            max_length = max(max_length, count)\n        }\n    }\n    count = 0\n    zeros = 0\n    ones = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        count += 1\n        if zeros == ones {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpc0q_7g3_/tmpc0q_7g3_.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b53a1ebdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b53a1bb4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b53a1bb4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b53a1bb37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc0q_7g3_                        0x0000559cbd686714 <unavailable> + 5908\n5    libc.so.6                          0x00002b53a20a9460 __libc_start_main + 245\n6    tmpc0q_7g3_                        0x0000559cbd686399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var count = 0\n    var maxCount = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > maxCount {\n            maxCount = count\n        }\n    }\n    return maxCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    zero_count = 0\n    one_count = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp9dtwoaz6/tmp9dtwoaz6.swift:48: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13d4bf7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13d48eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13d48ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13d48ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9dtwoaz6                        0x00005636dbb85714 <unavailable> + 5908\n5    libc.so.6                          0x00002b13d4de3460 __libc_start_main + 245\n6    tmp9dtwoaz6                        0x00005636dbb85399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        max_length = max(max_length, count)\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if zero_count == one_count {\n            max_length = max(max_length, count)\n        }\n    }\n    count = 0\n    zero_count = 0\n    one_count = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if zero_count == one_count {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmp_ksn7wik/tmp_ksn7wik.swift:49: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af6d2ee4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af6d2bdbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af6d2bdb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af6d2bda7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ksn7wik                        0x000055f50f2c0714 <unavailable> + 5908\n5    libc.so.6                          0x00002af6d30d0460 __libc_start_main + 245\n6    tmp_ksn7wik                        0x000055f50f2c0399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            let diff = abs(zero_count - one_count)\n            if diff > max_length {\n                max_length = diff\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpts0d7hpi/tmpts0d7hpi.swift:38: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae6664acc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae6661a3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae6661a3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae6661a27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpts0d7hpi                        0x000055586ea5e594 <unavailable> + 5524\n5    libc.so.6                          0x00002ae666698460 __libc_start_main + 245\n6    tmpts0d7hpi                        0x000055586ea5e219 <unavailable> + 4633\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = string.count - 1\n    while i < j {\n        if string[string.index(string.startIndex, offsetBy: i)] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n            i += 1\n        } else if count > max_length {\n            max_length = count\n            j -= 1\n        } else {\n            j -= 1\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpgkafpq3t/tmpgkafpq3t.swift:40: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b97802f6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b977ffedb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b977ffed988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b977ffec7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgkafpq3t                        0x000055704f3174c4 <unavailable> + 5316\n5    libc.so.6                          0x00002b97804e2460 __libc_start_main + 245\n6    tmpgkafpq3t                        0x000055704f317149 <unavailable> + 4425\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count && j < string.count {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n        }\n        if count < 0 {\n            i = j + 1\n            count = 0\n        }\n        j += 1\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpxhqpc2q7.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for i in 0..<string.count {\n        if string[i] == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, i + 1)\n        }\n        if count < 0 {\n            count = 0\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpy51793gt.swift:7:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        max = max > count ? max : count\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while j < string.count {\n        if string[j] == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n        }\n        if count < 0 {\n            i = j + 1\n            count = 0\n        }\n        j += 1\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmpt92xnqw1.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[j] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    \n    zero_count = 0\n    one_count = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpy_gya1nm/tmpy_gya1nm.swift:54: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2157418c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b215710fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b215710f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b215710e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy_gya1nm                        0x0000558ae26b6714 <unavailable> + 5908\n5    libc.so.6                          0x00002b2157604460 __libc_start_main + 245\n6    tmpy_gya1nm                        0x0000558ae26b6399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        max_length = max(max_length, count)\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpmp8hl5q7/tmpmp8hl5q7.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac0a5bb9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac0a58b0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac0a58b0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac0a58af7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmp8hl5q7                        0x000055bf488084a4 <unavailable> + 5284\n5    libc.so.6                          0x00002ac0a5da5460 __libc_start_main + 245\n6    tmpmp8hl5q7                        0x000055bf48808129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero + count_one)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpz7ec7x_c/tmpz7ec7x_c.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b65b49a4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b65b469bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b65b469b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b65b469a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7ec7x_c                        0x000055ff82bac714 <unavailable> + 5908\n5    libc.so.6                          0x00002b65b4b90460 __libc_start_main + 245\n6    tmpz7ec7x_c                        0x000055ff82bac399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpaucxl0q8/tmpaucxl0q8.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b74c0ab3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b74c07aab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b74c07aa988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b74c07a97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpaucxl0q8                        0x000056421105d414 <unavailable> + 5140\n5    libc.so.6                          0x00002b74c0c9f460 __libc_start_main + 245\n6    tmpaucxl0q8                        0x000056421105d099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    \n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    \n    zero_count = 0\n    one_count = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        if zero_count == one_count {\n            count = zero_count + one_count\n            max_length = max(max_length, count)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpdeny1mon/tmpdeny1mon.swift:55: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba3b619ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba3b5e95b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba3b5e95988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba3b5e947b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdeny1mon                        0x000055772b08e714 <unavailable> + 5908\n5    libc.so.6                          0x00002ba3b638a460 __libc_start_main + 245\n6    tmpdeny1mon                        0x000055772b08e399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpulerjmpm/tmpulerjmpm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae536d9ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae536a91b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae536a91988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae536a907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpulerjmpm                        0x000055664783d4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002ae536f86460 __libc_start_main + 245\n6    tmpulerjmpm                        0x000055664783d129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count > maxLength {\n            maxLength = count\n        }\n        if zeroCount == oneCount {\n            count = 0\n            zeroCount = 0\n            oneCount = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpfljjyb8x/tmpfljjyb8x.swift:40: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c7746cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c77163b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c77163988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c771627b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfljjyb8x                        0x0000563a13247414 <unavailable> + 5140\n5    libc.so.6                          0x00002b9c77658460 __libc_start_main + 245\n6    tmpfljjyb8x                        0x0000563a13247099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmp58c0tp7g/tmp58c0tp7g.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a9bd46c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a9ba3db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a9ba3d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a9ba3c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp58c0tp7g                        0x000055d6074814a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b1a9bf32460 __libc_start_main + 245\n6    tmp58c0tp7g                        0x000055d607481129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var i = 0\n    var j = 0\n    while i < string.count && j < string.count {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, j - i + 1)\n        }\n        if count < 0 {\n            i = j + 1\n            count = 0\n        }\n        j += 1\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "/tmp/tmpxhqpc2q7.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp156euhzl/tmp156euhzl.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3ea8542c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3ea8239b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3ea8239988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3ea82387b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp156euhzl                        0x0000563b403e54a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b3ea872e460 __libc_start_main + 245\n6    tmp156euhzl                        0x0000563b403e5129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_len = 0\n    var count_zero = 0\n    var count_one = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_len = max(max_len, count_zero + count_one)\n        }\n    }\n    \n    count_zero = 0\n    count_one = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        \n        if count_zero == count_one {\n            max_len = max(max_len, count_zero + count_one)\n        }\n    }\n    \n    return max_len\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmp36lis2i9/tmp36lis2i9.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0a2d9dec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0a2d6d5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0a2d6d5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0a2d6d47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp36lis2i9                        0x0000561c7906a714 <unavailable> + 5908\n5    libc.so.6                          0x00002b0a2dbca460 __libc_start_main + 245\n6    tmp36lis2i9                        0x0000561c7906a399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpeqfj91un/tmpeqfj91un.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b156ee5bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b156eb52b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b156eb52988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b156eb517b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpeqfj91un                        0x000055e4be1ce714 <unavailable> + 5908\n5    libc.so.6                          0x00002b156f047460 __libc_start_main + 245\n6    tmpeqfj91un                        0x000055e4be1ce399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeros = 0\n    var ones = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        \n        if zeros == ones {\n            count = zeros + ones\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    zeros = 0\n    ones = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zeros += 1\n        } else {\n            ones += 1\n        }\n        \n        if zeros == ones {\n            count = zeros + ones\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmp2ibb14jh/tmp2ibb14jh.swift:54: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afab925fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afab8f56b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afab8f56988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afab8f557b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2ibb14jh                        0x0000557575cc2714 <unavailable> + 5908\n5    libc.so.6                          0x00002afab944b460 __libc_start_main + 245\n6    tmp2ibb14jh                        0x0000557575cc2399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var i = 0\n    var j = string.count - 1\n    while i < j {\n        if string[i] == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, j - i + 1)\n        }\n        i += 1\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "/tmp/tmp4slkhnbe.swift:9:12: error: 'subscript(_:)' is unavailable: cannot subscript String with an Int, use a String.Index instead.\n        if string[i] == \"0\" {\n           ^~~~~~~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i: Int) -> Character { get }\n           ^\n/tmp/tmp4slkhnbe.swift:7:9: warning: variable 'j' was never mutated; consider changing to 'let' constant\n    var j = string.count - 1\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var map = [Int: Int]()\n    map[0] = -1\n    for i in 0..<string.count {\n        let index = string.index(string.startIndex, offsetBy: i)\n        let char = string[index]\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if let lastIndex = map[count] {\n            maxLength = max(maxLength, i - lastIndex)\n        } else {\n            map[count] = i\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpk0i9dbgp/tmpk0i9dbgp.swift:38: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6c1cc62c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6c1c959b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6c1c959988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6c1c9587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0i9dbgp                        0x000055e72a3df804 <unavailable> + 6148\n5    libc.so.6                          0x00002b6c1ce4e460 __libc_start_main + 245\n6    tmpk0i9dbgp                        0x000055e72a3df489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpwmf5jukm/tmpwmf5jukm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b407104ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4070d41b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4070d41988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4070d407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwmf5jukm                        0x00005626bce384a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b4071236460 __libc_start_main + 245\n6    tmpwmf5jukm                        0x00005626bce38129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count > 1 {\n            if abs(zero_count - one_count) > max_length {\n                max_length = abs(zero_count - one_count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpo2h06bbh/tmpo2h06bbh.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afa2d1e4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afa2cedbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afa2cedb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afa2ceda7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo2h06bbh                        0x0000564906ba2504 <unavailable> + 5380\n5    libc.so.6                          0x00002afa2d3d0460 __libc_start_main + 245\n6    tmpo2h06bbh                        0x0000564906ba2189 <unavailable> + 4489\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zeros = 0\n    var count_ones = 0\n    for char in string {\n        if char == \"0\" {\n            count_zeros += 1\n        } else {\n            count_ones += 1\n        }\n        if count_zeros == count_ones {\n            max_diff = max(max_diff, count_zeros + count_ones)\n        }\n    }\n    count_zeros = 0\n    count_ones = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zeros += 1\n        } else {\n            count_ones += 1\n        }\n        if count_zeros == count_ones {\n            max_diff = max(max_diff, count_zeros + count_ones)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpk7bmfhqm/tmpk7bmfhqm.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b86c7bf0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b86c78e7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b86c78e7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b86c78e67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk7bmfhqm                        0x000055c49d152714 <unavailable> + 5908\n5    libc.so.6                          0x00002b86c7ddc460 __libc_start_main + 245\n6    tmpk7bmfhqm                        0x000055c49d152399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        count = zeroCount - oneCount\n        \n        if count == 0 {\n            maxLength = max(maxLength, zeroCount + oneCount)\n        }\n        \n        if let index = hashMap[count] {\n            maxLength = max(maxLength, zeroCount + oneCount - index)\n        } else {\n            hashMap[count] = zeroCount + oneCount\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "/tmp/tmpgrh0wkxd.swift:22:24: error: cannot find 'hashMap' in scope\n        if let index = hashMap[count] {\n                       ^~~~~~~\n/tmp/tmpgrh0wkxd.swift:25:13: error: cannot find 'hashMap' in scope\n            hashMap[count] = zeroCount + oneCount\n            ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n        if count < 0 {\n            count = 0\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpa6gpzcyb/tmpa6gpzcyb.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47781d0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4777ec7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4777ec7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4777ec67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa6gpzcyb                        0x00005608deb9f4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b47783bc460 __libc_start_main + 245\n6    tmpa6gpzcyb                        0x00005608deb9f129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var count1 = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count1 += 1\n        }\n        if count == count1 {\n            maxLength = max(maxLength, count * 2)\n        } else if count > count1 {\n            count = 0\n            count1 = 0\n        }\n    }\n    count = 0\n    count1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count1 += 1\n        }\n        if count == count1 {\n            maxLength = max(maxLength, count * 2)\n        } else if count > count1 {\n            count = 0\n            count1 = 0\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmptpl24p2t/tmptpl24p2t.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae02908bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae028d82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae028d82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae028d817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptpl24p2t                        0x000056010b980714 <unavailable> + 5908\n5    libc.so.6                          0x00002ae029277460 __libc_start_main + 245\n6    tmptpl24p2t                        0x000056010b980399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpaucxl0q8/tmpaucxl0q8.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b74c0ab3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b74c07aab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b74c07aa988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b74c07a97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpaucxl0q8                        0x000056421105d414 <unavailable> + 5140\n5    libc.so.6                          0x00002b74c0c9f460 __libc_start_main + 245\n6    tmpaucxl0q8                        0x000056421105d099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > max {\n            max = count\n        }\n    }\n    return max\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpaucxl0q8/tmpaucxl0q8.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b74c0ab3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b74c07aab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b74c07aa988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b74c07a97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpaucxl0q8                        0x000056421105d414 <unavailable> + 5140\n5    libc.so.6                          0x00002b74c0c9f460 __libc_start_main + 245\n6    tmpaucxl0q8                        0x000056421105d099 <unavailable> + 4249\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var count = 0\n    var maxCount = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        if count > maxCount {\n            maxCount = count\n        }\n    }\n    return maxCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var count = 0\n    var maxCount = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        maxCount = max(maxCount, count)\n    }\n    return maxCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmp56ri5qx5/tmp56ri5qx5.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4476dbfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4476ab6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4476ab6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4476ab57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp56ri5qx5                        0x00005630a67614a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b4476fab460 __libc_start_main + 245\n6    tmp56ri5qx5                        0x00005630a6761129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    count = 0\n    zeroCount = 0\n    oneCount = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpsmeibx1a/tmpsmeibx1a.swift:53: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b761cbdec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b761c8d5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b761c8d5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b761c8d47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsmeibx1a                        0x000055a0f1ed77a4 <unavailable> + 6052\n5    libc.so.6                          0x00002b761cdca460 __libc_start_main + 245\n6    tmpsmeibx1a                        0x000055a0f1ed7429 <unavailable> + 5161\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpwmf5jukm/tmpwmf5jukm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b407104ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4070d41b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4070d41988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4070d407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwmf5jukm                        0x00005626bce384a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b4071236460 __libc_start_main + 245\n6    tmpwmf5jukm                        0x00005626bce38129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_diff = max(max_diff, count_zero)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp0j5pq6_2/tmp0j5pq6_2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b902c829c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b902c520b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b902c520988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b902c51f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0j5pq6_2                        0x0000563f4119a4a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b902ca15460 __libc_start_main + 245\n6    tmp0j5pq6_2                        0x0000563f4119a129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        count += 1\n        \n        if zero_count == one_count {\n            max_length = max(max_length, count)\n        }\n    }\n    \n    zero_count = 0\n    one_count = 0\n    count = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        \n        count += 1\n        \n        if zero_count == one_count {\n            max_length = max(max_length, count)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmp0d4bs6wl/tmp0d4bs6wl.swift:57: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abae238dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abae2084b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abae2084988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abae20837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0d4bs6wl                        0x0000559d39225714 <unavailable> + 5908\n5    libc.so.6                          0x00002abae2579460 __libc_start_main + 245\n6    tmp0d4bs6wl                        0x0000559d39225399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"1\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count < 0 {\n            count = 0\n        }\n        maxLength = max(maxLength, count)\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpkiv8d625/tmpkiv8d625.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc08429c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc08120b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc08120988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc0811f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkiv8d625                        0x000055c83ab324a4 <unavailable> + 5284\n5    libc.so.6                          0x00002afc08615460 __libc_start_main + 245\n6    tmpkiv8d625                        0x000055c83ab32129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            max_length = max(max_length, count)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpg8aqp8_y/tmpg8aqp8_y.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adb3091bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adb30612b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adb30612988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adb306117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg8aqp8_y                        0x0000556000fa34a4 <unavailable> + 5284\n5    libc.so.6                          0x00002adb30b07460 __libc_start_main + 245\n6    tmpg8aqp8_y                        0x0000556000fa3129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_len = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_len = max(max_len, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_len = max(max_len, count_zero + count_one)\n        }\n    }\n    return max_len\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpvfjx0x6x/tmpvfjx0x6x.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba507f91c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba507c88b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba507c88988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba507c877b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvfjx0x6x                        0x000055fc8432e714 <unavailable> + 5908\n5    libc.so.6                          0x00002ba50817d460 __libc_start_main + 245\n6    tmpvfjx0x6x                        0x000055fc8432e399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    \n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        \n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    \n    count_0 = 0\n    count_1 = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        \n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    \n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpstoluj69/tmpstoluj69.swift:51: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adec2ad5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adec27ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adec27cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adec27cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpstoluj69                        0x000055b6783c9714 <unavailable> + 5908\n5    libc.so.6                          0x00002adec2cc1460 __libc_start_main + 245\n6    tmpstoluj69                        0x000055b6783c9399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpwmf5jukm/tmpwmf5jukm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b407104ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4070d41b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4070d41988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4070d407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwmf5jukm                        0x00005626bce384a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b4071236460 __libc_start_main + 245\n6    tmpwmf5jukm                        0x00005626bce38129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    count_0 = 0\n    count_1 = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_length = max(max_length, count_0 + count_1)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpsa74jkk0/tmpsa74jkk0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd4b349c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd4b040b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd4b040988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd4b03f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsa74jkk0                        0x000055661dd3f714 <unavailable> + 5908\n5    libc.so.6                          0x00002abd4b535460 __libc_start_main + 245\n6    tmpsa74jkk0                        0x000055661dd3f399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count -= 1\n        } else {\n            count += 1\n        }\n        maxLength = max(maxLength, count)\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmphsyr030d/tmphsyr030d.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2794d97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2794a8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2794a8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2794a8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphsyr030d                        0x000055af198374a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b2794f83460 __libc_start_main + 245\n6    tmphsyr030d                        0x000055af19837129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    for char in string {\n        if char == \"0\" {\n            count += 1\n        } else {\n            count -= 1\n        }\n        if count == 0 {\n            maxLength = max(maxLength, count)\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpwmf5jukm/tmpwmf5jukm.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b407104ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4070d41b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4070d41988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4070d407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwmf5jukm                        0x00005626bce384a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b4071236460 __libc_start_main + 245\n6    tmpwmf5jukm                        0x00005626bce38129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_diff = 0\n    var count_0 = 0\n    var count_1 = 0\n    for char in string {\n        if char == \"0\" {\n            count_0 += 1\n        } else {\n            count_1 += 1\n        }\n        if count_0 == count_1 {\n            max_diff = max(max_diff, count_0)\n        }\n    }\n    return max_diff\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "tmpvzrvl2yz/tmpvzrvl2yz.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5dc70f4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5dc6debb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5dc6deb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5dc6dea7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvzrvl2yz                        0x00005582498714a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b5dc72e0460 __libc_start_main + 245\n6    tmpvzrvl2yz                        0x0000558249871129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    \n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        count += 1\n        \n        if zeroCount == oneCount {\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    count = 0\n    zeroCount = 0\n    oneCount = 0\n    \n    for char in string.reversed() {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        \n        count += 1\n        \n        if zeroCount == oneCount {\n            maxLength = max(maxLength, count)\n        }\n    }\n    \n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpw_llt16j/tmpw_llt16j.swift:57: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae629e33c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae629b2ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae629b2a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae629b297b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw_llt16j                        0x000055c7018d2714 <unavailable> + 5908\n5    libc.so.6                          0x00002ae62a01f460 __libc_start_main + 245\n6    tmpw_llt16j                        0x000055c7018d2399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for i in (0..<string.count).reversed() {\n        let char = string[string.index(string.startIndex, offsetBy: i)]\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpnjd39ihz/tmpnjd39ihz.swift:46: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b83b9213c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b83b8f0ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b83b8f0a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b83b8f097b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnjd39ihz                        0x000055c90404c964 <unavailable> + 6500\n5    libc.so.6                          0x00002b83b93ff460 __libc_start_main + 245\n6    tmpnjd39ihz                        0x000055c90404c5e9 <unavailable> + 5609\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmp58c0tp7g/tmp58c0tp7g.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a9bd46c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a9ba3db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a9ba3d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a9ba3c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp58c0tp7g                        0x000055d6074814a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b1a9bf32460 __libc_start_main + 245\n6    tmp58c0tp7g                        0x000055d607481129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "tmpy8brv1e4/tmpy8brv1e4.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8f17d82c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8f17a79b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8f17a79988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8f17a787b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy8brv1e4                        0x00005565c19d14a4 <unavailable> + 5284\n5    libc.so.6                          0x00002b8f17f6e460 __libc_start_main + 245\n6    tmpy8brv1e4                        0x00005565c19d1129 <unavailable> + 4393\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var maxLength = 0\n    var count = 0\n    var zeroCount = 0\n    var oneCount = 0\n    for char in string {\n        if char == \"0\" {\n            zeroCount += 1\n        } else {\n            oneCount += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zeroCount == oneCount {\n                maxLength = max(maxLength, count)\n            }\n        }\n    }\n    return maxLength\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpk0fa0012/tmpk0fa0012.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d010a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d00d9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d00d9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d00d9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk0fa0012                        0x000055e608054534 <unavailable> + 5428\n5    libc.so.6                          0x00002b1d01293460 __libc_start_main + 245\n6    tmpk0fa0012                        0x000055e6080541b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_len = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_len = max(max_len, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_len = max(max_len, count_zero + count_one)\n        }\n    }\n    return max_len\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "tmpvfjx0x6x/tmpvfjx0x6x.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba507f91c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba507c88b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba507c88988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba507c877b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvfjx0x6x                        0x000055fc8432e714 <unavailable> + 5908\n5    libc.so.6                          0x00002ba50817d460 __libc_start_main + 245\n6    tmpvfjx0x6x                        0x000055fc8432e399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count_zero = 0\n    var count_one = 0\n    for char in string {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    count_zero = 0\n    count_one = 0\n    for char in string.reversed() {\n        if char == \"0\" {\n            count_zero += 1\n        } else {\n            count_one += 1\n        }\n        if count_zero == count_one {\n            max_length = max(max_length, count_zero + count_one)\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmpcfzpub_0/tmpcfzpub_0.swift:45: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c41c59c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c41950b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c41950988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c4194f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfzpub_0                        0x000055c27b700714 <unavailable> + 5908\n5    libc.so.6                          0x00002b3c41e45460 __libc_start_main + 245\n6    tmpcfzpub_0                        0x000055c27b700399 <unavailable> + 5017\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nfunc find_length(string: String) -> Int {\n    var max_length = 0\n    var count = 0\n    var zero_count = 0\n    var one_count = 0\n    for char in string {\n        if char == \"0\" {\n            zero_count += 1\n        } else {\n            one_count += 1\n        }\n        count += 1\n        if count % 2 == 0 {\n            if zero_count == one_count {\n                max_length = max(max_length, count)\n            }\n        }\n    }\n    return max_length\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_length(string: \"11000010001\") == 6)\nassert(find_length(string: \"10111\") == 1)\nassert(find_length(string: \"11011101100101\") == 2)",
      "timestamp": 1665517295,
      "stdout": "",
      "stderr": "tmp77hxoz8l/tmp77hxoz8l.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0305b7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0305871b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0305871988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03058707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp77hxoz8l                        0x000055bef2677534 <unavailable> + 5428\n5    libc.so.6                          0x00002b0305d66460 __libc_start_main + 245\n6    tmp77hxoz8l                        0x000055bef26771b9 <unavailable> + 4537\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
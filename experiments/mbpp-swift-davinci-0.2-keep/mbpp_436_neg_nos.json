{
  "name": "mbpp_436_neg_nos",
  "language": "swift",
  "prompt": "\n/// Write a python function to return the negative numbers in a list.\nfunc neg_nos(list1: [Int]) -> [Int] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_436_neg_nos.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(neg_nos(list1: [-1, 4, 5, -6]) == [-1, -6])\nassert(neg_nos(list1: [-1, -2, 3, 4]) == [-1, -2])\nassert(neg_nos(list1: [-7, -6, 8, 9]) == [-7, -6])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_nos = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_nos.append(i)\n        }\n    }\n    return neg_nos",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var list2: [Int] = []\n    for i in list1 {\n        if i < 0 {\n            list2.append(i)\n        }\n    }\n    return list2",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var list2 = [Int]()\n    for i in list1 {\n        if i < 0 {\n            list2.append(i)\n        }\n    }\n    return list2",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var list2 = [Int]()\n    for i in list1 {\n        if i < 0 {\n            list2.append(i)\n        }\n    }\n    return list2",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list"
  ]
}
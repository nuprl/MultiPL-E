{
  "name": "mbpp_443_largest_neg",
  "language": "swift",
  "prompt": "\n/// Write a python function to find the largest negative number from the given list.\nfunc largest_neg(list1: [Int]) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(largest_neg(list1: [1, 2, 3, -4, -6]) == -6)\nassert(largest_neg(list1: [1, 2, 3, -8, -9]) == -9)\nassert(largest_neg(list1: [1, 2, 3, 4, -1]) == -1)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var largest = 0\n    for i in list1 {\n        if i < 0 && i > largest {\n            largest = i\n        }\n    }\n    return largest",
    "    var largest_neg_num = list1[0]\n    for num in list1 {\n        if num < largest_neg_num {\n            largest_neg_num = num\n        }\n    }\n    return largest_neg_num",
    "    var neg_list = list1.filter { $0 < 0 }\n    return neg_list.max()!",
    "    var largest = list1[0]\n    for i in list1 {\n        if i < largest {\n            largest = i\n        }\n    }\n    return largest",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list.max()!",
    "    var neg_list = [Int]()\n    for i in list1 {\n        if i < 0 {\n            neg_list.append(i)\n        }\n    }\n    return neg_list.max()!",
    "    var largest_neg = 0\n    for i in list1 {\n        if i < 0 && i > largest_neg {\n            largest_neg = i\n        }\n    }\n    return largest_neg",
    "    var largest = list1[0]\n    for i in list1 {\n        if i < largest {\n            largest = i\n        }\n    }\n    return largest",
    "    var neg_list = list1.filter { $0 < 0 }\n    return neg_list.max() ?? 0",
    "    var largest = list1[0]\n    for i in list1 {\n        if i < largest {\n            largest = i\n        }\n    }\n    return largest",
    "    var largest_neg = 0\n    for i in list1 {\n        if i < 0 {\n            if i > largest_neg {\n                largest_neg = i\n            }\n        }\n    }\n    return largest_neg",
    "    var largest = list1[0]\n    for i in list1 {\n        if i < largest {\n            largest = i\n        }\n    }\n    return largest",
    "    var largest_neg = 0\n    for i in list1 {\n        if i < largest_neg {\n            largest_neg = i\n        }\n    }\n    return largest_neg",
    "    var largest = list1[0]\n    for i in list1 {\n        if i < largest {\n            largest = i\n        }\n    }\n    return largest",
    "    var largest = list1[0]\n    for i in list1 {\n        if i < largest {\n            largest = i\n        }\n    }\n    return largest",
    "    var largest_neg = list1[0]\n    for i in list1 {\n        if i < 0 && i > largest_neg {\n            largest_neg = i\n        }\n    }\n    return largest_neg",
    "    var largest = list1[0]\n    for i in list1 {\n        if i < 0 {\n            if i > largest {\n                largest = i\n            }\n        }\n    }\n    return largest",
    "    var max = list1[0]\n    for i in list1 {\n        if i < 0 {\n            if i > max {\n                max = i\n            }\n        }\n    }\n    return max",
    "    var largest = list1[0]\n    for i in list1 {\n        if i < largest {\n            largest = i\n        }\n    }\n    return largest",
    "    var largest = list1[0]\n    for i in list1 {\n        if i < largest {\n            largest = i\n        }\n    }\n    return largest"
  ]
}
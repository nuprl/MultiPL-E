{
  "name": "mbpp_234_volume_cube",
  "language": "swift",
  "prompt": "\n/// Write a function to find the volume of a cube given its side length.\nfunc volume_cube(l: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_234_volume_cube.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(volume_cube(l: 3) == 27)\nassert(volume_cube(l: 2) == 8)\nassert(volume_cube(l: 5) == 125)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l",
    "    return l * l * l"
  ]
}
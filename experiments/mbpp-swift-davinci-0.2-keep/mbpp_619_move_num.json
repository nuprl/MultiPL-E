{
  "name": "mbpp_619_move_num",
  "language": "swift",
  "prompt": "\n/// Write a function to move all the numbers to the end of the given string.\nfunc move_num(test_str: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(move_num(test_str: \"I1love143you55three3000thousand\") == \"Iloveyouthreethousand1143553000\")\nassert(move_num(test_str: \"Avengers124Assemble\") == \"AvengersAssemble124\")\nassert(move_num(test_str: \"Its11our12path13to14see15things16do17things\") == \"Itsourpathtoseethingsdothings11121314151617\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i].isNumber {\n            num_arr.append(str_arr[i])\n        } else {\n            char_arr.append(str_arr[i])\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if str[i].isNumber {\n            while j > i {\n                if !str[j].isNumber {\n                    break\n                }\n                j -= 1\n            }\n            if j > i {\n                str.swapAt(i, j)\n            }\n        }\n        i += 1\n    }\n    return str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var str_arr_copy = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i].isNumber {\n            num_arr.append(str_arr[i])\n        } else {\n            str_arr_copy.append(str_arr[i])\n        }\n    }\n    str_arr_copy.append(contentsOf: num_arr)\n    return String(str_arr_copy)",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for char in str_arr {\n        if char.isNumber {\n            num_arr.append(char)\n        } else {\n            char_arr.append(char)\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var letter_str = \"\"\n    for i in str {\n        if i.isNumber {\n            num_str.append(i)\n        } else {\n            letter_str.append(i)\n        }\n    }\n    str = letter_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var str = test_str\n    var nums = \"\"\n    for c in str {\n        if c.isNumber {\n            nums.append(c)\n        }\n    }\n    str.removeAll { $0.isNumber }\n    str.append(contentsOf: nums)\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i] >= \"0\" && str_arr[i] <= \"9\" {\n            num_arr.append(str_arr[i])\n        } else {\n            char_arr.append(str_arr[i])\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var str_arr_new = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i] >= \"0\" && str_arr[i] <= \"9\" {\n            num_arr.append(str_arr[i])\n        } else {\n            str_arr_new.append(str_arr[i])\n        }\n    }\n    str_arr_new.append(contentsOf: num_arr)\n    return String(str_arr_new)",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        if str[i].isNumber {\n            num_str += String(str[i])\n            str.remove(at: str.index(str.startIndex, offsetBy: i))\n        } else {\n            i += 1\n        }\n    }\n    str += num_str\n    return str",
    "    var str = test_str\n    var nums = [Character]()\n    var chars = [Character]()\n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            chars.append(char)\n        }\n    }\n    str = String(chars) + String(nums)\n    return str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var nums = \"\"\n    var letters = \"\"\n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            letters.append(char)\n        }\n    }\n    return letters + nums",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var str = test_str\n    var num_str = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        }\n    }\n    return str + num_str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char >= \"0\" && char <= \"9\" {\n            num_str += String(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var nums = \"\"\n    var chars = \"\"\n    for c in str {\n        if c.isNumber {\n            nums += String(c)\n        } else {\n            chars += String(c)\n        }\n    }\n    str = chars + nums\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var alpha_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i].isNumber {\n            num_arr.append(str_arr[i])\n        } else {\n            alpha_arr.append(str_arr[i])\n        }\n    }\n    return String(alpha_arr + num_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    str.append(num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        }\n    }\n    str.removeAll { $0.isNumber }\n    str.append(contentsOf: num_str)\n    return str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums += String(char)\n        } else {\n            result += String(char)\n        }\n    }\n    return result + nums",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if Int(String(str[index])) != nil {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    str.append(num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str += String(char)\n        } else {\n            char_str += String(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var nums = \"\"\n    var letters = \"\"\n    for char in str {\n        if char.isNumber {\n            nums += String(char)\n        } else {\n            letters += String(char)\n        }\n    }\n    str = letters + nums\n    return str",
    "    var test_str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for c in test_str {\n        if c.isNumber {\n            num_str.append(c)\n        } else {\n            char_str.append(c)\n        }\n    }\n    test_str = char_str + num_str\n    return test_str",
    "    var str = test_str\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !str[str.index(str.startIndex, offsetBy: i)].isNumber {\n            i += 1\n        }\n        while i < j && !str[str.index(str.startIndex, offsetBy: j)].isLetter {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        }\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var str = test_str\n    var nums = [Character]()\n    var chars = [Character]()\n    for c in str {\n        if c.isNumber {\n            nums.append(c)\n        } else {\n            chars.append(c)\n        }\n    }\n    str = String(chars) + String(nums)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str += String(char)\n        } else {\n            char_str += String(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for c in str_arr {\n        if c.isNumber {\n            num_arr.append(c)\n        } else {\n            char_arr.append(c)\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(contentsOf: num_str)\n    return result",
    "    var str = test_str\n    var nums: [Character] = []\n    var letters: [Character] = []\n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            letters.append(char)\n        }\n    }\n    str = String(letters) + String(nums)\n    return str",
    "    var str = test_str\n    var num = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num += String(str[index])\n            str.remove(at: index)\n        }\n    }\n    return str + num",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str += String(char)\n        } else {\n            result += String(char)\n        }\n    }\n    return result + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var letter_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            letter_str.append(char)\n        }\n    }\n    str = letter_str + num_str\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for char in str_arr {\n        if char >= \"0\" && char <= \"9\" {\n            num_arr.append(char)\n        } else {\n            char_arr.append(char)\n        }\n    }\n    str_arr = char_arr + num_arr\n    return String(str_arr)",
    "    var str = test_str\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for char in str {\n        if char.isNumber {\n            num_arr.append(char)\n        } else {\n            char_arr.append(char)\n        }\n    }\n    str = String(char_arr) + String(num_arr)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = \"\"\n    var num = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num += String(char)\n        } else {\n            str += String(char)\n        }\n    }\n    return str + num",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str += String(char)\n        } else {\n            result += String(char)\n        }\n    }\n    return result + num_str",
    "    var str = \"\"\n    var num = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num += String(char)\n        } else {\n            str += String(char)\n        }\n    }\n    return str + num",
    "    var str = test_str\n    var num_str = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char >= \"0\" && char <= \"9\" {\n            num_str.append(char)\n        }\n    }\n    str.removeAll { (char) -> Bool in\n        return char >= \"0\" && char <= \"9\"\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var str = test_str\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !str[str.index(str.startIndex, offsetBy: i)].isNumber {\n            i += 1\n        }\n        while i < j && !str[str.index(str.startIndex, offsetBy: j)].isLetter {\n            j -= 1\n        }\n        if i < j {\n            let temp = str[str.index(str.startIndex, offsetBy: i)]\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(str[str.index(str.startIndex, offsetBy: j)]))\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: j)..<str.index(str.startIndex, offsetBy: j+1), with: String(temp))\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var res = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            res.append(char)\n        }\n    }\n    return res + nums",
    "    var str = test_str\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if str[i] >= \"0\" && str[i] <= \"9\" {\n            if str[j] >= \"0\" && str[j] <= \"9\" {\n                j -= 1\n            } else {\n                str.swapAt(i, j)\n                i += 1\n                j -= 1\n            }\n        } else {\n            i += 1\n        }\n    }\n    return str",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(contentsOf: num_str)\n    return result",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var result_str = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result_str.append(char)\n        }\n    }\n    result_str.append(num_str)\n    return result_str",
    "    var new_str = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            new_str.append(char)\n        }\n    }\n    new_str.append(contentsOf: num_str)\n    return new_str",
    "    var str_arr = Array(test_str)\n    var i = 0\n    var j = str_arr.count - 1\n    while i < j {\n        if str_arr[i] >= \"0\" && str_arr[i] <= \"9\" {\n            while j > i && str_arr[j] >= \"0\" && str_arr[j] <= \"9\" {\n                j -= 1\n            }\n            if j > i {\n                let temp = str_arr[i]\n                str_arr[i] = str_arr[j]\n                str_arr[j] = temp\n            }\n        }\n        i += 1\n    }\n    return String(str_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for c in str {\n        if c.isNumber {\n            num_str.append(c)\n        } else {\n            char_str.append(c)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var new_str = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str += String(char)\n        } else {\n            new_str += String(char)\n        }\n    }\n    return new_str + num_str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    \n    for char in str_arr {\n        if char.isNumber {\n            num_arr.append(char)\n        } else {\n            char_arr.append(char)\n        }\n    }\n    \n    return String(char_arr + num_arr)",
    "    var str = test_str\n    var num = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num += String(str[index])\n            str.remove(at: index)\n        }\n    }\n    return str + num",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char >= \"0\" && char <= \"9\" {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var nums = [Character]()\n    var chars = [Character]()\n    \n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            chars.append(char)\n        }\n    }\n    \n    str = String(chars) + String(nums)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    for (index, char) in str.enumerated() {\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num += String(str[index])\n            str.remove(at: index)\n        }\n    }\n    return str + num",
    "    var str = test_str\n    var nums = [Character]()\n    var chars = [Character]()\n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            chars.append(char)\n        }\n    }\n    str = String(chars) + String(nums)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str += String(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var str = test_str\n    var nums = \"\"\n    var chars = \"\"\n    for char in str {\n        if char.isNumber {\n            nums += String(char)\n        } else {\n            chars += String(char)\n        }\n    }\n    str = chars + nums\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for char in str_arr {\n        if char.isNumber {\n            num_arr.append(char)\n        } else {\n            char_arr.append(char)\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char >= \"0\" && char <= \"9\" {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var result = \"\"\n    var num = \"\"\n    for char in str {\n        if char.isNumber {\n            num += String(char)\n        } else {\n            result += String(char)\n        }\n    }\n    return result + num",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i].isNumber {\n            num_arr.append(str_arr[i])\n        } else {\n            char_arr.append(str_arr[i])\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = \"\"\n    var num = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num += String(char)\n        } else {\n            str += String(char)\n        }\n    }\n    return str + num",
    "    var str = test_str\n    var num_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        }\n    }\n    str = str.replacingOccurrences(of: \"[0-9]\", with: \"\", options: .regularExpression)\n    str.append(num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        }\n    }\n    return str + num_str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums += String(char)\n        } else {\n            result += String(char)\n        }\n    }\n    return result + nums",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums += String(char)\n        } else {\n            result += String(char)\n        }\n    }\n    return result + nums",
    "    var str = \"\"\n    var num = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num += String(char)\n        } else {\n            str += String(char)\n        }\n    }\n    return str + num",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str += String(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str += String(char)\n        } else {\n            char_str += String(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i] >= \"0\" && str_arr[i] <= \"9\" {\n            num_arr.append(str_arr[i])\n            str_arr.remove(at: i)\n        }\n    }\n    str_arr.append(contentsOf: num_arr)\n    return String(str_arr)",
    "    var str = test_str\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if str[i].isNumber {\n            while j > i && str[j].isNumber {\n                j -= 1\n            }\n            if j > i {\n                str.swapAt(i, j)\n            }\n        }\n        i += 1\n    }\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for char in str_arr {\n        if char.isNumber {\n            num_arr.append(char)\n        } else {\n            char_arr.append(char)\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = test_str\n    var nums = \"\"\n    var chars = \"\"\n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            chars.append(char)\n        }\n    }\n    return chars + nums",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if Int(String(str[index])) != nil {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    str.append(num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if Int(String(str[index])) != nil {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var str = test_str\n    var nums = [Character]()\n    var chars = [Character]()\n    \n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            chars.append(char)\n        }\n    }\n    \n    str = String(chars) + String(nums)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str += String(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var new_str = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            new_str.append(char)\n        }\n    }\n    return new_str + num_str",
    "    var str = \"\"\n    var num = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num.append(char)\n        } else {\n            str.append(char)\n        }\n    }\n    return str + num",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if Int(String(str[index])) != nil {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let char = str[str.index(str.startIndex, offsetBy: i)]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: str.index(str.startIndex, offsetBy: i))\n            i -= 1\n        }\n        i += 1\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        }\n    }\n    str = str.replacingOccurrences(of: \"[0-9]\", with: \"\", options: .regularExpression)\n    str.append(num_str)\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i].isNumber {\n            num_arr.append(str_arr[i])\n        } else {\n            char_arr.append(str_arr[i])\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var str = test_str\n    var nums = \"\"\n    var chars = \"\"\n    for char in str {\n        if char.isNumber {\n            nums += String(char)\n        } else {\n            chars += String(char)\n        }\n    }\n    str = chars + nums\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var str_arr_new = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i] >= \"0\" && str_arr[i] <= \"9\" {\n            num_arr.append(str_arr[i])\n        } else {\n            str_arr_new.append(str_arr[i])\n        }\n    }\n    str_arr_new.append(contentsOf: num_arr)\n    return String(str_arr_new)",
    "    var str_arr = Array(test_str)\n    var i = 0\n    var j = str_arr.count - 1\n    while i < j {\n        if str_arr[i] >= \"0\" && str_arr[i] <= \"9\" {\n            if str_arr[j] >= \"0\" && str_arr[j] <= \"9\" {\n                j -= 1\n            } else {\n                let temp = str_arr[i]\n                str_arr[i] = str_arr[j]\n                str_arr[j] = temp\n                i += 1\n                j -= 1\n            }\n        } else {\n            i += 1\n        }\n    }\n    return String(str_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        }\n    }\n    str.append(num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    str.append(num_str)\n    return str",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var str = test_str\n    var num_str = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char >= \"0\" && char <= \"9\" {\n            num_str.append(char)\n        }\n    }\n    str.removeAll { (char) -> Bool in\n        return char >= \"0\" && char <= \"9\"\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for char in str_arr {\n        if char >= \"0\" && char <= \"9\" {\n            num_arr.append(char)\n        } else {\n            char_arr.append(char)\n        }\n    }\n    str_arr = char_arr + num_arr\n    return String(str_arr)",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums += String(char)\n        } else {\n            result += String(char)\n        }\n    }\n    return result + nums",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for char in str_arr {\n        if char.isNumber {\n            num_arr.append(char)\n        } else {\n            char_arr.append(char)\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        }\n        else {\n            i += 1\n        }\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i].isNumber {\n            num_arr.append(str_arr[i])\n        } else {\n            char_arr.append(str_arr[i])\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = \"\"\n    var num = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num += String(char)\n        } else {\n            str += String(char)\n        }\n    }\n    return str + num",
    "    var str = \"\"\n    var num = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num += String(char)\n        } else {\n            str += String(char)\n        }\n    }\n    return str + num",
    "    var str = test_str\n    var num_str = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        }\n    }\n    str.append(num_str)\n    return str",
    "    var str = test_str\n    var nums = \"\"\n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        }\n    }\n    str.removeAll { $0.isNumber }\n    str.append(contentsOf: nums)\n    return str",
    "    var str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            str.append(char)\n        }\n    }\n    for char in test_str {\n        if !char.isNumber {\n            str.append(char)\n        }\n    }\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var letter_arr = [Character]()\n    for char in str_arr {\n        if char.isNumber {\n            num_arr.append(char)\n        } else {\n            letter_arr.append(char)\n        }\n    }\n    return String(letter_arr + num_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        }\n    }\n    str.append(contentsOf: num_str)\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var alpha_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            alpha_str.append(char)\n        }\n    }\n    str = alpha_str + num_str\n    return str",
    "    var str = \"\"\n    var num = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num += String(char)\n        } else {\n            str += String(char)\n        }\n    }\n    return str + num",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for c in test_str {\n        if c >= \"0\" && c <= \"9\" {\n            num_str += String(c)\n        } else {\n            char_str += String(c)\n        }\n    }\n    return char_str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str += String(char)\n        } else {\n            char_str += String(char)\n        }\n    }\n    return char_str + num_str",
    "    var str = test_str\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if str[i] >= \"0\" && str[i] <= \"9\" {\n            while j > i {\n                if str[j] >= \"0\" && str[j] <= \"9\" {\n                    j -= 1\n                } else {\n                    break\n                }\n            }\n            if j > i {\n                str.swapAt(i, j)\n                j -= 1\n            }\n        }\n        i += 1\n    }\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var str_arr = Array(test_str)\n    var i = 0\n    var j = str_arr.count - 1\n    while i < j {\n        if str_arr[i] >= \"0\" && str_arr[i] <= \"9\" {\n            if str_arr[j] >= \"0\" && str_arr[j] <= \"9\" {\n                j -= 1\n            } else {\n                str_arr.swapAt(i, j)\n                i += 1\n                j -= 1\n            }\n        } else {\n            i += 1\n        }\n    }\n    return String(str_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = \"\"\n    var num = \"\"\n    for c in test_str {\n        if c.isNumber {\n            num += String(c)\n        } else {\n            str += String(c)\n        }\n    }\n    return str + num",
    "    var str = test_str\n    var num_str = \"\"\n    var letter_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str += String(char)\n        } else {\n            letter_str += String(char)\n        }\n    }\n    str = letter_str + num_str\n    return str",
    "    var str = \"\"\n    var num = \"\"\n    for c in test_str {\n        if c.isNumber {\n            num += String(c)\n        } else {\n            str += String(c)\n        }\n    }\n    return str + num",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var nums = \"\"\n    var chars = \"\"\n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            chars.append(char)\n        }\n    }\n    str = chars + nums\n    return str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums += String(char)\n        } else {\n            result += String(char)\n        }\n    }\n    return result + nums",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(contentsOf: num_str)\n    return result",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(contentsOf: num_str)\n    return result",
    "    var str = test_str\n    var num_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        }\n    }\n    str = str.replacingOccurrences(of: \"[0-9]\", with: \"\", options: .regularExpression)\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str += String(char)\n        }\n    }\n    str.removeAll(where: {$0.isNumber})\n    str += num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var nums = [Character]()\n    var chars = [Character]()\n    for c in str {\n        if c.isNumber {\n            nums.append(c)\n        } else {\n            chars.append(c)\n        }\n    }\n    str = String(chars) + String(nums)\n    return str",
    "    var str = test_str\n    var nums = \"\"\n    var chars = \"\"\n    \n    for c in str.characters {\n        if c >= \"0\" && c <= \"9\" {\n            nums.append(c)\n        } else {\n            chars.append(c)\n        }\n    }\n    return chars + nums",
    "    var str = test_str\n    var nums = \"\"\n    for char in str {\n        if char.isNumber {\n            nums += String(char)\n        }\n    }\n    str.removeAll { $0.isNumber }\n    str += nums\n    return str",
    "    var str = test_str\n    var nums = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            nums += String(str[index])\n            str.remove(at: index)\n        }\n        i += 1\n    }\n    return str + nums",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(contentsOf: num_str)\n    return result",
    "    var str = test_str\n    var nums = \"\"\n    var chars = \"\"\n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            chars.append(char)\n        }\n    }\n    return chars + nums",
    "    var result = \"\"\n    var nums = \"\"\n    for c in test_str {\n        if c.isNumber {\n            nums.append(c)\n        } else {\n            result.append(c)\n        }\n    }\n    return result + nums",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i].isNumber {\n            num_arr.append(str_arr[i])\n        } else {\n            char_arr.append(str_arr[i])\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if Int(String(str[index])) != nil {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str_arr = test_str.map { String($0) }\n    var num_arr = [String]()\n    var char_arr = [String]()\n    for i in 0..<str_arr.count {\n        if Int(str_arr[i]) != nil {\n            num_arr.append(str_arr[i])\n        } else {\n            char_arr.append(str_arr[i])\n        }\n    }\n    return char_arr.joined() + num_arr.joined()",
    "    var num_str = \"\"\n    var char_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    return char_str + num_str",
    "    var str = \"\"\n    var num = \"\"\n    for c in test_str {\n        if c.isNumber {\n            num += String(c)\n        } else {\n            str += String(c)\n        }\n    }\n    return str + num",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums"
  ]
}
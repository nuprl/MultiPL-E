{
  "name": "mbpp_619_move_num",
  "language": "swift",
  "prompt": "\n/// Write a function to move all the numbers to the end of the given string.\nfunc move_num(test_str: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(move_num(test_str: \"I1love143you55three3000thousand\") == \"Iloveyouthreethousand1143553000\")\nassert(move_num(test_str: \"Avengers124Assemble\") == \"AvengersAssemble124\")\nassert(move_num(test_str: \"Its11our12path13to14see15things16do17things\") == \"Itsourpathtoseethingsdothings11121314151617\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i].isNumber {\n            num_arr.append(str_arr[i])\n        } else {\n            char_arr.append(str_arr[i])\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isNumber {\n            num_str.append(str[index])\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str = test_str\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if str[i].isNumber {\n            while j > i {\n                if !str[j].isNumber {\n                    break\n                }\n                j -= 1\n            }\n            if j > i {\n                str.swapAt(i, j)\n            }\n        }\n        i += 1\n    }\n    return str",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var result = \"\"\n    var nums = \"\"\n    for char in test_str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    return result + nums",
    "    var str = test_str\n    var num_str = \"\"\n    var char_str = \"\"\n    for char in str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            char_str.append(char)\n        }\n    }\n    str = char_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var str_arr_copy = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i].isNumber {\n            num_arr.append(str_arr[i])\n        } else {\n            str_arr_copy.append(str_arr[i])\n        }\n    }\n    str_arr_copy.append(contentsOf: num_arr)\n    return String(str_arr_copy)",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for char in str_arr {\n        if char.isNumber {\n            num_arr.append(char)\n        } else {\n            char_arr.append(char)\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str = test_str\n    var num_str = \"\"\n    var letter_str = \"\"\n    for i in str {\n        if i.isNumber {\n            num_str.append(i)\n        } else {\n            letter_str.append(i)\n        }\n    }\n    str = letter_str + num_str\n    return str",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let char = str[index]\n        if char.isNumber {\n            num_str.append(char)\n            str.remove(at: index)\n        } else {\n            i += 1\n        }\n    }\n    return str + num_str",
    "    var result = \"\"\n    var num_str = \"\"\n    for char in test_str {\n        if char.isNumber {\n            num_str.append(char)\n        } else {\n            result.append(char)\n        }\n    }\n    result.append(num_str)\n    return result",
    "    var str = test_str\n    var nums = \"\"\n    for c in str {\n        if c.isNumber {\n            nums.append(c)\n        }\n    }\n    str.removeAll { $0.isNumber }\n    str.append(contentsOf: nums)\n    return str",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var char_arr = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i] >= \"0\" && str_arr[i] <= \"9\" {\n            num_arr.append(str_arr[i])\n        } else {\n            char_arr.append(str_arr[i])\n        }\n    }\n    return String(char_arr + num_arr)",
    "    var str_arr = Array(test_str)\n    var num_arr = [Character]()\n    var str_arr_new = [Character]()\n    for i in 0..<str_arr.count {\n        if str_arr[i] >= \"0\" && str_arr[i] <= \"9\" {\n            num_arr.append(str_arr[i])\n        } else {\n            str_arr_new.append(str_arr[i])\n        }\n    }\n    str_arr_new.append(contentsOf: num_arr)\n    return String(str_arr_new)",
    "    var str = test_str\n    var num_str = \"\"\n    var i = 0\n    while i < str.count {\n        if str[i].isNumber {\n            num_str += String(str[i])\n            str.remove(at: str.index(str.startIndex, offsetBy: i))\n        } else {\n            i += 1\n        }\n    }\n    str += num_str\n    return str",
    "    var str = test_str\n    var nums = [Character]()\n    var chars = [Character]()\n    for char in str {\n        if char.isNumber {\n            nums.append(char)\n        } else {\n            chars.append(char)\n        }\n    }\n    str = String(chars) + String(nums)\n    return str"
  ]
}
{
  "name": "mbpp_477_is_lower",
  "language": "swift",
  "prompt": "\n/// Write a python function to convert the given string to lower case.\nfunc is_lower(string: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_477_is_lower.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_lower(string: \"InValid\") == \"invalid\")\nassert(is_lower(string: \"TruE\") == \"true\")\nassert(is_lower(string: \"SenTenCE\") == \"sentence\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()",
    "    return string.lowercased()"
  ]
}
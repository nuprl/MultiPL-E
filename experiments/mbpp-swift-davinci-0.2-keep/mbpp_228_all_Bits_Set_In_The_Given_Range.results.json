{
  "name": "mbpp_228_all_Bits_Set_In_The_Given_Range",
  "language": "swift",
  "prompt": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_228_all_Bits_Set_In_The_Given_Range.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> (l - 1)\n    let y = n << (32 - r)\n    let z = x & y\n    return z == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpjzshg7tr/tmpjzshg7tr.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeb6ace3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeb6a9dab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeb6a9da988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeb6a9d97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjzshg7tr                        0x0000562aeac522be <unavailable> + 4798\n5    libc.so.6                          0x00002aeb6aecf460 __libc_start_main + 245\n6    tmpjzshg7tr                        0x0000562aeac51e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    for i in l...r {\n        n = n & ~(1 << i)\n    }\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp1q3wpsy9/tmp1q3wpsy9.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4512d3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac450fcab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac450fca988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac450fc97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1q3wpsy9                        0x000055bd96a473b6 <unavailable> + 5046\n5    libc.so.6                          0x00002ac4514bf460 __libc_start_main + 245\n6    tmp1q3wpsy9                        0x000055bd96a46fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpe14z8o7v/tmpe14z8o7v.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba81d593c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba81d28ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba81d28a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba81d2897b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe14z8o7v                        0x000055d4c674d338 <unavailable> + 4920\n5    libc.so.6                          0x00002ba81d77f460 __libc_start_main + 245\n6    tmpe14z8o7v                        0x000055d4c674cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for _ in 0..<r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpvfekrjh0/tmpvfekrjh0.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1d238e1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1d235d8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1d235d8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1d235d77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvfekrjh0                        0x000055f5df410338 <unavailable> + 4920\n5    libc.so.6                          0x00002b1d23acd460 __libc_start_main + 245\n6    tmpvfekrjh0                        0x000055f5df40ffe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for _ in l...r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == (r - l + 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpyqfx89ue/tmpyqfx89ue.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afe8c9e2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afe8c6d9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afe8c6d9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afe8c6d87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyqfx89ue                        0x00005579ebf9d338 <unavailable> + 4920\n5    libc.so.6                          0x00002afe8cbce460 __libc_start_main + 245\n6    tmpyqfx89ue                        0x00005579ebf9cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> l\n    let y = n << (32 - r)\n    return x & y == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpd74ht99q/tmpd74ht99q.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae60aad1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae60a7c8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae60a7c8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae60a7c77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpd74ht99q                        0x00005618580932be <unavailable> + 4798\n5    libc.so.6                          0x00002ae60acbd460 __libc_start_main + 245\n6    tmpd74ht99q                        0x0000561858092e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpswtr8_gq/tmpswtr8_gq.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3e1be97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3e1bb8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3e1bb8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3e1bb8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpswtr8_gq                        0x000055cfcb6141b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b3e1c083460 __libc_start_main + 245\n6    tmpswtr8_gq                        0x000055cfcb613e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while l <= r {\n        if n & 1 == 0 {\n            count += 1\n        }\n        n = n >> 1\n        l += 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpno0m891t/tmpno0m891t.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc83d00c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc839f7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc839f7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc839f67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpno0m891t                        0x00005583be56a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acc83eec460 __libc_start_main + 245\n6    tmpno0m891t                        0x00005583be569e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var result = true\n    while l <= r {\n        if n & 1 == 0 {\n            result = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpvkmrfa7u/tmpvkmrfa7u.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5b15370c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5b15067b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5b15067988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5b150667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvkmrfa7u                        0x0000557b37e601b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b5b1555c460 __libc_start_main + 245\n6    tmpvkmrfa7u                        0x0000557b37e5fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while n > 0 {\n        let bit = n & 1\n        if bit == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l -= 1\n        r -= 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpq08cux1a/tmpq08cux1a.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6e325f8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6e322efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6e322ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6e322ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq08cux1a                        0x000055cb25ee51b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b6e327e4460 __libc_start_main + 245\n6    tmpq08cux1a                        0x000055cb25ee4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    for i in l...r {\n        n = n & ~(1 << i)\n    }\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpgeshbdj9/tmpgeshbdj9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aed3ae3cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aed3ab33b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aed3ab33988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aed3ab327b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgeshbdj9                        0x000056465ef7e3b6 <unavailable> + 5046\n5    libc.so.6                          0x00002aed3b028460 __libc_start_main + 245\n6    tmpgeshbdj9                        0x000056465ef7dfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpyrtte306/tmpyrtte306.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b13a70c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b13767b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b13767988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b137667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyrtte306                        0x00005643aefa9338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b13c5c460 __libc_start_main + 245\n6    tmpyrtte306                        0x00005643aefa8fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while n > 0 {\n        let last_bit = n & 1\n        if last_bit == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l -= 1\n        r -= 1\n    }\n    if flag == true && l >= 0 && r >= 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpzp39sn49/tmpzp39sn49.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d0270c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77cff67b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77cff67988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77cff667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzp39sn49                        0x000055f2113651b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b77d045c460 __libc_start_main + 245\n6    tmpzp39sn49                        0x000055f211364e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp__xyzwmf/tmp__xyzwmf.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba0f8957c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba0f864eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba0f864e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba0f864d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp__xyzwmf                        0x0000564fe576c1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba0f8b43460 __libc_start_main + 245\n6    tmp__xyzwmf                        0x0000564fe576be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << r) - 1\n    let y = (1 << (l - 1)) - 1\n    let z = x ^ y\n    return (n & z) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    for i in l...r {\n        n = n & ~(1 << i)\n    }\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp1q3wpsy9/tmp1q3wpsy9.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4512d3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac450fcab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac450fca988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac450fc97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1q3wpsy9                        0x000055bd96a473b6 <unavailable> + 5046\n5    libc.so.6                          0x00002ac4514bf460 __libc_start_main + 245\n6    tmp1q3wpsy9                        0x000055bd96a46fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    let mask = (1 << r) - 1\n    n = n & mask\n    return n == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpge1dldof/tmpge1dldof.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b88d695ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b88d6655b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b88d6655988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b88d66547b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpge1dldof                        0x000055e6dccf11b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b88d6b4a460 __libc_start_main + 245\n6    tmpge1dldof                        0x000055e6dccf0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpq0_d6fxy/tmpq0_d6fxy.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad1fa956c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad1fa64db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad1fa64d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad1fa64c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq0_d6fxy                        0x00005597eb19a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ad1fab42460 __libc_start_main + 245\n6    tmpq0_d6fxy                        0x00005597eb199e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var num = n\n    for i in l...r {\n        num = num & ~(1 << i)\n    }\n    return num == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp_2d8tda4/tmp_2d8tda4.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5055a4ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5055741b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5055741988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b50557407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_2d8tda4                        0x000055c5edf873b6 <unavailable> + 5046\n5    libc.so.6                          0x00002b5055c36460 __libc_start_main + 245\n6    tmp_2d8tda4                        0x000055c5edf86fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            flag = false\n            break\n        }\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp_gwu_8wi/tmp_gwu_8wi.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9387289c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9386f80b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9386f80988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9386f7f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_gwu_8wi                        0x000055c71f1c5338 <unavailable> + 4920\n5    libc.so.6                          0x00002b9387475460 __libc_start_main + 245\n6    tmp_gwu_8wi                        0x000055c71f1c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == (r - l + 1) {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpyarf_5o_/tmpyarf_5o_.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b5475bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b54452b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b54452988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b544517b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyarf_5o_                        0x00005614068bf1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b6b54947460 __libc_start_main + 245\n6    tmpyarf_5o_                        0x00005614068bee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var mask = 0\n    while l <= r {\n        mask = mask | (1 << l)\n        l += 1\n    }\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpemg6ch17/tmpemg6ch17.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2cc7bf7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2cc78eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2cc78ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2cc78ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpemg6ch17                        0x000055611bf481b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b2cc7de3460 __libc_start_main + 245\n6    tmpemg6ch17                        0x000055611bf47e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n != 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp382azgdz/tmp382azgdz.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8377665c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b837735cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b837735c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b837735b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp382azgdz                        0x000055e1cf0c01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b8377851460 __libc_start_main + 245\n6    tmp382azgdz                        0x000055e1cf0bfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var flag = false\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        flag = true\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpz32gi1m5/tmpz32gi1m5.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b886f8dac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b886f5d1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b886f5d1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b886f5d07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz32gi1m5                        0x000055f7ba98f1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b886fac6460 __libc_start_main + 245\n6    tmpz32gi1m5                        0x000055f7ba98ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var mask = 0\n    for _ in l...r {\n        mask = mask | (1 << l)\n        l += 1\n    }\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpnmoiceyi/tmpnmoiceyi.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b741d2a1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b741cf98b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b741cf98988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b741cf977b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnmoiceyi                        0x000055b5cd33d338 <unavailable> + 4920\n5    libc.so.6                          0x00002b741d48d460 __libc_start_main + 245\n6    tmpnmoiceyi                        0x000055b5cd33cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp7qo34gc1/tmp7qo34gc1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba61add0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba61aac7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba61aac7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba61aac67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7qo34gc1                        0x000055a04a2a01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba61afbc460 __libc_start_main + 245\n6    tmp7qo34gc1                        0x000055a04a29fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpq0_d6fxy/tmpq0_d6fxy.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad1fa956c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad1fa64db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad1fa64d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad1fa64c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq0_d6fxy                        0x00005597eb19a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ad1fab42460 __libc_start_main + 245\n6    tmpq0_d6fxy                        0x00005597eb199e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpo_xti17o/tmpo_xti17o.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac0ee521c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac0ee218b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac0ee218988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac0ee2177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo_xti17o                        0x000055de11d2e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ac0ee70d460 __libc_start_main + 245\n6    tmpo_xti17o                        0x000055de11d2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpi6gymzwd/tmpi6gymzwd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acaae06dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acaadd64b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acaadd64988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acaadd637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6gymzwd                        0x000056001cb2e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acaae259460 __libc_start_main + 245\n6    tmpi6gymzwd                        0x000056001cb2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp__xyzwmf/tmp__xyzwmf.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba0f8957c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba0f864eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba0f864e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba0f864d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp__xyzwmf                        0x0000564fe576c1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba0f8b43460 __libc_start_main + 245\n6    tmp__xyzwmf                        0x0000564fe576be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = 0\n    var j = 0\n    var k = 0\n    var m = 0\n    var count = 0\n    var flag = 0\n    var flag1 = 0\n    var flag2 = 0\n    var flag3 = 0\n    var flag4 = 0\n    var flag5 = 0\n    var flag6 = 0\n    var flag7 = 0\n    var flag8 = 0\n    var flag9 = 0\n    var flag10 = 0\n    var flag11 = 0\n    var flag12 = 0\n    var flag13 = 0\n    var flag14 = 0\n    var flag15 = 0\n    var flag16 = 0\n    var flag17 = 0\n    var flag18 = 0\n    var flag19 = 0\n    var flag20 = 0\n    var flag21 = 0\n    var flag22 = 0\n    var flag23 = 0\n    var flag24 = 0\n    var flag25 = 0\n    var flag26 = 0\n    var flag27 = 0\n    var flag28 = 0\n    var flag29 = 0\n    var flag30 = 0\n    var flag31 = 0\n    var flag32 = 0\n    var flag33 = 0\n    var flag34 = 0\n    var flag35 = 0\n    var flag36 = 0\n    var flag37 = 0\n    var flag38 = 0\n    var flag39 = 0\n    var flag40 = 0\n    var flag41 = 0\n    var flag42 = 0\n    var flag43 = 0\n    var flag44 = 0\n    var flag45 = 0\n    var flag46 = 0\n    var flag47 = 0\n    var flag48 = 0\n    var flag49 = 0\n    var flag50 = 0\n    var flag51 = 0\n    var flag52 = 0\n    var flag53 = 0\n    var flag54 = 0\n    var flag55 = 0\n    var flag56 = 0\n    var flag57 = 0\n    var flag58 = 0\n    var flag59 = 0\n    var flag60 = 0\n    var flag61 = 0\n    var flag62 = 0\n    var flag63 = 0\n    var flag64 = 0\n    var flag65 = 0\n    var\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "/tmp/tmp5ynhl96t.swift:78:8: error: expected pattern\n    var\n       ^\n/tmp/tmp5ynhl96t.swift:4:9: warning: initialization of variable 'n' was never used; consider replacing with assignment to '_' or removing it\n    var n = n\n    ~~~~^\n    _\n/tmp/tmp5ynhl96t.swift:5:9: warning: initialization of variable 'l' was never used; consider replacing with assignment to '_' or removing it\n    var l = l\n    ~~~~^\n    _\n/tmp/tmp5ynhl96t.swift:6:9: warning: initialization of variable 'r' was never used; consider replacing with assignment to '_' or removing it\n    var r = r\n    ~~~~^\n    _\n/tmp/tmp5ynhl96t.swift:7:9: warning: initialization of variable 'i' was never used; consider replacing with assignment to '_' or removing it\n    var i = 0\n    ~~~~^\n    _\n/tmp/tmp5ynhl96t.swift:8:9: warning: initialization of variable 'j' was never used; consider replacing with assignment to '_' or removing it\n    var j = 0\n    ~~~~^\n    _\n/tmp/tmp5ynhl96t.swift:9:9: warning: initialization of variable 'k' was never used; consider replacing with assignment to '_' or removing it\n    var k = 0\n    ~~~~^\n    _\n/tmp/tmp5ynhl96t.swift:10:9: warning: initialization of variable 'm' was never used; consider replacing with assignment to '_' or removing it\n    var m = 0\n    ~~~~^\n    _\n/tmp/tmp5ynhl96t.swift:11:9: warning: initialization of variable 'count' was never used; consider replacing with assignment to '_' or removing it\n    var count = 0\n    ~~~~^~~~~\n    _\n/tmp/tmp5ynhl96t.swift:12:9: warning: initialization of variable 'flag' was never used; consider replacing with assignment to '_' or removing it\n    var flag = 0\n    ~~~~^~~~\n    _\n/tmp/tmp5ynhl96t.swift:13:9: warning: initialization of variable 'flag1' was never used; consider replacing with assignment to '_' or removing it\n    var flag1 = 0\n    ~~~~^~~~~\n    _\n/tmp/tmp5ynhl96t.swift:14:9: warning: initialization of variable 'flag2' was never used; consider replacing with assignment to '_' or removing it\n    var flag2 = 0\n    ~~~~^~~~~\n    _\n/tmp/tmp5ynhl96t.swift:15:9: warning: initializ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp7qo34gc1/tmp7qo34gc1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba61add0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba61aac7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba61aac7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba61aac67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7qo34gc1                        0x000055a04a2a01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba61afbc460 __libc_start_main + 245\n6    tmp7qo34gc1                        0x000055a04a29fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp__xyzwmf/tmp__xyzwmf.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba0f8957c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba0f864eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba0f864e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba0f864d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp__xyzwmf                        0x0000564fe576c1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba0f8b43460 __libc_start_main + 245\n6    tmp__xyzwmf                        0x0000564fe576be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpw6p93vek/tmpw6p93vek.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b90f4cd6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b90f49cdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b90f49cd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b90f49cc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw6p93vek                        0x000056513c465338 <unavailable> + 4920\n5    libc.so.6                          0x00002b90f4ec2460 __libc_start_main + 245\n6    tmpw6p93vek                        0x000056513c464fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpq0_d6fxy/tmpq0_d6fxy.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad1fa956c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad1fa64db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad1fa64d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad1fa64c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq0_d6fxy                        0x00005597eb19a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ad1fab42460 __libc_start_main + 245\n6    tmpq0_d6fxy                        0x00005597eb199e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for _ in l...r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpniyfsclx/tmpniyfsclx.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b60463c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b6015ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b6015a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b601597b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpniyfsclx                        0x0000556d0259d338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b6064f460 __libc_start_main + 245\n6    tmpniyfsclx                        0x0000556d0259cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for _ in l...r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpniyfsclx/tmpniyfsclx.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b60463c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b6015ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b6015a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b601597b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpniyfsclx                        0x0000556d0259d338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b6064f460 __libc_start_main + 245\n6    tmpniyfsclx                        0x0000556d0259cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp7qo34gc1/tmp7qo34gc1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba61add0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba61aac7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba61aac7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba61aac67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7qo34gc1                        0x000055a04a2a01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba61afbc460 __libc_start_main + 245\n6    tmp7qo34gc1                        0x000055a04a29fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << r) - 1\n    let y = (1 << (l - 1)) - 1\n    let z = x ^ y\n    return (n & z) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> l\n    let y = n >> r\n    return x == y\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmprn_31r8a/tmprn_31r8a.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b53fbeffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b53fbbf6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b53fbbf6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b53fbbf57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprn_31r8a                        0x0000557846eee1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b53fc0eb460 __libc_start_main + 245\n6    tmprn_31r8a                        0x0000557846eede69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp__xyzwmf/tmp__xyzwmf.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba0f8957c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba0f864eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba0f864e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba0f864d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp__xyzwmf                        0x0000564fe576c1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba0f8b43460 __libc_start_main + 245\n6    tmp__xyzwmf                        0x0000564fe576be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> l\n    let y = n << (32 - r)\n    return x & y == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpd74ht99q/tmpd74ht99q.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae60aad1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae60a7c8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae60a7c8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae60a7c77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpd74ht99q                        0x00005618580932be <unavailable> + 4798\n5    libc.so.6                          0x00002ae60acbd460 __libc_start_main + 245\n6    tmpd74ht99q                        0x0000561858092e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp__xyzwmf/tmp__xyzwmf.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba0f8957c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba0f864eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba0f864e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba0f864d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp__xyzwmf                        0x0000564fe576c1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba0f8b43460 __libc_start_main + 245\n6    tmp__xyzwmf                        0x0000564fe576be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpp_khm43d/tmpp_khm43d.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac595f97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac595c8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac595c8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac595c8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp_khm43d                        0x000055a1fb56d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ac596183460 __libc_start_main + 245\n6    tmpp_khm43d                        0x000055a1fb56ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    let mask = mask << l\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "/tmp/tmp02bami26.swift:5:9: error: invalid redeclaration of 'mask'\n    let mask = mask << l\n        ^\n/tmp/tmp02bami26.swift:4:9: note: 'mask' previously declared here\n    let mask = (1 << (r - l + 1)) - 1\n        ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var mask = 0\n    for i in l...r {\n        mask = mask | (1 << i)\n    }\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpq3uu82bi/tmpq3uu82bi.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9e8c9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9e8996b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9e8996988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9e89957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq3uu82bi                        0x000055e5bc980338 <unavailable> + 4920\n5    libc.so.6                          0x00002af9e8e8b460 __libc_start_main + 245\n6    tmpq3uu82bi                        0x000055e5bc97ffe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            count += 1\n        }\n        n >>= 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while n > 0 {\n        let last_bit = n & 1\n        if last_bit == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l -= 1\n        r -= 1\n    }\n    if l > 0 {\n        flag = false\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp880rp1_n/tmp880rp1_n.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b49b8904c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b49b85fbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b49b85fb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b49b85fa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp880rp1_n                        0x000055d5720c91b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b49b8af0460 __libc_start_main + 245\n6    tmp880rp1_n                        0x000055d5720c8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        let bit = n & 1\n        if bit == 0 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == l - r + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpstmip3yq/tmpstmip3yq.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab99facdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab99f7c4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab99f7c4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab99f7c37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpstmip3yq                        0x0000560ef4d4a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab99fcb9460 __libc_start_main + 245\n6    tmpstmip3yq                        0x0000560ef4d49e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> l\n    let y = n << (32 - r)\n    return x & y == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpd74ht99q/tmpd74ht99q.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae60aad1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae60a7c8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae60a7c8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae60a7c77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpd74ht99q                        0x00005618580932be <unavailable> + 4798\n5    libc.so.6                          0x00002ae60acbd460 __libc_start_main + 245\n6    tmpd74ht99q                        0x0000561858092e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpswtr8_gq/tmpswtr8_gq.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3e1be97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3e1bb8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3e1bb8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3e1bb8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpswtr8_gq                        0x000055cfcb6141b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b3e1c083460 __libc_start_main + 245\n6    tmpswtr8_gq                        0x000055cfcb613e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp7qo34gc1/tmp7qo34gc1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba61add0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba61aac7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba61aac7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba61aac67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7qo34gc1                        0x000055a04a2a01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba61afbc460 __libc_start_main + 245\n6    tmp7qo34gc1                        0x000055a04a29fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpp_khm43d/tmpp_khm43d.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac595f97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac595c8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac595c8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac595c8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp_khm43d                        0x000055a1fb56d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ac596183460 __libc_start_main + 245\n6    tmpp_khm43d                        0x000055a1fb56ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpe14z8o7v/tmpe14z8o7v.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba81d593c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba81d28ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba81d28a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba81d2897b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe14z8o7v                        0x000055d4c674d338 <unavailable> + 4920\n5    libc.so.6                          0x00002ba81d77f460 __libc_start_main + 245\n6    tmpe14z8o7v                        0x000055d4c674cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> l\n    let y = n >> r\n    return x == y\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmprn_31r8a/tmprn_31r8a.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b53fbeffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b53fbbf6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b53fbbf6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b53fbbf57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprn_31r8a                        0x0000557846eee1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b53fc0eb460 __libc_start_main + 245\n6    tmprn_31r8a                        0x0000557846eede69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return (n & ((1 << (r - l + 1)) - 1) << l) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmphkl1mgn3/tmphkl1mgn3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b22dec6ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b22de961b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b22de961988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b22de9607b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphkl1mgn3                        0x000055f3cf0741b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b22dee56460 __libc_start_main + 245\n6    tmphkl1mgn3                        0x000055f3cf073e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var res = 0\n    while n > 0 {\n        if n % 2 == 1 {\n            res += 1\n        }\n        n /= 2\n    }\n    if res == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp_eo9eelt/tmp_eo9eelt.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b206f560c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b206f257b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b206f257988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b206f2567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_eo9eelt                        0x0000559efea83248 <unavailable> + 4680\n5    libc.so.6                          0x00002b206f74c460 __libc_start_main + 245\n6    tmp_eo9eelt                        0x0000559efea82ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpi6gymzwd/tmpi6gymzwd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acaae06dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acaadd64b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acaadd64988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acaadd637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6gymzwd                        0x000056001cb2e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acaae259460 __libc_start_main + 245\n6    tmpi6gymzwd                        0x000056001cb2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpp_khm43d/tmpp_khm43d.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac595f97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac595c8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac595c8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac595c8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp_khm43d                        0x000055a1fb56d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ac596183460 __libc_start_main + 245\n6    tmpp_khm43d                        0x000055a1fb56ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        let rem = n % 2\n        if rem == 1 {\n            count += 1\n        }\n        n /= 2\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp_ybcndpt/tmp_ybcndpt.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b419ce94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b419cb8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b419cb8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b419cb8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ybcndpt                        0x000055b04468b248 <unavailable> + 4680\n5    libc.so.6                          0x00002b419d080460 __libc_start_main + 245\n6    tmp_ybcndpt                        0x000055b04468aef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for _ in l...r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpniyfsclx/tmpniyfsclx.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b60463c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b6015ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b6015a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b601597b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpniyfsclx                        0x0000556d0259d338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b6064f460 __libc_start_main + 245\n6    tmpniyfsclx                        0x0000556d0259cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    let res = n & (mask << l)\n    return res == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmppc8vnl04/tmppc8vnl04.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b566b8cfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b566b5c6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b566b5c6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b566b5c57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppc8vnl04                        0x000055808ba701b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b566babb460 __libc_start_main + 245\n6    tmppc8vnl04                        0x000055808ba6fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while (n > 0) {\n        if (n & 1 == 1) {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == (r - l + 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpfasshtj6/tmpfasshtj6.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad55142ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad551121b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad551121988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5511207b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfasshtj6                        0x0000558e088fa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ad551616460 __libc_start_main + 245\n6    tmpfasshtj6                        0x0000558e088f9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << l) - 1\n    let y = (1 << r)\n    let z = y | x\n    return (n & z) == z\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpc1_ktwju/tmpc1_ktwju.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b30e2cf2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b30e29e9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b30e29e9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b30e29e87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc1_ktwju                        0x0000564a23c7f1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b30e2ede460 __libc_start_main + 245\n6    tmpc1_ktwju                        0x0000564a23c7ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpe14z8o7v/tmpe14z8o7v.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba81d593c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba81d28ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba81d28a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba81d2897b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe14z8o7v                        0x000055d4c674d338 <unavailable> + 4920\n5    libc.so.6                          0x00002ba81d77f460 __libc_start_main + 245\n6    tmpe14z8o7v                        0x000055d4c674cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return (n >> (r - 1)) & 1 == 1 && (n >> (l - 1)) & 1 == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp7iv7uppw/tmp7iv7uppw.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b22cbe09c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b22cbb00b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b22cbb00988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b22cbaff7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7iv7uppw                        0x00005570de1f01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b22cbff5460 __libc_start_main + 245\n6    tmp7iv7uppw                        0x00005570de1efe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << l) - 1\n    let mask2 = (1 << r) - 1\n    let mask3 = mask ^ mask2\n    return (n & mask3) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for _ in l...r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpniyfsclx/tmpniyfsclx.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b60463c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b6015ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b6015a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b601597b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpniyfsclx                        0x0000556d0259d338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b6064f460 __libc_start_main + 245\n6    tmpniyfsclx                        0x0000556d0259cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for _ in 0..<l {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    for _ in l..<r {\n        if n & 1 == 0 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    for _ in r..<32 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == 32\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp7c3e85nw/tmp7c3e85nw.swift:42: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b40032c2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4002fb9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4002fb9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4002fb87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7c3e85nw                        0x000055fe61623338 <unavailable> + 4920\n5    libc.so.6                          0x00002b40034ae460 __libc_start_main + 245\n6    tmp7c3e85nw                        0x000055fe61622fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpe14z8o7v/tmpe14z8o7v.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba81d593c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba81d28ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba81d28a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba81d2897b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe14z8o7v                        0x000055d4c674d338 <unavailable> + 4920\n5    libc.so.6                          0x00002ba81d77f460 __libc_start_main + 245\n6    tmpe14z8o7v                        0x000055d4c674cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpi6gymzwd/tmpi6gymzwd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acaae06dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acaadd64b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acaadd64988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acaadd637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6gymzwd                        0x000056001cb2e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acaae259460 __libc_start_main + 245\n6    tmpi6gymzwd                        0x000056001cb2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for _ in l...r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n >>= 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpbwkdkfal/tmpbwkdkfal.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7c6fba7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7c6f89eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7c6f89e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7c6f89d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbwkdkfal                        0x0000555adddf1338 <unavailable> + 4920\n5    libc.so.6                          0x00002b7c6fd93460 __libc_start_main + 245\n6    tmpbwkdkfal                        0x0000555adddf0fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpe14z8o7v/tmpe14z8o7v.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba81d593c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba81d28ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba81d28a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba81d2897b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe14z8o7v                        0x000055d4c674d338 <unavailable> + 4920\n5    libc.so.6                          0x00002ba81d77f460 __libc_start_main + 245\n6    tmpe14z8o7v                        0x000055d4c674cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpcmbeuxvw/tmpcmbeuxvw.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acda069cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acda0393b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acda0393988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acda03927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcmbeuxvw                        0x000055e74624d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acda0888460 __libc_start_main + 245\n6    tmpcmbeuxvw                        0x000055e74624ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpyrtte306/tmpyrtte306.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b13a70c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b13767b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b13767988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b137667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyrtte306                        0x00005643aefa9338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b13c5c460 __libc_start_main + 245\n6    tmpyrtte306                        0x00005643aefa8fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpyrtte306/tmpyrtte306.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b13a70c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b13767b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b13767988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b137667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyrtte306                        0x00005643aefa9338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b13c5c460 __libc_start_main + 245\n6    tmpyrtte306                        0x00005643aefa8fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    for i in l...r {\n        n = n & ~(1 << i)\n    }\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp1q3wpsy9/tmp1q3wpsy9.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4512d3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac450fcab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac450fca988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac450fc97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1q3wpsy9                        0x000055bd96a473b6 <unavailable> + 5046\n5    libc.so.6                          0x00002ac4514bf460 __libc_start_main + 245\n6    tmp1q3wpsy9                        0x000055bd96a46fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp7qo34gc1/tmp7qo34gc1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba61add0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba61aac7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba61aac7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba61aac67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7qo34gc1                        0x000055a04a2a01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba61afbc460 __libc_start_main + 245\n6    tmp7qo34gc1                        0x000055a04a29fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while n > 0 {\n        let bit = n & 1\n        if bit == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l -= 1\n        r -= 1\n    }\n    if l > 0 {\n        flag = false\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpheyqxe14/tmpheyqxe14.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac75f02ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac75ed21b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac75ed21988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac75ed207b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpheyqxe14                        0x0000560556be51b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ac75f216460 __libc_start_main + 245\n6    tmpheyqxe14                        0x0000560556be4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n & ((1 << (r - l + 1)) - 1) << l\n    return x == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp8nf4pola/tmp8nf4pola.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b845d5ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b845d2d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b845d2d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b845d2d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8nf4pola                        0x000055830d5a31b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b845d7c9460 __libc_start_main + 245\n6    tmp8nf4pola                        0x000055830d5a2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpe14z8o7v/tmpe14z8o7v.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba81d593c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba81d28ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba81d28a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba81d2897b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe14z8o7v                        0x000055d4c674d338 <unavailable> + 4920\n5    libc.so.6                          0x00002ba81d77f460 __libc_start_main + 245\n6    tmpe14z8o7v                        0x000055d4c674cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    let binary = String(n, radix: 2)\n    let start = binary.index(binary.startIndex, offsetBy: l - 1)\n    let end = binary.index(binary.startIndex, offsetBy: r)\n    let range = start..<end\n    let subString = binary[range]\n    for char in subString {\n        if char == \"0\" {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp255ar_hd/tmp255ar_hd.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4c08f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4c05eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4c05ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4c05e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp255ar_hd                        0x000055e39f842698 <unavailable> + 5784\n5    libc.so.6                          0x00002ac4c0adf460 __libc_start_main + 245\n6    tmp255ar_hd                        0x000055e39f842349 <unavailable> + 4937\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return (n & (Int(pow(2, r - l + 1)) - 1) << l) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "/tmp/tmp27fgcev8.swift:4:22: error: cannot find 'pow' in scope\n    return (n & (Int(pow(2, r - l + 1)) - 1) << l) == 0\n                     ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpjhk6jr8r/tmpjhk6jr8r.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b184f96ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b184f665b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b184f665988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b184f6647b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjhk6jr8r                        0x000056147d021338 <unavailable> + 4920\n5    libc.so.6                          0x00002b184fb5a460 __libc_start_main + 245\n6    tmpjhk6jr8r                        0x000056147d020fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    while l <= r {\n        if n & 1 == 0 {\n            return false\n        }\n        n = n >> 1\n        l += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp2l8o0yag/tmp2l8o0yag.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aef9e04ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aef9dd45b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aef9dd45988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aef9dd447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2l8o0yag                        0x000055b9c15011b8 <unavailable> + 4536\n5    libc.so.6                          0x00002aef9e23a460 __libc_start_main + 245\n6    tmp2l8o0yag                        0x000055b9c1500e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    let result = n & (mask << l)\n    return result == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmptxpek47q/tmptxpek47q.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6f849bcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6f846b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6f846b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6f846b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptxpek47q                        0x00005645a20831b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b6f84ba8460 __libc_start_main + 245\n6    tmptxpek47q                        0x00005645a2082e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var i = 0\n    while i < r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n        i += 1\n    }\n    if count == r - l + 1 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp_5nqkizl/tmp_5nqkizl.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b779a4adc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b779a1a4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b779a1a4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b779a1a37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_5nqkizl                        0x0000561ecd7481b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b779a699460 __libc_start_main + 245\n6    tmp_5nqkizl                        0x0000561ecd747e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    for i in l...r {\n        n = n & ~(1 << i)\n    }\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpgeshbdj9/tmpgeshbdj9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aed3ae3cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aed3ab33b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aed3ab33988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aed3ab327b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgeshbdj9                        0x000056465ef7e3b6 <unavailable> + 5046\n5    libc.so.6                          0x00002aed3b028460 __libc_start_main + 245\n6    tmpgeshbdj9                        0x000056465ef7dfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        let rem = n % 2\n        if rem == 1 {\n            count += 1\n        }\n        n /= 2\n    }\n    return count == (r - l + 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpb64rggm3/tmpb64rggm3.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad1d2d1dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad1d2a14b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad1d2a14988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad1d2a137b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb64rggm3                        0x0000563c2eb66248 <unavailable> + 4680\n5    libc.so.6                          0x00002ad1d2f09460 __libc_start_main + 245\n6    tmpb64rggm3                        0x0000563c2eb65ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpi6gymzwd/tmpi6gymzwd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acaae06dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acaadd64b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acaadd64988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acaadd637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6gymzwd                        0x000056001cb2e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acaae259460 __libc_start_main + 245\n6    tmpi6gymzwd                        0x000056001cb2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    while l <= r {\n        if n & 1 == 0 {\n            return false\n        }\n        n >>= 1\n        l += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp56gjuq5o/tmp56gjuq5o.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeeb11f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeeb0eeeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeeb0eee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeeb0eed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp56gjuq5o                        0x000055610388e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002aeeb13e3460 __libc_start_main + 245\n6    tmp56gjuq5o                        0x000055610388de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> l\n    let y = n << (32 - r)\n    let z = x & y\n    return z == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp1z9ftgcf/tmp1z9ftgcf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad3247fbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad3244f2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad3244f2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad3244f17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1z9ftgcf                        0x000055827d2052be <unavailable> + 4798\n5    libc.so.6                          0x00002ad3249e7460 __libc_start_main + 245\n6    tmp1z9ftgcf                        0x000055827d204e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    for i in l...r {\n        n = n & ~(1 << i)\n    }\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp1q3wpsy9/tmp1q3wpsy9.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4512d3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac450fcab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac450fca988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac450fc97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1q3wpsy9                        0x000055bd96a473b6 <unavailable> + 5046\n5    libc.so.6                          0x00002ac4514bf460 __libc_start_main + 245\n6    tmp1q3wpsy9                        0x000055bd96a46fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpi6gymzwd/tmpi6gymzwd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acaae06dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acaadd64b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acaadd64988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acaadd637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6gymzwd                        0x000056001cb2e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acaae259460 __libc_start_main + 245\n6    tmpi6gymzwd                        0x000056001cb2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    for i in l...r {\n        n = n & ~(1 << i)\n    }\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp1q3wpsy9/tmp1q3wpsy9.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4512d3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac450fcab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac450fca988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac450fc97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1q3wpsy9                        0x000055bd96a473b6 <unavailable> + 5046\n5    libc.so.6                          0x00002ac4514bf460 __libc_start_main + 245\n6    tmp1q3wpsy9                        0x000055bd96a46fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var mask = 0\n    for _ in l...r {\n        mask = mask | (1 << l)\n        l += 1\n    }\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpnmoiceyi/tmpnmoiceyi.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b741d2a1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b741cf98b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b741cf98988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b741cf977b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnmoiceyi                        0x000055b5cd33d338 <unavailable> + 4920\n5    libc.so.6                          0x00002b741d48d460 __libc_start_main + 245\n6    tmpnmoiceyi                        0x000055b5cd33cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    while l <= r {\n        if n & 1 == 0 {\n            return false\n        }\n        n = n >> 1\n        l += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp2l8o0yag/tmp2l8o0yag.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aef9e04ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aef9dd45b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aef9dd45988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aef9dd447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2l8o0yag                        0x000055b9c15011b8 <unavailable> + 4536\n5    libc.so.6                          0x00002aef9e23a460 __libc_start_main + 245\n6    tmp2l8o0yag                        0x000055b9c1500e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp__xyzwmf/tmp__xyzwmf.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba0f8957c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba0f864eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba0f864e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba0f864d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp__xyzwmf                        0x0000564fe576c1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba0f8b43460 __libc_start_main + 245\n6    tmp__xyzwmf                        0x0000564fe576be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    let x = n >> l\n    return x & mask == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpfjvldro5/tmpfjvldro5.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b320a573c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b320a26ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b320a26a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b320a2697b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfjvldro5                        0x00005613e4c4b1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b320a75f460 __libc_start_main + 245\n6    tmpfjvldro5                        0x00005613e4c4ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return (n & (1 << l) - 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpiphp4c3c/tmpiphp4c3c.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b48d417ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b48d3e71b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b48d3e71988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b48d3e707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpiphp4c3c                        0x00005594205411b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b48d4366460 __libc_start_main + 245\n6    tmpiphp4c3c                        0x0000559420540e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    let x = n >> l\n    return x & mask == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpfjvldro5/tmpfjvldro5.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b320a573c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b320a26ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b320a26a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b320a2697b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfjvldro5                        0x00005613e4c4b1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b320a75f460 __libc_start_main + 245\n6    tmpfjvldro5                        0x00005613e4c4ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpw6p93vek/tmpw6p93vek.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b90f4cd6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b90f49cdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b90f49cd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b90f49cc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw6p93vek                        0x000056513c465338 <unavailable> + 4920\n5    libc.so.6                          0x00002b90f4ec2460 __libc_start_main + 245\n6    tmpw6p93vek                        0x000056513c464fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpp_khm43d/tmpp_khm43d.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac595f97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac595c8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac595c8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac595c8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp_khm43d                        0x000055a1fb56d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ac596183460 __libc_start_main + 245\n6    tmpp_khm43d                        0x000055a1fb56ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = 0\n    var count = 0\n    while i < r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n        i += 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpedj53sy5/tmpedj53sy5.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b93c238fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b93c2086b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b93c2086988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b93c20857b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpedj53sy5                        0x00005593f85e61b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b93c257b460 __libc_start_main + 245\n6    tmpedj53sy5                        0x00005593f85e5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp7qo34gc1/tmp7qo34gc1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba61add0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba61aac7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba61aac7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba61aac67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7qo34gc1                        0x000055a04a2a01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba61afbc460 __libc_start_main + 245\n6    tmp7qo34gc1                        0x000055a04a29fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return (n & ((1 << (r - l + 1)) - 1) << l) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmphkl1mgn3/tmphkl1mgn3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b22dec6ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b22de961b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b22de961988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b22de9607b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphkl1mgn3                        0x000055f3cf0741b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b22dee56460 __libc_start_main + 245\n6    tmphkl1mgn3                        0x000055f3cf073e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    let mask = (1 << (r - l + 1)) - 1\n    n = n >> l\n    n = n & mask\n    return n == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpcfs0hz1b/tmpcfs0hz1b.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b288b088c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b288ad7fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b288ad7f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b288ad7e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcfs0hz1b                        0x000056403a25e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b288b274460 __libc_start_main + 245\n6    tmpcfs0hz1b                        0x000056403a25de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> (l - 1)\n    let y = n << (32 - r)\n    let z = x & y\n    return z == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpjzshg7tr/tmpjzshg7tr.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeb6ace3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeb6a9dab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeb6a9da988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeb6a9d97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjzshg7tr                        0x0000562aeac522be <unavailable> + 4798\n5    libc.so.6                          0x00002aeb6aecf460 __libc_start_main + 245\n6    tmpjzshg7tr                        0x0000562aeac51e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpe14z8o7v/tmpe14z8o7v.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba81d593c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba81d28ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba81d28a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba81d2897b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe14z8o7v                        0x000055d4c674d338 <unavailable> + 4920\n5    libc.so.6                          0x00002ba81d77f460 __libc_start_main + 245\n6    tmpe14z8o7v                        0x000055d4c674cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpi6gymzwd/tmpi6gymzwd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acaae06dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acaadd64b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acaadd64988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acaadd637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6gymzwd                        0x000056001cb2e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acaae259460 __libc_start_main + 245\n6    tmpi6gymzwd                        0x000056001cb2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> (r - 1)\n    let y = n << (32 - l)\n    let z = x & y\n    return z == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpv9sfsz3m/tmpv9sfsz3m.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b23b14f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b23b11ecb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b23b11ec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b23b11eb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv9sfsz3m                        0x0000556db67d42be <unavailable> + 4798\n5    libc.so.6                          0x00002b23b16e1460 __libc_start_main + 245\n6    tmpv9sfsz3m                        0x0000556db67d3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask << l) == mask << l\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpkqfl32kq/tmpkqfl32kq.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba57b6d7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba57b3ceb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba57b3ce988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba57b3cd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkqfl32kq                        0x000055d1b14bf1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba57b8c3460 __libc_start_main + 245\n6    tmpkqfl32kq                        0x000055d1b14bee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var num = n\n    for i in l...r {\n        num = num & ~(1 << i)\n    }\n    return num == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp_2d8tda4/tmp_2d8tda4.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5055a4ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5055741b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5055741988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b50557407b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_2d8tda4                        0x000055c5edf873b6 <unavailable> + 5046\n5    libc.so.6                          0x00002b5055c36460 __libc_start_main + 245\n6    tmp_2d8tda4                        0x000055c5edf86fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let binary = String(n, radix: 2)\n    let start = binary.index(binary.startIndex, offsetBy: l - 1)\n    let end = binary.index(binary.startIndex, offsetBy: r)\n    let sub = binary[start..<end]\n    for char in sub {\n        if char == \"0\" {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpy9io8tsb/tmpy9io8tsb.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba345ff5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba345cecb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba345cec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba345ceb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpy9io8tsb                        0x00005627649a1698 <unavailable> + 5784\n5    libc.so.6                          0x00002ba3461e1460 __libc_start_main + 245\n6    tmpy9io8tsb                        0x00005627649a1349 <unavailable> + 4937\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpi6gymzwd/tmpi6gymzwd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acaae06dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acaadd64b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acaadd64988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acaadd637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6gymzwd                        0x000056001cb2e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acaae259460 __libc_start_main + 245\n6    tmpi6gymzwd                        0x000056001cb2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var i = 0\n    while i < l {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n        i += 1\n    }\n    while i < r {\n        if n & 1 == 0 {\n            count += 1\n        }\n        n = n >> 1\n        i += 1\n    }\n    while i < 32 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n        i += 1\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp2ol_7ukb/tmp2ol_7ukb.swift:46: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abf40e51c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abf40b48b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abf40b48988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abf40b477b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2ol_7ukb                        0x000055a795a511b8 <unavailable> + 4536\n5    libc.so.6                          0x00002abf4103d460 __libc_start_main + 245\n6    tmp2ol_7ukb                        0x000055a795a50e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    let y = x << l\n    return (n & y) == y\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmptabggxxy/tmptabggxxy.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9e7ef5ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9e7ec51b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9e7ec51988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9e7ec507b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptabggxxy                        0x000055d1715f41b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b9e7f146460 __libc_start_main + 245\n6    tmptabggxxy                        0x000055d1715f3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = 0\n    var j = 0\n    var k = 0\n    var m = 0\n    var count = 0\n    var flag = false\n    var temp = 0\n    var temp1 = 0\n    var temp2 = 0\n    var temp3 = 0\n    var temp4 = 0\n    var temp5 = 0\n    var temp6 = 0\n    var temp7 = 0\n    var temp8 = 0\n    var temp9 = 0\n    var temp10 = 0\n    var temp11 = 0\n    var temp12 = 0\n    var temp13 = 0\n    var temp14 = 0\n    var temp15 = 0\n    var temp16 = 0\n    var temp17 = 0\n    var temp18 = 0\n    var temp19 = 0\n    var temp20 = 0\n    var temp21 = 0\n    var temp22 = 0\n    var temp23 = 0\n    var temp24 = 0\n    var temp25 = 0\n    var temp26 = 0\n    var temp27 = 0\n    var temp28 = 0\n    var temp29 = 0\n    var temp30 = 0\n    var temp31 = 0\n    var temp32 = 0\n    var temp33 = 0\n    var temp34 = 0\n    var temp35 = 0\n    var temp36 = 0\n    var temp37 = 0\n    var temp38 = 0\n    var temp39 = 0\n    var temp40 = 0\n    var temp41 = 0\n    var temp42 = 0\n    var temp43 = 0\n    var temp44 = 0\n    var temp45 = 0\n    var temp46 = 0\n    var temp47 = 0\n    var temp48 = 0\n    var temp49 = 0\n    var temp50 = 0\n    var temp51 = 0\n    var temp52 = 0\n    var temp53 = 0\n    var temp54 = 0\n    var temp55 = 0\n    var temp56 = 0\n    var temp57 = 0\n    var temp58 = 0\n    var temp59 = 0\n    var temp60 = 0\n    var temp61 = 0\n    var temp62 = 0\n    var temp63 = 0\n    var temp64 = 0\n    var temp\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "/tmp/tmpah5kt9l6.swift:78:9: error: type annotation missing in pattern\n    var temp\n        ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpi6gymzwd/tmpi6gymzwd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acaae06dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acaadd64b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acaadd64988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acaadd637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi6gymzwd                        0x000056001cb2e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acaae259460 __libc_start_main + 245\n6    tmpi6gymzwd                        0x000056001cb2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp7qo34gc1/tmp7qo34gc1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba61add0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba61aac7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba61aac7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba61aac67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7qo34gc1                        0x000055a04a2a01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba61afbc460 __libc_start_main + 245\n6    tmp7qo34gc1                        0x000055a04a29fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp7qo34gc1/tmp7qo34gc1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba61add0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba61aac7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba61aac7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba61aac67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7qo34gc1                        0x000055a04a2a01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba61afbc460 __libc_start_main + 245\n6    tmp7qo34gc1                        0x000055a04a29fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> l\n    let y = n << (32 - r)\n    return x & y == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpd74ht99q/tmpd74ht99q.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae60aad1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae60a7c8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae60a7c8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae60a7c77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpd74ht99q                        0x00005618580932be <unavailable> + 4798\n5    libc.so.6                          0x00002ae60acbd460 __libc_start_main + 245\n6    tmpd74ht99q                        0x0000561858092e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    for i in l...r {\n        n = n & ~(1 << i)\n    }\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp1q3wpsy9/tmp1q3wpsy9.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4512d3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac450fcab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac450fca988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac450fc97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1q3wpsy9                        0x000055bd96a473b6 <unavailable> + 5046\n5    libc.so.6                          0x00002ac4514bf460 __libc_start_main + 245\n6    tmp1q3wpsy9                        0x000055bd96a46fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    n = n >> (l - 1)\n    n = n << (r - l + 1)\n    n = n >> (r - l + 1)\n    return n == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpnp27s9m8/tmpnp27s9m8.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afbb101cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afbb0d13b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afbb0d13988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afbb0d127b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnp27s9m8                        0x0000560780edb1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002afbb1208460 __libc_start_main + 245\n6    tmpnp27s9m8                        0x0000560780edae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpswtr8_gq/tmpswtr8_gq.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3e1be97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3e1bb8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3e1bb8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3e1bb8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpswtr8_gq                        0x000055cfcb6141b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b3e1c083460 __libc_start_main + 245\n6    tmpswtr8_gq                        0x000055cfcb613e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> (l - 1)\n    let y = n << (32 - r)\n    let z = x & y\n    return z == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpjzshg7tr/tmpjzshg7tr.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeb6ace3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeb6a9dab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeb6a9da988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeb6a9d97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjzshg7tr                        0x0000562aeac522be <unavailable> + 4798\n5    libc.so.6                          0x00002aeb6aecf460 __libc_start_main + 245\n6    tmpjzshg7tr                        0x0000562aeac51e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    while l <= r {\n        if n & (1 << l) == 0 {\n            return false\n        }\n        l += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpgwfdxt0h/tmpgwfdxt0h.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b122c3fdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b122c0f4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b122c0f4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b122c0f37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgwfdxt0h                        0x0000560a96a631b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b122c5e9460 __libc_start_main + 245\n6    tmpgwfdxt0h                        0x0000560a96a62e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> l\n    let y = n << (32 - r)\n    let z = x & y\n    return z == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp1z9ftgcf/tmp1z9ftgcf.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad3247fbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad3244f2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad3244f2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad3244f17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1z9ftgcf                        0x000055827d2052be <unavailable> + 4798\n5    libc.so.6                          0x00002ad3249e7460 __libc_start_main + 245\n6    tmp1z9ftgcf                        0x000055827d204e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpyrtte306/tmpyrtte306.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b13a70c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b13767b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b13767988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b137667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyrtte306                        0x00005643aefa9338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b13c5c460 __libc_start_main + 245\n6    tmpyrtte306                        0x00005643aefa8fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    let binary = String(n, radix: 2)\n    let start = binary.index(binary.startIndex, offsetBy: l - 1)\n    let end = binary.index(binary.startIndex, offsetBy: r)\n    let subString = binary[start..<end]\n    for char in subString {\n        if char == \"0\" {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpn05evv36/tmpn05evv36.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab7a6fd9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab7a6cd0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab7a6cd0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab7a6ccf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn05evv36                        0x000055be39374698 <unavailable> + 5784\n5    libc.so.6                          0x00002ab7a71c5460 __libc_start_main + 245\n6    tmpn05evv36                        0x000055be39374349 <unavailable> + 4937\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << (l - 1))) == (mask << (l - 1))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpvgvcbt7e/tmpvgvcbt7e.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a49250c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a48f47b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a48f47988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a48f467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvgvcbt7e                        0x0000560c1bb011b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b5a4943c460 __libc_start_main + 245\n6    tmpvgvcbt7e                        0x0000560c1bb00e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        let rem = n % 2\n        if rem == 0 {\n            count += 1\n        }\n        n = n / 2\n    }\n    if count == l + r - 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmphtuuktle/tmphtuuktle.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aade7856c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aade754db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aade754d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aade754c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphtuuktle                        0x000055b01f9a12c6 <unavailable> + 4806\n5    libc.so.6                          0x00002aade7a42460 __libc_start_main + 245\n6    tmphtuuktle                        0x000055b01f9a0ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n >> l) & mask == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp4uasme1e/tmp4uasme1e.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aefd5900c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aefd55f7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aefd55f7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aefd55f67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4uasme1e                        0x000055a29f1781b8 <unavailable> + 4536\n5    libc.so.6                          0x00002aefd5aec460 __libc_start_main + 245\n6    tmp4uasme1e                        0x000055a29f177e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var check = true\n    while l <= r {\n        if n & 1 == 0 {\n            check = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return check\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpyrasviwk/tmpyrasviwk.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9feb138c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9feae2fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9feae2f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9feae2e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyrasviwk                        0x000055dc3dcd61b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b9feb324460 __libc_start_main + 245\n6    tmpyrasviwk                        0x000055dc3dcd5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return ((n >> (r - 1)) & 1) == 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpxpwccm6f/tmpxpwccm6f.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b37c0a5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b37c0756b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b37c0756988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b37c07557b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxpwccm6f                        0x000055a7572c51b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b37c0c4b460 __libc_start_main + 245\n6    tmpxpwccm6f                        0x000055a7572c4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpswtr8_gq/tmpswtr8_gq.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3e1be97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3e1bb8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3e1bb8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3e1bb8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpswtr8_gq                        0x000055cfcb6141b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b3e1c083460 __libc_start_main + 245\n6    tmpswtr8_gq                        0x000055cfcb613e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> (l - 1)\n    let y = n << (32 - r)\n    return (x & y) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpx9pvrfi2/tmpx9pvrfi2.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aac50194c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aac4fe8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aac4fe8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aac4fe8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx9pvrfi2                        0x000055b8b27d02be <unavailable> + 4798\n5    libc.so.6                          0x00002aac50380460 __libc_start_main + 245\n6    tmpx9pvrfi2                        0x000055b8b27cfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var temp = n\n    var count = 0\n    while temp > 0 {\n        count += 1\n        temp /= 10\n    }\n    if r > count {\n        r = count\n    }\n    var i = l\n    while i <= r {\n        var temp = n\n        var j = 1\n        while j < i {\n            temp /= 10\n            j += 1\n        }\n        if temp % 2 == 1 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp2suix7fj/tmp2suix7fj.swift:46: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5158d03c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b51589fab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b51589fa988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b51589f97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2suix7fj                        0x00005586460ae2c6 <unavailable> + 4806\n5    libc.so.6                          0x00002b5158eef460 __libc_start_main + 245\n6    tmp2suix7fj                        0x00005586460adef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpq0_d6fxy/tmpq0_d6fxy.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad1fa956c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad1fa64db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad1fa64d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad1fa64c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq0_d6fxy                        0x00005597eb19a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ad1fab42460 __libc_start_main + 245\n6    tmpq0_d6fxy                        0x00005597eb199e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpp_khm43d/tmpp_khm43d.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac595f97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac595c8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac595c8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac595c8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp_khm43d                        0x000055a1fb56d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ac596183460 __libc_start_main + 245\n6    tmpp_khm43d                        0x000055a1fb56ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    let x = n >> l\n    return (x & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpl961j1z4/tmpl961j1z4.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2c8bc42c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2c8b939b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2c8b939988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2c8b9387b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl961j1z4                        0x00005604f8f0d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b2c8be2e460 __libc_start_main + 245\n6    tmpl961j1z4                        0x00005604f8f0ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = 0\n    var count = 0\n    while i < r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n        i += 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpedj53sy5/tmpedj53sy5.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b93c238fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b93c2086b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b93c2086988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b93c20857b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpedj53sy5                        0x00005593f85e61b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b93c257b460 __libc_start_main + 245\n6    tmpedj53sy5                        0x00005593f85e5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmplzingvcj/tmplzingvcj.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8488780c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8488477b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8488477988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84884767b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplzingvcj                        0x0000556bb6dec1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b848896c460 __libc_start_main + 245\n6    tmplzingvcj                        0x0000556bb6debe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmp5da_ou5l/tmp5da_ou5l.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af47f7f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af47f4eab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af47f4ea988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af47f4e97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5da_ou5l                        0x0000557a5d6aa1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af47f9df460 __libc_start_main + 245\n6    tmp5da_ou5l                        0x0000557a5d6a9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510500,
      "stdout": "",
      "stderr": "tmpswtr8_gq/tmpswtr8_gq.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3e1be97c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3e1bb8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3e1bb8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3e1bb8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpswtr8_gq                        0x000055cfcb6141b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b3e1c083460 __libc_start_main + 245\n6    tmpswtr8_gq                        0x000055cfcb613e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << r) - 1\n    let result = n & mask\n    return result == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp16nw_ot1/tmp16nw_ot1.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0883ec0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0883bb7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0883bb7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0883bb67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp16nw_ot1                        0x000055c8d081c1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b08840ac460 __libc_start_main + 245\n6    tmp16nw_ot1                        0x000055c8d081be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for i in l...r {\n        let bit = n & (1 << i)\n        if bit == 0 {\n            flag = false\n            break\n        }\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpynxvq2bj/tmpynxvq2bj.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4795e06c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4795afdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4795afd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4795afc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpynxvq2bj                        0x00005637f5f3e338 <unavailable> + 4920\n5    libc.so.6                          0x00002b4795ff2460 __libc_start_main + 245\n6    tmpynxvq2bj                        0x00005637f5f3dfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << r) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmp76wjwaoh/tmp76wjwaoh.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad3700d6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad36fdcdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad36fdcd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad36fdcc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp76wjwaoh                        0x0000561f40dca1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ad3702c2460 __libc_start_main + 245\n6    tmp76wjwaoh                        0x0000561f40dc9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while l <= r {\n        if n & (1 << l) == 0 {\n            count += 1\n        }\n        l += 1\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpvd3dzyxw/tmpvd3dzyxw.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b331afb7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b331acaeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b331acae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b331acad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvd3dzyxw                        0x000055ef723381b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b331b1a3460 __libc_start_main + 245\n6    tmpvd3dzyxw                        0x000055ef72337e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for _ in l...r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpniyfsclx/tmpniyfsclx.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b60463c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b6015ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b6015a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b601597b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpniyfsclx                        0x0000556d0259d338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b6064f460 __libc_start_main + 245\n6    tmpniyfsclx                        0x0000556d0259cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123375,
      "stdout": "",
      "stderr": "tmpf93pmj67/tmpf93pmj67.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1bf5c1fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1bf5916b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1bf5916988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1bf59157b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpf93pmj67                        0x000055e4458a5338 <unavailable> + 4920\n5    libc.so.6                          0x00002b1bf5e0b460 __libc_start_main + 245\n6    tmpf93pmj67                        0x000055e4458a4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
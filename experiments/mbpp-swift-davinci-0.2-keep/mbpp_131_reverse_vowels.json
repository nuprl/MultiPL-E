{
  "name": "mbpp_131_reverse_vowels",
  "language": "swift",
  "prompt": "\n/// Write a python function to reverse only the vowels of a given string (where y is not a vowel).\nfunc reverse_vowels(str1: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_131_reverse_vowels.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(reverse_vowels(str1: \"Python\") == \"Python\")\nassert(reverse_vowels(str1: \"USA\") == \"ASU\")\nassert(reverse_vowels(str1: \"ab\") == \"ab\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str1 = str1\n    var vowels = [Character]()\n    for char in str1.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for i in 0..<str1.characters.count {\n        if str1[str1.startIndex.advancedBy(i)] == \"a\" || str1[str1.startIndex.advancedBy(i)] == \"e\" || str1[str1.startIndex.advancedBy(i)] == \"i\" || str1[str1.startIndex.advancedBy(i)] == \"o\" || str1[str1.startIndex.advancedBy(i)] == \"u\" {\n            str1.replaceRange(str1.startIndex.advancedBy(i)..<str1.startIndex.advancedBy(i+1), with: String(vowels[vowels.count-1-index]))\n            index += 1\n        }\n    }\n    return str1",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !is_vowel(str[str.index(str.startIndex, offsetBy: i)]) && i < j {\n            i += 1\n        }\n        while !is_vowel(str[str.index(str.startIndex, offsetBy: j)]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n        i += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (i, c) in str.enumerated() {\n        if is_vowel(c) {\n            vowels.append(c)\n            vowel_indices.append(i)\n        }\n    }\n    for i in 0..<vowel_indices.count {\n        let index = vowel_indices[i]\n        let vowel = vowels[vowels.count - i - 1]\n        str.replaceSubrange(index...index, with: String(vowel))\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !is_vowel(str[i]) {\n            i += 1\n        }\n        while i < j && !is_vowel(str[j]) {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[j]))\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set([\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"])\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if vowels_set.contains(char) {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if !is_vowel(str[i]) {\n            i += 1\n            continue\n        }\n        if !is_vowel(str[j]) {\n            j -= 1\n            continue\n        }\n        str.swapAt(i, j)\n        i += 1\n        j -= 1\n    }\n    return str",
    "    var str2 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        while i < str1.count && !is_vowel(str1[i]) {\n            i += 1\n        }\n        while j >= 0 && !is_vowel(str1[j]) {\n            j -= 1\n        }\n        if i < j {\n            str2[i] = str1[j]\n            str2[j] = str1[i]\n            i += 1\n            j -= 1\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[j]))\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowels_index = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowels_index.append(index)\n        }\n    }\n    var i = 0\n    for index in vowels_index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str = str1\n    let vowels = \"aeiou\"\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !vowels.contains(str[i]) {\n            i += 1\n        }\n        while i < j && !vowels.contains(str[j]) {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var new_str = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            new_str.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            new_str.append(char)\n        }\n    }\n    return new_str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[j]))\n        j -= 1\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    var vowels_index = [Int]()\n    for (index, char) in str1.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowels_index.append(index)\n        }\n    }\n    var i = vowels.count - 1\n    for index in vowels_index {\n        str2.replaceSubrange(str2.index(str2.startIndex, offsetBy: index)..<str2.index(str2.startIndex, offsetBy: index+1), with: String(vowels[i]))\n        i -= 1\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        let char1 = str[str.index(str.startIndex, offsetBy: i)]\n        let char2 = str[str.index(str.startIndex, offsetBy: j)]\n        if is_vowel(char: char1) {\n            vowels.append(char1)\n            i += 1\n        }\n        if is_vowel(char: char2) {\n            vowels.append(char2)\n            j -= 1\n        }\n        if !is_vowel(char: char1) {\n            i += 1\n        }\n        if !is_vowel(char: char2) {\n            j -= 1\n        }\n    }\n    var k = 0\n    for i in 0..<str.count {\n        let char = str[str.index(str.startIndex, offsetBy: i)]\n        if is_vowel(char: char) {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[k]))\n            k += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceRange(str.startIndex.advancedBy(index)..<str.startIndex.advancedBy(index+1), with: String(vowels.removeLast()))\n        }\n        index += 1\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str = str1\n    var start = 0\n    var end = str.count - 1\n    var temp = \"\"\n    while start < end {\n        if vowels.contains(str[start]) && vowels.contains(str[end]) {\n            temp = String(str[start])\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: start)...str.index(str.startIndex, offsetBy: start), with: String(str[end]))\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: end)...str.index(str.startIndex, offsetBy: end), with: temp)\n            start += 1\n            end -= 1\n        } else if vowels.contains(str[start]) {\n            end -= 1\n        } else if vowels.contains(str[end]) {\n            start += 1\n        } else {\n            start += 1\n            end -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set(\"aeiouAEIOU\")\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if vowels_set.contains(char) {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - i - 1]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var i = 0\n    var str3 = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    var index = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.characters.index(str.startIndex, offsetBy: index)..<str.characters.index(str.startIndex, offsetBy: index+1), with: String(vowels.popLast()!))\n        }\n        index += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels[vowels.count - 1 - i], at: str.index(str.startIndex, offsetBy: index))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count-1-i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            let index = str.index(str.startIndex, offsetBy: index)\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var vowels: [Character] = []\n    var result: [Character] = []\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var j = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            result.append(vowels[j])\n            j += 1\n        } else {\n            result.append(char)\n        }\n    }\n    return String(result)",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if !is_vowel(str[i]) {\n            i += 1\n            continue\n        }\n        if !is_vowel(str[j]) {\n            j -= 1\n            continue\n        }\n        str.swapAt(i, j)\n        i += 1\n        j -= 1\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[i])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for (i, c) in vowels.enumerated() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(c))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[index])\n            index += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    var j = 0\n    for i in index.reversed() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[j]))\n        j += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    let vowels = \"aeiouAEIOU\"\n    var str2 = \"\"\n    var str3 = \"\"\n    var str4 = \"\"\n    var str5 = \"\"\n    var str6 = \"\"\n    var str7 = \"\"\n    var str8 = \"\"\n    var str9 = \"\"\n    var str10 = \"\"\n    var str11 = \"\"\n    var str12 = \"\"\n    var str13 = \"\"\n    var str14 = \"\"\n    var str15 = \"\"\n    var str16 = \"\"\n    var str17 = \"\"\n    var str18 = \"\"\n    var str19 = \"\"\n    var str20 = \"\"\n    var str21 = \"\"\n    var str22 = \"\"\n    var str23 = \"\"\n    var str24 = \"\"\n    var str25 = \"\"\n    var str26 = \"\"\n    var str27 = \"\"\n    var str28 = \"\"\n    var str29 = \"\"\n    var str30 = \"\"\n    var str31 = \"\"\n    var str32 = \"\"\n    var str33 = \"\"\n    var str34 = \"\"\n    var str35 = \"\"\n    var str36 = \"\"\n    var str37 = \"\"\n    var str38 = \"\"\n    var str39 = \"\"\n    var str40 = \"\"\n    var str41 = \"\"\n    var str42 = \"\"\n    var str43 = \"\"\n    var str44 = \"\"\n    var str45 = \"\"\n    var str46 = \"\"\n    var str47 = \"\"\n    var str48 = \"\"\n    var str49 = \"\"\n    var str50 = \"\"\n    var str51 = \"\"\n    var str52 = \"\"\n    var str53 = \"\"\n    var str54 = \"\"\n    var str55 = \"\"\n    var str56 = \"\"\n    var str57 = \"\"\n    var str58 = \"\"\n    var str59 = \"\"\n    var str60 = \"\"\n    var str61 = \"\"\n    var str62 = \"\"\n    var str63 = \"\"\n    var str64 = \"\"\n    var str65 = \"\"\n    var str66 = \"\"\n    var str67 = \"\"\n    var str68 = \"\"\n    var str69 = \"\"\n    var str70 = \"\"\n    var str71 = \"\"\n    var str72 = \"\"\n",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var index = 0\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: index)])\n            index += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    let vowels = \"aeiouAEIOU\"\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var j = 0\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: j)])\n            j += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var index = 0\n    for i in 0..<str.count {\n        let char = str[str.index(str.startIndex, offsetBy: i)]\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = String(vowels.reversed())\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[vowels.index(vowels.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(i...i, with: String(vowels[vowels.count - index - 1]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.characters.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])..<str.index(str.startIndex, offsetBy: index[i]+1), with: String(vowels[vowels.count-1-i]))\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels: [Character] = []\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[i])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])..<str.index(str.startIndex, offsetBy: index[i] + 1), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for (i, c) in index.enumerated() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: c)..<str.index(str.startIndex, offsetBy: c+1), with: String(vowels[vowels.count-i-1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        if !is_vowel(char: str1[str1.index(str1.startIndex, offsetBy: i)]) {\n            i += 1\n        } else if !is_vowel(char: str1[str1.index(str1.startIndex, offsetBy: j)]) {\n            j -= 1\n        } else {\n            str2.replaceSubrange(str2.index(str2.startIndex, offsetBy: i) ... str2.index(str2.startIndex, offsetBy: i), with: String(str1[str1.index(str1.startIndex, offsetBy: j)]))\n            str2.replaceSubrange(str2.index(str2.startIndex, offsetBy: j) ... str2.index(str2.startIndex, offsetBy: j), with: String(str1[str1.index(str1.startIndex, offsetBy: i)]))\n            i += 1\n            j -= 1\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !is_vowel(str[i]) && i < j {\n            i += 1\n        }\n        while !is_vowel(str[j]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[i])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str2 = str1\n    var vowels = [Character]()\n    var vowel_indexes = [Int]()\n    for (index, char) in str1.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indexes.append(index)\n        }\n    }\n    for (index, char) in str1.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.remove(at: str2.index(str2.startIndex, offsetBy: index))\n            str2.insert(vowels.popLast()!, at: str2.index(str2.startIndex, offsetBy: index))\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in index {\n        str.replaceSubrange(str.characters.index(str.startIndex, offsetBy: i)..<str.characters.index(str.startIndex, offsetBy: i+1), with: String(vowels[j]))\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in index {\n        str.replaceSubrange(i...i, with: String(vowels[j]))\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    let vowels = \"aeiou\"\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !vowels.contains(str[i]) {\n            i += 1\n        }\n        while i < j && !vowels.contains(str[j]) {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    let vowels_set = Set(\"aeiouAEIOU\")\n    for char in str1 {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str2 {\n        if vowels_set.contains(char) {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var str3 = \"\"\n    var str4 = \"\"\n    var str5 = \"\"\n    var str6 = \"\"\n    var str7 = \"\"\n    var str8 = \"\"\n    var str9 = \"\"\n    var str10 = \"\"\n    var str11 = \"\"\n    var str12 = \"\"\n    var str13 = \"\"\n    var str14 = \"\"\n    var str15 = \"\"\n    var str16 = \"\"\n    var str17 = \"\"\n    var str18 = \"\"\n    var str19 = \"\"\n    var str20 = \"\"\n    var str21 = \"\"\n    var str22 = \"\"\n    var str23 = \"\"\n    var str24 = \"\"\n    var str25 = \"\"\n    var str26 = \"\"\n    var str27 = \"\"\n    var str28 = \"\"\n    var str29 = \"\"\n    var str30 = \"\"\n    var str31 = \"\"\n    var str32 = \"\"\n    var str33 = \"\"\n    var str34 = \"\"\n    var str35 = \"\"\n    var str36 = \"\"\n    var str37 = \"\"\n    var str38 = \"\"\n    var str39 = \"\"\n    var str40 = \"\"\n    var str41 = \"\"\n    var str42 = \"\"\n    var str43 = \"\"\n    var str44 = \"\"\n    var str45 = \"\"\n    var str46 = \"\"\n    var str47 = \"\"\n    var str48 = \"\"\n    var str49 = \"\"\n    var str50 = \"\"\n    var str51 = \"\"\n    var str52 = \"\"\n    var str53 = \"\"\n    var str54 = \"\"\n    var str55 = \"\"\n    var str56 = \"\"\n    var str57 = \"\"\n    var str58 = \"\"\n    var str59 = \"\"\n    var str60 = \"\"\n    var str61 = \"\"\n    var str62 = \"\"\n    var str63 = \"\"\n    var str64 = \"\"\n    var str65 = \"\"\n    var str66 = \"\"\n    var str67 = \"\"\n    var str68 = \"\"\n    var str69 = \"\"\n    var str70 = \"\"\n    var str71 = \"\"\n    var str72 = \"\"\n    var str73 = \"\"\n    var str74 = \"\"\n",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var index = 0\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: i))\n            str.insert(vowels[index], at: str.index(str.startIndex, offsetBy: i))\n            index += 1\n        }\n    }\n    return str",
    "    var str2 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        if !is_vowel(str1[str1.index(str1.startIndex, offsetBy: i)]) {\n            i += 1\n            continue\n        }\n        if !is_vowel(str1[str1.index(str1.startIndex, offsetBy: j)]) {\n            j -= 1\n            continue\n        }\n        str2.replaceSubrange(str1.index(str1.startIndex, offsetBy: i)..<str1.index(str1.startIndex, offsetBy: i+1), with: String(str1[str1.index(str1.startIndex, offsetBy: j)]))\n        str2.replaceSubrange(str1.index(str1.startIndex, offsetBy: j)..<str1.index(str1.startIndex, offsetBy: j+1), with: String(str1[str1.index(str1.startIndex, offsetBy: i)]))\n        i += 1\n        j -= 1\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            vowel_indices.append(i)\n        }\n    }\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set(\"aeiouAEIOU\")\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if vowels_set.contains(char) {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = \"aeiou\"\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !vowels.contains(str[str.index(str.startIndex, offsetBy: i)]) && i < j {\n            i += 1\n        }\n        while !vowels.contains(str[str.index(str.startIndex, offsetBy: j)]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var str2 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        let char1 = str1[str1.index(str1.startIndex, offsetBy: i)]\n        let char2 = str1[str1.index(str1.startIndex, offsetBy: j)]\n        if vowels.contains(char1) && vowels.contains(char2) {\n            str2.replaceSubrange(str2.index(str2.startIndex, offsetBy: i)..<str2.index(str2.startIndex, offsetBy: i+1), with: String(char2))\n            str2.replaceSubrange(str2.index(str2.startIndex, offsetBy: j)..<str2.index(str2.startIndex, offsetBy: j+1), with: String(char1))\n            i += 1\n            j -= 1\n        } else if vowels.contains(char1) {\n            j -= 1\n        } else if vowels.contains(char2) {\n            i += 1\n        } else {\n            i += 1\n            j -= 1\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" || c == \"A\" || c == \"E\" || c == \"I\" || c == \"O\" || c == \"U\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var i = 0\n    for j in index.reversed() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: j)..<str.index(str.startIndex, offsetBy: j+1), with: String(vowels[i]))\n        i += 1\n    }\n    return str",
    "    var str2 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        while i < j && !is_vowel(str1[i]) {\n            i += 1\n        }\n        while i < j && !is_vowel(str1[j]) {\n            j -= 1\n        }\n        if i < j {\n            str2[i] = str1[j]\n            str2[j] = str1[i]\n            i += 1\n            j -= 1\n        }\n    }\n    return str2",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !is_vowel(str[i]) && i < j {\n            i += 1\n        }\n        while !is_vowel(str[j]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    let vowels = \"aeiou\"\n    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !vowels.contains(str[str.index(str.startIndex, offsetBy: i)]) {\n            i += 1\n        }\n        while i < j && !vowels.contains(str[str.index(str.startIndex, offsetBy: j)]) {\n            j -= 1\n        }\n        if i < j {\n            let i_char = str[str.index(str.startIndex, offsetBy: i)]\n            let j_char = str[str.index(str.startIndex, offsetBy: j)]\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(j_char))\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: j)..<str.index(str.startIndex, offsetBy: j+1), with: String(i_char))\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var indexes = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            indexes.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var nonVowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        } else {\n            nonVowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var newStr = \"\"\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            newStr.append(vowels.removeFirst())\n        } else {\n            newStr.append(nonVowels.removeFirst())\n        }\n    }\n    return newStr",
    "    var str = str1\n    var vowels = [Character]()\n    var indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            indices.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index + 1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<index.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !is_vowel(str[i]) {\n            i += 1\n        }\n        while i < j && !is_vowel(str[j]) {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_index = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_index.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for i in 0..<str.count {\n        if str[str.index(str.startIndex, offsetBy: i)] == \"a\" || str[str.index(str.startIndex, offsetBy: i)] == \"e\" || str[str.index(str.startIndex, offsetBy: i)] == \"i\" || str[str.index(str.startIndex, offsetBy: i)] == \"o\" || str[str.index(str.startIndex, offsetBy: i)] == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[vowels.count-1-index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    while i < j {\n        if vowels.contains(String(str[str.index(str.startIndex, offsetBy: i)])) && vowels.contains(String(str[str.index(str.startIndex, offsetBy: j)])) {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        } else if !vowels.contains(String(str[str.index(str.startIndex, offsetBy: i)])) {\n            i += 1\n        } else if !vowels.contains(String(str[str.index(str.startIndex, offsetBy: j)])) {\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels[vowels.count - 1 - i], at: str.index(str.startIndex, offsetBy: index))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !is_vowel(str[i]) {\n            i += 1\n        }\n        while i < j && !is_vowel(str[j]) {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for (i, c) in index.enumerated() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: c)..<str.index(str.startIndex, offsetBy: c+1), with: String(vowels[vowels.count-1-i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for (i, c) in index.enumerated() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: c)..<str.index(str.startIndex, offsetBy: c+1), with: String(vowels[vowels.count-i-1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.characters.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in index {\n        str.replaceSubrange(str.characters.index(str.startIndex, offsetBy: i)..<str.characters.index(str.startIndex, offsetBy: i+1), with: String(vowels[j]))\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for (index, char) in str2.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.remove(at: str2.index(str2.startIndex, offsetBy: index))\n            str2.insert(vowels[i], at: str2.index(str2.startIndex, offsetBy: index))\n            i += 1\n        }\n    }\n    return str2",
    "    var str2 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        if !is_vowel(str1[i]) {\n            i += 1\n            continue\n        }\n        if !is_vowel(str1[j]) {\n            j -= 1\n            continue\n        }\n        str2.swapAt(i, j)\n        i += 1\n        j -= 1\n    }\n    return str2",
    "    var str2 = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str1.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str2.replaceSubrange(str2.index(str2.startIndex, offsetBy: index[i])..<str2.index(str2.startIndex, offsetBy: index[i]+1), with: String(vowels[vowels.count-1-i]))\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !is_vowel(str[i]) && i < j {\n            i += 1\n        }\n        while !is_vowel(str[j]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if !is_vowel(str[str.index(str.startIndex, offsetBy: i)]) {\n            i += 1\n        } else if !is_vowel(str[str.index(str.startIndex, offsetBy: j)]) {\n            j -= 1\n        } else {\n            let temp = str[str.index(str.startIndex, offsetBy: i)]\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(str[str.index(str.startIndex, offsetBy: j)]))\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: j)..<str.index(str.startIndex, offsetBy: j+1), with: String(temp))\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    vowels.reverse()\n    for i in 0..<index.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var j = 0\n    for i in index {\n        str.remove(at: str.index(str.startIndex, offsetBy: i))\n        str.insert(vowels[vowels.count - 1 - j], at: str.index(str.startIndex, offsetBy: i))\n        j += 1\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    while i < j {\n        if vowels.contains(String(str[str.index(str.startIndex, offsetBy: i)])) && vowels.contains(String(str[str.index(str.startIndex, offsetBy: j)])) {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        } else if vowels.contains(String(str[str.index(str.startIndex, offsetBy: i)])) && !vowels.contains(String(str[str.index(str.startIndex, offsetBy: j)])) {\n            j -= 1\n        } else if !vowels.contains(String(str[str.index(str.startIndex, offsetBy: i)])) && vowels.contains(String(str[str.index(str.startIndex, offsetBy: j)])) {\n            i += 1\n        } else {\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    var vowels = \"aeiou\"\n    while i < j {\n        if vowels.contains(str[i]) && vowels.contains(str[j]) {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        } else if vowels.contains(str[i]) {\n            j -= 1\n        } else if vowels.contains(str[j]) {\n            i += 1\n        } else {\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: i))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: i))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            indices.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[i])\n            i += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[j]))\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if !isVowel(str[str.index(str.startIndex, offsetBy: i)]) {\n            i += 1\n        } else if !isVowel(str[str.index(str.startIndex, offsetBy: j)]) {\n            j -= 1\n        } else {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set([\"a\", \"e\", \"i\", \"o\", \"u\"])\n    for c in str {\n        if vowels_set.contains(String(c)) {\n            vowels.append(c)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for j in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: j)\n        if vowels_set.contains(String(str[index])) {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set([\"a\", \"e\", \"i\", \"o\", \"u\"])\n    for char in str {\n        if vowels_set.contains(String(char).lowercased()) {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if vowels_set.contains(String(char).lowercased()) {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels[vowels.count - i - 1]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    let vowels = \"aeiou\"\n    var left = 0\n    var right = str.count - 1\n    while left < right {\n        while left < right && !vowels.contains(str[str.index(str.startIndex, offsetBy: left)]) {\n            left += 1\n        }\n        while left < right && !vowels.contains(str[str.index(str.startIndex, offsetBy: right)]) {\n            right -= 1\n        }\n        if left < right {\n            str.swapAt(left, right)\n            left += 1\n            right -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !is_vowel(str[i]) && i < j {\n            i += 1\n        }\n        while !is_vowel(str[j]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    let vowels = \"aeiou\"\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !vowels.contains(str[i]) && i < j {\n            i += 1\n        }\n        while !vowels.contains(str[j]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    let vowels = \"aeiou\"\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(char) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var i = 0\n    for char in str1 {\n        if vowels.contains(char) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: i)])\n            i += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set = Set(\"aeiouAEIOU\")\n    for c in str {\n        if vowels_set.contains(c) {\n            vowels.append(c)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for j in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: j)\n        if vowels_set.contains(str[index]) {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    let vowels = \"aeiouAEIOU\"\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !vowels.contains(str[str.index(str.startIndex, offsetBy: i)]) && i < j {\n            i += 1\n        }\n        while !vowels.contains(str[str.index(str.startIndex, offsetBy: j)]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            let temp = str[str.index(str.startIndex, offsetBy: i)]\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(str[str.index(str.startIndex, offsetBy: j)]))\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: j)..<str.index(str.startIndex, offsetBy: j+1), with: String(temp))\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            indices.append(index)\n        }\n    }\n    var i = 0\n    for index in indices {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<index.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var j = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[j])\n            j += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while i < j && !is_vowel(str[i]) {\n            i += 1\n        }\n        while i < j && !is_vowel(str[j]) {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for i in 0..<str.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" {\n            str.replaceSubrange(i...i, with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count-1-i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count-1-i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowelsSet = Set(\"aeiouAEIOU\")\n    for char in str {\n        if vowelsSet.contains(char) {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if vowelsSet.contains(char) {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if !is_vowel(str[i]) {\n            i += 1\n            continue\n        }\n        if !is_vowel(str[j]) {\n            j -= 1\n            continue\n        }\n        str.swapAt(i, j)\n        i += 1\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indexes = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indexes.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var index: [Int] = []\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var i = 0\n    for index in str.indices {\n        if str[index] == \"a\" || str[index] == \"e\" || str[index] == \"i\" || str[index] == \"o\" || str[index] == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var index = 0\n    for i in 0..<str.count {\n        if str[i] == \"a\" || str[i] == \"e\" || str[i] == \"i\" || str[i] == \"o\" || str[i] == \"u\" {\n            str.replaceSubrange(i...i, with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            let vowel = vowels.popLast()!\n            str.replaceSubrange(index...index, with: String(vowel))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    let vowels_set: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    for char in str {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var i = 0\n    for j in 0..<str.count {\n        if vowels_set.contains(str[j]) {\n            str.replaceSubrange(j...j, with: String(vowels[i]))\n            i += 1\n        }\n    }\n    return str",
    "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if vowels.contains(String(char)) {\n            str2.append(char)\n        }\n    }\n    str2 = String(str2.reversed())\n    var j = 0\n    for char in str1 {\n        if vowels.contains(String(char)) {\n            str3.append(str2[str2.index(str2.startIndex, offsetBy: j)])\n            j += 1\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    var i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index] == \"a\" || str[index] == \"e\" || str[index] == \"i\" || str[index] == \"o\" || str[index] == \"u\" {\n            vowels.append(str[index])\n        }\n        i += 1\n    }\n    i = 0\n    while i < str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index] == \"a\" || str[index] == \"e\" || str[index] == \"i\" || str[index] == \"o\" || str[index] == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels.popLast()!))\n        }\n        i += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var j = vowels.count - 1\n    for i in index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i + 1), with: String(vowels[j]))\n        j -= 1\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var str3 = \"\"\n    var str4 = \"\"\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str3.append(str2.popLast()!)\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.range(of: String(char))!, with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = vowels.count - 1\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[i])\n            i -= 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    var i = 0\n    for j in index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: j)..<str.index(str.startIndex, offsetBy: j+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var j = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels[j])\n            j += 1\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var vowels_index = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowels_index.append(index)\n        }\n    }\n    var i = 0\n    for index in vowels_index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels.popLast()!))\n        }\n    }\n    return str",
    "    var str2 = str1\n    var str3 = \"\"\n    var vowel_list = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowel_list.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str3.append(vowel_list.popLast()!)\n        } else {\n            str3.append(char)\n        }\n    }\n    return str3",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indexes = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indexes.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(index[i]...index[i], with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for (i, c) in index.enumerated() {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: c)..<str.index(str.startIndex, offsetBy: c+1), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_indices = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.remove(at: str.index(str.startIndex, offsetBy: index))\n            str.insert(vowels.popLast()!, at: str.index(str.startIndex, offsetBy: index))\n        }\n    }\n    return str",
    "    var str2 = str1\n    var i = 0\n    var j = str1.count - 1\n    while i < j {\n        if !is_vowel(str1[i]) {\n            i += 1\n        } else if !is_vowel(str1[j]) {\n            j -= 1\n        } else {\n            str2[i] = str1[j]\n            str2[j] = str1[i]\n            i += 1\n            j -= 1\n        }\n    }\n    return str2",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        while !is_vowel(str[i]) && i < j {\n            i += 1\n        }\n        while !is_vowel(str[j]) && i < j {\n            j -= 1\n        }\n        if i < j {\n            str.swapAt(i, j)\n            i += 1\n            j -= 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels: [Character] = []\n    var vowel_indices: [Int] = []\n    let vowels_set: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for (index, char) in str.enumerated() {\n        if vowels_set.contains(char) {\n            vowels.append(char)\n            vowel_indices.append(index)\n        }\n    }\n    for (index, char) in vowels.enumerated() {\n        str.replaceSubrange(vowel_indices[index]...vowel_indices[index], with: String(char))\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels = [Character]()\n    var vowel_index = [Int]()\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n            vowel_index.append(index)\n        }\n    }\n    var i = 0\n    for index in vowel_index {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index)..<str.index(str.startIndex, offsetBy: index+1), with: String(vowels[vowels.count-1-i]))\n        i += 1\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for i in 0..<str.count {\n        let char = str[str.index(str.startIndex, offsetBy: i)]\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for j in 0..<str.count {\n        if str[str.index(str.startIndex, offsetBy: j)] == \"a\" || str[str.index(str.startIndex, offsetBy: j)] == \"e\" || str[str.index(str.startIndex, offsetBy: j)] == \"i\" || str[str.index(str.startIndex, offsetBy: j)] == \"o\" || str[str.index(str.startIndex, offsetBy: j)] == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: j)..<str.index(str.startIndex, offsetBy: j+1), with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.append(vowels.popLast()!)\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    var vowels: [Character] = []\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels.reverse()\n    var index = 0\n    for i in 0..<str.count {\n        if str[str.index(str.startIndex, offsetBy: i)] == \"a\" || str[str.index(str.startIndex, offsetBy: i)] == \"e\" || str[str.index(str.startIndex, offsetBy: i)] == \"i\" || str[str.index(str.startIndex, offsetBy: i)] == \"o\" || str[str.index(str.startIndex, offsetBy: i)] == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    var j = str.count - 1\n    while i < j {\n        if !is_vowel(str[i]) {\n            i += 1\n            continue\n        }\n        if !is_vowel(str[j]) {\n            j -= 1\n            continue\n        }\n        str.swapAt(i, j)\n        i += 1\n        j -= 1\n    }\n    return str",
    "    var str = str1\n    var vowel_list = [String]()\n    var vowel_index = [Int]()\n    for (index, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowel_list.append(String(char))\n            vowel_index.append(index)\n        }\n    }\n    var vowel_list_reverse = vowel_list.reversed()\n    for (index, char) in str.characters.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(str.characters.index(str.startIndex, offsetBy: vowel_index[index])...str.characters.index(str.startIndex, offsetBy: vowel_index[index]), with: vowel_list_reverse[index])\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for (index, char) in str.enumerated() {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replaceSubrange(index...index, with: String(vowels[vowels.count - 1 - i]))\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<index.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - 1 - i]))\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for i in 0..<str.count {\n        if str[str.index(str.startIndex, offsetBy: i)] == \"a\" || str[str.index(str.startIndex, offsetBy: i)] == \"e\" || str[str.index(str.startIndex, offsetBy: i)] == \"i\" || str[str.index(str.startIndex, offsetBy: i)] == \"o\" || str[str.index(str.startIndex, offsetBy: i)] == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)...str.index(str.startIndex, offsetBy: i), with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str.characters {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str.replace(char, with: vowels[vowels.count - 1 - i])\n            i += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    for char in str {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    vowels = vowels.reversed()\n    var index = 0\n    for i in 0..<str.count {\n        if str[str.index(str.startIndex, offsetBy: i)] == \"a\" || str[str.index(str.startIndex, offsetBy: i)] == \"e\" || str[str.index(str.startIndex, offsetBy: i)] == \"i\" || str[str.index(str.startIndex, offsetBy: i)] == \"o\" || str[str.index(str.startIndex, offsetBy: i)] == \"u\" {\n            str.replaceSubrange(str.index(str.startIndex, offsetBy: i)..<str.index(str.startIndex, offsetBy: i+1), with: String(vowels[index]))\n            index += 1\n        }\n    }\n    return str",
    "    var str = str1\n    var vowels = [Character]()\n    var index = [Int]()\n    for (i, c) in str.enumerated() {\n        if c == \"a\" || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            vowels.append(c)\n            index.append(i)\n        }\n    }\n    for i in 0..<vowels.count {\n        str.replaceSubrange(str.index(str.startIndex, offsetBy: index[i])...str.index(str.startIndex, offsetBy: index[i]), with: String(vowels[vowels.count - i - 1]))\n    }\n    return str",
    "    var str2 = str1\n    var vowels = [Character]()\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            vowels.append(char)\n        }\n    }\n    var i = 0\n    for char in str1 {\n        if char == \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n            str2.replaceSubrange(str2.range(of: String(char))!, with: String(vowels.removeLast()))\n        }\n        i += 1\n    }\n    return str2"
  ]
}
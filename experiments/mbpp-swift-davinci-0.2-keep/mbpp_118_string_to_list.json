{
  "name": "mbpp_118_string_to_list",
  "language": "swift",
  "prompt": "\n/// Write a function to convert a string to a list of strings split on the space character.\nfunc string_to_list(string: String) -> [String] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(string_to_list(string: \"python programming\") == [\"python\", \"programming\"])\nassert(string_to_list(string: \"lists tuples strings\") == [\"lists\", \"tuples\", \"strings\"])\nassert(string_to_list(string: \"write a program\") == [\"write\", \"a\", \"program\"])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return string.components(separatedBy: \" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.componentsSeparatedByString(\" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.componentsSeparatedByString(\" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.componentsSeparatedByString(\" \")",
    "    return string.componentsSeparatedByString(\" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.componentsSeparatedByString(\" \")",
    "    return string.componentsSeparatedByString(\" \")",
    "    return string.componentsSeparatedByString(\" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.componentsSeparatedByString(\" \")",
    "    return string.components(separatedBy: \" \")",
    "    return string.components(separatedBy: \" \")"
  ]
}
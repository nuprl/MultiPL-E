{
  "name": "mbpp_279_is_num_decagonal",
  "language": "swift",
  "prompt": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (3 * n * n - n) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp0fi_ldm7/tmp0fi_ldm7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae6e7ef5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae6e7becb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae6e7bec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae6e7beb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0fi_ldm7                        0x0000560bfb0f8245 <unavailable> + 4677\n5    libc.so.6                          0x00002ae6e80e1460 __libc_start_main + 245\n6    tmp0fi_ldm7                        0x0000560bfb0f7ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmplicrhgfo/tmplicrhgfo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad3bffdac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad3bfcd1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad3bfcd1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad3bfcd07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplicrhgfo                        0x000055ddc27e4245 <unavailable> + 4677\n5    libc.so.6                          0x00002ad3c01c6460 __libc_start_main + 245\n6    tmplicrhgfo                        0x000055ddc27e3ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    let decagonal = n * (3 * n - 2)\n    return decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpxukxf8l1/tmpxukxf8l1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b75a1c2cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b75a1923b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b75a1923988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b75a19227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxukxf8l1                        0x000055a009e901b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b75a1e18460 __libc_start_main + 245\n6    tmpxukxf8l1                        0x000055a009e8fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    let num = (3 * n * n - n) / 2\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpa6rqo9i1/tmpa6rqo9i1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b73ee288c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b73edf7fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b73edf7f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b73edf7e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa6rqo9i1                        0x000055d84bd09245 <unavailable> + 4677\n5    libc.so.6                          0x00002b73ee474460 __libc_start_main + 245\n6    tmpa6rqo9i1                        0x000055d84bd08ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmplicrhgfo/tmplicrhgfo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad3bffdac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad3bfcd1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad3bfcd1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad3bfcd07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplicrhgfo                        0x000055ddc27e4245 <unavailable> + 4677\n5    libc.so.6                          0x00002ad3c01c6460 __libc_start_main + 245\n6    tmplicrhgfo                        0x000055ddc27e3ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    var i = 1\n    var decagonal = 0\n    while decagonal < n {\n        decagonal = i * (3 * i - 1) / 2\n        i += 1\n    }\n    return decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1666123866,
      "stdout": "",
      "stderr": "tmpoknm95cb/tmpoknm95cb.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad8fc467c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad8fc15eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad8fc15e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8fc15d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoknm95cb                        0x000055cdc1124245 <unavailable> + 4677\n5    libc.so.6                          0x00002ad8fc653460 __libc_start_main + 245\n6    tmpoknm95cb                        0x000055cdc1123ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    let nth_decagonal = n * (3 * n - 2)\n    return nth_decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1666123864,
      "stdout": "",
      "stderr": "tmp3aqmed60/tmp3aqmed60.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13352bbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1334fb2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1334fb2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1334fb17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3aqmed60                        0x0000561960c2f1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b13354a7460 __libc_start_main + 245\n6    tmp3aqmed60                        0x0000561960c2ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1666123866,
      "stdout": "",
      "stderr": "tmpzf43uj2p/tmpzf43uj2p.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaec3072c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaec2d69b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaec2d69988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaec2d687b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzf43uj2p                        0x000055ad46df91b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aaec325e460 __libc_start_main + 245\n6    tmpzf43uj2p                        0x000055ad46df8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmplicrhgfo/tmplicrhgfo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad3bffdac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad3bfcd1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad3bfcd1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad3bfcd07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplicrhgfo                        0x000055ddc27e4245 <unavailable> + 4677\n5    libc.so.6                          0x00002ad3c01c6460 __libc_start_main + 245\n6    tmplicrhgfo                        0x000055ddc27e3ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    let nth_decagonal = n * (3 * n - 2)\n    return nth_decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1666123864,
      "stdout": "",
      "stderr": "tmp3aqmed60/tmp3aqmed60.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13352bbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1334fb2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1334fb2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1334fb17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3aqmed60                        0x0000561960c2f1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b13354a7460 __libc_start_main + 245\n6    tmp3aqmed60                        0x0000561960c2ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    var i = 1\n    var decagonal = 1\n    while i < n {\n        i += 1\n        decagonal = i * (3 * i - 1) / 2\n    }\n    return decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1666123866,
      "stdout": "",
      "stderr": "tmp8rhxcc8k/tmp8rhxcc8k.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2aa78ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2aa75d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2aa75d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2aa75d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8rhxcc8k                        0x0000555a7cfb6245 <unavailable> + 4677\n5    libc.so.6                          0x00002b2aa7ac9460 __libc_start_main + 245\n6    tmp8rhxcc8k                        0x0000555a7cfb5ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmplicrhgfo/tmplicrhgfo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad3bffdac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad3bfcd1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad3bfcd1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad3bfcd07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplicrhgfo                        0x000055ddc27e4245 <unavailable> + 4677\n5    libc.so.6                          0x00002ad3c01c6460 __libc_start_main + 245\n6    tmplicrhgfo                        0x000055ddc27e3ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    let decagonal = n * (3 * n - 2)\n    return decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpxukxf8l1/tmpxukxf8l1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b75a1c2cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b75a1923b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b75a1923988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b75a19227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxukxf8l1                        0x000055a009e901b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b75a1e18460 __libc_start_main + 245\n6    tmpxukxf8l1                        0x000055a009e8fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    let decagonal = (n * (3 * n - 2)) / 2\n    return decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1666123866,
      "stdout": "",
      "stderr": "tmpsra565d7/tmpsra565d7.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8beec6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8bebbdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8bebbd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8bebbc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsra565d7                        0x000055cc6a697245 <unavailable> + 4677\n5    libc.so.6                          0x00002ab8bf0b2460 __libc_start_main + 245\n6    tmpsra565d7                        0x000055cc6a696ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    let decagonal = n * (3 * n - 2)\n    return decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpxukxf8l1/tmpxukxf8l1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b75a1c2cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b75a1923b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b75a1923988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b75a19227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxukxf8l1                        0x000055a009e901b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b75a1e18460 __libc_start_main + 245\n6    tmpxukxf8l1                        0x000055a009e8fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    let decagonal = (n * (3 * n - 2))\n    return decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1666123866,
      "stdout": "",
      "stderr": "tmpqg5eetg_/tmpqg5eetg_.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aac20b08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aac207ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aac207ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aac207fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqg5eetg_                        0x0000557f5e8de1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aac20cf4460 __libc_start_main + 245\n6    tmpqg5eetg_                        0x0000557f5e8dde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    let decagonal = n * (3 * n - 2)\n    return decagonal\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpxukxf8l1/tmpxukxf8l1.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b75a1c2cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b75a1923b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b75a1923988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b75a19227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxukxf8l1                        0x000055a009e901b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b75a1e18460 __libc_start_main + 245\n6    tmpxukxf8l1                        0x000055a009e8fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (3 * n * n - n) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmp0fi_ldm7/tmp0fi_ldm7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae6e7ef5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae6e7becb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae6e7bec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae6e7beb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0fi_ldm7                        0x0000560bfb0f8245 <unavailable> + 4677\n5    libc.so.6                          0x00002ae6e80e1460 __libc_start_main + 245\n6    tmp0fi_ldm7                        0x0000560bfb0f7ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return (n * (3 * n - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpqzdrcax7/tmpqzdrcax7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77d70bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77d6db4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77d6db4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77d6db37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqzdrcax7                        0x000055d72c3301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b77d72a9460 __libc_start_main + 245\n6    tmpqzdrcax7                        0x000055d72c32fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth decagonal number.\nfunc is_num_decagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_num_decagonal(n: 3) == 27)\nassert(is_num_decagonal(n: 7) == 175)\nassert(is_num_decagonal(n: 10) == 370)",
      "timestamp": 1665510610,
      "stdout": "",
      "stderr": "tmpdu_h8xmx/tmpdu_h8xmx.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1ca73ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1ca70d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1ca70d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1ca70d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdu_h8xmx                        0x0000558b2b6781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b1ca75c9460 __libc_start_main + 245\n6    tmpdu_h8xmx                        0x0000558b2b677e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
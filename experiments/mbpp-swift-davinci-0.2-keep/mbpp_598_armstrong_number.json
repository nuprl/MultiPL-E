{
  "name": "mbpp_598_armstrong_number",
  "language": "swift",
  "prompt": "\n/// Write a function to check whether the given number is armstrong or not.\nfunc armstrong_number(number: Int) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_598_armstrong_number.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(armstrong_number(number: 153) == true)\nassert(armstrong_number(number: 259) == false)\nassert(armstrong_number(number: 4458) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let lastDigit = temp % 10\n        sum += lastDigit * lastDigit * lastDigit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp != 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    let number_string = String(number)\n    var sum = 0\n    for char in number_string {\n        let digit = Int(String(char))!\n        sum += digit * digit * digit\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    let digits = String(number).count\n    while temp > 0 {\n        let digit = temp % 10\n        sum += Int(pow(Double(digit), Double(digits)))\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var num = number\n    var sum = 0\n    var rem = 0\n    while num > 0 {\n        rem = num % 10\n        sum = sum + rem * rem * rem\n        num = num / 10\n    }\n    if sum == number {\n        return true\n    }\n    return false",
    "    var num = number\n    var sum = 0\n    var digit = 0\n    while num > 0 {\n        digit = num % 10\n        sum += digit * digit * digit\n        num /= 10\n    }\n    return sum == number",
    "    var num = number\n    var digits = [Int]()\n    while num > 0 {\n        digits.append(num % 10)\n        num /= 10\n    }\n    let sum = digits.map { $0 * $0 * $0 }.reduce(0, +)\n    return sum == number",
    "    var number = number\n    var sum = 0\n    var remainder = 0\n    var digits = 0\n    \n    while number != 0 {\n        remainder = number % 10\n        sum += Int(pow(Double(remainder), Double(digits)))\n        number /= 10\n        digits += 1\n    }\n    \n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var remainder = 0\n    while temp > 0 {\n        remainder = temp % 10\n        sum = sum + (remainder * remainder * remainder)\n        temp = temp / 10\n    }\n    if sum == number {\n        return true\n    } else {\n        return false\n    }",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number"
  ]
}
{
  "name": "mbpp_572_two_unique_nums",
  "language": "swift",
  "prompt": "\n/// Write a python function to remove duplicate numbers from a given number of lists.\nfunc two_unique_nums(nums: [Int]) -> [Int] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(two_unique_nums(nums: [1, 2, 3, 2, 3, 4, 5]) == [1, 4, 5])\nassert(two_unique_nums(nums: [1, 2, 3, 2, 4, 5]) == [1, 3, 4, 5])\nassert(two_unique_nums(nums: [1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var uniqueNums = [Int]()\n    for i in 0..<nums.count {\n        if nums.contains(nums[i]) {\n            uniqueNums.append(nums[i])\n            nums.remove(at: i)\n        }\n    }\n    return uniqueNums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var result = [Int]()\n    var dict = [Int: Int]()\n    \n    for num in nums {\n        dict[num] = (dict[num] ?? 0) + 1\n    }\n    \n    for (key, value) in dict {\n        if value == 1 {\n            result.append(key)\n        }\n    }\n    \n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for num in nums {\n        if nums.filter({$0 == num}).count == 1 {\n            result.append(num)\n        }\n    }\n    return result",
    "    var uniqueNums = [Int]()\n    for num in nums {\n        if !uniqueNums.contains(num) {\n            uniqueNums.append(num)\n        }\n    }\n    return uniqueNums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique = [Int]()\n    for num in nums {\n        if !unique.contains(num) {\n            unique.append(num)\n        }\n    }\n    return unique",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    var nums_count: [Int: Int] = [:]\n    \n    for num in nums {\n        if nums_count[num] == nil {\n            nums_count[num] = 1\n        } else {\n            nums_count[num]! += 1\n        }\n    }\n    \n    for num in nums_count.keys {\n        if nums_count[num] == 1 {\n            unique_nums.append(num)\n        }\n    }\n    \n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var uniqueNums = [Int]()\n    for num in nums {\n        if !uniqueNums.contains(num) {\n            uniqueNums.append(num)\n        }\n    }\n    return uniqueNums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var uniqueNums: [Int] = []\n    for num in nums {\n        if !uniqueNums.contains(num) {\n            uniqueNums.append(num)\n        }\n    }\n    return uniqueNums",
    "    var result = [Int]()\n    var nums = nums\n    for i in 0..<nums.count {\n        for j in i+1..<nums.count {\n            if nums[i] == nums[j] {\n                nums.remove(at: j)\n            }\n        }\n    }\n    return nums",
    "    var unique = [Int]()\n    for num in nums {\n        if !unique.contains(num) {\n            unique.append(num)\n        }\n    }\n    return unique",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    var nums_count = [Int: Int]()\n    for num in nums {\n        if nums_count[num] == nil {\n            nums_count[num] = 1\n        } else {\n            nums_count[num]! += 1\n        }\n    }\n    for (num, count) in nums_count {\n        if count == 1 {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var seen = Set<Int>()\n    var unique = [Int]()\n    for num in nums {\n        if seen.contains(num) {\n            continue\n        }\n        seen.insert(num)\n        unique.append(num)\n    }\n    return unique",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    var num_count: [Int: Int] = [:]\n    \n    for num in nums {\n        if num_count[num] == nil {\n            num_count[num] = 1\n        } else {\n            num_count[num]! += 1\n        }\n    }\n    \n    for (num, count) in num_count {\n        if count == 1 {\n            unique_nums.append(num)\n        }\n    }\n    \n    return unique_nums",
    "    var uniqueNums = [Int]()\n    for num in nums {\n        if !uniqueNums.contains(num) {\n            uniqueNums.append(num)\n        }\n    }\n    return uniqueNums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    for i in 0..<nums.count {\n        if !unique_nums.contains(nums[i]) {\n            unique_nums.append(nums[i])\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var uniqueNums: [Int] = []\n    for num in nums {\n        if !uniqueNums.contains(num) {\n            uniqueNums.append(num)\n        }\n    }\n    return uniqueNums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique = [Int]()\n    for num in nums {\n        if !unique.contains(num) {\n            unique.append(num)\n        }\n    }\n    return unique",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums_set = Set<Int>()\n    var result = [Int]()\n    for num in nums {\n        if nums_set.contains(num) {\n            result.append(num)\n        } else {\n            nums_set.insert(num)\n        }\n    }\n    return result",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var uniqueNums = [Int]()\n    for num in nums {\n        if !uniqueNums.contains(num) {\n            uniqueNums.append(num)\n        }\n    }\n    return uniqueNums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums = [Int]()\n    for i in 0..<nums.count {\n        if !unique_nums.contains(nums[i]) {\n            unique_nums.append(nums[i])\n        }\n    }\n    return unique_nums",
    "    var nums_set = Set<Int>()\n    var result = [Int]()\n    for num in nums {\n        if !nums_set.contains(num) {\n            nums_set.insert(num)\n            result.append(num)\n        }\n    }\n    return result",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    let set = Set(nums)\n    return Array(set)",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums_set = Set<Int>()\n    var unique_nums = [Int]()\n    for num in nums {\n        if nums_set.contains(num) {\n            unique_nums.append(num)\n        }\n        nums_set.insert(num)\n    }\n    return unique_nums",
    "    var nums_set = Set<Int>()\n    var result = [Int]()\n    for num in nums {\n        if nums_set.contains(num) {\n            result.append(num)\n        } else {\n            nums_set.insert(num)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    var count = 0\n    for i in 0..<nums.count {\n        count = 0\n        for j in 0..<nums.count {\n            if nums[i] == nums[j] {\n                count += 1\n            }\n        }\n        if count == 1 {\n            result.append(nums[i])\n        }\n    }\n    return result",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if unique_nums.contains(num) {\n            unique_nums.removeAll(where: {$0 == num})\n        } else {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var uniqueNums = [Int]()\n    var numsDict = [Int: Int]()\n    for num in nums {\n        if numsDict[num] == nil {\n            numsDict[num] = 1\n        } else {\n            numsDict[num]! += 1\n        }\n    }\n    for (key, value) in numsDict {\n        if value == 1 {\n            uniqueNums.append(key)\n        }\n    }\n    return uniqueNums",
    "    var nums = nums\n    var result = [Int]()\n    for num in nums {\n        if !result.contains(num) {\n            result.append(num)\n        }\n    }\n    return result",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums = [Int]()\n    for i in 0..<nums.count {\n        if nums[i] != nums[i+1] {\n            unique_nums.append(nums[i])\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    for num in nums {\n        if unique_nums.contains(num) {\n            unique_nums.remove(at: unique_nums.firstIndex(of: num)!)\n        } else {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    var nums_set = Set<Int>()\n    \n    for num in nums {\n        if !nums_set.contains(num) {\n            nums_set.insert(num)\n            unique_nums.append(num)\n        }\n    }\n    \n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums = [Int]()\n    while nums.count > 0 {\n        let num = nums.removeFirst()\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = Set<Int>()\n    for num in nums {\n        unique_nums.insert(num)\n    }\n    return Array(unique_nums)",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var uniqueNums: [Int] = []\n    for num in nums {\n        if !uniqueNums.contains(num) {\n            uniqueNums.append(num)\n        }\n    }\n    return uniqueNums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    var num_count = [Int: Int]()\n    \n    for num in nums {\n        if num_count[num] == nil {\n            num_count[num] = 1\n        } else {\n            num_count[num]! += 1\n        }\n    }\n    \n    for (num, count) in num_count {\n        if count == 1 {\n            unique_nums.append(num)\n        }\n    }\n    \n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if unique_nums.contains(num) {\n            continue\n        } else {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var uniqueNums = [Int]()\n    for num in nums {\n        if !uniqueNums.contains(num) {\n            uniqueNums.append(num)\n        }\n    }\n    return uniqueNums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var result = [Int]()\n    var nums = nums\n    for i in 0..<nums.count {\n        var found = false\n        for j in 0..<nums.count {\n            if i != j && nums[i] == nums[j] {\n                found = true\n                break\n            }\n        }\n        if !found {\n            result.append(nums[i])\n        }\n    }\n    return result",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var uniqueNums: [Int] = []\n    for num in nums {\n        if !uniqueNums.contains(num) {\n            uniqueNums.append(num)\n        }\n    }\n    return uniqueNums",
    "    var unique_nums: [Int] = []\n    var nums_set: Set<Int> = []\n    for num in nums {\n        if !nums_set.contains(num) {\n            nums_set.insert(num)\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    for i in 0..<nums.count {\n        if !unique_nums.contains(nums[i]) {\n            unique_nums.append(nums[i])\n        }\n    }\n    return unique_nums",
    "    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var uniques = [Int]()\n    for num in nums {\n        if !uniques.contains(num) {\n            uniques.append(num)\n        }\n    }\n    return uniques",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums_set = Set<Int>()\n    for num in nums {\n        nums_set.insert(num)\n    }\n    return Array(nums_set)",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var unique_nums: [Int] = []\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums",
    "    var nums = nums\n    var result = [Int]()\n    var count = 0\n    while count < nums.count {\n        if nums.count == 1 {\n            result.append(nums[0])\n            break\n        }\n        if nums[count] != nums[count + 1] {\n            result.append(nums[count])\n        }\n        count += 1\n    }\n    return result",
    "    var unique_nums = [Int]()\n    for num in nums {\n        if !unique_nums.contains(num) {\n            unique_nums.append(num)\n        }\n    }\n    return unique_nums"
  ]
}
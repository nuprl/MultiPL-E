{
  "name": "mbpp_77_is_Diff",
  "language": "swift",
  "prompt": "\n/// Write a python function to find whether a number is divisible by 11.\nfunc is_Diff(n: Int) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_Diff(n: 12345) == false)\nassert(is_Diff(n: 1212112) == true)\nassert(is_Diff(n: 1212) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var sum_odd = 0\n    var sum_even = 0\n    var i = 0\n    var n = n\n    while n > 0 {\n        if i % 2 == 0 {\n            sum_even += n % 10\n        } else {\n            sum_odd += n % 10\n        }\n        n = n / 10\n        i += 1\n    }\n    return sum_even - sum_odd == 0",
    "    var sum = 0\n    var diff = 0\n    var num = n\n    while num != 0 {\n        sum += num % 10\n        num /= 10\n        diff -= num % 10\n        num /= 10\n    }\n    return (sum + diff) % 11 == 0",
    "    var even_sum = 0\n    var odd_sum = 0\n    var count = 0\n    var temp = n\n    while temp > 0 {\n        let rem = temp % 10\n        if count % 2 == 0 {\n            even_sum += rem\n        } else {\n            odd_sum += rem\n        }\n        temp /= 10\n        count += 1\n    }\n    return abs(even_sum - odd_sum) % 11 == 0",
    "    var even_sum = 0\n    var odd_sum = 0\n    var num = n\n    var count = 0\n    while num > 0 {\n        let digit = num % 10\n        if count % 2 == 0 {\n            even_sum += digit\n        } else {\n            odd_sum += digit\n        }\n        count += 1\n        num /= 10\n    }\n    return (even_sum - odd_sum) % 11 == 0",
    "    var sum_even = 0\n    var sum_odd = 0\n    var i = 0\n    while n != 0 {\n        if i % 2 == 0 {\n            sum_even += n % 10\n        } else {\n            sum_odd += n % 10\n        }\n        i += 1\n        n /= 10\n    }\n    return abs(sum_even - sum_odd) % 11 == 0",
    "    var sum_odd = 0\n    var sum_even = 0\n    var i = 0\n    while n != 0 {\n        let digit = n % 10\n        if i % 2 == 0 {\n            sum_even += digit\n        } else {\n            sum_odd += digit\n        }\n        n /= 10\n        i += 1\n    }\n    return abs(sum_odd - sum_even) % 11 == 0",
    "    var sum1 = 0\n    var sum2 = 0\n    var i = 0\n    var num = n\n    while num > 0 {\n        if i % 2 == 0 {\n            sum1 += num % 10\n        } else {\n            sum2 += num % 10\n        }\n        num /= 10\n        i += 1\n    }\n    return sum1 - sum2 == 0",
    "    var even = 0\n    var odd = 0\n    var num = n\n    while num > 0 {\n        even += num % 10\n        num /= 10\n        odd += num % 10\n        num /= 10\n    }\n    return (even - odd) % 11 == 0",
    "    var evenSum = 0\n    var oddSum = 0\n    var count = 0\n    var temp = n\n    while (temp != 0) {\n        let rem = temp % 10\n        if count % 2 == 0 {\n            evenSum += rem\n        } else {\n            oddSum += rem\n        }\n        count += 1\n        temp /= 10\n    }\n    return abs(evenSum - oddSum) % 11 == 0",
    "    var sum1 = 0\n    var sum2 = 0\n    var num = n\n    var i = 0\n    while num > 0 {\n        if i % 2 == 0 {\n            sum1 += num % 10\n        } else {\n            sum2 += num % 10\n        }\n        num /= 10\n        i += 1\n    }\n    return sum1 - sum2 == 0",
    "    var sum_odd = 0\n    var sum_even = 0\n    var i = 0\n    var n = n\n    while n > 0 {\n        if i % 2 == 0 {\n            sum_even += n % 10\n        } else {\n            sum_odd += n % 10\n        }\n        n /= 10\n        i += 1\n    }\n    return (sum_even - sum_odd) % 11 == 0",
    "    var evenSum = 0\n    var oddSum = 0\n    var temp = n\n    var isOdd = true\n    while temp > 0 {\n        let lastDigit = temp % 10\n        if isOdd {\n            oddSum += lastDigit\n        } else {\n            evenSum += lastDigit\n        }\n        isOdd = !isOdd\n        temp /= 10\n    }\n    return abs(evenSum - oddSum) % 11 == 0",
    "    var sum1 = 0\n    var sum2 = 0\n    var i = 0\n    var num = n\n    while num > 0 {\n        if i % 2 == 0 {\n            sum1 += num % 10\n        } else {\n            sum2 += num % 10\n        }\n        num = num / 10\n        i += 1\n    }\n    return (sum1 - sum2) % 11 == 0",
    "    var sum1 = 0\n    var sum2 = 0\n    var num = n\n    var i = 0\n    while num > 0 {\n        if i % 2 == 0 {\n            sum1 += num % 10\n        } else {\n            sum2 += num % 10\n        }\n        num /= 10\n        i += 1\n    }\n    return sum1 - sum2 == 0",
    "    var even_sum = 0\n    var odd_sum = 0\n    var i = 0\n    while n > 0 {\n        if i % 2 == 0 {\n            even_sum += n % 10\n        } else {\n            odd_sum += n % 10\n        }\n        n /= 10\n        i += 1\n    }\n    return (even_sum - odd_sum) % 11 == 0",
    "    var sum1 = 0\n    var sum2 = 0\n    var num = n\n    while num > 0 {\n        sum1 += num % 10\n        num /= 10\n        sum2 += num % 10\n        num /= 10\n    }\n    return sum1 - sum2 == 0",
    "    var sum1 = 0\n    var sum2 = 0\n    var i = 1\n    var num = n\n    while num > 0 {\n        if i % 2 == 0 {\n            sum2 += num % 10\n        } else {\n            sum1 += num % 10\n        }\n        i += 1\n        num /= 10\n    }\n    return abs(sum1 - sum2) % 11 == 0",
    "    var sum1 = 0\n    var sum2 = 0\n    var num = n\n    while num > 0 {\n        sum1 += num % 10\n        num /= 10\n        sum2 += num % 10\n        num /= 10\n    }\n    return sum1 == sum2",
    "    var sum_odd = 0\n    var sum_even = 0\n    var i = 1\n    var num = n\n    while num > 0 {\n        if i % 2 == 0 {\n            sum_even += num % 10\n        } else {\n            sum_odd += num % 10\n        }\n        num = num / 10\n        i += 1\n    }\n    return sum_odd - sum_even == 0",
    "    var even = 0\n    var odd = 0\n    var num = n\n    while num > 0 {\n        even += num % 10\n        num /= 10\n        odd += num % 10\n        num /= 10\n    }\n    return (even - odd) % 11 == 0"
  ]
}
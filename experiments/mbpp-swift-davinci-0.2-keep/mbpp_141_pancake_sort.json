{
  "name": "mbpp_141_pancake_sort",
  "language": "swift",
  "prompt": "\n/// Write a function to sort a list of elements.\nfunc pancake_sort(nums: [Int]) -> [Int] {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pancake_sort(nums: [15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79])\nassert(pancake_sort(nums: [98, 12, 54, 36, 85]) == [12, 36, 54, 85, 98])\nassert(pancake_sort(nums: [41, 42, 32, 12, 23]) == [12, 23, 32, 41, 42])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].max_index()!\n        if max_index != i {\n            nums[0..<max_index+1].reverse()\n            nums[0..<i+1].reverse()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in 0..<nums.count {\n        let max = nums.max()!\n        let maxIndex = nums.firstIndex(of: max)!\n        if maxIndex != nums.count - 1 - i {\n            if maxIndex != 0 {\n                nums = flip(nums: nums, k: maxIndex + 1)\n                result.append(maxIndex + 1)\n            }\n            nums = flip(nums: nums, k: nums.count - i)\n            result.append(nums.count - i)\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].enumerated().max(by: { $0.element < $1.element })!.offset\n        if max_index != i {\n            nums[0..<max_index+1].reverse()\n            nums[0..<i+1].reverse()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums.index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index+1)\n                nums[0..<max_index+1] = nums[0..<max_index+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var i = nums.count - 1\n    while i > 0 {\n        let maxIndex = nums[0...i].index(of: nums[0...i].max()!)!\n        if maxIndex != i {\n            nums = flip(nums: nums, k: maxIndex + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n        i -= 1\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = (0..<i).reduce(0) { nums[$0] > nums[$1] ? $0 : $1 }\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].enumerated().max { $0.element < $1.element }!.offset\n        if max_index != i {\n            nums = flip(nums: nums, k: max_index + 1)\n            nums = flip(nums: nums, k: i + 1)\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.firstIndex(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums[0..<maxIndex+1] = nums[0..<maxIndex+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums.index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index + 1)\n                nums[0..<max_index+1] = nums[0..<max_index+1].reversed()\n            }\n            result.append(i + 1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums[0..<i+1].index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index+1)\n                nums[0..<max_index+1] = nums[0..<max_index+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let max_index = nums.index(of: nums[0..<i+1].max()!)!\n        if max_index != i {\n            if max_index != 0 {\n                result.append(max_index+1)\n                nums[0..<max_index+1] = nums[0..<max_index+1].reversed()\n            }\n            result.append(i+1)\n            nums[0..<i+1] = nums[0..<i+1].reversed()\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (1...nums.count).reversed() {\n        let index = nums.index(of: i)!\n        if index == i - 1 {\n            continue\n        }\n        if index != 0 {\n            result.append(index + 1)\n            nums = flip(nums: nums, k: index + 1)\n        }\n        result.append(i)\n        nums = flip(nums: nums, k: i)\n    }\n    return result",
    "    var nums = nums\n    var result: [Int] = []\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            nums = flip(nums: nums, k: maxIndex + 1)\n        }\n        result.append(i + 1)\n        nums = flip(nums: nums, k: i + 1)\n    }\n    return result",
    "    var nums = nums\n    for i in stride(from: nums.count - 1, through: 1, by: -1) {\n        let max_index = nums[0..<i + 1].index(of: nums[0..<i + 1].max()!)!\n        if max_index != i {\n            nums[0...max_index].reverse()\n            nums[0...i].reverse()\n        }\n    }\n    return nums",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = maxIndexIn(nums: nums, end: i)\n        if maxIndex != i {\n            result.append(maxIndex + 1)\n            flip(nums: &nums, k: maxIndex + 1)\n            result.append(i + 1)\n            flip(nums: &nums, k: i + 1)\n        }\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    var max = nums.count\n    while max > 0 {\n        let index = nums.index(of: max)!\n        if index != max - 1 {\n            if index != 0 {\n                result.append(index + 1)\n                nums = flip(nums: nums, k: index + 1)\n            }\n            result.append(max)\n            nums = flip(nums: nums, k: max)\n        }\n        max -= 1\n    }\n    return result",
    "    var nums = nums\n    var result = [Int]()\n    for i in (0..<nums.count).reversed() {\n        let maxIndex = nums.index(of: nums[0..<i+1].max()!)!\n        if maxIndex != i {\n            if maxIndex != 0 {\n                result.append(maxIndex+1)\n                nums = flip(nums: nums, k: maxIndex+1)\n            }\n            result.append(i+1)\n            nums = flip(nums: nums, k: i+1)\n        }\n    }\n    return result"
  ]
}
{
  "name": "mbpp_764_number_ctr",
  "language": "swift",
  "prompt": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for i in str {\n        if i.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if Int(String(char)) != nil {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if Int(String(char)) != nil {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.characters.filter { Int(String($0)) != nil }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "/tmp/tmpqoc3rcn6.swift:4:16: error: 'characters' is unavailable: Please use String directly\n    return str.characters.filter { Int(String($0)) != nil }.count\n               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.filter { $0.isNumber }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.filter { $0.isNumber }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.filter { Int(String($0)) != nil }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.filter { \"0123456789\".contains($0) }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char >= \"0\" && char <= \"9\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for c in str {\n        if c >= \"0\" && c <= \"9\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for ch in str {\n        if ch.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.filter { Int(String($0)) != nil }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510112,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
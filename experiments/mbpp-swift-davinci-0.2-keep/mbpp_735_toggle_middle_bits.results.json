{
  "name": "mbpp_735_toggle_middle_bits",
  "language": "swift",
  "prompt": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_735_toggle_middle_bits.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpo63ob0ao/tmpo63ob0ao.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0741c15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b074190cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b074190c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b074190b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo63ob0ao                        0x000055b2b426b1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b0741e01460 __libc_start_main + 245\n6    tmpo63ob0ao                        0x000055b2b426ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b1010101010101010101010101010101010101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "/tmp/tmpmoca77qc.swift:4:16: error: integer literal '12297829382473034410' overflows when stored into 'Int'\n    return n ^ 0b1010101010101010101010101010101010101010101010101010101010101010\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpthmu5a0w/tmpthmu5a0w.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aff2619dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aff25e94b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aff25e94988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aff25e937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpthmu5a0w                        0x00005636fa3b21b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aff26389460 __libc_start_main + 245\n6    tmpthmu5a0w                        0x00005636fa3b1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    var mask = 0b11\n    var i = 1\n    while i < n.bitWidth - 1 {\n        mask = mask << 1\n        mask = mask | 0b1\n        n = n ^ (mask << i)\n        i += 1\n    }\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp124l35id/tmp124l35id.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba0b4338c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba0b402fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba0b402f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba0b402e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp124l35id                        0x0000562afd92d265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba0b4524460 __libc_start_main + 245\n6    tmp124l35id                        0x0000562afd92cf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.count - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "/tmp/tmpwz05xqop.swift:4:25: error: value of type 'Int' has no member 'count'\n    let mask = (1 << (n.count - 2)) - 1\n                      ~ ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    var last_bit = n & (1 << (n.bitWidth - 1))\n    last_bit = last_bit >> (n.bitWidth - 1)\n    n = n >> 1\n    n = n << 1\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp__g6fnn7/tmp__g6fnn7.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13de5d6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13de2cdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13de2cd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13de2cc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp__g6fnn7                        0x0000555d9f5c0265 <unavailable> + 4709\n5    libc.so.6                          0x00002b13de7c2460 __libc_start_main + 245\n6    tmp__g6fnn7                        0x0000555d9f5bff19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1) ^ (1 << 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp4059n902/tmp4059n902.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6cd59eec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6cd56e5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6cd56e5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6cd56e47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4059n902                        0x00005629df503326 <unavailable> + 4902\n5    libc.so.6                          0x00002b6cd5bda460 __libc_start_main + 245\n6    tmp4059n902                        0x00005629df502e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111100\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp_zdofho4/tmp_zdofho4.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9f5b63ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9f5b331b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9f5b331988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9f5b3307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_zdofho4                        0x00005647cc8d11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b9f5b826460 __libc_start_main + 245\n6    tmp_zdofho4                        0x00005647cc8d0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    num = num ^ (num >> 1)\n    num = num ^ (num >> 2)\n    num = num ^ (num >> 4)\n    num = num ^ (num >> 8)\n    num = num ^ (num >> 16)\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp52axw69w/tmp52axw69w.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9514621c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9514318b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9514318988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b95143177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp52axw69w                        0x000055aab4beb1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b951480d460 __libc_start_main + 245\n6    tmp52axw69w                        0x000055aab4beae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11 << 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp2z7hjkqi/tmp2z7hjkqi.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b424f1bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b424eeb6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b424eeb6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b424eeb57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2z7hjkqi                        0x0000557f998db326 <unavailable> + 4902\n5    libc.so.6                          0x00002b424f3ab460 __libc_start_main + 245\n6    tmp2z7hjkqi                        0x0000557f998dae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    return n ^ (mask ^ (1 << 1))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpga32owz0/tmpga32owz0.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2296d1ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2296a15b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2296a15988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2296a147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpga32owz0                        0x000055b6bbd3d265 <unavailable> + 4709\n5    libc.so.6                          0x00002b2296f0a460 __libc_start_main + 245\n6    tmpga32owz0                        0x000055b6bbd3cf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110111111101111111\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmppudbmj2h/tmppudbmj2h.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b85f1bfcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b85f18f3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b85f18f3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b85f18f27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppudbmj2h                        0x000055c803da81b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b85f1de8460 __libc_start_main + 245\n6    tmppudbmj2h                        0x000055c803da7e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b10101010101010101010101010101010\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp42an2ltk/tmp42an2ltk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae6a7b0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae6a7805b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae6a7805988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae6a78047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp42an2ltk                        0x0000560c2000a1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ae6a7cfa460 __libc_start_main + 245\n6    tmp42an2ltk                        0x0000560c20009e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpwswz8faj/tmpwswz8faj.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abdbc5b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abdbc2afb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abdbc2af988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abdbc2ae7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwswz8faj                        0x000055caf5d791b5 <unavailable> + 4533\n5    libc.so.6                          0x00002abdbc7a4460 __libc_start_main + 245\n6    tmpwswz8faj                        0x000055caf5d78e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b111111111\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmppzsnvbog/tmppzsnvbog.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af5eb27bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af5eaf72b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af5eaf72988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af5eaf717b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppzsnvbog                        0x0000559721d0e1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af5eb467460 __libc_start_main + 245\n6    tmppzsnvbog                        0x0000559721d0de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b1111111111111111111111111111111111111111111111111111111111111111\n    let first_bit = n & 0b1\n    let last_bit = n & (0b1 << 31)\n    let middle_bits = n & mask\n    let middle_bits_toggled = middle_bits ^ mask\n    return first_bit | middle_bits_toggled | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmppvnxe7nl.swift:4:16: error: integer literal '18446744073709551615' overflows when stored into 'Int'\n    let mask = 0b1111111111111111111111111111111111111111111111111111111111111111\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpwswz8faj/tmpwswz8faj.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abdbc5b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abdbc2afb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abdbc2af988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abdbc2ae7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwswz8faj                        0x000055caf5d791b5 <unavailable> + 4533\n5    libc.so.6                          0x00002abdbc7a4460 __libc_start_main + 245\n6    tmpwswz8faj                        0x000055caf5d78e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpisbez9ew/tmpisbez9ew.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5979174c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5978e6bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5978e6b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5978e6a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpisbez9ew                        0x00005600d42ee1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5979360460 __libc_start_main + 245\n6    tmpisbez9ew                        0x00005600d42ede69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpo63ob0ao/tmpo63ob0ao.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0741c15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b074190cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b074190c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b074190b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo63ob0ao                        0x000055b2b426b1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b0741e01460 __libc_start_main + 245\n6    tmpo63ob0ao                        0x000055b2b426ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    return n ^ (mask >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpfzj7ppqi/tmpfzj7ppqi.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8bd13d2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8bd10c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8bd10c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8bd10c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfzj7ppqi                        0x0000560829f58265 <unavailable> + 4709\n5    libc.so.6                          0x00002b8bd15be460 __libc_start_main + 245\n6    tmpfzj7ppqi                        0x0000560829f57f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (0b11111111111111111111111111111110)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpuv2hxws_/tmpuv2hxws_.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b696a77fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b696a476b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b696a476988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b696a4757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuv2hxws_                        0x000055b1a33761b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b696a96b460 __libc_start_main + 245\n6    tmpuv2hxws_                        0x000055b1a3375e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (sizeof(Int) * 8 - 1))\n    n = n >> 1\n    n = n << 1\n    n = n ^ ((1 << (sizeof(Int) * 8 - 2)) - 1)\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmpv5g75ach.swift:6:31: error: cannot find 'sizeof' in scope\n    let last_bit = n & (1 << (sizeof(Int) * 8 - 1))\n                              ^~~~~~\n/tmp/tmpv5g75ach.swift:9:21: error: cannot find 'sizeof' in scope\n    n = n ^ ((1 << (sizeof(Int) * 8 - 2)) - 1)\n                    ^~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpthmu5a0w/tmpthmu5a0w.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aff2619dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aff25e94b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aff25e94988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aff25e937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpthmu5a0w                        0x00005636fa3b21b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aff26389460 __libc_start_main + 245\n6    tmpthmu5a0w                        0x00005636fa3b1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    let first = num & 1\n    num = num >> 1\n    let last = num & 1\n    num = num >> 1\n    num = num ^ 0x55555555\n    num = num << 1\n    num = num | first\n    num = num << 1\n    num = num | last\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmprjzpu5h8/tmprjzpu5h8.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afa0c9c5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afa0c6bcb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afa0c6bc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afa0c6bb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprjzpu5h8                        0x00005639f46171b5 <unavailable> + 4533\n5    libc.so.6                          0x00002afa0cbb1460 __libc_start_main + 245\n6    tmprjzpu5h8                        0x00005639f4616e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b10101010101010101010101010101010\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp42an2ltk/tmp42an2ltk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae6a7b0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae6a7805b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae6a7805988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae6a78047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp42an2ltk                        0x0000560c2000a1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ae6a7cfa460 __libc_start_main + 245\n6    tmp42an2ltk                        0x0000560c20009e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpisbez9ew/tmpisbez9ew.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5979174c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5978e6bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5978e6b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5978e6a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpisbez9ew                        0x00005600d42ee1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5979360460 __libc_start_main + 245\n6    tmpisbez9ew                        0x00005600d42ede69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b1111_1111_1111_1111_1111_1111_1111_1111\n    let first_bit = n & 0b1000_0000_0000_0000_0000_0000_0000_0000\n    let last_bit = n & 0b0000_0000_0000_0000_0000_0000_0000_0001\n    let middle_bits = n & 0b0111_1111_1111_1111_1111_1111_1111_1110\n    let toggled_middle_bits = middle_bits ^ mask\n    return first_bit | toggled_middle_bits | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpgfkwenpa/tmpgfkwenpa.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5a8b99c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac5a8890b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac5a8890988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5a888f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgfkwenpa                        0x000056422ec761b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ac5a8d85460 __libc_start_main + 245\n6    tmpgfkwenpa                        0x000056422ec75e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (0b1111111111111111111111111111111111111111111111111111111111111110)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmp14e8yexh.swift:4:17: error: integer literal '18446744073709551614' overflows when stored into 'Int'\n    return n ^ (0b1111111111111111111111111111111111111111111111111111111111111110)\n                ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    n ^= mask\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpclgq6g61/tmpclgq6g61.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad811f92c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad811c89b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad811c89988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad811c887b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpclgq6g61                        0x0000556b407e5265 <unavailable> + 4709\n5    libc.so.6                          0x00002ad81217e460 __libc_start_main + 245\n6    tmpclgq6g61                        0x0000556b407e4f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (0b11111111111111111111111111111110)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpuv2hxws_/tmpuv2hxws_.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b696a77fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b696a476b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b696a476988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b696a4757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuv2hxws_                        0x000055b1a33761b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b696a96b460 __libc_start_main + 245\n6    tmpuv2hxws_                        0x000055b1a3375e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    n = n >> 1\n    n = n << 1\n    n = n ^ (1 << (n.bitWidth - 2))\n    n = n >> 1\n    n = n << 1\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmp9skj3_0p/tmp9skj3_0p.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acf9f4f1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acf9f1e8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acf9f1e8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acf9f1e77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9skj3_0p                        0x0000560bfc07d265 <unavailable> + 4709\n5    libc.so.6                          0x00002acf9f6dd460 __libc_start_main + 245\n6    tmp9skj3_0p                        0x0000560bfc07cf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    n = n ^ (n & (n - 1))\n    n = n | (first_bit << 1)\n    n = n | last_bit\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpa5vijaua/tmpa5vijaua.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeebac9bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeeba992b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeeba992988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeeba9917b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa5vijaua                        0x000055c94ccaa265 <unavailable> + 4709\n5    libc.so.6                          0x00002aeebae87460 __libc_start_main + 245\n6    tmpa5vijaua                        0x000055c94cca9f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    return n ^ (mask >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpfzj7ppqi/tmpfzj7ppqi.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8bd13d2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8bd10c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8bd10c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8bd10c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfzj7ppqi                        0x0000560829f58265 <unavailable> + 4709\n5    libc.so.6                          0x00002b8bd15be460 __libc_start_main + 245\n6    tmpfzj7ppqi                        0x0000560829f57f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpthmu5a0w/tmpthmu5a0w.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aff2619dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aff25e94b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aff25e94988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aff25e937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpthmu5a0w                        0x00005636fa3b21b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aff26389460 __libc_start_main + 245\n6    tmpthmu5a0w                        0x00005636fa3b1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (Int.bitWidth - 1))\n    n = n ^ (n & (n - 1))\n    n = n | (first_bit << 1)\n    n = n | last_bit\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmp2m6f6uts/tmp2m6f6uts.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b43100ccc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b430fdc3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b430fdc3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b430fdc27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2m6f6uts                        0x00005652020c21b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b43102b8460 __libc_start_main + 245\n6    tmp2m6f6uts                        0x00005652020c1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpwswz8faj/tmpwswz8faj.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abdbc5b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abdbc2afb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abdbc2af988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abdbc2ae7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwswz8faj                        0x000055caf5d791b5 <unavailable> + 4533\n5    libc.so.6                          0x00002abdbc7a4460 __libc_start_main + 245\n6    tmpwswz8faj                        0x000055caf5d78e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpo63ob0ao/tmpo63ob0ao.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0741c15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b074190cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b074190c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b074190b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo63ob0ao                        0x000055b2b426b1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b0741e01460 __libc_start_main + 245\n6    tmpo63ob0ao                        0x000055b2b426ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111111\n    let first_bit = n & 0b1\n    let last_bit = n & (0b1 << 31)\n    let middle_bits = n & (mask ^ (first_bit | last_bit))\n    return first_bit | middle_bits | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpbycdgrn4/tmpbycdgrn4.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aabe7cfec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aabe79f5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aabe79f5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aabe79f47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbycdgrn4                        0x0000556d133281b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aabe7eea460 __libc_start_main + 245\n6    tmpbycdgrn4                        0x0000556d13327e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpo63ob0ao/tmpo63ob0ao.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0741c15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b074190cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b074190c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b074190b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo63ob0ao                        0x000055b2b426b1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b0741e01460 __libc_start_main + 245\n6    tmpo63ob0ao                        0x000055b2b426ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return (n ^ mask) | (first_bit << (n.bitWidth - 2)) | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpe3upmb5d/tmpe3upmb5d.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aad39213c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aad38f0ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aad38f0a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aad38f097b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe3upmb5d                        0x000055b706984265 <unavailable> + 4709\n5    libc.so.6                          0x00002aad393ff460 __libc_start_main + 245\n6    tmpe3upmb5d                        0x000055b706983f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    n = n | (n >> 1)\n    n = n | (n >> 2)\n    n = n | (n >> 4)\n    n = n | (n >> 8)\n    n = n | (n >> 16)\n    return (n >> 1) ^ (n >> 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmppq5jqod6/tmppq5jqod6.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b78eabfcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b78ea8f3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b78ea8f3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b78ea8f27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppq5jqod6                        0x00005558f4f6f1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b78eade8460 __libc_start_main + 245\n6    tmppq5jqod6                        0x00005558f4f6ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    let first_bit = num & 1\n    let last_bit = num & (1 << (sizeof(Int) * 8 - 1))\n    num = num ^ (num & (num - 1))\n    num = num | (first_bit << 1)\n    num = num | last_bit\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmpejvpuny5.swift:6:33: error: cannot find 'sizeof' in scope\n    let last_bit = num & (1 << (sizeof(Int) * 8 - 1))\n                                ^~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << n.bitWidth - 2) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmp8no9haoo/tmp8no9haoo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5f2ce8bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5f2cb82b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5f2cb82988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5f2cb817b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8no9haoo                        0x0000558832c32265 <unavailable> + 4709\n5    libc.so.6                          0x00002b5f2d077460 __libc_start_main + 245\n6    tmp8no9haoo                        0x0000558832c31f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b011111110\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmp1hejorpr/tmp1hejorpr.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b045e0eec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b045dde5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b045dde5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b045dde47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1hejorpr                        0x000055fdf53e91b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b045e2da460 __libc_start_main + 245\n6    tmp1hejorpr                        0x000055fdf53e8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var mask = 0b11\n    num = num & mask\n    mask = mask << 1\n    while mask < n {\n        num = num ^ mask\n        mask = mask << 1\n    }\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpwpubaycb/tmpwpubaycb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af848b4ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af848845b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af848845988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af8488447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwpubaycb                        0x0000560431e291b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af848d3a460 __libc_start_main + 245\n6    tmpwpubaycb                        0x0000560431e28e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var left_most_set_bit_pos = 0\n    var right_most_set_bit_pos = 0\n    var i = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            left_most_set_bit_pos = i\n        }\n        num = num >> 1\n        i += 1\n    }\n    num = n\n    i = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            right_most_set_bit_pos = i\n        }\n        num = num >> 1\n        i += 1\n    }\n    var mask = 0\n    for i in left_most_set_bit_pos+1..<right_most_set_bit_pos {\n        mask = mask | (1 << i)\n    }\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "Swift/Range.swift:743: Fatal error: Range requires lowerBound <= upperBound\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b886d9ebc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b886d6e2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b886d6e2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b886d6e213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b886d6e1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpd_deuy8q                        0x0000564334d8daed <unavailable> + 6893\n6    tmpd_deuy8q                        0x0000564334d8d2c8 <unavailable> + 4808\n7    libc.so.6                          0x00002b886dbd7460 __libc_start_main + 245\n8    tmpd_deuy8q                        0x0000564334d8cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpthmu5a0w/tmpthmu5a0w.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aff2619dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aff25e94b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aff25e94988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aff25e937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpthmu5a0w                        0x00005636fa3b21b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aff26389460 __libc_start_main + 245\n6    tmpthmu5a0w                        0x00005636fa3b1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let mask = (1 << n.nonzeroBitCount) - 1\n    n ^= mask\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpwid67r5v/tmpwid67r5v.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7733f16c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7733c0db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7733c0d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7733c0c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwid67r5v                        0x000055a2410d31b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b7734102460 __libc_start_main + 245\n6    tmpwid67r5v                        0x000055a2410d2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmprktophfy.swift:4:16: error: integer literal '73786976294838206463' overflows when stored into 'Int'\n    let mask = 0b11_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111_1111\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpwswz8faj/tmpwswz8faj.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abdbc5b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abdbc2afb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abdbc2af988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abdbc2ae7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwswz8faj                        0x000055caf5d791b5 <unavailable> + 4533\n5    libc.so.6                          0x00002abdbc7a4460 __libc_start_main + 245\n6    tmpwswz8faj                        0x000055caf5d78e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let middle_bits = n & (mask ^ (first_bit | last_bit))\n    return first_bit | middle_bits.toggle() | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmpxnncm3bz.swift:8:36: error: value of type 'Int' has no member 'toggle'\n    return first_bit | middle_bits.toggle() | last_bit\n                       ~~~~~~~~~~~ ^~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmppf65_woe/tmppf65_woe.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac76e40fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac76e106b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac76e106988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac76e1057b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppf65_woe                        0x000055838eb431b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ac76e5fb460 __libc_start_main + 245\n6    tmppf65_woe                        0x000055838eb42e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let mask_first_last = mask ^ (1 | (1 << (n.bitWidth - 1)))\n    return n ^ mask_first_last\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpsbit4yvb/tmpsbit4yvb.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b89862b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8985fafb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8985faf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8985fae7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsbit4yvb                        0x0000563034d0c265 <unavailable> + 4709\n5    libc.so.6                          0x00002b89864a4460 __libc_start_main + 245\n6    tmpsbit4yvb                        0x0000563034d0bf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b1111111111111111111111111111111111111111111111111111111111111111\n    let first_bit = n & 0b1\n    let last_bit = n & (0b1 << 31)\n    let middle_bits = n & mask\n    let middle_bits_toggled = middle_bits ^ mask\n    return first_bit | middle_bits_toggled | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmppvnxe7nl.swift:4:16: error: integer literal '18446744073709551615' overflows when stored into 'Int'\n    let mask = 0b1111111111111111111111111111111111111111111111111111111111111111\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    let last_bit = (n >> 1) & 1\n    n = n ^ (n >> 1)\n    n = n ^ (n << 1)\n    n = n | (first_bit << 1)\n    n = n | (last_bit)\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpxlbptciu/tmpxlbptciu.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abae9cd0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abae99c7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abae99c7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abae99c67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxlbptciu                        0x000055928d5a11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002abae9ebc460 __libc_start_main + 245\n6    tmpxlbptciu                        0x000055928d5a0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111111\n    let mask_first_last = 0b11111111111111111111111111111100\n    return n ^ mask_first_last\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmplkwy4j2q/tmplkwy4j2q.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aceb4c2cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aceb4923b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aceb4923988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aceb49227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplkwy4j2q                        0x000055d127d7a1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aceb4e18460 __libc_start_main + 245\n6    tmplkwy4j2q                        0x000055d127d79e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (0b11111111111111111111111111111110)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpuv2hxws_/tmpuv2hxws_.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b696a77fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b696a476b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b696a476988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b696a4757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuv2hxws_                        0x000055b1a33761b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b696a96b460 __libc_start_main + 245\n6    tmpuv2hxws_                        0x000055b1a3375e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    n ^= mask\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpclgq6g61/tmpclgq6g61.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad811f92c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad811c89b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad811c89988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad811c887b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpclgq6g61                        0x0000556b407e5265 <unavailable> + 4709\n5    libc.so.6                          0x00002ad81217e460 __libc_start_main + 245\n6    tmpclgq6g61                        0x0000556b407e4f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmppf65_woe/tmppf65_woe.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac76e40fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac76e106b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac76e106988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac76e1057b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppf65_woe                        0x000055838eb431b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ac76e5fb460 __libc_start_main + 245\n6    tmppf65_woe                        0x000055838eb42e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << (n.bitWidth - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmphf1wvnqt/tmphf1wvnqt.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1140ee7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1140bdeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1140bde988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1140bdd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphf1wvnqt                        0x0000564a7c417265 <unavailable> + 4709\n5    libc.so.6                          0x00002b11410d3460 __libc_start_main + 245\n6    tmphf1wvnqt                        0x0000564a7c416f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111111\n    let first_bit = n & 0b1\n    let last_bit = n & 0b10000000000000000000000000000000\n    let middle_bits = n & mask\n    return first_bit | middle_bits | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmps5hcihqz/tmps5hcihqz.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae765c5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae765953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae765953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae7659527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmps5hcihqz                        0x000055d960d2e1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ae765e48460 __libc_start_main + 245\n6    tmps5hcihqz                        0x000055d960d2de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    var mask = 0b11\n    var result = 0\n    for _ in 0..<4 {\n        let bit = n & mask\n        result = result | bit\n        n = n >> 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpk4aowvkw/tmpk4aowvkw.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b92ce212c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b92cdf09b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b92cdf09988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b92cdf087b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpk4aowvkw                        0x00005640251462a5 <unavailable> + 4773\n5    libc.so.6                          0x00002b92ce3fe460 __libc_start_main + 245\n6    tmpk4aowvkw                        0x0000564025145f59 <unavailable> + 3929\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let middle_bits = n & (mask ^ (first_bit | last_bit))\n    return first_bit | last_bit | middle_bits.toggle()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmpo_pe3pyz.swift:8:47: error: value of type 'Int' has no member 'toggle'\n    return first_bit | last_bit | middle_bits.toggle()\n                                  ~~~~~~~~~~~ ^~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let left = mask ^ ((1 << (n.bitWidth - 2)) - 1)\n    let right = mask ^ ((1 << 1) - 1)\n    let middle = left | right\n    return n ^ middle\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmp2q_tt5qa/tmp2q_tt5qa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1b41cd7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1b419ceb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1b419ce988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1b419cd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2q_tt5qa                        0x00005599369dc265 <unavailable> + 4709\n5    libc.so.6                          0x00002b1b41ec3460 __libc_start_main + 245\n6    tmp2q_tt5qa                        0x00005599369dbf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpisbez9ew/tmpisbez9ew.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5979174c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5978e6bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5978e6b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5978e6a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpisbez9ew                        0x00005600d42ee1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5979360460 __libc_start_main + 245\n6    tmpisbez9ew                        0x00005600d42ede69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    return n ^ (mask >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpfzj7ppqi/tmpfzj7ppqi.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8bd13d2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8bd10c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8bd10c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8bd10c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfzj7ppqi                        0x0000560829f58265 <unavailable> + 4709\n5    libc.so.6                          0x00002b8bd15be460 __libc_start_main + 245\n6    tmpfzj7ppqi                        0x0000560829f57f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = (n >> (n.bitWidth - 1)) & 1\n    let middle_bits = mask ^ ((1 << 1) | (1 << (n.bitWidth - 1)))\n    return (n & middle_bits) ^ middle_bits | (first_bit << (n.bitWidth - 1)) | (last_bit << 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpluuuvs2x/tmpluuuvs2x.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5ae5191c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5ae4e88b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5ae4e88988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5ae4e877b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpluuuvs2x                        0x00005581d83ad265 <unavailable> + 4709\n5    libc.so.6                          0x00002b5ae537d460 __libc_start_main + 245\n6    tmpluuuvs2x                        0x00005581d83acf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return ((n >> 1) ^ (n << 1)) & ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpeptqmtt7/tmpeptqmtt7.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7f38f91c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7f38c88b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7f38c88988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7f38c877b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpeptqmtt7                        0x0000564db569c265 <unavailable> + 4709\n5    libc.so.6                          0x00002b7f3917d460 __libc_start_main + 245\n6    tmpeptqmtt7                        0x0000564db569bf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    return n ^ (mask & (mask >> 1))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpppry4qnd/tmpppry4qnd.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0432bbfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b04328b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b04328b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b04328b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpppry4qnd                        0x00005640b63b4265 <unavailable> + 4709\n5    libc.so.6                          0x00002b0432dab460 __libc_start_main + 245\n6    tmpppry4qnd                        0x00005640b63b3f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let middle_bits = n & (mask ^ (first_bit | last_bit))\n    return first_bit | middle_bits.toggle() | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmpxnncm3bz.swift:8:36: error: value of type 'Int' has no member 'toggle'\n    return first_bit | middle_bits.toggle() | last_bit\n                       ~~~~~~~~~~~ ^~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = (n >> (n.bitWidth - 1)) & 1\n    let middle_bits = mask ^ (first_bit | last_bit)\n    return n ^ middle_bits\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmp50fcxoxz/tmp50fcxoxz.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abc388f6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abc385edb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abc385ed988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abc385ec7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp50fcxoxz                        0x00005642bb400265 <unavailable> + 4709\n5    libc.so.6                          0x00002abc38ae2460 __libc_start_main + 245\n6    tmp50fcxoxz                        0x00005642bb3fff19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b1111_1111_1111_1111_1111_1111_1111_1111\n    let first_bit = n & 0b1000_0000_0000_0000_0000_0000_0000_0000\n    let last_bit = n & 0b0000_0000_0000_0000_0000_0000_0000_0001\n    let middle_bits = n & 0b0111_1111_1111_1111_1111_1111_1111_1110\n    let middle_bits_toggled = middle_bits ^ mask\n    return first_bit | middle_bits_toggled | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpcxgu66gn/tmpcxgu66gn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8648024c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8647d1bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8647d1b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8647d1a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcxgu66gn                        0x000055bd86ff61b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8648210460 __libc_start_main + 245\n6    tmpcxgu66gn                        0x000055bd86ff5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    n ^= mask\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpclgq6g61/tmpclgq6g61.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad811f92c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad811c89b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad811c89988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad811c887b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpclgq6g61                        0x0000556b407e5265 <unavailable> + 4709\n5    libc.so.6                          0x00002ad81217e460 __libc_start_main + 245\n6    tmpclgq6g61                        0x0000556b407e4f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpwswz8faj/tmpwswz8faj.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abdbc5b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abdbc2afb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abdbc2af988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abdbc2ae7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwswz8faj                        0x000055caf5d791b5 <unavailable> + 4533\n5    libc.so.6                          0x00002abdbc7a4460 __libc_start_main + 245\n6    tmpwswz8faj                        0x000055caf5d78e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpwswz8faj/tmpwswz8faj.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abdbc5b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abdbc2afb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abdbc2af988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abdbc2ae7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwswz8faj                        0x000055caf5d791b5 <unavailable> + 4533\n5    libc.so.6                          0x00002abdbc7a4460 __libc_start_main + 245\n6    tmpwswz8faj                        0x000055caf5d78e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b111111111\n    let result = n ^ mask\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpyl566bnf/tmpyl566bnf.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8a055e4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8a052dbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8a052db988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8a052da7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyl566bnf                        0x000055b509afa1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8a057d0460 __libc_start_main + 245\n6    tmpyl566bnf                        0x000055b509af9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111111\n    let mask_first_last = 0b11111111111111111111111111111100\n    let mask_first_last_bits = n & mask_first_last\n    let mask_middle_bits = n & mask_first_last\n    let mask_middle_bits_toggled = mask_middle_bits ^ mask\n    return mask_first_last_bits | mask_middle_bits_toggled\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpl46bwn9i/tmpl46bwn9i.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7399199c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7398e90b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7398e90988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7398e8f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl46bwn9i                        0x00005622da53b1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b7399385460 __libc_start_main + 245\n6    tmpl46bwn9i                        0x00005622da53ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpwswz8faj/tmpwswz8faj.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abdbc5b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abdbc2afb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abdbc2af988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abdbc2ae7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwswz8faj                        0x000055caf5d791b5 <unavailable> + 4533\n5    libc.so.6                          0x00002abdbc7a4460 __libc_start_main + 245\n6    tmpwswz8faj                        0x000055caf5d78e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmp0h71lyi0/tmp0h71lyi0.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab703e6ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab703b61b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab703b61988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab703b607b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0h71lyi0                        0x00005628523f21b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ab704056460 __libc_start_main + 245\n6    tmp0h71lyi0                        0x00005628523f1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (0b11111111111111111111111111111110)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpuv2hxws_/tmpuv2hxws_.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b696a77fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b696a476b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b696a476988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b696a4757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuv2hxws_                        0x000055b1a33761b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b696a96b460 __libc_start_main + 245\n6    tmpuv2hxws_                        0x000055b1a3375e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (0b1111111111111111111111111111111111111111111111111111111111111110)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmp14e8yexh.swift:4:17: error: integer literal '18446744073709551614' overflows when stored into 'Int'\n    return n ^ (0b1111111111111111111111111111111111111111111111111111111111111110)\n                ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    return n ^ (mask >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpfzj7ppqi/tmpfzj7ppqi.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8bd13d2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8bd10c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8bd10c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8bd10c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfzj7ppqi                        0x0000560829f58265 <unavailable> + 4709\n5    libc.so.6                          0x00002b8bd15be460 __libc_start_main + 245\n6    tmpfzj7ppqi                        0x0000560829f57f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let middle_bits = n & (mask ^ (1 | last_bit))\n    return first_bit | middle_bits | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpuf31w7ct/tmpuf31w7ct.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17dcedac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17dcbd1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17dcbd1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17dcbd07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuf31w7ct                        0x00005604eb008265 <unavailable> + 4709\n5    libc.so.6                          0x00002b17dd0c6460 __libc_start_main + 245\n6    tmpuf31w7ct                        0x00005604eb007f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    let first_bit = num & 1\n    let last_bit = num & (1 << (Int.bitWidth - 1))\n    num = num >> 1\n    num = num << 1\n    num = num ^ ((1 << (Int.bitWidth - 2)) - 1)\n    num = num | first_bit\n    num = num | last_bit\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpb7cp0voq/tmpb7cp0voq.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac3a6d0ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac3a6a01b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac3a6a01988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac3a6a007b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb7cp0voq                        0x0000560d634001b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ac3a6ef6460 __libc_start_main + 245\n6    tmpb7cp0voq                        0x0000560d633ffe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let middle_bits = n & (mask ^ (1 | last_bit))\n    return first_bit | middle_bits | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpuf31w7ct/tmpuf31w7ct.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17dcedac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17dcbd1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17dcbd1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17dcbd07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuf31w7ct                        0x00005604eb008265 <unavailable> + 4709\n5    libc.so.6                          0x00002b17dd0c6460 __libc_start_main + 245\n6    tmpuf31w7ct                        0x00005604eb007f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var mask = 1\n    var count = 0\n    var temp = n\n    while temp > 0 {\n        temp = temp >> 1\n        count += 1\n    }\n    mask = mask << (count - 2)\n    mask = mask - 1\n    mask = mask << 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1) ^ (1 << 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp4059n902/tmp4059n902.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6cd59eec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6cd56e5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6cd56e5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6cd56e47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4059n902                        0x00005629df503326 <unavailable> + 4902\n5    libc.so.6                          0x00002b6cd5bda460 __libc_start_main + 245\n6    tmp4059n902                        0x00005629df502e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    return n ^ (mask >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpfzj7ppqi/tmpfzj7ppqi.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8bd13d2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8bd10c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8bd10c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8bd10c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfzj7ppqi                        0x0000560829f58265 <unavailable> + 4709\n5    libc.so.6                          0x00002b8bd15be460 __libc_start_main + 245\n6    tmpfzj7ppqi                        0x0000560829f57f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b01111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpoaw890rv/tmpoaw890rv.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b013f974c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b013f66bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b013f66b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b013f66a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoaw890rv                        0x0000558b2cd301b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b013fb60460 __libc_start_main + 245\n6    tmpoaw890rv                        0x0000558b2cd2fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var mask = 1\n    while mask < num {\n        num = num ^ mask\n        mask = mask << 1\n    }\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpqz2kn4yw/tmpqz2kn4yw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4b7e5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4b7b53b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4b7b53988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4b7b527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqz2kn4yw                        0x0000564cb92631b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ab4b8048460 __libc_start_main + 245\n6    tmpqz2kn4yw                        0x0000564cb9262e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (0b11111111111111111111111111111110)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpuv2hxws_/tmpuv2hxws_.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b696a77fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b696a476b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b696a476988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b696a4757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuv2hxws_                        0x000055b1a33761b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b696a96b460 __libc_start_main + 245\n6    tmpuv2hxws_                        0x000055b1a3375e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b10101010101010101010101010101010\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp42an2ltk/tmp42an2ltk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae6a7b0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae6a7805b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae6a7805988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae6a78047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp42an2ltk                        0x0000560c2000a1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ae6a7cfa460 __libc_start_main + 245\n6    tmp42an2ltk                        0x0000560c20009e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    n = n ^ (n & ((1 << (n.bitWidth - 2)) - 1))\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmp3ecobqw3/tmp3ecobqw3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b45e60a8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b45e5d9fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b45e5d9f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b45e5d9e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3ecobqw3                        0x000055c21b5a8265 <unavailable> + 4709\n5    libc.so.6                          0x00002b45e6294460 __libc_start_main + 245\n6    tmp3ecobqw3                        0x000055c21b5a7f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b10101010101010101010101010101010\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp42an2ltk/tmp42an2ltk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae6a7b0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae6a7805b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae6a7805988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae6a78047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp42an2ltk                        0x0000560c2000a1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ae6a7cfa460 __libc_start_main + 245\n6    tmp42an2ltk                        0x0000560c20009e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    n = n >> 1\n    n = n << 1\n    n = n | first_bit\n    n = n >> 1\n    n = n << 1\n    n = n | last_bit\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmp_tfaxu2t/tmp_tfaxu2t.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3d3dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3d3dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3d3dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3d3dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_tfaxu2t                        0x000055655514d265 <unavailable> + 4709\n5    libc.so.6                          0x00002b3d3e1b7460 __libc_start_main + 245\n6    tmp_tfaxu2t                        0x000055655514cf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (sizeof(Int) * 8 - 1))\n    n = n >> 1\n    n = n << 1\n    n = n ^ ((1 << (sizeof(Int) * 8 - 2)) - 1)\n    n = n >> 1\n    n = n << 1\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "/tmp/tmpo6ejehhf.swift:6:31: error: cannot find 'sizeof' in scope\n    let last_bit = n & (1 << (sizeof(Int) * 8 - 1))\n                              ^~~~~~\n/tmp/tmpo6ejehhf.swift:9:21: error: cannot find 'sizeof' in scope\n    n = n ^ ((1 << (sizeof(Int) * 8 - 2)) - 1)\n                    ^~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpo63ob0ao/tmpo63ob0ao.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0741c15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b074190cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b074190c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b074190b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo63ob0ao                        0x000055b2b426b1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b0741e01460 __libc_start_main + 245\n6    tmpo63ob0ao                        0x000055b2b426ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let left_mask = mask << 1\n    let right_mask = mask >> 1\n    let middle_mask = left_mask & right_mask\n    return n ^ middle_mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpt1u_v8rx/tmpt1u_v8rx.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b481f06cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b481ed63b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b481ed63988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b481ed627b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpt1u_v8rx                        0x0000559c8ff19265 <unavailable> + 4709\n5    libc.so.6                          0x00002b481f258460 __libc_start_main + 245\n6    tmpt1u_v8rx                        0x0000559c8ff18f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return (n ^ mask) | (first_bit << (n.bitWidth - 2)) | (last_bit >> (n.bitWidth - 2))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "tmpvzfnw4hp/tmpvzfnw4hp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aca7f65bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aca7f352b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aca7f352988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aca7f3517b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvzfnw4hp                        0x00005624281b2265 <unavailable> + 4709\n5    libc.so.6                          0x00002aca7f847460 __libc_start_main + 245\n6    tmpvzfnw4hp                        0x00005624281b1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpg931ua0j/tmpg931ua0j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4405a9fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4405796b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4405796988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b44057957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg931ua0j                        0x000055aa78388265 <unavailable> + 4709\n5    libc.so.6                          0x00002b4405c8b460 __libc_start_main + 245\n6    tmpg931ua0j                        0x000055aa78387f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpkck26drw/tmpkck26drw.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba626c18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba62690fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba62690f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba62690e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkck26drw                        0x00005639c6e64265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba626e04460 __libc_start_main + 245\n6    tmpkck26drw                        0x00005639c6e63f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
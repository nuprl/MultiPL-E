{
  "name": "mbpp_746_sector_area",
  "language": "swift",
  "prompt": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpm5hcqqmn/tmpm5hcqqmn.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b323c3fac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b323c0f1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b323c0f1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b323c0f07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm5hcqqmn                        0x000055bdb55c226f <unavailable> + 4719\n5    libc.so.6                          0x00002b323c5e6460 __libc_start_main + 245\n6    tmpm5hcqqmn                        0x000055bdb55c1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) / 360 * Double.pi * Double(r * r)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpm5hcqqmn/tmpm5hcqqmn.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b323c3fac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b323c0f1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b323c0f1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b323c0f07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm5hcqqmn                        0x000055bdb55c226f <unavailable> + 4719\n5    libc.so.6                          0x00002b323c5e6460 __libc_start_main + 245\n6    tmpm5hcqqmn                        0x000055bdb55c1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpc7y58zif/tmpc7y58zif.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2598c21c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2598918b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2598918988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b25989177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc7y58zif                        0x0000561c41acc26f <unavailable> + 4719\n5    libc.so.6                          0x00002b2598e0d460 __libc_start_main + 245\n6    tmpc7y58zif                        0x0000561c41acbe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmp7gmpk3p8/tmp7gmpk3p8.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaf16dfac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaf16af1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaf16af1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaf16af07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7gmpk3p8                        0x0000559dd0cc826f <unavailable> + 4719\n5    libc.so.6                          0x00002aaf16fe6460 __libc_start_main + 245\n6    tmp7gmpk3p8                        0x0000559dd0cc7e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpm5hcqqmn/tmpm5hcqqmn.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b323c3fac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b323c0f1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b323c0f1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b323c0f07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm5hcqqmn                        0x000055bdb55c226f <unavailable> + 4719\n5    libc.so.6                          0x00002b323c5e6460 __libc_start_main + 245\n6    tmpm5hcqqmn                        0x000055bdb55c1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpc7y58zif/tmpc7y58zif.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2598c21c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2598918b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2598918988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b25989177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc7y58zif                        0x0000561c41acc26f <unavailable> + 4719\n5    libc.so.6                          0x00002b2598e0d460 __libc_start_main + 245\n6    tmpc7y58zif                        0x0000561c41acbe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) / 360 * Double.pi * Double(r) * Double(r)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let pi = 3.14\n    let area = (Double(a) / 360) * pi * Double(r * r)\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpq9n5a1ek/tmpq9n5a1ek.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5c506d9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5c503d0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5c503d0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5c503cf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq9n5a1ek                        0x000055fb9e0c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b5c508c5460 __libc_start_main + 245\n6    tmpq9n5a1ek                        0x000055fb9e0c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    } else {\n        return Double(r * r * a / 360)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpfgfr4j5x/tmpfgfr4j5x.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b989928dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9898f84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9898f84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9898f837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfgfr4j5x                        0x0000558f7639b2ff <unavailable> + 4863\n5    libc.so.6                          0x00002b9899479460 __libc_start_main + 245\n6    tmpfgfr4j5x                        0x0000558f7639aef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(a) * Double(r) * Double(r) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpmci96frn/tmpmci96frn.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab65473cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab654433b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab654433988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab6544327b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmci96frn                        0x00005642b9af726f <unavailable> + 4719\n5    libc.so.6                          0x00002ab654928460 __libc_start_main + 245\n6    tmpmci96frn                        0x00005642b9af6e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpc7y58zif/tmpc7y58zif.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2598c21c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2598918b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2598918988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b25989177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc7y58zif                        0x0000561c41acc26f <unavailable> + 4719\n5    libc.so.6                          0x00002b2598e0d460 __libc_start_main + 245\n6    tmpc7y58zif                        0x0000561c41acbe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmp7gmpk3p8/tmp7gmpk3p8.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaf16dfac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaf16af1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaf16af1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaf16af07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7gmpk3p8                        0x0000559dd0cc826f <unavailable> + 4719\n5    libc.so.6                          0x00002aaf16fe6460 __libc_start_main + 245\n6    tmp7gmpk3p8                        0x0000559dd0cc7e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return (Double(r) * Double(r) * Double(a)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmp1t6bw4ap/tmp1t6bw4ap.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7e4f222c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7e4ef19b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7e4ef19988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7e4ef187b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1t6bw4ap                        0x00005595b524a26f <unavailable> + 4719\n5    libc.so.6                          0x00002b7e4f40e460 __libc_start_main + 245\n6    tmp1t6bw4ap                        0x00005595b5249e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 2\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpeb7qnthz/tmpeb7qnthz.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8b9795c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8b948cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac8b948c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac8b948b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpeb7qnthz                        0x000055bd6780f26f <unavailable> + 4719\n5    libc.so.6                          0x00002ac8b9981460 __libc_start_main + 245\n6    tmpeb7qnthz                        0x000055bd6780ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return (Double(a) / 360.0) * Double.pi * Double(r * r)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(a) * Double(r) * Double(r) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpmci96frn/tmpmci96frn.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab65473cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab654433b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab654433988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab6544327b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmci96frn                        0x00005642b9af726f <unavailable> + 4719\n5    libc.so.6                          0x00002ab654928460 __libc_start_main + 245\n6    tmpmci96frn                        0x00005642b9af6e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpj385vp1r/tmpj385vp1r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2ab9c74c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2ab996bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2ab996b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2ab996a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj385vp1r                        0x0000559ec1aed2ff <unavailable> + 4863\n5    libc.so.6                          0x00002b2ab9e60460 __libc_start_main + 245\n6    tmpj385vp1r                        0x0000559ec1aecef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmp7gmpk3p8/tmp7gmpk3p8.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaf16dfac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaf16af1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaf16af1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaf16af07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7gmpk3p8                        0x0000559dd0cc826f <unavailable> + 4719\n5    libc.so.6                          0x00002aaf16fe6460 __libc_start_main + 245\n6    tmp7gmpk3p8                        0x0000559dd0cc7e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return (Double(a) / 360) * Double.pi * Double(r * r)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpm5hcqqmn/tmpm5hcqqmn.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b323c3fac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b323c0f1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b323c0f1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b323c0f07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm5hcqqmn                        0x000055bdb55c226f <unavailable> + 4719\n5    libc.so.6                          0x00002b323c5e6460 __libc_start_main + 245\n6    tmpm5hcqqmn                        0x000055bdb55c1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    } else {\n        return (Double(a) / 360) * Double.pi * Double(r * r)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmp7gmpk3p8/tmp7gmpk3p8.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaf16dfac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaf16af1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaf16af1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaf16af07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7gmpk3p8                        0x0000559dd0cc826f <unavailable> + 4719\n5    libc.so.6                          0x00002aaf16fe6460 __libc_start_main + 245\n6    tmp7gmpk3p8                        0x0000559dd0cc7e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r * r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmph3r6_0fc/tmph3r6_0fc.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af9c34f6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af9c31edb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af9c31ed988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af9c31ec7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph3r6_0fc                        0x000055dad670d26f <unavailable> + 4719\n5    libc.so.6                          0x00002af9c36e2460 __libc_start_main + 245\n6    tmph3r6_0fc                        0x000055dad670ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let pi = 3.14\n    return Double(a) * pi * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmprpdde0_p/tmprpdde0_p.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b69170e0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6916dd7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6916dd7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6916dd67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprpdde0_p                        0x00005640fb30726f <unavailable> + 4719\n5    libc.so.6                          0x00002b69172cc460 __libc_start_main + 245\n6    tmprpdde0_p                        0x00005640fb306e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpj385vp1r/tmpj385vp1r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2ab9c74c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2ab996bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2ab996b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2ab996a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj385vp1r                        0x0000559ec1aed2ff <unavailable> + 4863\n5    libc.so.6                          0x00002b2ab9e60460 __libc_start_main + 245\n6    tmpj385vp1r                        0x0000559ec1aecef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpm5hcqqmn/tmpm5hcqqmn.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b323c3fac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b323c0f1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b323c0f1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b323c0f07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm5hcqqmn                        0x000055bdb55c226f <unavailable> + 4719\n5    libc.so.6                          0x00002b323c5e6460 __libc_start_main + 245\n6    tmpm5hcqqmn                        0x000055bdb55c1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r * r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmp_yfut9cp/tmp_yfut9cp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b342d3c5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b342d0bcb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b342d0bc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b342d0bb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_yfut9cp                        0x000055b98fd1926f <unavailable> + 4719\n5    libc.so.6                          0x00002b342d5b1460 __libc_start_main + 245\n6    tmp_yfut9cp                        0x000055b98fd18e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpj385vp1r/tmpj385vp1r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2ab9c74c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2ab996bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2ab996b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2ab996a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj385vp1r                        0x0000559ec1aed2ff <unavailable> + 4863\n5    libc.so.6                          0x00002b2ab9e60460 __libc_start_main + 245\n6    tmpj385vp1r                        0x0000559ec1aecef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) / 360 * Double.pi * Double(r * r)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpm5hcqqmn/tmpm5hcqqmn.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b323c3fac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b323c0f1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b323c0f1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b323c0f07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm5hcqqmn                        0x000055bdb55c226f <unavailable> + 4719\n5    libc.so.6                          0x00002b323c5e6460 __libc_start_main + 245\n6    tmpm5hcqqmn                        0x000055bdb55c1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * Double.pi / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpc7y58zif/tmpc7y58zif.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2598c21c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2598918b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2598918988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b25989177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc7y58zif                        0x0000561c41acc26f <unavailable> + 4719\n5    libc.so.6                          0x00002b2598e0d460 __libc_start_main + 245\n6    tmpc7y58zif                        0x0000561c41acbe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(a) * Double(r) * Double(r) / 360.0\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmp7n71krpn/tmp7n71krpn.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0ea1d4fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0ea1a46b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0ea1a46988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0ea1a457b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7n71krpn                        0x000055608c98626f <unavailable> + 4719\n5    libc.so.6                          0x00002b0ea1f3b460 __libc_start_main + 245\n6    tmp7n71krpn                        0x000055608c985e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpj385vp1r/tmpj385vp1r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2ab9c74c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2ab996bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2ab996b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2ab996a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj385vp1r                        0x0000559ec1aed2ff <unavailable> + 4863\n5    libc.so.6                          0x00002b2ab9e60460 __libc_start_main + 245\n6    tmpj385vp1r                        0x0000559ec1aecef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpj385vp1r/tmpj385vp1r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2ab9c74c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2ab996bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2ab996b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2ab996a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj385vp1r                        0x0000559ec1aed2ff <unavailable> + 4863\n5    libc.so.6                          0x00002b2ab9e60460 __libc_start_main + 245\n6    tmpj385vp1r                        0x0000559ec1aecef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * Double.pi / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let pi = 3.14159265359\n    return Double(r * r * a) / 2 * pi\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpqo1efhpf/tmpqo1efhpf.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2c0fac7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2c0f7beb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2c0f7be988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2c0f7bd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqo1efhpf                        0x00005649091ec26f <unavailable> + 4719\n5    libc.so.6                          0x00002b2c0fcb3460 __libc_start_main + 245\n6    tmpqo1efhpf                        0x00005649091ebe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(a) * Double(r) * Double(r) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpmci96frn/tmpmci96frn.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab65473cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab654433b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab654433988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab6544327b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmci96frn                        0x00005642b9af726f <unavailable> + 4719\n5    libc.so.6                          0x00002ab654928460 __libc_start_main + 245\n6    tmpmci96frn                        0x00005642b9af6e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 2\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpeb7qnthz/tmpeb7qnthz.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8b9795c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8b948cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac8b948c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac8b948b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpeb7qnthz                        0x000055bd6780f26f <unavailable> + 4719\n5    libc.so.6                          0x00002ac8b9981460 __libc_start_main + 245\n6    tmpeb7qnthz                        0x000055bd6780ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpm5hcqqmn/tmpm5hcqqmn.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b323c3fac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b323c0f1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b323c0f1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b323c0f07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm5hcqqmn                        0x000055bdb55c226f <unavailable> + 4719\n5    libc.so.6                          0x00002b323c5e6460 __libc_start_main + 245\n6    tmpm5hcqqmn                        0x000055bdb55c1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 2.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpgd8bjatz/tmpgd8bjatz.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b934423ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9343f31b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9343f31988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9343f307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgd8bjatz                        0x00005598598cd26f <unavailable> + 4719\n5    libc.so.6                          0x00002b9344426460 __libc_start_main + 245\n6    tmpgd8bjatz                        0x00005598598cce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpenjnv5w1/tmpenjnv5w1.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c6bc5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c6b953b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c6b953988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c6b9527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpenjnv5w1                        0x00005582f88e026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4c6be48460 __libc_start_main + 245\n6    tmpenjnv5w1                        0x00005582f88dfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let pi = Double.pi\n    return (Double(r) * Double(r) * Double(a)) / (2 * pi)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpcepl8q1w/tmpcepl8q1w.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4dabda3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4daba9ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4daba9a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4daba997b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcepl8q1w                        0x000056258ca302bf <unavailable> + 4799\n5    libc.so.6                          0x00002b4dabf8f460 __libc_start_main + 245\n6    tmpcepl8q1w                        0x000056258ca2feb9 <unavailable> + 3769\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmptx1q3cf9/tmptx1q3cf9.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc45b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc4588db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc4588d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc4588c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptx1q3cf9                        0x0000561e8474726f <unavailable> + 4719\n5    libc.so.6                          0x00002afc45d82460 __libc_start_main + 245\n6    tmptx1q3cf9                        0x0000561e84746e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpte_f_1fd/tmpte_f_1fd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad5fce0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad5fcb05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad5fcb05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad5fcb047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte_f_1fd                        0x000055c37422c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad5fcffa460 __libc_start_main + 245\n6    tmpte_f_1fd                        0x000055c37422be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 2\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122499,
      "stdout": "",
      "stderr": "tmpeb7qnthz/tmpeb7qnthz.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac8b9795c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac8b948cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac8b948c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac8b948b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpeb7qnthz                        0x000055bd6780f26f <unavailable> + 4719\n5    libc.so.6                          0x00002ac8b9981460 __libc_start_main + 245\n6    tmpeb7qnthz                        0x000055bd6780ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr11h908r/tmpr11h908r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6b1efc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6b1ecc0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6b1ecc0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6b1ecbf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr11h908r                        0x000055d71473726f <unavailable> + 4719\n5    libc.so.6                          0x00002b6b1f1b5460 __libc_start_main + 245\n6    tmpr11h908r                        0x000055d714736e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpc3hui2g2/tmpc3hui2g2.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1dd6375c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1dd606cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1dd606c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1dd606b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc3hui2g2                        0x000055686941b26f <unavailable> + 4719\n5    libc.so.6                          0x00002b1dd6561460 __libc_start_main + 245\n6    tmpc3hui2g2                        0x000055686941ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
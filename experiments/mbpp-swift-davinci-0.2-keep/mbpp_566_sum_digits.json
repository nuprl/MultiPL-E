{
  "name": "mbpp_566_sum_digits",
  "language": "swift",
  "prompt": "\n/// Write a function to get the sum of the digits of a non-negative integer.\nfunc sum_digits(n: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sum_digits(n: 345) == 12)\nassert(sum_digits(n: 12) == 3)\nassert(sum_digits(n: 97) == 16)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    return n == 0 ? 0 : n % 10 + sum_digits(n / 10)",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    return n == 0 ? 0 : n % 10 + sum_digits(n / 10)",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    return n == 0 ? 0 : n % 10 + sum_digits(n / 10)",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    return 0",
    "    var sum = 0\n    var n = n\n    while n > 0 {\n        sum += n % 10\n        n /= 10\n    }\n    return sum",
    "    return n == 0 ? 0 : n % 10 + sum_digits(n / 10)",
    "    return n == 0 ? 0 : n % 10 + sum_digits(n / 10)"
  ]
}
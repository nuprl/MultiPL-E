{
  "name": "mbpp_640_remove_parenthesis",
  "language": "swift",
  "prompt": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result",
    "    var output = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            output += item\n        }\n    }\n    return output",
    "    var result = \"\"\n    for item in items {\n        if item == \"(\" {\n            continue\n        } else if item == \")\" {\n            continue\n        } else {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var stack = Stack<Character>()\n    for item in items {\n        for char in item {\n            if char == \"(\" {\n                stack.push(char)\n            } else if char == \")\" {\n                stack.pop()\n            } else {\n                if stack.isEmpty() {\n                    result.append(char)\n                }\n            }\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result",
    "    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result"
  ]
}
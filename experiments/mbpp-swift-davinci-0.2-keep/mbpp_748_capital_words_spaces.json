{
  "name": "mbpp_748_capital_words_spaces",
  "language": "swift",
  "prompt": "\n/// Write a function to put spaces between words starting with capital letters in a given string.\nfunc capital_words_spaces(str1: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(capital_words_spaces(str1: \"Python\") == \"Python\")\nassert(capital_words_spaces(str1: \"PythonProgrammingExamples\") == \"Python Programming Examples\")\nassert(capital_words_spaces(str1: \"GetReadyToBeCodingFreak\") == \"Get Ready To Be Coding Freak\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2.append(\" \\(char)\")\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = str1\n    for i in 0..<str.count {\n        let index = str.index(str.startIndex, offsetBy: i)\n        if str[index].isUppercase {\n            str.insert(\" \", at: index)\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    while i < str.count {\n        if str[i].isUppercase {\n            str.insert(\" \", at: str.index(str.startIndex, offsetBy: i))\n            i += 1\n        }\n        i += 1\n    }\n    return str",
    "    let words = str1.components(separatedBy: \" \")\n    var result = \"\"\n    for word in words {\n        if word.characters.first! >= \"A\" && word.characters.first! <= \"Z\" {\n            result += \" \\(word)\"\n        } else {\n            result += \" \\(word)\"\n        }\n    }\n    return result",
    "    var result = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            result += \" \\(char)\"\n        } else {\n            result += \"\\(char)\"\n        }\n    }\n    return result",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += \" \\(char)\"\n        } else {\n            str2 += \"\\(char)\"\n        }\n    }\n    return str2",
    "    var str = str1\n    var result = \"\"\n    for char in str {\n        if char.isUppercase {\n            result += \" \" + String(char)\n        } else {\n            result += String(char)\n        }\n    }\n    return result",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2.append(\" \\(char)\")\n        } else {\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str.append(\" \\(char)\")\n        } else {\n            str.append(char)\n        }\n    }\n    return str",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += \" \\(char)\"\n        } else {\n            str2 += \"\\(char)\"\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for (index, char) in str1.enumerated() {\n        if index == 0 {\n            str2.append(char)\n        } else {\n            let prev_char = str1[str1.index(str1.startIndex, offsetBy: index - 1)]\n            if prev_char.isUppercase && char.isLowercase {\n                str2.append(\" \")\n            }\n            str2.append(char)\n        }\n    }\n    return str2",
    "    var str = \"\"\n    for i in str1 {\n        if i.isUppercase {\n            str.append(\" \\(i)\")\n        } else {\n            str.append(i)\n        }\n    }\n    return str",
    "    var str = str1\n    var i = 0\n    while i < str.count {\n        if str[i].isUppercase {\n            str.insert(\" \", at: str.index(str.startIndex, offsetBy: i))\n            i += 1\n        }\n        i += 1\n    }\n    return str",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += \" \\(char)\"\n        } else {\n            str2 += \"\\(char)\"\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for i in str1.indices {\n        if str1[i].isUppercase {\n            str2 += \" \"\n        }\n        str2 += String(str1[i])\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += \" \\(char)\"\n        } else {\n            str2 += \"\\(char)\"\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += \" \\(char)\"\n        } else {\n            str2 += \"\\(char)\"\n        }\n    }\n    return str2",
    "    var str2 = \"\"\n    var str3 = \"\"\n    for c in str1 {\n        if c.isUppercase {\n            str2 += \" \\(c)\"\n        } else {\n            str2 += \"\\(c)\"\n        }\n    }\n    for c in str2 {\n        if c != \" \" {\n            str3 += \"\\(c)\"\n        }\n    }\n    return str3",
    "    var str2 = \"\"\n    var str3 = \"\"\n    for char in str1 {\n        if char.isUppercase {\n            str2 += \" \\(char)\"\n        } else {\n            str2 += \"\\(char)\"\n        }\n    }\n    for char in str2 {\n        if char == \" \" && str3.last == \" \" {\n            continue\n        } else {\n            str3 += \"\\(char)\"\n        }\n    }\n    return str3",
    "    var str = \"\"\n    for i in 0..<str1.count {\n        if i > 0 && str1[str1.index(str1.startIndex, offsetBy: i)] >= \"A\" && str1[str1.index(str1.startIndex, offsetBy: i)] <= \"Z\" && str1[str1.index(str1.startIndex, offsetBy: i - 1)] >= \"a\" && str1[str1.index(str1.startIndex, offsetBy: i - 1)] <= \"z\" {\n            str.append(\" \")\n        }\n        str.append(str1[str1.index(str1.startIndex, offsetBy: i)])\n    }\n    return str"
  ]
}
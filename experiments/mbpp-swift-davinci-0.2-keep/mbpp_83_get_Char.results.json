{
  "name": "mbpp_83_get_Char",
  "language": "swift",
  "prompt": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp7zwc82tf/tmp7zwc82tf.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5896cafc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b58969a6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b58969a6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b58969a57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7zwc82tf                        0x00005574b41bd737 <unavailable> + 5943\n5    libc.so.6                          0x00002b5896e9b460 __libc_start_main + 245\n6    tmp7zwc82tf                        0x00005574b41bd379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpm8ypub16/tmpm8ypub16.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad8a9ce4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad8a99dbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad8a99db988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8a99da7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm8ypub16                        0x00005564af0b9737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad8a9ed0460 __libc_start_main + 245\n6    tmpm8ypub16                        0x00005564af0b9379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpo173qwal/tmpo173qwal.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba3cd2d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba3ccfccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba3ccfcc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba3ccfcb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo173qwal                        0x0000562e2d2696e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba3cd4c1460 __libc_start_main + 245\n6    tmpo173qwal                        0x0000562e2d269329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpygv24s6y/tmpygv24s6y.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b33e0a3ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b33e0735b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b33e0735988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b33e07347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpygv24s6y                        0x000055c6812936e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b33e0c2a460 __libc_start_main + 245\n6    tmpygv24s6y                        0x000055c681293329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 97)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0hjxdao0/tmp0hjxdao0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b34ee892c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b34ee589b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b34ee589988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b34ee5887b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0hjxdao0                        0x000055b62791b737 <unavailable> + 5943\n5    libc.so.6                          0x00002b34eea7e460 __libc_start_main + 245\n6    tmp0hjxdao0                        0x000055b62791b379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_e0dcbzu/tmp_e0dcbzu.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b165407fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1653d76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1653d76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1653d757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_e0dcbzu                        0x000055d0706bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b165426b460 __libc_start_main + 245\n6    tmp_e0dcbzu                        0x000055d0706bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpe6n8hfe4/tmpe6n8hfe4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b39c9266c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b39c8f5db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b39c8f5d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b39c8f5c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe6n8hfe4                        0x0000561ced274737 <unavailable> + 5943\n5    libc.so.6                          0x00002b39c9452460 __libc_start_main + 245\n6    tmpe6n8hfe4                        0x0000561ced274379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = UnicodeScalar(ch + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpibvxfh2g/tmpibvxfh2g.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5f128aac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5f125a1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5f125a1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5f125a07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpibvxfh2g                        0x0000561acbbc1737 <unavailable> + 5943\n5    libc.so.6                          0x00002b5f12a96460 __libc_start_main + 245\n6    tmpibvxfh2g                        0x0000561acbbc1379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_e0dcbzu/tmp_e0dcbzu.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b165407fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1653d76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1653d76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1653d757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_e0dcbzu                        0x000055d0706bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b165426b460 __libc_start_main + 245\n6    tmp_e0dcbzu                        0x000055d0706bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = UnicodeScalar(sum + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpoxeuiaff/tmpoxeuiaff.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b67a7a8ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b67a7781b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b67a7781988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b67a77807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoxeuiaff                        0x0000564c4f587737 <unavailable> + 5943\n5    libc.so.6                          0x00002b67a7c76460 __libc_start_main + 245\n6    tmpoxeuiaff                        0x0000564c4f587379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp72wvd625/tmp72wvd625.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b161a5d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b161a2ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b161a2cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b161a2cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp72wvd625                        0x00005607667076e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b161a7c1460 __libc_start_main + 245\n6    tmp72wvd625                        0x0000560766707329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 65)!\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpddpdvhgw/tmpddpdvhgw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3d0056c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3cfd4db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3cfd4d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3cfd4c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpddpdvhgw                        0x000055d729e4e6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af3d0242460 __libc_start_main + 245\n6    tmpddpdvhgw                        0x000055d729e4e329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpwe6qa5jv/tmpwe6qa5jv.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac222132c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac221e29b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac221e29988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac221e287b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwe6qa5jv                        0x0000563c0fc20737 <unavailable> + 5943\n5    libc.so.6                          0x00002ac22231e460 __libc_start_main + 245\n6    tmpwe6qa5jv                        0x0000563c0fc20379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_e0dcbzu/tmp_e0dcbzu.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b165407fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1653d76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1653d76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1653d757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_e0dcbzu                        0x000055d0706bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b165426b460 __libc_start_main + 245\n6    tmp_e0dcbzu                        0x000055d0706bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let c = sum % 26\n    let char = Character(UnicodeScalar(c + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpq9o1q34k/tmpq9o1q34k.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba82f9b4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba82f6abb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba82f6ab988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba82f6aa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq9o1q34k                        0x000055f2a46f0737 <unavailable> + 5943\n5    libc.so.6                          0x00002ba82fba0460 __libc_start_main + 245\n6    tmpq9o1q34k                        0x000055f2a46f0379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpe6n8hfe4/tmpe6n8hfe4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b39c9266c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b39c8f5db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b39c8f5d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b39c8f5c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe6n8hfe4                        0x0000561ced274737 <unavailable> + 5943\n5    libc.so.6                          0x00002b39c9452460 __libc_start_main + 245\n6    tmpe6n8hfe4                        0x0000561ced274379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpbx7arugp/tmpbx7arugp.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b241d0a5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b241cd9cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b241cd9c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b241cd9b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbx7arugp                        0x000055971ae136e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b241d291460 __libc_start_main + 245\n6    tmpbx7arugp                        0x000055971ae13329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpbx7arugp/tmpbx7arugp.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b241d0a5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b241cd9cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b241cd9c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b241cd9b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbx7arugp                        0x000055971ae136e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b241d291460 __libc_start_main + 245\n6    tmpbx7arugp                        0x000055971ae13329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp2md681ed/tmp2md681ed.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2d583c6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2d580bdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2d580bd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2d580bc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2md681ed                        0x000056377cc526e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2d585b2460 __libc_start_main + 245\n6    tmp2md681ed                        0x000056377cc52329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    return String(UnicodeScalar(ans + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_5t14bgm/tmp_5t14bgm.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae3c91e5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae3c8edcb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae3c8edc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae3c8edb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_5t14bgm                        0x0000558f801966e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ae3c93d1460 __libc_start_main + 245\n6    tmp_5t14bgm                        0x0000558f80196329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_xavpge3/tmp_xavpge3.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1b50250c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1b4ff47b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1b4ff47988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1b4ff467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_xavpge3                        0x0000558ef0dd2737 <unavailable> + 5943\n5    libc.so.6                          0x00002b1b5043c460 __libc_start_main + 245\n6    tmp_xavpge3                        0x0000558ef0dd2379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = UnicodeScalar(ch + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpibvxfh2g/tmpibvxfh2g.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5f128aac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5f125a1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5f125a1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5f125a07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpibvxfh2g                        0x0000561acbbc1737 <unavailable> + 5943\n5    libc.so.6                          0x00002b5f12a96460 __libc_start_main + 245\n6    tmpibvxfh2g                        0x0000561acbbc1379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "/tmp/tmpf1nmkkik.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpf1nmkkik.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum: Int = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpehmjd832/tmpehmjd832.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cdd215c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cdcf0cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9cdcf0c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9cdcf0b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpehmjd832                        0x000055f7573386e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9cdd401460 __libc_start_main + 245\n6    tmpehmjd832                        0x000055f757338329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.unicodeScalars {\n        sum += Int(i.value)\n    }\n    sum = sum % 26\n    let char = UnicodeScalar(sum + 97)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpa3p9ym9c/tmpa3p9ym9c.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6492fc1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6492cb8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6492cb8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6492cb77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa3p9ym9c                        0x000055d6e84327e7 <unavailable> + 6119\n5    libc.so.6                          0x00002b64931ad460 __libc_start_main + 245\n6    tmpa3p9ym9c                        0x000055d6e8432429 <unavailable> + 5161\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpe6n8hfe4/tmpe6n8hfe4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b39c9266c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b39c8f5db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b39c8f5d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b39c8f5c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe6n8hfe4                        0x0000561ced274737 <unavailable> + 5943\n5    libc.so.6                          0x00002b39c9452460 __libc_start_main + 245\n6    tmpe6n8hfe4                        0x0000561ced274379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpe6n8hfe4/tmpe6n8hfe4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b39c9266c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b39c8f5db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b39c8f5d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b39c8f5c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe6n8hfe4                        0x0000561ced274737 <unavailable> + 5943\n5    libc.so.6                          0x00002b39c9452460 __libc_start_main + 245\n6    tmpe6n8hfe4                        0x0000561ced274379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp7b4xa6hh/tmp7b4xa6hh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0bd4204c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0bd3efbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0bd3efb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0bd3efa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7b4xa6hh                        0x0000558b296f9737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0bd43f0460 __libc_start_main + 245\n6    tmp7b4xa6hh                        0x0000558b296f9379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    let char = UnicodeScalar(result + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpgyz4swwg/tmpgyz4swwg.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4cea0afc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4ce9da6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4ce9da6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4ce9da57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgyz4swwg                        0x0000558af81dc737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4cea29b460 __libc_start_main + 245\n6    tmpgyz4swwg                        0x0000558af81dc379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_5_02q92/tmp_5_02q92.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17dc7b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17dc4adb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17dc4ad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17dc4ac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_5_02q92                        0x0000556201ce4737 <unavailable> + 5943\n5    libc.so.6                          0x00002b17dc9a2460 __libc_start_main + 245\n6    tmp_5_02q92                        0x0000556201ce4379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1e9bwpxx/tmp1e9bwpxx.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b466204bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4661d42b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4661d42988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4661d417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1e9bwpxx                        0x0000557e2d3ee737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4662237460 __libc_start_main + 245\n6    tmp1e9bwpxx                        0x0000557e2d3ee379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_ed040re/tmp_ed040re.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad62db1cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad62d813b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad62d813988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad62d8127b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ed040re                        0x000056190bf04737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad62dd08460 __libc_start_main + 245\n6    tmp_ed040re                        0x000056190bf04379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_ed040re/tmp_ed040re.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad62db1cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad62d813b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad62d813988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad62d8127b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ed040re                        0x000056190bf04737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad62dd08460 __libc_start_main + 245\n6    tmp_ed040re                        0x000056190bf04379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp72wvd625/tmp72wvd625.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b161a5d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b161a2ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b161a2cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b161a2cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp72wvd625                        0x00005607667076e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b161a7c1460 __libc_start_main + 245\n6    tmp72wvd625                        0x0000560766707329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var result = 0\n    for i in strr {\n        result += Int(i.asciiValue!)\n    }\n    result %= 26\n    return String(UnicodeScalar(result + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_yo9rmkn/tmp_yo9rmkn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad1f19ebc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad1f16e2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad1f16e2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad1f16e17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_yo9rmkn                        0x0000561dd27b76e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ad1f1bd7460 __libc_start_main + 245\n6    tmp_yo9rmkn                        0x0000561dd27b7329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp7zwc82tf/tmp7zwc82tf.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5896cafc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b58969a6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b58969a6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b58969a57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7zwc82tf                        0x00005574b41bd737 <unavailable> + 5943\n5    libc.so.6                          0x00002b5896e9b460 __libc_start_main + 245\n6    tmp7zwc82tf                        0x00005574b41bd379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    let char = UnicodeScalar(result + 65)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn82aj1xy/tmpn82aj1xy.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af29f9a3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af29f69ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af29f69a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af29f6997b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn82aj1xy                        0x0000560522f856e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af29fb8f460 __libc_start_main + 245\n6    tmpn82aj1xy                        0x0000560522f85329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpxotj3o00/tmpxotj3o00.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4d5859fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4d58296b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4d58296988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4d582957b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxotj3o00                        0x000055fe37c7c737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4d5878b460 __libc_start_main + 245\n6    tmpxotj3o00                        0x000055fe37c7c379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp2md681ed/tmp2md681ed.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2d583c6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2d580bdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2d580bd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2d580bc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2md681ed                        0x000056377cc526e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2d585b2460 __libc_start_main + 245\n6    tmp2md681ed                        0x000056377cc52329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1nb86545/tmp1nb86545.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b95d2645c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b95d233cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b95d233c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b95d233b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nb86545                        0x0000557d432ed6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b95d2831460 __libc_start_main + 245\n6    tmp1nb86545                        0x0000557d432ed329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_e0dcbzu/tmp_e0dcbzu.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b165407fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1653d76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1653d76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1653d757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_e0dcbzu                        0x000055d0706bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b165426b460 __libc_start_main + 245\n6    tmp_e0dcbzu                        0x000055d0706bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp58qcmnw4/tmp58qcmnw4.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0c3043ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0c30131b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0c30131988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0c301307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp58qcmnw4                        0x000055c82be89737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0c30626460 __libc_start_main + 245\n6    tmp58qcmnw4                        0x000055c82be89379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_5_02q92/tmp_5_02q92.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b17dc7b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b17dc4adb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b17dc4ad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b17dc4ac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_5_02q92                        0x0000556201ce4737 <unavailable> + 5943\n5    libc.so.6                          0x00002b17dc9a2460 __libc_start_main + 245\n6    tmp_5_02q92                        0x0000556201ce4379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpe2wtb3ox/tmpe2wtb3ox.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b376380cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3763503b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3763503988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b37635027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe2wtb3ox                        0x000055fb090b5737 <unavailable> + 5943\n5    libc.so.6                          0x00002b37639f8460 __libc_start_main + 245\n6    tmpe2wtb3ox                        0x000055fb090b5379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp5so0z01p/tmp5so0z01p.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ada07c71c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ada07968b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ada07968988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ada079677b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5so0z01p                        0x000055fe00ec3747 <unavailable> + 5959\n5    libc.so.6                          0x00002ada07e5d460 __libc_start_main + 245\n6    tmp5so0z01p                        0x000055fe00ec3389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 97)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpixyrryu1/tmpixyrryu1.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aae375a6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aae3729db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aae3729d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aae3729c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpixyrryu1                        0x0000562ebf37d737 <unavailable> + 5943\n5    libc.so.6                          0x00002aae37792460 __libc_start_main + 245\n6    tmpixyrryu1                        0x0000562ebf37d379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum: Int = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    return String(Character(UnicodeScalar(sum % 26 + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpio4ucwy7/tmpio4ucwy7.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b88a82f5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b88a7fecb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b88a7fec988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b88a7feb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpio4ucwy7                        0x0000561cb9ced737 <unavailable> + 5943\n5    libc.so.6                          0x00002b88a84e1460 __libc_start_main + 245\n6    tmpio4ucwy7                        0x0000561cb9ced379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    return String(UnicodeScalar(sum % 26 + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpuxe3jq_e/tmpuxe3jq_e.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36e1a7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36e1771b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36e1771988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36e17707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuxe3jq_e                        0x0000562d391ea6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b36e1c66460 __libc_start_main + 245\n6    tmpuxe3jq_e                        0x0000562d391ea329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_xavpge3/tmp_xavpge3.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1b50250c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1b4ff47b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1b4ff47988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1b4ff467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_xavpge3                        0x0000558ef0dd2737 <unavailable> + 5943\n5    libc.so.6                          0x00002b1b5043c460 __libc_start_main + 245\n6    tmp_xavpge3                        0x0000558ef0dd2379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let ch = UnicodeScalar(res + 97)\n    return String(ch!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpj6gpi552/tmpj6gpi552.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7faf6f2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7faf3e9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7faf3e9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7faf3e87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj6gpi552                        0x000055bc02cc26e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b7faf8de460 __libc_start_main + 245\n6    tmpj6gpi552                        0x000055bc02cc2329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpvjj8fjto/tmpvjj8fjto.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b18ad523c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b18ad21ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b18ad21a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b18ad2197b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvjj8fjto                        0x00005573b9655747 <unavailable> + 5959\n5    libc.so.6                          0x00002b18ad70f460 __libc_start_main + 245\n6    tmpvjj8fjto                        0x00005573b9655389 <unavailable> + 5001\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp72wvd625/tmp72wvd625.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b161a5d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b161a2ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b161a2cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b161a2cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp72wvd625                        0x00005607667076e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b161a7c1460 __libc_start_main + 245\n6    tmp72wvd625                        0x0000560766707329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpbx7arugp/tmpbx7arugp.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b241d0a5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b241cd9cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b241cd9c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b241cd9b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbx7arugp                        0x000055971ae136e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b241d291460 __libc_start_main + 245\n6    tmpbx7arugp                        0x000055971ae13329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let ch = Character(UnicodeScalar(res + 97)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpl3aytwv0/tmpl3aytwv0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66ffb7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b66ff873b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b66ff873988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66ff8727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl3aytwv0                        0x000055582916c737 <unavailable> + 5943\n5    libc.so.6                          0x00002b66ffd68460 __libc_start_main + 245\n6    tmpl3aytwv0                        0x000055582916c379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 97)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1tkdah4f/tmp1tkdah4f.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af5ff417c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af5ff10eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af5ff10e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af5ff10d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1tkdah4f                        0x0000555a852aa6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002af5ff603460 __libc_start_main + 245\n6    tmp1tkdah4f                        0x0000555a852aa329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 97)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpixyrryu1/tmpixyrryu1.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aae375a6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aae3729db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aae3729d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aae3729c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpixyrryu1                        0x0000562ebf37d737 <unavailable> + 5943\n5    libc.so.6                          0x00002aae37792460 __libc_start_main + 245\n6    tmpixyrryu1                        0x0000562ebf37d379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp613arf8m/tmp613arf8m.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4cafddec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4cafad5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4cafad5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4cafad47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp613arf8m                        0x0000561b86101737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4caffca460 __libc_start_main + 245\n6    tmp613arf8m                        0x0000561b86101379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    sum %= 26\n    return String(UnicodeScalar(sum + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp4jbyaj9x/tmp4jbyaj9x.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad393387c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad39307eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad39307e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad39307d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4jbyaj9x                        0x00005566b97cb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ad393573460 __libc_start_main + 245\n6    tmp4jbyaj9x                        0x00005566b97cb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    return String(UnicodeScalar(mod + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp6eakznkn/tmp6eakznkn.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae0fc96fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae0fc666b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae0fc666988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae0fc6657b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6eakznkn                        0x0000556fc75306e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ae0fcb5b460 __libc_start_main + 245\n6    tmp6eakznkn                        0x0000556fc7530329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ans = sum % 26\n    return String(UnicodeScalar(ans + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_npqe5h5/tmp_npqe5h5.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f3667fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f36376b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f36376988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f363757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_npqe5h5                        0x00005633a2c476e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b3f3686b460 __libc_start_main + 245\n6    tmp_npqe5h5                        0x00005633a2c47329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp2md681ed/tmp2md681ed.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2d583c6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2d580bdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2d580bd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2d580bc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2md681ed                        0x000056377cc526e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2d585b2460 __libc_start_main + 245\n6    tmp2md681ed                        0x000056377cc52329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr.utf8 {\n        sum += Int(i)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp9_fgl_35/tmp9_fgl_35.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad44c82ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad44c521b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad44c521988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad44c5207b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9_fgl_35                        0x00005623e8831827 <unavailable> + 6183\n5    libc.so.6                          0x00002ad44ca16460 __libc_start_main + 245\n6    tmp9_fgl_35                        0x00005623e8831469 <unavailable> + 5225\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    let chr = Character(UnicodeScalar(char + 97)!)\n    return String(chr)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpw70zob50/tmpw70zob50.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acac8e85c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acac8b7cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acac8b7c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acac8b7b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw70zob50                        0x000055e125389737 <unavailable> + 5943\n5    libc.so.6                          0x00002acac9071460 __libc_start_main + 245\n6    tmpw70zob50                        0x000055e125389379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = UnicodeScalar(ch + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpibvxfh2g/tmpibvxfh2g.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5f128aac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5f125a1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5f125a1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5f125a07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpibvxfh2g                        0x0000561acbbc1737 <unavailable> + 5943\n5    libc.so.6                          0x00002b5f12a96460 __libc_start_main + 245\n6    tmpibvxfh2g                        0x0000561acbbc1379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = String(UnicodeScalar(ch + 65)!)\n    return char\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmplo4vtz_a/tmplo4vtz_a.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaf0fb29c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaf0f820b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaf0f820988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaf0f81f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplo4vtz_a                        0x0000563387a9a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002aaf0fd15460 __libc_start_main + 245\n6    tmplo4vtz_a                        0x0000563387a9a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpe2wtb3ox/tmpe2wtb3ox.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b376380cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3763503b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3763503988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b37635027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe2wtb3ox                        0x000055fb090b5737 <unavailable> + 5943\n5    libc.so.6                          0x00002b37639f8460 __libc_start_main + 245\n6    tmpe2wtb3ox                        0x000055fb090b5379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpbx7arugp/tmpbx7arugp.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b241d0a5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b241cd9cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b241cd9c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b241cd9b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbx7arugp                        0x000055971ae136e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b241d291460 __libc_start_main + 245\n6    tmpbx7arugp                        0x000055971ae13329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpe6n8hfe4/tmpe6n8hfe4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b39c9266c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b39c8f5db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b39c8f5d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b39c8f5c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe6n8hfe4                        0x0000561ced274737 <unavailable> + 5943\n5    libc.so.6                          0x00002b39c9452460 __libc_start_main + 245\n6    tmpe6n8hfe4                        0x0000561ced274379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let str = String(UnicodeScalar(ch + 65)!)\n    return str\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpai3faoqt/tmpai3faoqt.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b667ed13c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b667ea0ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b667ea0a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b667ea097b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpai3faoqt                        0x0000557f9ff746e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b667eeff460 __libc_start_main + 245\n6    tmpai3faoqt                        0x0000557f9ff74329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let result = sum % 26\n    return String(Character(UnicodeScalar(result + 97)!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp3rioost5/tmp3rioost5.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4e2bbcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4e28b3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4e28b3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4e28b27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3rioost5                        0x0000557a900c2737 <unavailable> + 5943\n5    libc.so.6                          0x00002ac4e2da8460 __libc_start_main + 245\n6    tmp3rioost5                        0x0000557a900c2379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpe6n8hfe4/tmpe6n8hfe4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b39c9266c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b39c8f5db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b39c8f5d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b39c8f5c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe6n8hfe4                        0x0000561ced274737 <unavailable> + 5943\n5    libc.so.6                          0x00002b39c9452460 __libc_start_main + 245\n6    tmpe6n8hfe4                        0x0000561ced274379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp72wvd625/tmp72wvd625.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b161a5d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b161a2ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b161a2cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b161a2cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp72wvd625                        0x00005607667076e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b161a7c1460 __libc_start_main + 245\n6    tmp72wvd625                        0x0000560766707329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    let ch = Character(UnicodeScalar(char + 97)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmplhsgblt1/tmplhsgblt1.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3c5274ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3c52445b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3c52445988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3c524447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplhsgblt1                        0x000055606d844737 <unavailable> + 5943\n5    libc.so.6                          0x00002b3c5293a460 __libc_start_main + 245\n6    tmplhsgblt1                        0x000055606d844379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_e0dcbzu/tmp_e0dcbzu.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b165407fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1653d76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1653d76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1653d757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_e0dcbzu                        0x000055d0706bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b165426b460 __libc_start_main + 245\n6    tmp_e0dcbzu                        0x000055d0706bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpygv24s6y/tmpygv24s6y.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b33e0a3ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b33e0735b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b33e0735988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b33e07347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpygv24s6y                        0x000055c6812936e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b33e0c2a460 __libc_start_main + 245\n6    tmpygv24s6y                        0x000055c681293329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let ch = Character(UnicodeScalar(res + 65)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp0tkpi0eu/tmp0tkpi0eu.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66543c2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b66540b9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b66540b9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66540b87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0tkpi0eu                        0x000055d6589f7737 <unavailable> + 5943\n5    libc.so.6                          0x00002b66545ae460 __libc_start_main + 245\n6    tmp0tkpi0eu                        0x000055d6589f7379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1e9bwpxx/tmp1e9bwpxx.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b466204bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4661d42b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4661d42988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4661d417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1e9bwpxx                        0x0000557e2d3ee737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4662237460 __libc_start_main + 245\n6    tmp1e9bwpxx                        0x0000557e2d3ee379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpe2wtb3ox/tmpe2wtb3ox.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b376380cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3763503b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3763503988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b37635027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe2wtb3ox                        0x000055fb090b5737 <unavailable> + 5943\n5    libc.so.6                          0x00002b37639f8460 __libc_start_main + 245\n6    tmpe2wtb3ox                        0x000055fb090b5379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let ch = Character(UnicodeScalar(res + 97)!)\n    return String(ch)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpl3aytwv0/tmpl3aytwv0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66ffb7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b66ff873b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b66ff873988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66ff8727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl3aytwv0                        0x000055582916c737 <unavailable> + 5943\n5    libc.so.6                          0x00002b66ffd68460 __libc_start_main + 245\n6    tmpl3aytwv0                        0x000055582916c379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp72wvd625/tmp72wvd625.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b161a5d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b161a2ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b161a2cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b161a2cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp72wvd625                        0x00005607667076e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b161a7c1460 __libc_start_main + 245\n6    tmp72wvd625                        0x0000560766707329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp33r4uv3y/tmp33r4uv3y.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba8ef6dcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba8ef3d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba8ef3d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba8ef3d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp33r4uv3y                        0x000055720892a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba8ef8c8460 __libc_start_main + 245\n6    tmp33r4uv3y                        0x000055720892a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    return String(UnicodeScalar(mod + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp216p5ml3/tmp216p5ml3.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8cfa804c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8cfa4fbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8cfa4fb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8cfa4fa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp216p5ml3                        0x000056355f8556e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b8cfa9f0460 __libc_start_main + 245\n6    tmp216p5ml3                        0x000056355f855329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1nb86545/tmp1nb86545.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b95d2645c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b95d233cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b95d233c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b95d233b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nb86545                        0x0000557d432ed6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b95d2831460 __libc_start_main + 245\n6    tmp1nb86545                        0x0000557d432ed329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1nb86545/tmp1nb86545.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b95d2645c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b95d233cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b95d233c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b95d233b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nb86545                        0x0000557d432ed6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b95d2831460 __libc_start_main + 245\n6    tmp1nb86545                        0x0000557d432ed329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp72wvd625/tmp72wvd625.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b161a5d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b161a2ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b161a2cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b161a2cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp72wvd625                        0x00005607667076e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b161a7c1460 __libc_start_main + 245\n6    tmp72wvd625                        0x0000560766707329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpo173qwal/tmpo173qwal.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba3cd2d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba3ccfccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba3ccfcc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba3ccfcb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo173qwal                        0x0000562e2d2696e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba3cd4c1460 __libc_start_main + 245\n6    tmpo173qwal                        0x0000562e2d269329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_xavpge3/tmp_xavpge3.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1b50250c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1b4ff47b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1b4ff47988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1b4ff467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_xavpge3                        0x0000558ef0dd2737 <unavailable> + 5943\n5    libc.so.6                          0x00002b1b5043c460 __libc_start_main + 245\n6    tmp_xavpge3                        0x0000558ef0dd2379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpo173qwal/tmpo173qwal.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba3cd2d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba3ccfccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba3ccfcc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba3ccfcb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo173qwal                        0x0000562e2d2696e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba3cd4c1460 __libc_start_main + 245\n6    tmpo173qwal                        0x0000562e2d269329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let str = String(UnicodeScalar(res + 97)!)\n    return str\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpda13ubgh/tmpda13ubgh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b517721ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5176f15b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5176f15988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5176f147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpda13ubgh                        0x0000564f4a5cd6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b517740a460 __libc_start_main + 245\n6    tmpda13ubgh                        0x0000564f4a5cd329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 97)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1pqm2rvf/tmp1pqm2rvf.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaeb11e4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaeb0edbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaeb0edb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaeb0eda7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1pqm2rvf                        0x000056081ac6b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002aaeb13d0460 __libc_start_main + 245\n6    tmp1pqm2rvf                        0x000056081ac6b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.utf8 {\n        sum += Int(i)\n    }\n    sum = sum % 26\n    let char = UnicodeScalar(sum + 97)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmphgjzw7n1/tmphgjzw7n1.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b59ebdefc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b59ebae6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b59ebae6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b59ebae57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphgjzw7n1                        0x0000557cd24bf827 <unavailable> + 6183\n5    libc.so.6                          0x00002b59ebfdb460 __libc_start_main + 245\n6    tmphgjzw7n1                        0x0000557cd24bf469 <unavailable> + 5225\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr.unicodeScalars {\n        sum += Int(i.value)\n    }\n    let char = sum % 26\n    let charr = UnicodeScalar(char + 97)\n    return String(Character(charr!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp089js1ct/tmp089js1ct.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba38710dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba386e04b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba386e04988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba386e037b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp089js1ct                        0x0000564331ce97e7 <unavailable> + 6119\n5    libc.so.6                          0x00002ba3872f9460 __libc_start_main + 245\n6    tmp089js1ct                        0x0000564331ce9429 <unavailable> + 5161\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpbrvlixyz/tmpbrvlixyz.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acc64597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acc6428eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acc6428e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acc6428d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbrvlixyz                        0x000055af6be36737 <unavailable> + 5943\n5    libc.so.6                          0x00002acc64783460 __libc_start_main + 245\n6    tmpbrvlixyz                        0x000055af6be36379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr.unicodeScalars {\n        sum += Int(i.value)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmplz4q22m5/tmplz4q22m5.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7c1ae1bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7c1ab12b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7c1ab12988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7c1ab117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplz4q22m5                        0x00005558d62d9797 <unavailable> + 6039\n5    libc.so.6                          0x00002b7c1b007460 __libc_start_main + 245\n6    tmplz4q22m5                        0x00005558d62d93d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp64qmhzga/tmp64qmhzga.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b325ba62c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b325b759b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b325b759988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b325b7587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp64qmhzga                        0x0000562fc46bc6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b325bc4e460 __libc_start_main + 245\n6    tmp64qmhzga                        0x0000562fc46bc329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    return String(UnicodeScalar(sum % 26 + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpuxe3jq_e/tmpuxe3jq_e.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36e1a7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36e1771b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36e1771988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36e17707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuxe3jq_e                        0x0000562d391ea6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b36e1c66460 __libc_start_main + 245\n6    tmpuxe3jq_e                        0x0000562d391ea329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_ed040re/tmp_ed040re.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad62db1cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad62d813b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad62d813988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad62d8127b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ed040re                        0x000056190bf04737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad62dd08460 __libc_start_main + 245\n6    tmp_ed040re                        0x000056190bf04379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp33r4uv3y/tmp33r4uv3y.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba8ef6dcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba8ef3d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba8ef3d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba8ef3d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp33r4uv3y                        0x000055720892a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba8ef8c8460 __libc_start_main + 245\n6    tmp33r4uv3y                        0x000055720892a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp613arf8m/tmp613arf8m.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4cafddec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4cafad5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4cafad5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4cafad47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp613arf8m                        0x0000561b86101737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4caffca460 __libc_start_main + 245\n6    tmp613arf8m                        0x0000561b86101379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 97)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1pqm2rvf/tmp1pqm2rvf.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaeb11e4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaeb0edbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaeb0edb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaeb0eda7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1pqm2rvf                        0x000056081ac6b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002aaeb13d0460 __libc_start_main + 245\n6    tmp1pqm2rvf                        0x000056081ac6b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp2md681ed/tmp2md681ed.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2d583c6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2d580bdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2d580bd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2d580bc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp2md681ed                        0x000056377cc526e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2d585b2460 __libc_start_main + 245\n6    tmp2md681ed                        0x000056377cc52329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp7c83n4u4/tmp7c83n4u4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32de3dcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32de0d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b32de0d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b32de0d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7c83n4u4                        0x000055b0315de6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b32de5c8460 __libc_start_main + 245\n6    tmp7c83n4u4                        0x000055b0315de329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 65)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1e9bwpxx/tmp1e9bwpxx.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b466204bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4661d42b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4661d42988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4661d417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1e9bwpxx                        0x0000557e2d3ee737 <unavailable> + 5943\n5    libc.so.6                          0x00002b4662237460 __libc_start_main + 245\n6    tmp1e9bwpxx                        0x0000557e2d3ee379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp33r4uv3y/tmp33r4uv3y.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba8ef6dcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba8ef3d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba8ef3d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba8ef3d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp33r4uv3y                        0x000055720892a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba8ef8c8460 __libc_start_main + 245\n6    tmp33r4uv3y                        0x000055720892a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr.unicodeScalars {\n        sum += Int(i.value)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 97)!\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpzxt2wcfd/tmpzxt2wcfd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8bc3848c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8bc353fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8bc353f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8bc353e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzxt2wcfd                        0x0000560b66233797 <unavailable> + 6039\n5    libc.so.6                          0x00002b8bc3a34460 __libc_start_main + 245\n6    tmpzxt2wcfd                        0x0000560b662333d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_xavpge3/tmp_xavpge3.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1b50250c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1b4ff47b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1b4ff47988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1b4ff467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_xavpge3                        0x0000558ef0dd2737 <unavailable> + 5943\n5    libc.so.6                          0x00002b1b5043c460 __libc_start_main + 245\n6    tmp_xavpge3                        0x0000558ef0dd2379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpbx7arugp/tmpbx7arugp.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b241d0a5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b241cd9cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b241cd9c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b241cd9b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbx7arugp                        0x000055971ae136e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b241d291460 __libc_start_main + 245\n6    tmpbx7arugp                        0x000055971ae13329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp0yx8t9x5/tmp0yx8t9x5.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9fb5c6ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9fb5965b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9fb5965988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9fb59647b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0yx8t9x5                        0x0000556fcce98737 <unavailable> + 5943\n5    libc.so.6                          0x00002b9fb5e5a460 __libc_start_main + 245\n6    tmp0yx8t9x5                        0x0000556fcce98379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(String(i))!\n    }\n    sum = sum % 26\n    let char = Character(UnicodeScalar(sum + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "/tmp/tmpk6dl8z2v.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpk6dl8z2v.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.characters {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "/tmp/tmpl01tpsem.swift:6:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpl01tpsem.swift:4:9: warning: variable 'str' was never mutated; consider changing to 'let' constant\n    var str = strr\n    ~~~ ^\n    let\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_ed040re/tmp_ed040re.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad62db1cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad62d813b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad62d813988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad62d8127b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ed040re                        0x000056190bf04737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad62dd08460 __libc_start_main + 245\n6    tmp_ed040re                        0x000056190bf04379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_xavpge3/tmp_xavpge3.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1b50250c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1b4ff47b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1b4ff47988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1b4ff467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_xavpge3                        0x0000558ef0dd2737 <unavailable> + 5943\n5    libc.so.6                          0x00002b1b5043c460 __libc_start_main + 245\n6    tmp_xavpge3                        0x0000558ef0dd2379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_e0dcbzu/tmp_e0dcbzu.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b165407fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1653d76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1653d76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1653d757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_e0dcbzu                        0x000055d0706bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b165426b460 __libc_start_main + 245\n6    tmp_e0dcbzu                        0x000055d0706bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmppgd8zn4j/tmppgd8zn4j.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a9d28ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a9cf81b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a9cf81988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a9cf807b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppgd8zn4j                        0x0000559857d8a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b5a9d476460 __libc_start_main + 245\n6    tmppgd8zn4j                        0x0000559857d8a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    return String(UnicodeScalar(mod + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp216p5ml3/tmp216p5ml3.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8cfa804c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8cfa4fbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8cfa4fb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8cfa4fa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp216p5ml3                        0x000056355f8556e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b8cfa9f0460 __libc_start_main + 245\n6    tmp216p5ml3                        0x000056355f855329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpjs0iyt7f/tmpjs0iyt7f.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac80edfcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac80eaf3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac80eaf3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac80eaf27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjs0iyt7f                        0x000055ef448346e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ac80efe8460 __libc_start_main + 245\n6    tmpjs0iyt7f                        0x000055ef44834329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let result = sum % 26\n    let char = Character(UnicodeScalar(result + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpqw28vvoj/tmpqw28vvoj.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2f6f03dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2f6ed34b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2f6ed34988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2f6ed337b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqw28vvoj                        0x000055574cf45737 <unavailable> + 5943\n5    libc.so.6                          0x00002b2f6f229460 __libc_start_main + 245\n6    tmpqw28vvoj                        0x000055574cf45379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpygv24s6y/tmpygv24s6y.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b33e0a3ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b33e0735b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b33e0735988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b33e07347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpygv24s6y                        0x000055c6812936e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b33e0c2a460 __libc_start_main + 245\n6    tmpygv24s6y                        0x000055c681293329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum = sum + Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmphj9m4e73/tmphj9m4e73.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b03d6f6dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b03d6c64b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b03d6c64988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b03d6c637b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphj9m4e73                        0x00005610c714d737 <unavailable> + 5943\n5    libc.so.6                          0x00002b03d7159460 __libc_start_main + 245\n6    tmphj9m4e73                        0x00005610c714d379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr.lowercased()\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = UnicodeScalar(ch + 97)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpgog_wrcf/tmpgog_wrcf.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba456b96c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba45688db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba45688d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba45688c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgog_wrcf                        0x000055aea66c0797 <unavailable> + 6039\n5    libc.so.6                          0x00002ba456d82460 __libc_start_main + 245\n6    tmpgog_wrcf                        0x000055aea66c03d9 <unavailable> + 5081\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    let char = Character(UnicodeScalar(result + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpwl_k_ixm/tmpwl_k_ixm.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b6a390c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b6a087b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b6a087988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b6a0867b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwl_k_ixm                        0x0000563e03375737 <unavailable> + 5943\n5    libc.so.6                          0x00002b2b6a57c460 __libc_start_main + 245\n6    tmpwl_k_ixm                        0x0000563e03375379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_ed040re/tmp_ed040re.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad62db1cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad62d813b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad62d813988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad62d8127b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ed040re                        0x000056190bf04737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad62dd08460 __libc_start_main + 245\n6    tmp_ed040re                        0x000056190bf04379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_ed040re/tmp_ed040re.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad62db1cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad62d813b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad62d813988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad62d8127b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ed040re                        0x000056190bf04737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad62dd08460 __libc_start_main + 245\n6    tmp_ed040re                        0x000056190bf04379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.utf8 {\n        sum += Int(i)\n    }\n    sum = sum % 26\n    let char = UnicodeScalar(sum + 97)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmplnregm8o/tmplnregm8o.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad3d4b66c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad3d485db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad3d485d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad3d485c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplnregm8o                        0x0000562dc0d58877 <unavailable> + 6263\n5    libc.so.6                          0x00002ad3d4d52460 __libc_start_main + 245\n6    tmplnregm8o                        0x0000562dc0d584b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let ch = UnicodeScalar(res + 65)\n    return String(ch!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpq03bj7fc/tmpq03bj7fc.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1fa599dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1fa5694b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1fa5694988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1fa56937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq03bj7fc                        0x0000562da9ef86e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b1fa5b89460 __libc_start_main + 245\n6    tmpq03bj7fc                        0x0000562da9ef8329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Unicode.Scalar(mod + 65)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp8g5vc5yu/tmp8g5vc5yu.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adae18b7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adae15aeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adae15ae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adae15ad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8g5vc5yu                        0x0000557a0587e6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002adae1aa3460 __libc_start_main + 245\n6    tmp8g5vc5yu                        0x0000557a0587e329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp7c83n4u4/tmp7c83n4u4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32de3dcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32de0d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b32de0d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b32de0d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7c83n4u4                        0x000055b0315de6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b32de5c8460 __libc_start_main + 245\n6    tmp7c83n4u4                        0x000055b0315de329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_e0dcbzu/tmp_e0dcbzu.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b165407fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1653d76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1653d76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1653d757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_e0dcbzu                        0x000055d0706bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b165426b460 __libc_start_main + 245\n6    tmp_e0dcbzu                        0x000055d0706bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1nb86545/tmp1nb86545.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b95d2645c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b95d233cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b95d233c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b95d233b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1nb86545                        0x0000557d432ed6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b95d2831460 __libc_start_main + 245\n6    tmp1nb86545                        0x0000557d432ed329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpo173qwal/tmpo173qwal.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba3cd2d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba3ccfccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba3ccfcc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba3ccfcb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo173qwal                        0x0000562e2d2696e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba3cd4c1460 __libc_start_main + 245\n6    tmpo173qwal                        0x0000562e2d269329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpe6n8hfe4/tmpe6n8hfe4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b39c9266c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b39c8f5db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b39c8f5d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b39c8f5c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe6n8hfe4                        0x0000561ced274737 <unavailable> + 5943\n5    libc.so.6                          0x00002b39c9452460 __libc_start_main + 245\n6    tmpe6n8hfe4                        0x0000561ced274379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpfhnawkbw/tmpfhnawkbw.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab3064bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab30342b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab30342988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab303417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfhnawkbw                        0x000055cef3fad737 <unavailable> + 5943\n5    libc.so.6                          0x00002aab30837460 __libc_start_main + 245\n6    tmpfhnawkbw                        0x000055cef3fad379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp72wvd625/tmp72wvd625.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b161a5d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b161a2ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b161a2cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b161a2cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp72wvd625                        0x00005607667076e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b161a7c1460 __libc_start_main + 245\n6    tmp72wvd625                        0x0000560766707329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpbx7arugp/tmpbx7arugp.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b241d0a5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b241cd9cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b241cd9c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b241cd9b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbx7arugp                        0x000055971ae136e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b241d291460 __libc_start_main + 245\n6    tmpbx7arugp                        0x000055971ae13329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp0juvdqqe/tmp0juvdqqe.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2148794c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b214848bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b214848b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b214848a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0juvdqqe                        0x000055e1803446e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b2148980460 __libc_start_main + 245\n6    tmp0juvdqqe                        0x000055e180344329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let modulo = sum % 26\n    let char = UnicodeScalar(modulo + 97)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp1n_f3up9/tmp1n_f3up9.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2852c87c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b285297eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b285297e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b285297d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1n_f3up9                        0x0000555d141bb737 <unavailable> + 5943\n5    libc.so.6                          0x00002b2852e73460 __libc_start_main + 245\n6    tmp1n_f3up9                        0x0000555d141bb379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_ed040re/tmp_ed040re.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad62db1cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad62d813b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad62d813988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad62d8127b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ed040re                        0x000056190bf04737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad62dd08460 __libc_start_main + 245\n6    tmp_ed040re                        0x000056190bf04379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 65)\n    return String(Character(char!))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp7b4xa6hh/tmp7b4xa6hh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0bd4204c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0bd3efbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0bd3efb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0bd3efa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7b4xa6hh                        0x0000558b296f9737 <unavailable> + 5943\n5    libc.so.6                          0x00002b0bd43f0460 __libc_start_main + 245\n6    tmp7b4xa6hh                        0x0000558b296f9379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = Character(UnicodeScalar(sum % 26 + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_xavpge3/tmp_xavpge3.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1b50250c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1b4ff47b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1b4ff47988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1b4ff467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_xavpge3                        0x0000558ef0dd2737 <unavailable> + 5943\n5    libc.so.6                          0x00002b1b5043c460 __libc_start_main + 245\n6    tmp_xavpge3                        0x0000558ef0dd2379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp72wvd625/tmp72wvd625.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b161a5d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b161a2ccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b161a2cc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b161a2cb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp72wvd625                        0x00005607667076e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b161a7c1460 __libc_start_main + 245\n6    tmp72wvd625                        0x0000560766707329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var str = strr\n    var sum = 0\n    for i in str.utf8 {\n        sum += Int(i)\n    }\n    sum = sum % 26\n    return String(UnicodeScalar(sum + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpcrn13she/tmpcrn13she.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad994aa4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad99479bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad99479b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad99479a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrn13she                        0x0000561f28d9d827 <unavailable> + 6183\n5    libc.so.6                          0x00002ad994c90460 __libc_start_main + 245\n6    tmpcrn13she                        0x0000561f28d9d469 <unavailable> + 5225\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpo173qwal/tmpo173qwal.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba3cd2d5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba3ccfccb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba3ccfcc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba3ccfcb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo173qwal                        0x0000562e2d2696e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba3cd4c1460 __libc_start_main + 245\n6    tmpo173qwal                        0x0000562e2d269329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpn1tj5v83/tmpn1tj5v83.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9c8ff8dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9c8fc84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9c8fc84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9c8fc837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn1tj5v83                        0x000055f302d3b6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b9c90179460 __libc_start_main + 245\n6    tmpn1tj5v83                        0x000055f302d3b329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let rem = sum % 26\n    let char = UnicodeScalar(rem + 65)\n    return String(char!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpte5w6v_z/tmpte5w6v_z.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b63b7239c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b63b6f30b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b63b6f30988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b63b6f2f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpte5w6v_z                        0x000055db0a46c6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b63b7425460 __libc_start_main + 245\n6    tmpte5w6v_z                        0x000055db0a46c329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let sum1 = sum % 26\n    let char = Character(UnicodeScalar(sum1 + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp151d6_bz/tmp151d6_bz.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b58ba3d2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b58ba0c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b58ba0c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b58ba0c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp151d6_bz                        0x000055b6253c7737 <unavailable> + 5943\n5    libc.so.6                          0x00002b58ba5be460 __libc_start_main + 245\n6    tmp151d6_bz                        0x000055b6253c7379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var result = 0\n    for i in strr {\n        result += Int(i.asciiValue!)\n    }\n    result %= 26\n    return String(UnicodeScalar(result + 65)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmpm0aso6wm/tmpm0aso6wm.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeea392bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeea3622b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeea3622988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeea36217b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpm0aso6wm                        0x000056037abbb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002aeea3b17460 __libc_start_main + 245\n6    tmpm0aso6wm                        0x000056037abbb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmpw7b_j9yk/tmpw7b_j9yk.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba52f8f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba52f5eeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba52f5ee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba52f5ed7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw7b_j9yk                        0x000055b7ea98a6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002ba52fae3460 __libc_start_main + 245\n6    tmpw7b_j9yk                        0x000055b7ea98a329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1665517105,
      "stdout": "",
      "stderr": "tmp_e0dcbzu/tmp_e0dcbzu.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b165407fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1653d76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1653d76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1653d757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_e0dcbzu                        0x000055d0706bb6e7 <unavailable> + 5863\n5    libc.so.6                          0x00002b165426b460 __libc_start_main + 245\n6    tmp_e0dcbzu                        0x000055d0706bb329 <unavailable> + 4905\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = Character(UnicodeScalar(ch + 97)!)\n    return String(char)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
      "timestamp": 1666123797,
      "stdout": "",
      "stderr": "tmp_ed040re/tmp_ed040re.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad62db1cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad62d813b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad62d813988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad62d8127b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ed040re                        0x000056190bf04737 <unavailable> + 5943\n5    libc.so.6                          0x00002ad62dd08460 __libc_start_main + 245\n6    tmp_ed040re                        0x000056190bf04379 <unavailable> + 4985\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_558_digit_distance_nums",
  "language": "swift",
  "prompt": "\n/// Write a python function to find the sum of the per-digit difference between two integers.\nfunc digit_distance_nums(n1: Int, n2: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(digit_distance_nums(n1: 1, n2: 2) == 1)\nassert(digit_distance_nums(n1: 23, n2: 56) == 6)\nassert(digit_distance_nums(n1: 123, n2: 256) == 7)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = Array(String(n1)).map { Int(String($0))! }\n    let n2_digits = Array(String(n2)).map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<max(n1_digits.count, n2_digits.count) {\n        let n1_digit = i < n1_digits.count ? n1_digits[i] : 0\n        let n2_digit = i < n2_digits.count ? n2_digits[i] : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<max(n1_str.count, n2_str.count) {\n        let n1_digit = n1_str.count > i ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = n2_str.count > i ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_digits = Array(String(n1)).map { Int(String($0))! }\n    let n2_digits = Array(String(n2)).map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var num1 = n1\n    var num2 = n2\n    while num1 > 0 || num2 > 0 {\n        let digit1 = num1 % 10\n        let digit2 = num2 % 10\n        sum += abs(digit1 - digit2)\n        num1 /= 10\n        num2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = Array(String(n1)).map { Int(String($0))! }\n    let n2_digits = Array(String(n2)).map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    return 0",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_digits = n1_str.compactMap { Int(String($0)) }\n    let n2_digits = n2_str.compactMap { Int(String($0)) }\n    var sum = 0\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - (n2 % 10))\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n2 % 10 - (n1 % 10))\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += n1 % 10\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += n2 % 10\n            n2 /= 10\n        }\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<max(n1_str.count, n2_str.count) {\n        let n1_digit = n1_str.count > i ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = n2_str.count > i ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - (n2 % 10))\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - (n2 % 10))\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    let n1 = String(n1)\n    let n2 = String(n2)\n    for i in 0..<n1.count {\n        let n1_digit = Int(String(n1[n1.index(n1.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2[n2.index(n2.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let len = max(n1_len, n2_len)\n    for i in 0..<len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let len = max(n1_len, n2_len)\n    for i in 0..<len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var n1 = n1, n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    return 0",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    return 0",
    "    return 0",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    return 0",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    return 0",
    "    return 0",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += n1 % 10\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += n2 % 10\n            n2 /= 10\n        }\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    let diffs = zip(n1_digits, n2_digits).map { abs($0 - $1) }\n    return diffs.reduce(0, combine: +)",
    "    return 0",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let max_len = max(n1_str.count, n2_str.count)\n    for i in 0..<max_len {\n        let n1_digit = n1_str.count > i ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = n2_str.count > i ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    let n1_digits_count = n1_digits.count\n    let n2_digits_count = n2_digits.count\n    let max_digits_count = max(n1_digits_count, n2_digits_count)\n    var sum = 0\n    for i in 0..<max_digits_count {\n        let n1_digit = i < n1_digits_count ? n1_digits[i] : 0\n        let n2_digit = i < n2_digits_count ? n2_digits[i] : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = Array(String(n1)).map { Int(String($0))! }\n    let n2_digits = Array(String(n2)).map { Int(String($0))! }\n    let diffs = zip(n1_digits, n2_digits).map { abs($0 - $1) }\n    return diffs.reduce(0, combine: +)",
    "    return 0",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        } else {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    return 0",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    var sum = 0\n    for i in 0..<max(String(n1).count, String(n2).count) {\n        let d1 = Int(String(n1).get(i) ?? \"0\") ?? 0\n        let d2 = Int(String(n2).get(i) ?? \"0\") ?? 0\n        sum += abs(d1 - d2)\n    }\n    return sum",
    "    var sum = 0\n    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    for i in 0..<max(n1_digits.count, n2_digits.count) {\n        let n1_digit = i < n1_digits.count ? n1_digits[i] : 0\n        let n2_digit = i < n2_digits.count ? n2_digits[i] : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let max_len = max(n1_len, n2_len)\n    var sum = 0\n    for i in 0..<max_len {\n        let n1_char = i < n1_len ? n1_str[i] : \"0\"\n        let n2_char = i < n2_len ? n2_str[i] : \"0\"\n        let n1_digit = Int(String(n1_char))!\n        let n2_digit = Int(String(n2_char))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_digits = Array(String(n1)).map { Int(String($0))! }\n    let n2_digits = Array(String(n2)).map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += n1 % 10\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += n2 % 10\n            n2 /= 10\n        }\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - (n2 % 10))\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - (n2 % 10))\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    var sum = 0\n    let max_len = max(n1_len, n2_len)\n    for i in 0..<max_len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let min_len = min(n1_len, n2_len)\n    var sum = 0\n    for i in 0..<min_len {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    if n1_len > min_len {\n        for i in min_len..<n1_len {\n            let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n            sum += n1_digit\n        }\n    }\n    if n2_len > min_len {\n        for i in min_len..<n2_len {\n            let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n            sum += n2_digit\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs((n1 % 10) - (n2 % 10))\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<max(n1_digits.count, n2_digits.count) {\n        let n1_digit = i < n1_digits.count ? n1_digits[i] : 0\n        let n2_digit = i < n2_digits.count ? n2_digits[i] : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    let diffs = zip(n1_digits, n2_digits).map { abs($0 - $1) }\n    return diffs.reduce(0, combine: +)",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    return 0",
    "    return 0",
    "    return 0",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        sum += abs((n1 % 10) - (n2 % 10))\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let len = max(n1_len, n2_len)\n    for i in 0..<len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs((n1 % 10) - (n2 % 10))\n            n1 /= 10\n        } else {\n            sum += abs((n1 % 10) - (n2 % 10))\n            n2 /= 10\n        }\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<max(n1_str.count, n2_str.count) {\n        let n1_digit = n1_str.count > i ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = n2_str.count > i ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_digits = Array(String(n1)).map { Int(String($0))! }\n    let n2_digits = Array(String(n2)).map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = n1.digits\n    let n2_digits = n2.digits\n    let n1_digits_count = n1_digits.count\n    let n2_digits_count = n2_digits.count\n    let max_digits_count = max(n1_digits_count, n2_digits_count)\n    var sum = 0\n    for i in 0..<max_digits_count {\n        let n1_digit = i < n1_digits_count ? n1_digits[i] : 0\n        let n2_digit = i < n2_digits_count ? n2_digits[i] : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    let diffs = zip(n1_digits, n2_digits).map { abs($0 - $1) }\n    return diffs.reduce(0, combine: +)",
    "    return 0",
    "    return 0",
    "    return 0",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += n1 % 10\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += n2 % 10\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let len = max(n1_len, n2_len)\n    for i in 0..<len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs((n1 % 10) - (n2 % 10))\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    return 0",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    return 0",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let d1 = String(n1).characters.map { Int(String($0))! }\n    let d2 = String(n2).characters.map { Int(String($0))! }\n    let diff = zip(d1, d2).map { abs($0 - $1) }\n    return diff.reduce(0, combine: +)",
    "    return 0",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    \n    let max_len = max(n1_digits.count, n2_digits.count)\n    \n    var sum = 0\n    for i in 0..<max_len {\n        let n1_digit = i < n1_digits.count ? n1_digits[i] : 0\n        let n2_digit = i < n2_digits.count ? n2_digits[i] : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    \n    return sum",
    "    return 0",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += n1 % 10\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += n2 % 10\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_digits = Array(String(n1)).map { Int(String($0))! }\n    let n2_digits = Array(String(n2)).map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    var sum = 0\n    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    let n1_digits = Array(String(n1)).map { Int(String($0))! }\n    let n2_digits = Array(String(n2)).map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<n1_digits.count {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    return zip(n1_digits, n2_digits).map { abs($0 - $1) }.reduce(0, combine: +)",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    var sum = 0\n    for i in 0..<max(n1_digits.count, n2_digits.count) {\n        let n1_digit = i < n1_digits.count ? n1_digits[i] : 0\n        let n2_digit = i < n2_digits.count ? n2_digits[i] : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let len = max(n1_len, n2_len)\n    for i in 0..<len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - (n2 % 10))\n            n1 /= 10\n        } else {\n            sum += abs(n1 % 10 - (n2 % 10))\n            n2 /= 10\n        }\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var n1 = n1\n    var n2 = n2\n    var sum = 0\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<max(n1_str.count, n2_str.count) {\n        let n1_digit = n1_str.count > i ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = n2_str.count > i ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs((n1 % 10) - (n2 % 10))\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    var sum = 0\n    for (i, _) in n1_digits.enumerated() {\n        sum += abs(n1_digits[i] - n2_digits[i])\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    return 0",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let max_len = max(n1_len, n2_len)\n    for i in 0..<max_len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<max(n1_str.count, n2_str.count) {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)])) ?? 0\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)])) ?? 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    let num1 = String(n1)\n    let num2 = String(n2)\n    for i in 0..<num1.count {\n        let index1 = num1.index(num1.startIndex, offsetBy: i)\n        let index2 = num2.index(num2.startIndex, offsetBy: i)\n        let digit1 = Int(String(num1[index1]))!\n        let digit2 = Int(String(num2[index2]))!\n        sum += abs(digit1 - digit2)\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    let diffs = zip(n1_digits, n2_digits).map { abs($0 - $1) }\n    return diffs.reduce(0, combine: +)",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    var i = 0\n    while i < n1_len || i < n2_len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n        i += 1\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs((n1 % 10) - (n2 % 10))\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let s1 = String(n1)\n    let s2 = String(n2)\n    var sum = 0\n    for i in 0..<max(s1.count, s2.count) {\n        let c1 = s1.count > i ? Int(String(s1[s1.index(s1.startIndex, offsetBy: i)]))! : 0\n        let c2 = s2.count > i ? Int(String(s2[s2.index(s2.startIndex, offsetBy: i)]))! : 0\n        sum += abs(c1 - c2)\n    }\n    return sum",
    "    var result = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        result += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return result",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_digits = String(n1).characters.map { Int(String($0))! }\n    let n2_digits = String(n2).characters.map { Int(String($0))! }\n    let diffs = zip(n1_digits, n2_digits).map { abs($0 - $1) }\n    return diffs.reduce(0, combine: +)",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs(n1 % 10 - n2 % 10)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let max_len = max(n1_len, n2_len)\n    var sum = 0\n    for i in 0..<max_len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        sum += abs((n1 % 10) - (n2 % 10))\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        if n1 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n1 /= 10\n        }\n        if n2 > 0 {\n            sum += abs(n1 % 10 - n2 % 10)\n            n2 /= 10\n        }\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<max(n1_str.count, n2_str.count) {\n        let n1_digit = n1_str.count > i ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = n2_str.count > i ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    var n1 = n1\n    var n2 = n2\n    while n1 > 0 || n2 > 0 {\n        let d1 = n1 % 10\n        let d2 = n2 % 10\n        sum += abs(d1 - d2)\n        n1 /= 10\n        n2 /= 10\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    var sum = 0\n    let n1_str = String(n1)\n    let n2_str = String(n2)\n    let n1_len = n1_str.count\n    let n2_len = n2_str.count\n    let max_len = max(n1_len, n2_len)\n    for i in 0..<max_len {\n        let n1_digit = i < n1_len ? Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))! : 0\n        let n2_digit = i < n2_len ? Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))! : 0\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum",
    "    let n1_str = String(n1)\n    let n2_str = String(n2)\n    var sum = 0\n    for i in 0..<n1_str.count {\n        let n1_digit = Int(String(n1_str[n1_str.index(n1_str.startIndex, offsetBy: i)]))!\n        let n2_digit = Int(String(n2_str[n2_str.index(n2_str.startIndex, offsetBy: i)]))!\n        sum += abs(n1_digit - n2_digit)\n    }\n    return sum"
  ]
}
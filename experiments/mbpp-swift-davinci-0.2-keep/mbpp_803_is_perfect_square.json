{
  "name": "mbpp_803_is_perfect_square",
  "language": "swift",
  "prompt": "\n/// Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nfunc is_perfect_square(n: Int) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_perfect_square(n: 10) == false)\nassert(is_perfect_square(n: 36) == true)\nassert(is_perfect_square(n: 14) == false)\nassert(is_perfect_square(n: 196) == true)\nassert(is_perfect_square(n: 125) == false)\nassert(is_perfect_square(n: 15625) == true)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var i = 1\n    while i * i <= n {\n        if i * i == n {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var result = 1\n    while result <= n {\n        i += 2\n        result += i\n        if result == n {\n            return true\n        }\n    }\n    return false",
    "    var i = 1\n    while i * i < n {\n        i += 1\n    }\n    return i * i == n",
    "    if n < 0 {\n        return false\n    }\n    var i = 1\n    while i * i <= n {\n        if i * i == n {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var i = 1\n    while i * i <= n {\n        if i * i == n {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var result = 1\n    while result <= n {\n        i += 2\n        result += i\n        if result == n {\n            return true\n        }\n    }\n    return false",
    "    var i = 1\n    while i * i <= n {\n        if i * i == n {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var num = 1\n    while num < n {\n        i += 2\n        num += i\n    }\n    return num == n",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var j = n\n    while i <= j {\n        let mid = (i + j) / 2\n        let sqr = mid * mid\n        if sqr == n {\n            return true\n        }\n        if sqr < n {\n            i = mid + 1\n        } else {\n            j = mid - 1\n        }\n    }\n    return false",
    "    var i = 1\n    while i * i <= n {\n        if i * i == n {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var j = n\n    while i <= j {\n        let mid = (i + j) / 2\n        if mid * mid == n {\n            return true\n        }\n        if mid * mid < n {\n            i = mid + 1\n        } else {\n            j = mid - 1\n        }\n    }\n    return false",
    "    var i = 1\n    while i * i <= n {\n        if i * i == n {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var j = n\n    while i <= j {\n        let mid = (i + j) / 2\n        let sq = mid * mid\n        if sq == n {\n            return true\n        } else if sq < n {\n            i = mid + 1\n        } else {\n            j = mid - 1\n        }\n    }\n    return false",
    "    var i = 1\n    while i*i <= n {\n        if i*i == n {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var result = 1\n    while result < n {\n        i += 2\n        result += i\n    }\n    return result == n",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var j = n\n    while i <= j {\n        let mid = (i + j) / 2\n        if mid * mid == n {\n            return true\n        }\n        if mid * mid < n {\n            i = mid + 1\n        } else {\n            j = mid - 1\n        }\n    }\n    return false",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var j = n\n    while i <= j {\n        let mid = i + (j - i) / 2\n        if mid * mid == n {\n            return true\n        }\n        if mid * mid < n {\n            i = mid + 1\n        } else {\n            j = mid - 1\n        }\n    }\n    return false",
    "    if n < 0 {\n        return false\n    }\n    if n == 0 || n == 1 {\n        return true\n    }\n    var i = 1\n    var sum = 1\n    while sum < n {\n        i += 2\n        sum += i\n    }\n    return sum == n",
    "    if n < 0 {\n        return false\n    }\n    if n == 1 {\n        return true\n    }\n    var i = 1\n    var j = n\n    while i <= j {\n        let mid = i + (j - i) / 2\n        let sqr = mid * mid\n        if sqr == n {\n            return true\n        }\n        if sqr < n {\n            i = mid + 1\n        } else {\n            j = mid - 1\n        }\n    }\n    return false",
    "    var i = 1\n    while i * i <= n {\n        if i * i == n {\n            return true\n        }\n        i += 1\n    }\n    return false"
  ]
}
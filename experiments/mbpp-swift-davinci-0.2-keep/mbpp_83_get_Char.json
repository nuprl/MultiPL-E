{
  "name": "mbpp_83_get_Char",
  "language": "swift",
  "prompt": "\n/// Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nfunc get_Char(strr: String) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(get_Char(strr: \"abc\") == \"f\")\nassert(get_Char(strr: \"gfg\") == \"t\")\nassert(get_Char(strr: \"ab\") == \"c\")",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 65)\n    return String(Character(char!))",
    "    var str = strr\n    var sum = 0\n    for i in str {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    return String(Character(UnicodeScalar(sum + 97)!))",
    "    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)",
    "    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let char = sum % 26\n    return String(UnicodeScalar(char + 65)!)",
    "    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 97)\n    return String(Character(char!))",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)",
    "    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = Character(UnicodeScalar(mod + 97)!)\n    return String(char)",
    "    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    let char = UnicodeScalar(ch + 65)\n    return String(Character(char!))",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 97)!)",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    sum = sum % 26\n    let char = UnicodeScalar(sum + 65)\n    return String(Character(char!))",
    "    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let result = sum % 26\n    return String(UnicodeScalar(result + 97)!)",
    "    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let res = sum % 26\n    let char = UnicodeScalar(res + 65)!\n    return String(char)",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    let char = Character(UnicodeScalar(res + 65)!)\n    return String(char)",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let ch = sum % 26\n    return String(UnicodeScalar(ch + 97)!)",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let c = sum % 26\n    let char = Character(UnicodeScalar(c + 65)!)\n    return String(char)",
    "    var sum = 0\n    for i in strr {\n        sum += Int(i.asciiValue!)\n    }\n    let res = sum % 26\n    return String(UnicodeScalar(res + 65)!)",
    "    var sum = 0\n    for char in strr {\n        sum += Int(char.asciiValue!)\n    }\n    let mod = sum % 26\n    let char = UnicodeScalar(mod + 65)\n    return String(Character(char!))"
  ]
}
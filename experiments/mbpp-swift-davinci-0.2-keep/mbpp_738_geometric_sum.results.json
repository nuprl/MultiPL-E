{
  "name": "mbpp_738_geometric_sum",
  "language": "swift",
  "prompt": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    return n == 0 ? 1 : 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpo30kb71z.swift:4:29: error: cannot find 'pow' in scope\n    return n == 0 ? 1 : 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                            ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1.0 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "tmpsl3l06br/tmpsl3l06br.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b51caf3ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b51cac35b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b51cac35988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b51cac347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsl3l06br                        0x000055f47c3be1c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b51cb12a460 __libc_start_main + 245\n6    tmpsl3l06br                        0x000055f47c3bde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmptv8oy64u.swift:7:21: error: cannot find 'pow' in scope\n        return (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n                    ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpxz0g97ei/tmpxz0g97ei.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b12b0178c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b12afe6fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b12afe6f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b12afe6e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxz0g97ei                        0x0000560d6e4131c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b12b0364460 __libc_start_main + 245\n6    tmpxz0g97ei                        0x0000560d6e412e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + (1.0 / Double(n)) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpsegjzhon/tmpsegjzhon.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6d6ade0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6d6aad7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6d6aad7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6d6aad67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsegjzhon                        0x000055c7744d61c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b6d6afcc460 __libc_start_main + 245\n6    tmpsegjzhon                        0x000055c7744d5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1.0 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpydcr40yl.swift:7:44: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1.0 / pow(2, Double(n))\n                                           ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(pow(2, n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpgacdxgbj.swift:7:23: error: cannot find 'pow' in scope\n    return 1 / Double(pow(2, n)) + geometric_sum(n: n - 1)\n                      ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpb9tpag4r/tmpb9tpag4r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a7ff15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a7fc0cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a7fc0c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a7fc0b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb9tpag4r                        0x0000559dd2c341c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b4a80101460 __libc_start_main + 245\n6    tmpb9tpag4r                        0x0000559dd2c33e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpxt7mebpd.swift:7:17: error: cannot find 'pow' in scope\n    return (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n                ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    \n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpno6pbq76.swift:8:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp1348fv8l.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1.0 / pow(2.0, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpej2hwwgl.swift:7:44: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1.0 / pow(2.0, Double(n))\n                                           ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / (pow(2, Double(n))) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpyy5_sn8e.swift:7:17: error: cannot find 'pow' in scope\n    return 1 / (pow(2, Double(n))) + geometric_sum(n: n - 1)\n                ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1.0 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpydcr40yl.swift:7:44: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1.0 / pow(2, Double(n))\n                                           ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n-1) + 1/pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpi86dwfic.swift:7:38: error: cannot find 'pow' in scope\n    return geometric_sum(n: n-1) + 1/pow(2, Double(n))\n                                     ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp1348fv8l.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp1348fv8l.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + (1.0 / Double(n)) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpsegjzhon/tmpsegjzhon.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6d6ade0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6d6aad7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6d6aad7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6d6aad67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsegjzhon                        0x000055c7744d61c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b6d6afcc460 __libc_start_main + 245\n6    tmpsegjzhon                        0x000055c7744d5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp1348fv8l.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpb9tpag4r/tmpb9tpag4r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a7ff15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a7fc0cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a7fc0c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a7fc0b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb9tpag4r                        0x0000559dd2c341c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b4a80101460 __libc_start_main + 245\n6    tmpb9tpag4r                        0x0000559dd2c33e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpxz0g97ei/tmpxz0g97ei.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b12b0178c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b12afe6fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b12afe6f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b12afe6e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxz0g97ei                        0x0000560d6e4131c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b12b0364460 __libc_start_main + 245\n6    tmpxz0g97ei                        0x0000560d6e412e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    return 0.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpgfradus5/tmpgfradus5.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba44b459c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba44b150b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba44b150988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba44b14f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgfradus5                        0x00005599b8bdd1c2 <unavailable> + 4546\n5    libc.so.6                          0x00002ba44b645460 __libc_start_main + 245\n6    tmpgfradus5                        0x00005599b8bdce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp1348fv8l.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp1348fv8l.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp1348fv8l.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    } else {\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp1348fv8l.swift:7:20: error: cannot find 'pow' in scope\n        return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1.0 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpydcr40yl.swift:7:44: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1.0 / pow(2, Double(n))\n                                           ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp7jkybidz.swift:7:21: error: cannot find 'pow' in scope\n    return 1 + (1 / pow(2, Double(n))) + geometric_sum(n: n - 1)\n                    ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpb9tpag4r/tmpb9tpag4r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a7ff15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a7fc0cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a7fc0c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a7fc0b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb9tpag4r                        0x0000559dd2c341c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b4a80101460 __libc_start_main + 245\n6    tmpb9tpag4r                        0x0000559dd2c33e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpb9tpag4r/tmpb9tpag4r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a7ff15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a7fc0cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a7fc0c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a7fc0b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb9tpag4r                        0x0000559dd2c341c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b4a80101460 __libc_start_main + 245\n6    tmpb9tpag4r                        0x0000559dd2c33e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 + Double(n) * geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpb9tpag4r/tmpb9tpag4r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a7ff15c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a7fc0cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a7fc0c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a7fc0b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb9tpag4r                        0x0000559dd2c341c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b4a80101460 __libc_start_main + 245\n6    tmpb9tpag4r                        0x0000559dd2c33e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpxz0g97ei/tmpxz0g97ei.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b12b0178c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b12afe6fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b12afe6f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b12afe6e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxz0g97ei                        0x0000560d6e4131c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b12b0364460 __libc_start_main + 245\n6    tmpxz0g97ei                        0x0000560d6e412e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / (pow(2, Double(n))) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpyy5_sn8e.swift:7:17: error: cannot find 'pow' in scope\n    return 1 / (pow(2, Double(n))) + geometric_sum(n: n - 1)\n                ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(n) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "tmpxz0g97ei/tmpxz0g97ei.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b12b0178c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b12afe6fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b12afe6f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b12afe6e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxz0g97ei                        0x0000560d6e4131c2 <unavailable> + 4546\n5    libc.so.6                          0x00002b12b0364460 __libc_start_main + 245\n6    tmpxz0g97ei                        0x0000560d6e412e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1.0\n    }\n    return 1 / pow(2.0, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmppxb9y4s_.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2.0, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / (pow(2, Double(n))) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpyy5_sn8e.swift:7:17: error: cannot find 'pow' in scope\n    return 1 / (pow(2, Double(n))) + geometric_sum(n: n - 1)\n                ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / Double(pow(2, n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpgacdxgbj.swift:7:23: error: cannot find 'pow' in scope\n    return 1 / Double(pow(2, n)) + geometric_sum(n: n - 1)\n                      ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n < 0 {\n        return 0\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmp_fije52i.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + (1 / pow(2, Double(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1666122654,
      "stdout": "",
      "stderr": "/tmp/tmpdiusxt9k.swift:7:43: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + (1 / pow(2, Double(n)))\n                                          ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmpj1ztt_en.swift:7:42: error: cannot find 'pow' in scope\n    return geometric_sum(n: n - 1) + 1 / pow(2, Double(n))\n                                         ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\nfunc geometric_sum(n: Int) -> Double {\n    if n == 0 {\n        return 1\n    }\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(geometric_sum(n: 7) == 1.9921875)\nassert(geometric_sum(n: 4) == 1.9375)\nassert(geometric_sum(n: 8) == 1.99609375)",
      "timestamp": 1665509866,
      "stdout": "",
      "stderr": "/tmp/tmp5xukp21x.swift:7:16: error: cannot find 'pow' in scope\n    return 1 / pow(2, Double(n)) + geometric_sum(n: n - 1)\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
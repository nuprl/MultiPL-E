{
  "name": "mbpp_633_pair_xor_Sum",
  "language": "swift",
  "prompt": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_633_pair_xor_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i]^arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans: Int = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i]^arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans: Int = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in 0..<n {\n            if i != j {\n                sum += arr[i] ^ arr[j]\n            }\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "tmpvw3ok8y4/tmpvw3ok8y4.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b450514bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4504e42b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4504e42988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4504e417b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvw3ok8y4                        0x0000559bd58944ef <unavailable> + 5359\n5    libc.so.6                          0x00002b4505337460 __libc_start_main + 245\n6    tmpvw3ok8y4                        0x0000559bd5894149 <unavailable> + 4425\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += (arr[i] ^ arr[j])\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i]^arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans: Int = 0\n    for i in 0..<n {\n        for j in 0..<n {\n            if i != j {\n                ans += arr[i] ^ arr[j]\n            }\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "tmp3cg026y3/tmp3cg026y3.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b37e550bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b37e5202b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b37e5202988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b37e52017b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3cg026y3                        0x000055eda97794ef <unavailable> + 5359\n5    libc.so.6                          0x00002b37e56f7460 __libc_start_main + 245\n6    tmp3cg026y3                        0x000055eda9779149 <unavailable> + 4425\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var ans = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            ans += arr[i] ^ arr[j]\n        }\n    }\n    return ans\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum: Int = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum = sum + (arr[i] ^ arr[j])\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i]^arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1666123163,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i]^arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var sum = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            sum += arr[i] ^ arr[j]\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var res = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            res += arr[i] ^ arr[j]\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the sum of xor of all pairs of numbers in the given list.\nfunc pair_xor_Sum(arr: [Int], n: Int) -> Int {\n    var result = 0\n    for i in 0..<n {\n        for j in i+1..<n {\n            result += arr[i] ^ arr[j]\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(pair_xor_Sum(arr: [5, 9, 7, 6], n: 4) == 47)\nassert(pair_xor_Sum(arr: [7, 3, 5], n: 3) == 12)\nassert(pair_xor_Sum(arr: [7, 3], n: 2) == 4)",
      "timestamp": 1665517409,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
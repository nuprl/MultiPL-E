{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "swift",
  "prompt": "\n/// Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nfunc is_Sum_Of_Powers_Of_Two(n: Int) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_Sum_Of_Powers_Of_Two(n: 10) == true)\nassert(is_Sum_Of_Powers_Of_Two(n: 7) == false)\nassert(is_Sum_Of_Powers_Of_Two(n: 14) == true)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var number = n\n    while number > 0 {\n        if number == 1 {\n            return true\n        }\n        number = number - Int(pow(2.0, Double(floor(log2(Double(number))))))\n    }\n    return false",
    "    var x = n\n    while x > 0 {\n        if x & (x - 1) == 0 {\n            return true\n        }\n        x -= 1\n    }\n    return false",
    "    var num = n\n    while num > 0 {\n        if num == 1 {\n            return true\n        }\n        let rem = num % 2\n        if rem != 0 {\n            return false\n        }\n        num = num / 2\n    }\n    return false",
    "    var num = n\n    while num > 0 {\n        if num % 2 == 1 {\n            num -= 1\n        }\n        if num == 0 {\n            return true\n        }\n        num /= 2\n    }\n    return false",
    "    var n = n\n    while n > 0 {\n        if n == 1 {\n            return true\n        }\n        if n % 2 == 0 {\n            n = n / 2\n        } else {\n            return false\n        }\n    }\n    return false",
    "    var n = n\n    while n > 0 {\n        if n & 1 == 1 {\n            n -= 1\n        } else {\n            n /= 2\n        }\n    }\n    return n == 0",
    "    var n = n\n    while n > 0 {\n        if n == 1 {\n            return true\n        }\n        if n % 2 != 0 {\n            return false\n        }\n        n = n / 2\n    }\n    return false",
    "    var n = n\n    var sum = 0\n    while n > 0 {\n        sum += n & 1\n        n >>= 1\n    }\n    return sum == 1",
    "    var n = n\n    while n > 0 {\n        if n == 1 {\n            return true\n        }\n        if n % 2 != 0 {\n            return false\n        }\n        n /= 2\n    }\n    return false",
    "    var num = n\n    var count = 0\n    while num > 0 {\n        let rem = num % 2\n        if rem == 1 {\n            count += 1\n        }\n        num /= 2\n    }\n    return count == 1",
    "    var num = n\n    while num > 0 {\n        if num == 1 {\n            return true\n        }\n        num = num - Int(pow(Double(2), Double(log2(Double(num)))))\n    }\n    return false",
    "    var num = n\n    while num > 0 {\n        if num == 1 {\n            return true\n        }\n        num = num - Int(pow(2.0, Double(floor(log2(Double(num))))))\n    }\n    return false",
    "    var n = n\n    while n > 0 {\n        if n == 1 {\n            return true\n        }\n        n = n - Int(pow(2.0, floor(log2(Double(n)))))\n    }\n    return false",
    "    var num = n\n    while num > 0 {\n        if num == 1 {\n            return true\n        }\n        num = num - Int(pow(2.0, Double(floor(log2(Double(num))))))\n    }\n    return false",
    "    var n = n\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == 1",
    "    var num = n\n    while num > 0 {\n        if num == 1 {\n            return true\n        }\n        num = num - Int(pow(2.0, Double(floor(log2(Double(num))))))\n    }\n    return false",
    "    var n = n\n    var count = 0\n    while n > 0 {\n        n = n & (n - 1)\n        count += 1\n    }\n    return count == 1",
    "    var num = n\n    while num > 0 {\n        if num == 1 {\n            return true\n        }\n        num = num - Int(pow(2, floor(log2(Double(num)))))\n    }\n    return false",
    "    var num = n\n    var count = 0\n    while num > 0 {\n        if num % 2 == 1 {\n            count += 1\n        }\n        num /= 2\n    }\n    return count == 1",
    "    var num = n\n    while num > 0 {\n        if num == 1 {\n            return true\n        }\n        num = num >> 1\n    }\n    return false"
  ]
}
{
  "name": "mbpp_74_is_samepatterns",
  "language": "swift",
  "prompt": "\n/// Write a function to check whether it follows the sequence given in the patterns array.\nfunc is_samepatterns(colors: [String], patterns: [String]) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_74_is_samepatterns.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_samepatterns(colors: [\"red\", \"green\", \"green\"], patterns: [\"a\", \"b\", \"b\"]) == true)\nassert(is_samepatterns(colors: [\"red\", \"green\", \"greenn\"], patterns: [\"a\", \"b\", \"b\"]) == false)\nassert(is_samepatterns(colors: [\"red\", \"green\", \"greenn\"], patterns: [\"a\", \"b\"]) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var dict = [String: Int]()\n    var index = 0\n    for color in colors {\n        if let value = dict[color] {\n            if patterns[index] != patterns[value] {\n                return false\n            }\n        } else {\n            dict[color] = index\n        }\n        index += 1\n    }\n    return true",
    "    var index = 0\n    for pattern in patterns {\n        if pattern == \"R\" {\n            if colors[index] != \"Red\" {\n                return false\n            }\n        } else if pattern == \"G\" {\n            if colors[index] != \"Green\" {\n                return false\n            }\n        } else if pattern == \"B\" {\n            if colors[index] != \"Blue\" {\n                return false\n            }\n        } else if pattern == \"Y\" {\n            if colors[index] != \"Yellow\" {\n                return false\n            }\n        } else if pattern == \"W\" {\n            if colors[index] != \"White\" {\n                return false\n            }\n        }\n        index += 1\n    }\n    return true",
    "    var i = 0\n    var j = 0\n    while i < colors.count && j < patterns.count {\n        if colors[i] == patterns[j] {\n            i += 1\n            j += 1\n        } else {\n            i += 1\n        }\n    }\n    return j == patterns.count",
    "    var i = 0\n    var j = 0\n    while i < colors.count && j < patterns.count {\n        if colors[i] == patterns[j] {\n            i += 1\n            j += 1\n        } else {\n            i += 1\n        }\n    }\n    return j == patterns.count",
    "    var color_index = 0\n    var pattern_index = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            color_index += 1\n        }\n    }\n    return pattern_index == patterns.count",
    "    var result = true\n    var index = 0\n    for pattern in patterns {\n        if pattern == \"*\" {\n            index += 1\n        } else if pattern == colors[index] {\n            index += 1\n        } else {\n            result = false\n            break\n        }\n    }\n    return result",
    "    var color_index = 0\n    var pattern_index = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            color_index += 1\n        }\n    }\n    return pattern_index == patterns.count",
    "    var color_index = 0\n    var pattern_index = 0\n    var pattern_count = 0\n    var color_count = 0\n    var color_prev = \"\"\n    var pattern_prev = \"\"\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == color_prev {\n            color_count += 1\n        } else {\n            color_prev = colors[color_index]\n            color_count = 1\n        }\n        if patterns[pattern_index] == pattern_prev {\n            pattern_count += 1\n        } else {\n            pattern_prev = patterns[pattern_index]\n            pattern_count = 1\n        }\n        if color_count != pattern_count {\n            return false\n        }\n        color_index += 1\n        pattern_index += 1\n    }\n    return true",
    "    var i = 0\n    var j = 0\n    while i < colors.count && j < patterns.count {\n        if colors[i] == patterns[j] {\n            i += 1\n            j += 1\n        } else {\n            i += 1\n        }\n    }\n    return j == patterns.count",
    "    var index = 0\n    for pattern in patterns {\n        if pattern == \"R\" {\n            if colors[index] == \"R\" {\n                index += 1\n            } else {\n                return false\n            }\n        } else if pattern == \"G\" {\n            if colors[index] == \"G\" {\n                index += 1\n            } else {\n                return false\n            }\n        } else if pattern == \"B\" {\n            if colors[index] == \"B\" {\n                index += 1\n            } else {\n                return false\n            }\n        } else if pattern == \"Y\" {\n            if colors[index] == \"Y\" {\n                index += 1\n            } else {\n                return false\n            }\n        } else if pattern == \"*\" {\n            if colors[index] == \"R\" || colors[index] == \"G\" || colors[index] == \"B\" || colors[index] == \"Y\" {\n                index += 1\n            } else {\n                return false\n            }\n        }\n    }\n    return true",
    "    var color_index = 0\n    var pattern_index = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            color_index += 1\n        }\n    }\n    return pattern_index == patterns.count",
    "    var i = 0\n    var j = 0\n    while i < colors.count && j < patterns.count {\n        if colors[i] == patterns[j] {\n            i += 1\n            j += 1\n        } else {\n            i += 1\n        }\n    }\n    return j == patterns.count",
    "    var color_index = 0\n    var pattern_index = 0\n    var color_count = 0\n    var pattern_count = 0\n    var color_prev = \"\"\n    var pattern_prev = \"\"\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == color_prev {\n            color_count += 1\n        } else {\n            color_count = 1\n            color_prev = colors[color_index]\n        }\n        if patterns[pattern_index] == pattern_prev {\n            pattern_count += 1\n        } else {\n            pattern_count = 1\n            pattern_prev = patterns[pattern_index]\n        }\n        if color_count != pattern_count {\n            return false\n        }\n        color_index += 1\n        pattern_index += 1\n    }\n    return true",
    "    var color_index = 0\n    var pattern_index = 0\n    var pattern_count = 0\n    var color_count = 0\n    var pattern_length = 0\n    var color_length = 0\n    var pattern_string = \"\"\n    var color_string = \"\"\n    var pattern_char = \"\"\n    var color_char = \"\"\n    \n    while pattern_index < patterns.count {\n        pattern_char = patterns[pattern_index]\n        color_char = colors[color_index]\n        if pattern_char == color_char {\n            pattern_count += 1\n            color_count += 1\n            pattern_index += 1\n            color_index += 1\n        } else {\n            pattern_length = 0\n            color_length = 0\n            pattern_string = \"\"\n            color_string = \"\"\n            while pattern_index < patterns.count && patterns[pattern_index] == pattern_char {\n                pattern_string += patterns[pattern_index]\n                pattern_index += 1\n                pattern_length += 1\n            }\n            while color_index < colors.count && colors[color_index] == color_char {\n                color_string += colors[color_index]\n                color_index += 1\n                color_length += 1\n            }\n            if pattern_string != color_string {\n                return false\n            }\n        }\n    }\n    return true",
    "    var index = 0\n    for pattern in patterns {\n        if index >= colors.count {\n            return false\n        }\n        if pattern == \"R\" {\n            if colors[index] == \"R\" {\n                index += 1\n            } else {\n                index += 2\n            }\n        } else if pattern == \"G\" {\n            if colors[index] == \"G\" {\n                index += 1\n            } else {\n                index += 2\n            }\n        } else if pattern == \"B\" {\n            if colors[index] == \"B\" {\n                index += 1\n            } else {\n                index += 2\n            }\n        }\n    }\n    return index == colors.count",
    "    var color_index = 0\n    var pattern_index = 0\n    var color_count = 0\n    var pattern_count = 0\n    var color_pattern = \"\"\n    var pattern_pattern = \"\"\n    \n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            if color_count == 0 {\n                color_pattern = colors[color_index]\n                color_count += 1\n                color_index += 1\n            } else if colors[color_index] == color_pattern {\n                color_count += 1\n                color_index += 1\n            } else {\n                if pattern_count == 0 {\n                    pattern_pattern = patterns[pattern_index]\n                    pattern_count += 1\n                    pattern_index += 1\n                } else if patterns[pattern_index] == pattern_pattern {\n                    pattern_count += 1\n                    pattern_index += 1\n                } else {\n                    return false\n                }\n            }\n        }\n    }\n    \n    if color_index < colors.count {\n        if color_count == 0 {\n            color_pattern = colors[color_index]\n            color_count += 1\n            color_index += 1\n        }\n        \n        while color_index < colors.count {\n            if colors[color_index] == color_pattern {\n                color_count += 1\n                color_index += 1\n            } else {\n                return false\n            }\n        }\n    }\n    \n    if pattern_index < patterns.count {\n        if pattern_count == 0 {\n            pattern_pattern = patterns[pattern_index]\n            pattern_count += 1\n            pattern_index += 1\n        }\n        \n        while pattern_index < patterns.count {\n            if patterns[pattern_index] == pattern_pattern {\n                pattern_count += 1\n                pattern_index += 1\n            } else {\n                return false\n            }\n        }\n    }\n    \n    return color_count == pattern_count",
    "    var pattern_index = 0\n    var color_index = 0\n    var pattern_count = 0\n    var color_count = 0\n    \n    while pattern_index < patterns.count && color_index < colors.count {\n        if patterns[pattern_index] == colors[color_index] {\n            pattern_count += 1\n            color_count += 1\n            pattern_index += 1\n            color_index += 1\n        } else {\n            pattern_count = 0\n            color_index += 1\n        }\n        \n        if pattern_count == patterns.count {\n            return true\n        }\n    }\n    \n    return false",
    "    var index = 0\n    var color = colors[index]\n    var pattern = patterns[index]\n    var pattern_index = 0\n    var color_index = 0\n    while index < patterns.count {\n        if pattern_index == pattern.count {\n            index += 1\n            if index < patterns.count {\n                pattern = patterns[index]\n                pattern_index = 0\n            }\n        }\n        if color_index == color.count {\n            index += 1\n            if index < colors.count {\n                color = colors[index]\n                color_index = 0\n            }\n        }\n        if pattern[pattern_index] == color[color_index] {\n            pattern_index += 1\n            color_index += 1\n        } else {\n            return false\n        }\n    }\n    return true",
    "    var colorIndex = 0\n    var patternIndex = 0\n    var color = colors[colorIndex]\n    var pattern = patterns[patternIndex]\n    var colorCount = 0\n    var patternCount = 0\n    while colorIndex < colors.count && patternIndex < patterns.count {\n        if color == colors[colorIndex] {\n            colorCount += 1\n        } else {\n            if colorCount != patternCount {\n                return false\n            }\n            color = colors[colorIndex]\n            colorCount = 1\n            patternIndex += 1\n            if patternIndex < patterns.count {\n                pattern = patterns[patternIndex]\n                patternCount = 0\n            }\n        }\n        if pattern == patterns[patternIndex] {\n            patternCount += 1\n        } else {\n            if colorCount != patternCount {\n                return false\n            }\n            pattern = patterns[patternIndex]\n            patternCount = 1\n            colorIndex += 1\n            if colorIndex < colors.count {\n                color = colors[colorIndex]\n                colorCount = 0\n            }\n        }\n        colorIndex += 1\n        patternIndex += 1\n    }\n    return true",
    "    var i = 0\n    var j = 0\n    while i < colors.count && j < patterns.count {\n        if colors[i] == patterns[j] {\n            i += 1\n            j += 1\n        } else {\n            i += 1\n        }\n    }\n    return j == patterns.count"
  ]
}
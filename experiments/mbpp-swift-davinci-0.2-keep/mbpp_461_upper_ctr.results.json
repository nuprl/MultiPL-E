{
  "name": "mbpp_461_upper_ctr",
  "language": "swift",
  "prompt": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_461_upper_ctr.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str.characters {\n        if char.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpljxjsvq_.swift:5:21: error: 'characters' is unavailable: Please use String directly\n    for char in str.characters {\n                    ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpljxjsvq_.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for ch in str {\n        if ch.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpxdtx_8ct.swift:6:15: error: value of type 'Character' has no member 'isUpper'\n        if ch.isUpper {\n           ~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str.characters {\n        if char.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpljxjsvq_.swift:5:21: error: 'characters' is unavailable: Please use String directly\n    for char in str.characters {\n                    ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpljxjsvq_.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpperCase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpmr9d2pzn.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpperCase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpt18g57pi.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter{$0.isUpperCase}.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpo4o4ts02.swift:4:26: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter{$0.isUpperCase}.count\n                      ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str.characters {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpwknlskak.swift:5:18: error: 'characters' is unavailable: Please use String directly\n    for c in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpwknlskak.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpperCase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpmr9d2pzn.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpper {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpycctcueh.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpperCase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpt18g57pi.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpper {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpycctcueh.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmp1csyvxnp.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str.characters {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpwknlskak.swift:5:18: error: 'characters' is unavailable: Please use String directly\n    for c in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpwknlskak.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpperCase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpt18g57pi.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.characters.reduce(0, {\n        if $1.isUpper {\n            return $0 + 1\n        } else {\n            return $0\n        }\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpe3vjqmyv.swift:5:15: error: value of type 'String.Element' (aka 'Character') has no member 'isUpper'\n        if $1.isUpper {\n           ~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpperCase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpmr9d2pzn.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for ch in str.characters {\n        if ch.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpdb8nrm6f.swift:5:19: error: 'characters' is unavailable: Please use String directly\n    for ch in str.characters {\n                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpdb8nrm6f.swift:6:15: error: value of type 'Character' has no member 'isUpper'\n        if ch.isUpper {\n           ~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpperCase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpmr9d2pzn.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str.characters {\n        if i.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpy13o2hs_.swift:5:18: error: 'characters' is unavailable: Please use String directly\n    for i in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpy13o2hs_.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if i.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpperCase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpmr9d2pzn.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpperCase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpmr9d2pzn.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str.characters {\n        if char.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpljxjsvq_.swift:5:21: error: 'characters' is unavailable: Please use String directly\n    for char in str.characters {\n                    ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpljxjsvq_.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpper {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpycctcueh.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter{$0.isUpperCase}.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpo4o4ts02.swift:4:26: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter{$0.isUpperCase}.count\n                      ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for c in str.characters {\n        if c.isUpper {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpaymncqd0.swift:5:18: error: 'characters' is unavailable: Please use String directly\n    for c in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpaymncqd0.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmp1csyvxnp.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str.characters {\n        if char.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpljxjsvq_.swift:5:21: error: 'characters' is unavailable: Please use String directly\n    for char in str.characters {\n                    ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpljxjsvq_.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpper {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpycctcueh.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpperCase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpt18g57pi.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmp1csyvxnp.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUpperCase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpmr9d2pzn.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpperCase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpt18g57pi.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.characters.filter { $0.isUpperCase() }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpcihuppz7.swift:4:39: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.characters.filter { $0.isUpperCase() }.count\n                                   ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str.characters {\n        if char.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpljxjsvq_.swift:5:21: error: 'characters' is unavailable: Please use String directly\n    for char in str.characters {\n                    ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpljxjsvq_.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUpperCase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpt18g57pi.swift:6:17: error: value of type 'Character' has no member 'isUpperCase'\n        if char.isUpperCase {\n           ~~~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.characters.reduce(0) {\n        $1.isUpper ? $0 + 1 : $0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpysetkezv.swift:5:12: error: value of type 'String.Element' (aka 'Character') has no member 'isUpper'\n        $1.isUpper ? $0 + 1 : $0\n        ~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for c in str {\n        if c.isUpper {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpxfwzp7bi.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for c in str {\n        if c.isUpper {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpxfwzp7bi.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str.characters {\n        if char.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpljxjsvq_.swift:5:21: error: 'characters' is unavailable: Please use String directly\n    for char in str.characters {\n                    ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpljxjsvq_.swift:6:17: error: value of type 'Character' has no member 'isUpper'\n        if char.isUpper {\n           ~~~~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isUppercase {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmp5jag7bv3/tmp5jag7bv3.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3953e18c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3953b0fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3953b0f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3953b0e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5jag7bv3                        0x000055af53f68374 <unavailable> + 4980\n5    libc.so.6                          0x00002b3954004460 __libc_start_main + 245\n6    tmp5jag7bv3                        0x000055af53f67ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    return str.filter { $0.isUpperCase }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "/tmp/tmpo0dbp4kz.swift:4:28: error: value of type 'String.Element' (aka 'Character') has no member 'isUpperCase'\n    return str.filter { $0.isUpperCase }.count\n                        ~~ ^~~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str.characters {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpwknlskak.swift:5:18: error: 'characters' is unavailable: Please use String directly\n    for c in str.characters {\n                 ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n/tmp/tmpwknlskak.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isUppercase {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1665510532,
      "stdout": "",
      "stderr": "tmpp7vtvr9u/tmpp7vtvr9u.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b36a17ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b36a14d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b36a14d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b36a14d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp7vtvr9u                        0x0000560c9c688374 <unavailable> + 4980\n5    libc.so.6                          0x00002b36a19c9460 __libc_start_main + 245\n6    tmpp7vtvr9u                        0x0000560c9c687ff9 <unavailable> + 4089\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to count the upper case characters in a given string.\nfunc upper_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isUpper {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(upper_ctr(str: \"PYthon\") == 1)\nassert(upper_ctr(str: \"BigData\") == 1)\nassert(upper_ctr(str: \"program\") == 0)",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpleisl5r6.swift:6:14: error: value of type 'Character' has no member 'isUpper'\n        if c.isUpper {\n           ~ ^~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
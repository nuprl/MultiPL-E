{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "swift",
  "prompt": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 0\n    while n > 1 {\n        n = n / 2\n        power += 1\n    }\n    return power\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "/tmp/tmp8zygv0rf.swift:6:9: error: cannot assign to value: 'n' is a 'let' constant\n        n = n / 2\n        ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power <= n {\n        power *= 2\n    }\n    return power / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power <= n {\n        power *= 2\n    }\n    return power / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 0\n    while (n > (1 << i)) {\n        i += 1\n    }\n    return 1 << (i - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpyhm5dxo8/tmpyhm5dxo8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b619720cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6196f03b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6196f03988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6196f027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyhm5dxo8                        0x000055f089c492b3 <unavailable> + 4787\n5    libc.so.6                          0x00002b61973f8460 __libc_start_main + 245\n6    tmpyhm5dxo8                        0x000055f089c48e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power <= n {\n        power *= 2\n    }\n    return power/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var res = 1\n    while res <= n {\n        res *= 2\n    }\n    return res / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var n = n\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    return n - (n >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    for i in 1...n {\n        if i & (i - 1) == 0 {\n            result = i\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    let x = Int(log2(Double(n)))\n    return Int(pow(2.0, Double(x)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "/tmp/tmp__drw_s2.swift:4:17: error: cannot find 'log2' in scope\n    let x = Int(log2(Double(n)))\n                ^~~~\n/tmp/tmp__drw_s2.swift:5:16: error: cannot find 'pow' in scope\n    return Int(pow(2.0, Double(x)))\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var p = 1\n    while p <= n {\n        p *= 2\n    }\n    return p/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpvnhubh5t/tmpvnhubh5t.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aed26a9ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aed26795b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aed26795988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aed267947b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnhubh5t                        0x0000558de4ac41b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aed26c8a460 __libc_start_main + 245\n6    tmpvnhubh5t                        0x0000558de4ac3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power <= n {\n        power *= 2\n    }\n    return power / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power <= n {\n        power *= 2\n    }\n    return power / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var p = 1\n    while p <= n {\n        p *= 2\n    }\n    return p / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power <= n {\n        power *= 2\n    }\n    return power / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 0\n    while n >= pow(2, i) {\n        i += 1\n    }\n    return Int(pow(2, i-1))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "/tmp/tmpayl0i_oe.swift:5:16: error: cannot find 'pow' in scope\n    while n >= pow(2, i) {\n               ^~~\n/tmp/tmpayl0i_oe.swift:8:16: error: cannot find 'pow' in scope\n    return Int(pow(2, i-1))\n               ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var n = n\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    return n - (n >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var n = n\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    return n - (n >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpo4bvftu_/tmpo4bvftu_.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b15442b3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1543faab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1543faa988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1543fa97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo4bvftu_                        0x000056099b3c9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b154449f460 __libc_start_main + 245\n6    tmpo4bvftu_                        0x000056099b3c8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 0\n    var i = 1\n    while i <= n {\n        i = i * 2\n        power += 1\n    }\n    return power - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpemcs2j7e/tmpemcs2j7e.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b19e1811c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b19e1508b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b19e1508988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b19e15077b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpemcs2j7e                        0x000055dd6ce951b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b19e19fd460 __libc_start_main + 245\n6    tmpemcs2j7e                        0x000055dd6ce94e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    return Int(pow(2.0, floor(log2(Double(n)))))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "/tmp/tmp9s7qn854.swift:4:16: error: cannot find 'pow' in scope\n    return Int(pow(2.0, floor(log2(Double(n)))))\n               ^~~\n/tmp/tmp9s7qn854.swift:4:25: error: cannot find 'floor' in scope\n    return Int(pow(2.0, floor(log2(Double(n)))))\n                        ^~~~~\n/tmp/tmp9s7qn854.swift:4:31: error: cannot find 'log2' in scope\n    return Int(pow(2.0, floor(log2(Double(n)))))\n                              ^~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpf6yg8z8r/tmpf6yg8z8r.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aabe9b32c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aabe9829b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aabe9829988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aabe98287b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpf6yg8z8r                        0x000055b93582d343 <unavailable> + 4931\n5    libc.so.6                          0x00002aabe9d1e460 __libc_start_main + 245\n6    tmpf6yg8z8r                        0x000055b93582cef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 0\n    var result = 1\n    while result <= n {\n        result = result * 2\n        power += 1\n    }\n    return power - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpsctsuaw5/tmpsctsuaw5.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aaf33c55c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aaf3394cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aaf3394c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aaf3394b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsctsuaw5                        0x0000558915ae01b5 <unavailable> + 4533\n5    libc.so.6                          0x00002aaf33e41460 __libc_start_main + 245\n6    tmpsctsuaw5                        0x0000558915adfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    var result = 1\n    while power <= n {\n        result = power\n        power = power * 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power < n {\n        power *= 2\n    }\n    return power/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpq03_wqvk/tmpq03_wqvk.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b55afeb6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b55afbadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b55afbad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b55afbac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq03_wqvk                        0x0000564e361eb343 <unavailable> + 4931\n5    libc.so.6                          0x00002b55b00a2460 __libc_start_main + 245\n6    tmpq03_wqvk                        0x0000564e361eaef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 0\n    while (n > (1 << i)) {\n        i += 1\n    }\n    return (1 << (i - 1))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpwann92f8/tmpwann92f8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0670eb5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0670bacb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0670bac988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0670bab7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwann92f8                        0x000055b9693922b3 <unavailable> + 4787\n5    libc.so.6                          0x00002b06710a1460 __libc_start_main + 245\n6    tmpwann92f8                        0x000055b969391e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power <= n {\n        power *= 2\n    }\n    return power/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 0\n    while (n > (1 << i)) {\n        i += 1\n    }\n    return 1 << (i - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpyhm5dxo8/tmpyhm5dxo8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b619720cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6196f03b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6196f03988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6196f027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyhm5dxo8                        0x000055f089c492b3 <unavailable> + 4787\n5    libc.so.6                          0x00002b61973f8460 __libc_start_main + 245\n6    tmpyhm5dxo8                        0x000055f089c48e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpw2lte3jw/tmpw2lte3jw.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b097aaf4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b097a7ebb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b097a7eb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b097a7ea7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw2lte3jw                        0x0000557392ac51b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b097ace0460 __libc_start_main + 245\n6    tmpw2lte3jw                        0x0000557392ac4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp_ihksajh/tmp_ihksajh.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28f8106c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28f7dfdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28f7dfd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28f7dfc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_ihksajh                        0x000055ebfe5cd343 <unavailable> + 4931\n5    libc.so.6                          0x00002b28f82f2460 __libc_start_main + 245\n6    tmp_ihksajh                        0x000055ebfe5ccef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result < n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmp5fwuk6hi/tmp5fwuk6hi.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3de3ed0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3de3bc7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3de3bc7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3de3bc67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5fwuk6hi                        0x00005572281b9343 <unavailable> + 4931\n5    libc.so.6                          0x00002b3de40bc460 __libc_start_main + 245\n6    tmp5fwuk6hi                        0x00005572281b8ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power <= n {\n        power *= 2\n    }\n    return power/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power <= n {\n        power *= 2\n    }\n    return power/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var power = 1\n    while power < n {\n        power *= 2\n    }\n    return power / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpynw3r6j6/tmpynw3r6j6.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae23c1b0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae23bea7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae23bea7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae23bea67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpynw3r6j6                        0x0000556e6f8b4343 <unavailable> + 4931\n5    libc.so.6                          0x00002ae23c39c460 __libc_start_main + 245\n6    tmpynw3r6j6                        0x0000556e6f8b3ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpw2lte3jw/tmpw2lte3jw.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b097aaf4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b097a7ebb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b097a7eb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b097a7ea7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw2lte3jw                        0x0000557392ac51b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b097ace0460 __libc_start_main + 245\n6    tmpw2lte3jw                        0x0000557392ac4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 0\n    while (n > (1 << i)) {\n        i += 1\n    }\n    return (1 << i)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmphyap_1sk/tmphyap_1sk.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9d08453c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9d0814ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9d0814a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9d081497b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphyap_1sk                        0x00005620595751b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b9d0863f460 __libc_start_main + 245\n6    tmphyap_1sk                        0x0000562059574e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i/2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var n = n\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    return n - (n >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i <= n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 0\n    while (pow(2, Double(i)) <= Double(n)) {\n        i += 1\n    }\n    return i - 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "/tmp/tmpf_zls8cd.swift:5:12: error: cannot find 'pow' in scope\n    while (pow(2, Double(i)) <= Double(n)) {\n           ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i = i * 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpro28lkq0/tmpro28lkq0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b247f4a0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b247f197b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b247f197988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b247f1967b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpro28lkq0                        0x000055dd4224c343 <unavailable> + 4931\n5    libc.so.6                          0x00002b247f68c460 __libc_start_main + 245\n6    tmpro28lkq0                        0x000055dd4224bef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var result = 1\n    while result <= n {\n        result *= 2\n    }\n    return result / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var i = 1\n    while i < n {\n        i *= 2\n    }\n    return i / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1665510377,
      "stdout": "",
      "stderr": "tmpdogkhgj8/tmpdogkhgj8.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b9da9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b9d793b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b9d793988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b9d7927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdogkhgj8                        0x000055f23cc75343 <unavailable> + 4931\n5    libc.so.6                          0x00002b2b9dc88460 __libc_start_main + 245\n6    tmpdogkhgj8                        0x000055f23cc74ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a python function to find the highest power of 2 that is less than or equal to n.\nfunc highest_Power_of_2(n: Int) -> Int {\n    var x = 1\n    while x < n {\n        x *= 2\n    }\n    return x / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(highest_Power_of_2(n: 10) == 8)\nassert(highest_Power_of_2(n: 19) == 16)\nassert(highest_Power_of_2(n: 32) == 32)",
      "timestamp": 1666123435,
      "stdout": "",
      "stderr": "tmpfqcp82qd/tmpfqcp82qd.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b494b55ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b494b251b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b494b251988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b494b2507b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfqcp82qd                        0x000055c185071343 <unavailable> + 4931\n5    libc.so.6                          0x00002b494b746460 __libc_start_main + 245\n6    tmpfqcp82qd                        0x000055c185070ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
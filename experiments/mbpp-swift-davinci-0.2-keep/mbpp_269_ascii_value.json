{
  "name": "mbpp_269_ascii_value",
  "language": "swift",
  "prompt": "\n/// Write a function to find the ascii value of a character.\nfunc ascii_value(k: String) -> Int {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_269_ascii_value.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(ascii_value(k: \"A\") == 65)\nassert(ascii_value(k: \"R\") == 82)\nassert(ascii_value(k: \"S\") == 83)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return Int(k.unicodeScalars.first!.value)",
    "    var sum = 0\n    for i in k.unicodeScalars {\n        sum += Int(i.value)\n    }\n    return sum",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    var sum = 0\n    for i in k.characters {\n        sum += Int(String(i).unicodeScalars.first!.value)\n    }\n    return sum",
    "    return Int(k.unicodeScalars.first!.value)",
    "    var sum = 0\n    for i in k.utf8 {\n        sum += Int(i)\n    }\n    return sum",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    var sum = 0\n    for i in k.utf8 {\n        sum += Int(i)\n    }\n    return sum",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return Int(k.unicodeScalars.first!.value)",
    "    return k.unicodeScalars.first!.value"
  ]
}
{
  "name": "mbpp_129_magic_square_test",
  "language": "swift",
  "prompt": "\n/// Write a function to calculate whether the matrix is a magic square.\nfunc magic_square_test(my_matrix: [[Int]]) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_129_magic_square_test.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(magic_square_test(my_matrix: [[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]]) == true)\nassert(magic_square_test(my_matrix: [[2, 7, 6], [9, 5, 1], [4, 3, 8]]) == true)\nassert(magic_square_test(my_matrix: [[2, 7, 6], [9, 5, 1], [4, 3, 7]]) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var sum = 0\n    var sum_diagonal1 = 0\n    var sum_diagonal2 = 0\n    var sum_row = 0\n    var sum_column = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var aa = 0\n    var bb = 0\n    var cc = 0\n    var dd = 0\n    var ee = 0\n    var ff = 0\n    var gg = 0\n    var hh = 0\n    var ii = 0\n    var jj = 0\n    var kk = 0\n    var ll = 0\n    var mm = 0\n    var nn = 0\n    var oo = 0\n    var pp = 0\n    var qq = 0\n    var rr = 0\n    var ss = 0\n    var tt = 0\n    var uu = 0\n    var vv = 0\n    var ww = 0\n    var xx = 0\n    var yy = 0\n    var zz = 0\n    var aaa = 0\n    var bbb = 0\n    var ccc = 0\n    var ddd = 0\n    var eee = 0\n    var fff = 0\n    var ggg = 0\n    var hhh = 0\n    var iii = 0\n    var jjj = 0\n    var kkk = 0\n    var lll = 0\n    var mmm = 0\n    var nnn = 0\n    var ooo = 0\n    var ppp = 0\n    var qqq = 0\n    var rrr = 0\n    var sss = 0\n    var ttt = 0\n    var uuu = 0\n    var vvv = 0\n    var www = 0\n    var xxx = 0\n    var yyy = 0\n    var zzz = 0\n    var aaaa = 0\n   ",
    "    var sum = 0\n    var sum_diag_1 = 0\n    var sum_diag_2 = 0\n    var sum_row = 0\n    var sum_col = 0\n    var n = my_matrix.count\n    \n    for i in 0..<n {\n        sum_row = 0\n        sum_col = 0\n        for j in 0..<n {\n            sum_row += my_matrix[i][j]\n            sum_col += my_matrix[j][i]\n        }\n        if sum == 0 {\n            sum = sum_row\n        }\n        if sum != sum_row || sum != sum_col {\n            return false\n        }\n        sum_diag_1 += my_matrix[i][i]\n        sum_diag_2 += my_matrix[i][n - i - 1]\n    }\n    if sum != sum_diag_1 || sum != sum_diag_2 {\n        return false\n    }\n    return true",
    "    var sum = 0\n    for i in 0..<my_matrix.count {\n        sum += my_matrix[i][i]\n    }\n    for i in 0..<my_matrix.count {\n        var row_sum = 0\n        var col_sum = 0\n        for j in 0..<my_matrix.count {\n            row_sum += my_matrix[i][j]\n            col_sum += my_matrix[j][i]\n        }\n        if row_sum != sum || col_sum != sum {\n            return false\n        }\n    }\n    return true",
    "    let n = my_matrix.count\n    var magic_constant = 0\n    var row_sum = 0\n    var col_sum = 0\n    var diag_sum = 0\n    var rev_diag_sum = 0\n    for i in 0..<n {\n        row_sum += my_matrix[i][i]\n        rev_diag_sum += my_matrix[i][n-i-1]\n    }\n    magic_constant = row_sum\n    for i in 0..<n {\n        row_sum = 0\n        col_sum = 0\n        for j in 0..<n {\n            row_sum += my_matrix[i][j]\n            col_sum += my_matrix[j][i]\n        }\n        if row_sum != magic_constant || col_sum != magic_constant {\n            return false\n        }\n    }\n    if diag_sum != magic_constant || rev_diag_sum != magic_constant {\n        return false\n    }\n    return true",
    "    let n = my_matrix.count\n    var sum = 0\n    var sum_diagonal = 0\n    var sum_reverse_diagonal = 0\n    \n    for i in 0..<n {\n        sum += my_matrix[i][i]\n        sum_reverse_diagonal += my_matrix[i][n - i - 1]\n    }\n    \n    if sum != sum_reverse_diagonal {\n        return false\n    }\n    \n    for i in 0..<n {\n        var row_sum = 0\n        var col_sum = 0\n        \n        for j in 0..<n {\n            row_sum += my_matrix[i][j]\n            col_sum += my_matrix[j][i]\n        }\n        \n        if row_sum != sum || col_sum != sum {\n            return false\n        }\n    }\n    \n    return true",
    "    var sum = 0\n    var sum_row = 0\n    var sum_col = 0\n    var sum_diag = 0\n    var sum_rev_diag = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var aa = 0\n    var bb = 0\n    var cc = 0\n    var dd = 0\n    var ee = 0\n    var ff = 0\n    var gg = 0\n    var hh = 0\n    var ii = 0\n    var jj = 0\n    var kk = 0\n    var ll = 0\n    var mm = 0\n    var nn = 0\n    var oo = 0\n    var pp = 0\n    var qq = 0\n    var rr = 0\n    var ss = 0\n    var tt = 0\n    var uu = 0\n    var vv = 0\n    var ww = 0\n    var xx = 0\n    var yy = 0\n    var zz = 0\n    var aaa = 0\n    var bbb = 0\n    var ccc = 0\n    var ddd = 0\n    var eee = 0\n    var fff = 0\n    var ggg = 0\n    var hhh = 0\n    var iii = 0\n    var jjj = 0\n    var kkk = 0\n    var lll = 0\n    var mmm = 0\n    var nnn = 0\n    var ooo = 0\n    var ppp = 0\n    var qqq = 0\n    var rrr = 0\n    var sss = 0\n    var ttt = 0\n    var uuu = 0\n    var vvv = 0\n    var www = 0\n    var xxx = 0\n    var yyy = 0\n    var zzz = 0\n    var aaaa = 0\n   ",
    "    var sum = 0\n    var sum_diagonal_1 = 0\n    var sum_diagonal_2 = 0\n    var sum_row = 0\n    var sum_column = 0\n    var result = true\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var aa = 0\n    var bb = 0\n    var cc = 0\n    var dd = 0\n    var ee = 0\n    var ff = 0\n    var gg = 0\n    var hh = 0\n    var ii = 0\n    var jj = 0\n    var kk = 0\n    var ll = 0\n    var mm = 0\n    var nn = 0\n    var oo = 0\n    var pp = 0\n    var qq = 0\n    var rr = 0\n    var ss = 0\n    var tt = 0\n    var uu = 0\n    var vv = 0\n    var ww = 0\n    var xx = 0\n    var yy = 0\n    var zz = 0\n    var aaa = 0\n    var bbb = 0\n    var ccc = 0\n    var ddd = 0\n    var eee = 0\n    var fff = 0\n    var ggg = 0\n    var hhh = 0\n    var iii = 0\n    var jjj = 0\n    var kkk = 0\n    var lll = 0\n    var mmm = 0\n    var nnn = 0\n    var ooo = 0\n    var ppp = 0\n    var qqq = 0\n    var rrr = 0\n    var sss = 0\n    var ttt = 0\n    var uuu = 0\n    var vvv = 0\n    var www = 0\n    var xxx = 0\n    var yyy = 0\n    var zzz = 0\n",
    "    var sum_list = [Int]()\n    for i in 0..<my_matrix.count {\n        var sum = 0\n        for j in 0..<my_matrix[i].count {\n            sum += my_matrix[i][j]\n        }\n        sum_list.append(sum)\n    }\n    for i in 0..<my_matrix.count {\n        var sum = 0\n        for j in 0..<my_matrix[i].count {\n            sum += my_matrix[j][i]\n        }\n        sum_list.append(sum)\n    }\n    var sum = 0\n    for i in 0..<my_matrix.count {\n        sum += my_matrix[i][i]\n    }\n    sum_list.append(sum)\n    sum = 0\n    for i in 0..<my_matrix.count {\n        sum += my_matrix[i][my_matrix.count - 1 - i]\n    }\n    sum_list.append(sum)\n    for i in 1..<sum_list.count {\n        if sum_list[i] != sum_list[0] {\n            return false\n        }\n    }\n    return true",
    "    var sum = 0\n    var sum_diagonal_1 = 0\n    var sum_diagonal_2 = 0\n    var sum_row = 0\n    var sum_column = 0\n    \n    for i in 0..<my_matrix.count {\n        sum_row = 0\n        sum_column = 0\n        for j in 0..<my_matrix.count {\n            sum_row += my_matrix[i][j]\n            sum_column += my_matrix[j][i]\n        }\n        if sum == 0 {\n            sum = sum_row\n        }\n        if sum != sum_row || sum != sum_column {\n            return false\n        }\n        sum_diagonal_1 += my_matrix[i][i]\n        sum_diagonal_2 += my_matrix[i][my_matrix.count - i - 1]\n    }\n    if sum != sum_diagonal_1 || sum != sum_diagonal_2 {\n        return false\n    }\n    return true",
    "    var sum = 0\n    var sum_diag_1 = 0\n    var sum_diag_2 = 0\n    var sum_row = 0\n    var sum_col = 0\n    var is_magic = true\n    for i in 0..<my_matrix.count {\n        for j in 0..<my_matrix[i].count {\n            sum += my_matrix[i][j]\n            if i == j {\n                sum_diag_1 += my_matrix[i][j]\n            }\n            if i + j == my_matrix.count - 1 {\n                sum_diag_2 += my_matrix[i][j]\n            }\n        }\n    }\n    for i in 0..<my_matrix.count {\n        sum_row = 0\n        sum_col = 0\n        for j in 0..<my_matrix[i].count {\n            sum_row += my_matrix[i][j]\n            sum_col += my_matrix[j][i]\n        }\n        if sum_row != sum || sum_col != sum {\n            is_magic = false\n            break\n        }\n    }\n    if sum_diag_1 != sum || sum_diag_2 != sum {\n        is_magic = false\n    }\n    return is_magic",
    "    var sum = 0\n    var sum_diag_1 = 0\n    var sum_diag_2 = 0\n    var sum_row = 0\n    var sum_col = 0\n    var sum_row_2 = 0\n    var sum_col_2 = 0\n    var sum_row_3 = 0\n    var sum_col_3 = 0\n    \n    for i in 0...my_matrix.count - 1 {\n        sum += my_matrix[i][i]\n        sum_diag_1 += my_matrix[i][my_matrix.count - 1 - i]\n    }\n    \n    if sum != sum_diag_1 {\n        return false\n    }\n    \n    for i in 0...my_matrix.count - 1 {\n        sum_row += my_matrix[0][i]\n        sum_col += my_matrix[i][0]\n        sum_row_2 += my_matrix[1][i]\n        sum_col_2 += my_matrix[i][1]\n        sum_row_3 += my_matrix[2][i]\n        sum_col_3 += my_matrix[i][2]\n    }\n    \n    if sum_row != sum_col || sum_row != sum_row_2 || sum_row != sum_row_3 || sum_row != sum_col_2 || sum_row != sum_col_3 {\n        return false\n    }\n    \n    return true",
    "    var sum = 0\n    var sum_diagonal1 = 0\n    var sum_diagonal2 = 0\n    var sum_column = 0\n    var sum_row = 0\n    var sum_array = [Int]()\n    var sum_array_column = [Int]()\n    var sum_array_row = [Int]()\n    var sum_array_diagonal1 = [Int]()\n    var sum_array_diagonal2 = [Int]()\n    \n    for i in 0..<my_matrix.count {\n        sum_diagonal1 += my_matrix[i][i]\n        sum_diagonal2 += my_matrix[i][my_matrix.count - 1 - i]\n    }\n    \n    for i in 0..<my_matrix.count {\n        for j in 0..<my_matrix.count {\n            sum_column += my_matrix[j][i]\n            sum_row += my_matrix[i][j]\n        }\n        sum_array_column.append(sum_column)\n        sum_array_row.append(sum_row)\n        sum_column = 0\n        sum_row = 0\n    }\n    \n    sum_array_diagonal1.append(sum_diagonal1)\n    sum_array_diagonal2.append(sum_diagonal2)\n    \n    sum_array = sum_array_column + sum_array_row + sum_array_diagonal1 + sum_array_diagonal2\n    \n    for i in 0..<sum_array.count - 1 {\n        if sum_array[i] != sum_array[i + 1] {\n            return false\n        }\n    }\n    \n    return true",
    "    var magic_square = true\n    \n    // Check if the matrix is a square\n    if my_matrix.count != my_matrix[0].count {\n        magic_square = false\n    }\n    \n    // Check if the matrix is a magic square\n    let matrix_size = my_matrix.count\n    var sum_of_rows = [Int](repeating: 0, count: matrix_size)\n    var sum_of_columns = [Int](repeating: 0, count: matrix_size)\n    var sum_of_diagonals = [Int](repeating: 0, count: 2)\n    for i in 0..<matrix_size {\n        for j in 0..<matrix_size {\n            sum_of_rows[i] += my_matrix[i][j]\n            sum_of_columns[j] += my_matrix[i][j]\n            if i == j {\n                sum_of_diagonals[0] += my_matrix[i][j]\n            }\n            if i + j == matrix_size - 1 {\n                sum_of_diagonals[1] += my_matrix[i][j]\n            }\n        }\n    }\n    for i in 1..<matrix_size {\n        if sum_of_rows[i] != sum_of_rows[0] || sum_of_columns[i] != sum_of_columns[0] {\n            magic_square = false\n        }\n    }\n    if sum_of_diagonals[0] != sum_of_diagonals[1] {\n        magic_square = false\n    }\n    \n    return magic_square",
    "    var sum = 0\n    var sum_diag = 0\n    var sum_diag2 = 0\n    var sum_row = 0\n    var sum_col = 0\n    var sum_row_prev = 0\n    var sum_col_prev = 0\n    var sum_diag_prev = 0\n    var sum_diag2_prev = 0\n    var sum_prev = 0\n    var sum_prev2 = 0\n    var sum_prev3 = 0\n    var sum_prev4 = 0\n    var sum_prev5 = 0\n    var sum_prev6 = 0\n    var sum_prev7 = 0\n    var sum_prev8 = 0\n    var sum_prev9 = 0\n    var sum_prev10 = 0\n    var sum_prev11 = 0\n    var sum_prev12 = 0\n    var sum_prev13 = 0\n    var sum_prev14 = 0\n    var sum_prev15 = 0\n    var sum_prev16 = 0\n    var sum_prev17 = 0\n    var sum_prev18 = 0\n    var sum_prev19 = 0\n    var sum_prev20 = 0\n    var sum_prev21 = 0\n    var sum_prev22 = 0\n    var sum_prev23 = 0\n    var sum_prev24 = 0\n    var sum_prev25 = 0\n    var sum_prev26 = 0\n    var sum_prev27 = 0\n    var sum_prev28 = 0\n    var sum_prev29 = 0\n    var sum_prev30 = 0\n    var sum_prev31 = 0\n    var sum_prev32 = 0\n    var sum_prev33 = 0\n    var sum_prev34 = 0\n    var sum_prev35 = 0\n    var sum_prev36 = 0\n    var sum_prev37 = 0\n    var sum_prev38 = 0\n    var sum_prev39 = 0\n    var sum_prev40 = 0\n    var sum_prev41 = 0\n    var sum_prev42 = 0\n    var sum_prev43 = 0\n    var sum_prev44 = 0\n    var sum_prev45 = 0\n    var sum_prev46 = 0\n    var sum_prev47 = 0\n    var sum_prev",
    "    var magic_square = true\n    \n    // Check if the matrix is a square\n    if my_matrix.count != my_matrix[0].count {\n        magic_square = false\n    }\n    \n    // Check if the matrix is a magic square\n    if magic_square {\n        var sum = 0\n        var sum_diag = 0\n        var sum_diag_2 = 0\n        for i in 0..<my_matrix.count {\n            sum += my_matrix[0][i]\n        }\n        for i in 0..<my_matrix.count {\n            var sum_row = 0\n            var sum_col = 0\n            for j in 0..<my_matrix.count {\n                sum_row += my_matrix[i][j]\n                sum_col += my_matrix[j][i]\n                if i == j {\n                    sum_diag += my_matrix[i][j]\n                }\n                if i + j == my_matrix.count - 1 {\n                    sum_diag_2 += my_matrix[i][j]\n                }\n            }\n            if sum_row != sum || sum_col != sum {\n                magic_square = false\n            }\n        }\n        if sum_diag != sum || sum_diag_2 != sum {\n            magic_square = false\n        }\n    }\n    \n    return magic_square",
    "    let n = my_matrix.count\n    var sum = 0\n    var sum_diag1 = 0\n    var sum_diag2 = 0\n    \n    for i in 0..<n {\n        var sum_row = 0\n        var sum_col = 0\n        for j in 0..<n {\n            sum_row += my_matrix[i][j]\n            sum_col += my_matrix[j][i]\n        }\n        if sum == 0 {\n            sum = sum_row\n        }\n        if sum != sum_row || sum != sum_col {\n            return false\n        }\n        sum_diag1 += my_matrix[i][i]\n        sum_diag2 += my_matrix[i][n-i-1]\n    }\n    if sum != sum_diag1 || sum != sum_diag2 {\n        return false\n    }\n    return true",
    "    var sum = 0\n    var sum_diag1 = 0\n    var sum_diag2 = 0\n    var sum_row = 0\n    var sum_col = 0\n    var sum_row_check = 0\n    var sum_col_check = 0\n    var sum_diag1_check = 0\n    var sum_diag2_check = 0\n    \n    for i in 0..<my_matrix.count {\n        sum_row = 0\n        sum_col = 0\n        for j in 0..<my_matrix[i].count {\n            sum_row += my_matrix[i][j]\n            sum_col += my_matrix[j][i]\n        }\n        if sum == 0 {\n            sum = sum_row\n        }\n        if sum_row_check == 0 {\n            sum_row_check = sum_row\n        }\n        if sum_col_check == 0 {\n            sum_col_check = sum_col\n        }\n        if sum_row != sum_row_check || sum_col != sum_col_check {\n            return false\n        }\n        sum_row_check = 0\n        sum_col_check = 0\n    }\n    \n    for i in 0..<my_matrix.count {\n        sum_diag1 += my_matrix[i][i]\n        sum_diag2 += my_matrix[i][my_matrix.count - 1 - i]\n    }\n    if sum_diag1_check == 0 {\n        sum_diag1_check = sum_diag1\n    }\n    if sum_diag2_check == 0 {\n        sum_diag2_check = sum_diag2\n    }\n    if sum_diag1 != sum_diag1_check || sum_diag2 != sum_diag2_check {\n        return false\n    }\n    return true",
    "    // Check if the matrix is a square\n    if my_matrix.count != my_matrix[0].count {\n        return false\n    }\n    \n    // Check if the matrix is a magic square\n    var sum = 0\n    for i in 0..<my_matrix.count {\n        sum += my_matrix[0][i]\n    }\n    for i in 0..<my_matrix.count {\n        var row_sum = 0\n        var col_sum = 0\n        for j in 0..<my_matrix[i].count {\n            row_sum += my_matrix[i][j]\n            col_sum += my_matrix[j][i]\n        }\n        if row_sum != sum || col_sum != sum {\n            return false\n        }\n    }\n    return true",
    "    var result = true\n    var sum = 0\n    var sum_row = 0\n    var sum_col = 0\n    \n    // Check if the matrix is a square\n    if my_matrix.count != my_matrix[0].count {\n        result = false\n    }\n    \n    // Check if the sum of each row is equal\n    for i in 0..<my_matrix.count {\n        for j in 0..<my_matrix[i].count {\n            sum_row += my_matrix[i][j]\n        }\n        if sum == 0 {\n            sum = sum_row\n        }\n        if sum != sum_row {\n            result = false\n        }\n        sum_row = 0\n    }\n    \n    // Check if the sum of each column is equal\n    for i in 0..<my_matrix.count {\n        for j in 0..<my_matrix[i].count {\n            sum_col += my_matrix[j][i]\n        }\n        if sum != sum_col {\n            result = false\n        }\n        sum_col = 0\n    }\n    \n    // Check if the sum of each diagonal is equal\n    for i in 0..<my_matrix.count {\n        sum_row += my_matrix[i][i]\n        sum_col += my_matrix[i][my_matrix.count - 1 - i]\n    }\n    if sum != sum_row || sum != sum_col {\n        result = false\n    }\n    \n    return result",
    "    let n = my_matrix.count\n    var sum = 0\n    var sum_diagonal1 = 0\n    var sum_diagonal2 = 0\n    for i in 0..<n {\n        var row_sum = 0\n        var col_sum = 0\n        for j in 0..<n {\n            row_sum += my_matrix[i][j]\n            col_sum += my_matrix[j][i]\n        }\n        if sum == 0 {\n            sum = row_sum\n        }\n        if sum != row_sum || sum != col_sum {\n            return false\n        }\n        sum_diagonal1 += my_matrix[i][i]\n        sum_diagonal2 += my_matrix[i][n - i - 1]\n    }\n    if sum != sum_diagonal1 || sum != sum_diagonal2 {\n        return false\n    }\n    return true"
  ]
}
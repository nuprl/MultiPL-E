{
  "name": "mbpp_771_check_expression",
  "language": "swift",
  "prompt": "\n/// Write a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/\nfunc check_expression(exp: String) -> Bool {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_771_check_expression.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_expression(exp: \"{()}[{}]\") == true)\nassert(check_expression(exp: \"{()}[{]\") == false)\nassert(check_expression(exp: \"{()}[{}][]({})\") == true)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var stack = Stack<Character>()\n    for c in exp {\n        if c == \"(\" || c == \"[\" || c == \"{\" {\n            stack.push(c)\n        } else if c == \")\" || c == \"]\" || c == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if top == \"(\" && c != \")\" {\n                return false\n            }\n            if top == \"[\" && c != \"]\" {\n                return false\n            }\n            if top == \"{\" && c != \"}\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    \n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(element: char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            if char == \")\" && stack.peek() != \"(\" {\n                return false\n            } else if char == \"]\" && stack.peek() != \"[\" {\n                return false\n            } else if char == \"}\" && stack.peek() != \"{\" {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if top == \"(\" && char != \")\" {\n                return false\n            } else if top == \"[\" && char != \"]\" {\n                return false\n            } else if top == \"{\" && char != \"}\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    let stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"{\" && char != \"}\") || (top == \"[\" && char != \"]\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(element: char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            if char == \")\" && stack.peek() != \"(\" {\n                return false\n            }\n            if char == \"]\" && stack.peek() != \"[\" {\n                return false\n            }\n            if char == \"}\" && stack.peek() != \"{\" {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"{\" && char != \"}\") || (top == \"[\" && char != \"]\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            }\n            if char == \"]\" && top != \"[\" {\n                return false\n            }\n            if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack: [Character] = []\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.append(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty {\n                return false\n            }\n            let top = stack.removeLast()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            }\n            if char == \"}\" && top != \"{\" {\n                return false\n            }\n            if char == \"]\" && top != \"[\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if !is_matching_pair(left: top!, right: char) {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    let stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (char == \")\" && top != \"(\") || (char == \"]\" && top != \"[\") || (char == \"}\" && top != \"{\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (char == \")\" && top != \"(\") || (char == \"}\" && top != \"{\") || (char == \"]\" && top != \"[\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(element: char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for c in exp {\n        if c == \"(\" {\n            stack.push(c)\n        } else if c == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(element: char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            if char == \")\" && stack.peek() == \"(\" {\n                stack.pop()\n            } else if char == \"]\" && stack.peek() == \"[\" {\n                stack.pop()\n            } else if char == \"}\" && stack.peek() == \"{\" {\n                stack.pop()\n            } else {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack: [Character] = []\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.append(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty {\n                return false\n            }\n            let top = stack.popLast()!\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    \n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    \n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    let stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    if stack.isEmpty() {\n        return true\n    } else {\n        return false\n    }",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    if stack.isEmpty() {\n        return true\n    } else {\n        return false\n    }",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                let top = stack.pop()\n                if char == \")\" && top != \"(\" {\n                    return false\n                } else if char == \"]\" && top != \"[\" {\n                    return false\n                } else if char == \"}\" && top != \"{\" {\n                    return false\n                }\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            if char == \")\" && stack.peek() != \"(\" {\n                return false\n            }\n            if char == \"]\" && stack.peek() != \"[\" {\n                return false\n            }\n            if char == \"}\" && stack.peek() != \"{\" {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            if char == \")\" && stack.peek() == \"(\" {\n                stack.pop()\n            } else if char == \"}\" && stack.peek() == \"{\" {\n                stack.pop()\n            } else if char == \"]\" && stack.peek() == \"[\" {\n                stack.pop()\n            } else {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if !isMatchingPair(top: top, char: char) {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(element: char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (char == \")\" && top != \"(\") || (char == \"]\" && top != \"[\") || (char == \"}\" && top != \"{\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            }\n            if char == \"]\" && top != \"[\" {\n                return false\n            }\n            if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    if stack.isEmpty() {\n        return true\n    }\n    return false",
    "    var stack: [Character] = []\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.append(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty {\n                return false\n            }\n            let top = stack.removeLast()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" || char == \"}\" && top != \"{\" || char == \"]\" && top != \"[\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                let top = stack.pop()\n                if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                    return false\n                }\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.pop() != \"(\" {\n                return false\n            }\n        } else if char == \"]\" {\n            if stack.pop() != \"[\" {\n                return false\n            }\n        } else if char == \"}\" {\n            if stack.pop() != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if !((top == \"(\" && char == \")\") || (top == \"[\" && char == \"]\") || (top == \"{\" && char == \"}\")) {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty {\n                return false\n            }\n            let top = stack.pop()\n            if (char == \")\" && top != \"(\") || (char == \"]\" && top != \"[\") || (char == \"}\" && top != \"{\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        switch char {\n        case \"(\", \"{\", \"[\":\n            stack.push(char)\n        case \")\":\n            if stack.isEmpty() || stack.pop() != \"(\" {\n                return false\n            }\n        case \"}\":\n            if stack.isEmpty() || stack.pop() != \"{\" {\n                return false\n            }\n        case \"]\":\n            if stack.isEmpty() || stack.pop() != \"[\" {\n                return false\n            }\n        default:\n            break\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() || stack.pop() != \"(\" {\n                return false\n            }\n        } else if char == \"]\" {\n            if stack.isEmpty() || stack.pop() != \"[\" {\n                return false\n            }\n        } else if char == \"}\" {\n            if stack.isEmpty() || stack.pop() != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(element: char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty {\n                return false\n            }\n            let top = stack.pop()\n            if top == \"(\" && char != \")\" {\n                return false\n            } else if top == \"[\" && char != \"]\" {\n                return false\n            } else if top == \"{\" && char != \"}\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            if char == \")\" && stack.peek() != \"(\" {\n                return false\n            }\n            if char == \"]\" && stack.peek() != \"[\" {\n                return false\n            }\n            if char == \"}\" && stack.peek() != \"{\" {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    if stack.isEmpty() {\n        return true\n    } else {\n        return false\n    }",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                let top = stack.pop()\n                if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                    return false\n                }\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for c in exp {\n        if c == \"(\" {\n            stack.push(c)\n        } else if c == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack: [Character] = []\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.append(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty {\n                return false\n            }\n            let top = stack.popLast()!\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            }\n            if char == \"]\" && top != \"[\" {\n                return false\n            }\n            if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if !isMatchingPair(top: top, char: char) {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            }\n            if char == \"}\" && top != \"{\" {\n                return false\n            }\n            if char == \"]\" && top != \"[\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() || stack.pop() != \"(\" {\n                return false\n            }\n        } else if char == \"]\" {\n            if stack.isEmpty() || stack.pop() != \"[\" {\n                return false\n            }\n        } else if char == \"}\" {\n            if stack.isEmpty() || stack.pop() != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for c in exp {\n        if c == \"(\" {\n            stack.push(c)\n        } else if c == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() || stack.pop() != \"(\" {\n                return false\n            }\n        } else if char == \"]\" {\n            if stack.isEmpty() || stack.pop() != \"[\" {\n                return false\n            }\n        } else if char == \"}\" {\n            if stack.isEmpty() || stack.pop() != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            }\n            if char == \"]\" && top != \"[\" {\n                return false\n            }\n            if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if !isMatchingPair(top: top, char: char) {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            if char == \")\" && stack.peek() != \"(\" {\n                return false\n            }\n            if char == \"}\" && stack.peek() != \"{\" {\n                return false\n            }\n            if char == \"]\" && stack.peek() != \"[\" {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            }\n            if char == \"]\" && top != \"[\" {\n                return false\n            }\n            if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() || stack.pop() != \"(\" {\n                return false\n            }\n        } else if char == \"]\" {\n            if stack.isEmpty() || stack.pop() != \"[\" {\n                return false\n            }\n        } else if char == \"}\" {\n            if stack.isEmpty() || stack.pop() != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for c in exp {\n        if c == \"(\" || c == \"{\" || c == \"[\" {\n            stack.push(c)\n        } else if c == \")\" || c == \"}\" || c == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (c == \")\" && top != \"(\") || (c == \"}\" && top != \"{\") || (c == \"]\" && top != \"[\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (char == \")\" && top != \"(\") || (char == \"}\" && top != \"{\") || (char == \"]\" && top != \"[\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for c in exp {\n        if c == \"(\" {\n            stack.push(c)\n        } else if c == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if char == \")\" && top != \"(\" {\n                return false\n            } else if char == \"]\" && top != \"[\" {\n                return false\n            } else if char == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (char == \")\" && top != \"(\") || (char == \"]\" && top != \"[\") || (char == \"}\" && top != \"{\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"{\" && char != \"}\") || (top == \"[\" && char != \"]\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    var i = 0\n    while i < exp.count {\n        let char = exp[exp.index(exp.startIndex, offsetBy: i)]\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"{\" && char != \"}\") || (top == \"[\" && char != \"]\") {\n                return false\n            }\n        }\n        i += 1\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty() {\n                return false\n            }\n            if char == \")\" && stack.peek() != \"(\" {\n                return false\n            }\n            if char == \"}\" && stack.peek() != \"{\" {\n                return false\n            }\n            if char == \"]\" && stack.peek() != \"[\" {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for c in exp {\n        if c == \"(\" || c == \"[\" || c == \"{\" {\n            stack.push(c)\n        } else if c == \")\" || c == \"]\" || c == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if c == \")\" && top != \"(\" {\n                return false\n            }\n            if c == \"]\" && top != \"[\" {\n                return false\n            }\n            if c == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if top == \"(\" && char != \")\" {\n                return false\n            } else if top == \"[\" && char != \"]\" {\n                return false\n            } else if top == \"{\" && char != \"}\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for c in exp {\n        if c == \"(\" || c == \"[\" || c == \"{\" {\n            stack.push(c)\n        } else if c == \")\" || c == \"]\" || c == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if c == \")\" && top != \"(\" {\n                return false\n            }\n            if c == \"]\" && top != \"[\" {\n                return false\n            }\n            if c == \"}\" && top != \"{\" {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            if char == \")\" && stack.peek() != \"(\" {\n                return false\n            }\n            if char == \"]\" && stack.peek() != \"[\" {\n                return false\n            }\n            if char == \"}\" && stack.peek() != \"{\" {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"{\" || char == \"[\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"}\" || char == \"]\" {\n            if stack.isEmpty {\n                return false\n            }\n            let top = stack.pop()\n            if (top == \"(\" && char != \")\") || (top == \"{\" && char != \"}\") || (top == \"[\" && char != \"]\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            }\n            stack.pop()\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                let top = stack.pop()\n                if (top == \"(\" && char != \")\") || (top == \"[\" && char != \"]\") || (top == \"{\" && char != \"}\") {\n                    return false\n                }\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty {\n                return false\n            }\n            let top = stack.pop()\n            if (char == \")\" && top != \"(\") || (char == \"]\" && top != \"[\") || (char == \"}\" && top != \"{\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" || char == \"[\" || char == \"{\" {\n            stack.push(char)\n        } else if char == \")\" || char == \"]\" || char == \"}\" {\n            if stack.isEmpty() {\n                return false\n            }\n            let top = stack.pop()\n            if (char == \")\" && top != \"(\") || (char == \"]\" && top != \"[\") || (char == \"}\" && top != \"{\") {\n                return false\n            }\n        }\n    }\n    return stack.isEmpty()",
    "    var stack = Stack<Character>()\n    for char in exp {\n        if char == \"(\" {\n            stack.push(char)\n        } else if char == \")\" {\n            if stack.isEmpty() {\n                return false\n            } else {\n                stack.pop()\n            }\n        }\n    }\n    return stack.isEmpty()"
  ]
}
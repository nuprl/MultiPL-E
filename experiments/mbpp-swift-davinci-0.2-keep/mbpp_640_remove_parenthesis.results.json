{
  "name": "mbpp_640_remove_parenthesis",
  "language": "swift",
  "prompt": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "verbatim",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwi1ne2mg/tmpwi1ne2mg.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4bc4aac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4bc1a1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4bc1a1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4bc1a07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwi1ne2mg                        0x000055b354b4863e <unavailable> + 5694\n5    libc.so.6                          0x00002ac4bc696460 __libc_start_main + 245\n6    tmpwi1ne2mg                        0x000055b354b48249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var output = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            output += item\n        }\n    }\n    return output\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpxmpg7uds/tmpxmpg7uds.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a15f7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a15c76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a15c76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a15c757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxmpg7uds                        0x0000557d661bd63e <unavailable> + 5694\n5    libc.so.6                          0x00002b5a1616b460 __libc_start_main + 245\n6    tmpxmpg7uds                        0x0000557d661bd249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    for item in items {\n        if item == \"(\" {\n            continue\n        } else if item == \")\" {\n            continue\n        } else {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp985wlgkl/tmp985wlgkl.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abd29a06c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abd296fdb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abd296fd988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abd296fc7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp985wlgkl                        0x000055c75f20d63e <unavailable> + 5694\n5    libc.so.6                          0x00002abd29bf2460 __libc_start_main + 245\n6    tmp985wlgkl                        0x000055c75f20d249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwi1ne2mg/tmpwi1ne2mg.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4bc4aac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4bc1a1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4bc1a1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4bc1a07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwi1ne2mg                        0x000055b354b4863e <unavailable> + 5694\n5    libc.so.6                          0x00002ac4bc696460 __libc_start_main + 245\n6    tmpwi1ne2mg                        0x000055b354b48249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp6ycp68lf/tmp6ycp68lf.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6f03a35c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6f0372cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6f0372c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6f0372b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6ycp68lf                        0x000055bc9712e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b6f03c21460 __libc_start_main + 245\n6    tmp6ycp68lf                        0x000055bc9712e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp6ycp68lf/tmp6ycp68lf.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6f03a35c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6f0372cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6f0372c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6f0372b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6ycp68lf                        0x000055bc9712e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b6f03c21460 __libc_start_main + 245\n6    tmp6ycp68lf                        0x000055bc9712e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp6ycp68lf/tmp6ycp68lf.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6f03a35c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6f0372cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6f0372c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6f0372b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6ycp68lf                        0x000055bc9712e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b6f03c21460 __libc_start_main + 245\n6    tmp6ycp68lf                        0x000055bc9712e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwi1ne2mg/tmpwi1ne2mg.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4bc4aac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4bc1a1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4bc1a1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4bc1a07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwi1ne2mg                        0x000055b354b4863e <unavailable> + 5694\n5    libc.so.6                          0x00002ac4bc696460 __libc_start_main + 245\n6    tmpwi1ne2mg                        0x000055b354b48249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var stack = Stack<Character>()\n    for item in items {\n        for char in item {\n            if char == \"(\" {\n                stack.push(char)\n            } else if char == \")\" {\n                stack.pop()\n            } else {\n                if stack.isEmpty() {\n                    result.append(char)\n                }\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "/tmp/tmpn53jmqt3.swift:5:17: error: cannot find 'Stack' in scope\n    var stack = Stack<Character>()\n                ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp6ycp68lf/tmp6ycp68lf.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6f03a35c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6f0372cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6f0372c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6f0372b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6ycp68lf                        0x000055bc9712e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b6f03c21460 __libc_start_main + 245\n6    tmp6ycp68lf                        0x000055bc9712e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwi1ne2mg/tmpwi1ne2mg.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4bc4aac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4bc1a1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4bc1a1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4bc1a07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwi1ne2mg                        0x000055b354b4863e <unavailable> + 5694\n5    libc.so.6                          0x00002ac4bc696460 __libc_start_main + 245\n6    tmpwi1ne2mg                        0x000055b354b48249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var output = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            output += item\n        }\n    }\n    return output\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpxmpg7uds/tmpxmpg7uds.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a15f7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a15c76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a15c76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a15c757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxmpg7uds                        0x0000557d661bd63e <unavailable> + 5694\n5    libc.so.6                          0x00002b5a1616b460 __libc_start_main + 245\n6    tmpxmpg7uds                        0x0000557d661bd249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = items\n    var i = 0\n    while i < new_items.count {\n        if new_items[i] == \"(\" {\n            new_items.remove(at: i)\n            while new_items[i] != \")\" {\n                new_items.remove(at: i)\n            }\n            new_items.remove(at: i)\n        }\n        i += 1\n    }\n    return new_items.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpuhf5ez94/tmpuhf5ez94.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3878f08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3878bffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3878bff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3878bfe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuhf5ez94                        0x000055931ee8762e <unavailable> + 5678\n5    libc.so.6                          0x00002b38790f4460 __libc_start_main + 245\n6    tmpuhf5ez94                        0x000055931ee87239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp6ycp68lf/tmp6ycp68lf.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6f03a35c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6f0372cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6f0372c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6f0372b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6ycp68lf                        0x000055bc9712e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b6f03c21460 __libc_start_main + 245\n6    tmp6ycp68lf                        0x000055bc9712e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    \n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    \n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpxgoeefbf/tmpxgoeefbf.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5420f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac541deeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac541dee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac541ded7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxgoeefbf                        0x000056460571763e <unavailable> + 5694\n5    libc.so.6                          0x00002ac5422e3460 __libc_start_main + 245\n6    tmpxgoeefbf                        0x0000564605717249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    \n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    \n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpxgoeefbf/tmpxgoeefbf.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5420f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac541deeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac541dee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac541ded7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxgoeefbf                        0x000056460571763e <unavailable> + 5694\n5    libc.so.6                          0x00002ac5422e3460 __libc_start_main + 245\n6    tmpxgoeefbf                        0x0000564605717249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n            continue\n        }\n        if item == \")\" {\n            skip = false\n            continue\n        }\n        if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwg5bypy_/tmpwg5bypy_.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b68dcdcfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b68dcac6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b68dcac6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b68dcac57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg5bypy_                        0x000055c3d54eb63e <unavailable> + 5694\n5    libc.so.6                          0x00002b68dcfbb460 __libc_start_main + 245\n6    tmpwg5bypy_                        0x000055c3d54eb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n            continue\n        }\n        if item == \")\" {\n            skip = false\n            continue\n        }\n        if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwg5bypy_/tmpwg5bypy_.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b68dcdcfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b68dcac6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b68dcac6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b68dcac57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg5bypy_                        0x000055c3d54eb63e <unavailable> + 5694\n5    libc.so.6                          0x00002b68dcfbb460 __libc_start_main + 245\n6    tmpwg5bypy_                        0x000055c3d54eb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwi1ne2mg/tmpwi1ne2mg.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4bc4aac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4bc1a1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4bc1a1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4bc1a07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwi1ne2mg                        0x000055b354b4863e <unavailable> + 5694\n5    libc.so.6                          0x00002ac4bc696460 __libc_start_main + 245\n6    tmpwi1ne2mg                        0x000055b354b48249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var stack = Stack<String>()\n    for item in items {\n        if item == \"(\" {\n            stack.push(item)\n        } else if item == \")\" {\n            stack.pop()\n        } else {\n            if stack.isEmpty() {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "/tmp/tmp002ccawj.swift:5:17: error: cannot find 'Stack' in scope\n    var stack = Stack<String>()\n                ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp6ycp68lf/tmp6ycp68lf.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6f03a35c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6f0372cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6f0372c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6f0372b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6ycp68lf                        0x000055bc9712e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b6f03c21460 __libc_start_main + 245\n6    tmp6ycp68lf                        0x000055bc9712e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = [String]()\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            new_items.append(item)\n        }\n    }\n    return new_items.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpc4w9ghgd/tmpc4w9ghgd.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adfaf0cec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adfaedc5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adfaedc5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adfaedc47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc4w9ghgd                        0x000056301e0e873e <unavailable> + 5950\n5    libc.so.6                          0x00002adfaf2ba460 __libc_start_main + 245\n6    tmpc4w9ghgd                        0x000056301e0e8349 <unavailable> + 4937\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var is_open = false\n    for item in items {\n        if item == \"(\" {\n            is_open = true\n        } else if item == \")\" {\n            is_open = false\n        } else if !is_open {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpmkkb723o/tmpmkkb723o.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab48fa7ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab48f771b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab48f771988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab48f7707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmkkb723o                        0x000055e3da5a363e <unavailable> + 5694\n5    libc.so.6                          0x00002ab48fc66460 __libc_start_main + 245\n6    tmpmkkb723o                        0x000055e3da5a3249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var stack = Stack<String>()\n    for item in items {\n        if item == \"(\" {\n            stack.push(item)\n        } else if item == \")\" {\n            stack.pop()\n        } else {\n            if stack.isEmpty() {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "/tmp/tmp002ccawj.swift:5:17: error: cannot find 'Stack' in scope\n    var stack = Stack<String>()\n                ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = items\n    var i = 0\n    while i < new_items.count {\n        if new_items[i] == \"(\" {\n            new_items.remove(at: i)\n            while new_items[i] != \")\" {\n                new_items.remove(at: i)\n            }\n            new_items.remove(at: i)\n        } else {\n            i += 1\n        }\n    }\n    return new_items.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpjnngj6i2/tmpjnngj6i2.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac6588cfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac6585c6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac6585c6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac6585c57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjnngj6i2                        0x0000556f129cc62e <unavailable> + 5678\n5    libc.so.6                          0x00002ac658abb460 __libc_start_main + 245\n6    tmpjnngj6i2                        0x0000556f129cc239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n        } else if item == \")\" {\n            skip = false\n        } else if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpgcaw13hg/tmpgcaw13hg.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b83f8210c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b83f7f07b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b83f7f07988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b83f7f067b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgcaw13hg                        0x00005647ca9dc63e <unavailable> + 5694\n5    libc.so.6                          0x00002b83f83fc460 __libc_start_main + 245\n6    tmpgcaw13hg                        0x00005647ca9dc249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp6ycp68lf/tmp6ycp68lf.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6f03a35c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6f0372cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6f0372c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6f0372b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6ycp68lf                        0x000055bc9712e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b6f03c21460 __libc_start_main + 245\n6    tmp6ycp68lf                        0x000055bc9712e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_string = \"\"\n    var open_parenthesis = 0\n    for item in items {\n        if item == \"(\" {\n            open_parenthesis += 1\n        } else if item == \")\" {\n            open_parenthesis -= 1\n        } else if open_parenthesis == 0 {\n            new_string += item\n        }\n    }\n    return new_string\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmp8bwht37_/tmp8bwht37_.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae9cac45c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae9ca93cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae9ca93c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae9ca93b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8bwht37_                        0x000055f1ec56c63e <unavailable> + 5694\n5    libc.so.6                          0x00002ae9cae31460 __libc_start_main + 245\n6    tmp8bwht37_                        0x000055f1ec56c249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var inParenthesis = false\n    for item in items {\n        if item == \"(\" {\n            inParenthesis = true\n        } else if item == \")\" {\n            inParenthesis = false\n        } else if !inParenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmp3oo0hf9q/tmp3oo0hf9q.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad238740c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad238437b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad238437988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad2384367b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3oo0hf9q                        0x000056163684063e <unavailable> + 5694\n5    libc.so.6                          0x00002ad23892c460 __libc_start_main + 245\n6    tmp3oo0hf9q                        0x0000561636840249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n            continue\n        }\n        if item == \")\" {\n            in_parenthesis = false\n            continue\n        }\n        if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmprvyugcih/tmprvyugcih.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b22fb897c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b22fb58eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b22fb58e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b22fb58d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprvyugcih                        0x0000557edd6cb63e <unavailable> + 5694\n5    libc.so.6                          0x00002b22fba83460 __libc_start_main + 245\n6    tmprvyugcih                        0x0000557edd6cb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = items\n    var index = 0\n    var count = 0\n    for item in items {\n        if item == \"(\" {\n            count += 1\n        } else if item == \")\" {\n            count -= 1\n        }\n        if count == 0 {\n            new_items.remove(at: index)\n            break\n        }\n        index += 1\n    }\n    return new_items.joined()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpr3i0bwuc/tmpr3i0bwuc.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7dde863c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7dde55ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7dde55a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7dde5597b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr3i0bwuc                        0x0000562c002c96ee <unavailable> + 5870\n5    libc.so.6                          0x00002b7ddea4f460 __libc_start_main + 245\n6    tmpr3i0bwuc                        0x0000562c002c92f9 <unavailable> + 4857\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_string = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            new_string += item\n        }\n    }\n    return new_string\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmp5yq4rmtn/tmp5yq4rmtn.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b77ff877c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77ff56eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77ff56e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77ff56d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5yq4rmtn                        0x0000557941a4b63e <unavailable> + 5694\n5    libc.so.6                          0x00002b77ffa63460 __libc_start_main + 245\n6    tmp5yq4rmtn                        0x0000557941a4b249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    \n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    \n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpxgoeefbf/tmpxgoeefbf.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5420f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac541deeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac541dee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac541ded7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxgoeefbf                        0x000056460571763e <unavailable> + 5694\n5    libc.so.6                          0x00002ac5422e3460 __libc_start_main + 245\n6    tmpxgoeefbf                        0x0000564605717249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = items\n    var i = 0\n    while i < new_items.count {\n        if new_items[i] == \"(\" {\n            var j = i + 1\n            while j < new_items.count && new_items[j] != \")\" {\n                new_items.remove(at: j)\n            }\n            new_items.remove(at: j)\n        }\n        i += 1\n    }\n    return new_items.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpab8do8t6/tmpab8do8t6.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afa222ecc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afa21fe3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afa21fe3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afa21fe27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpab8do8t6                        0x00005565df44f62e <unavailable> + 5678\n5    libc.so.6                          0x00002afa224d8460 __libc_start_main + 245\n6    tmpab8do8t6                        0x00005565df44f239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var output = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            output += item\n        }\n    }\n    return output\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpxmpg7uds/tmpxmpg7uds.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a15f7fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a15c76b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a15c76988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a15c757b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxmpg7uds                        0x0000557d661bd63e <unavailable> + 5694\n5    libc.so.6                          0x00002b5a1616b460 __libc_start_main + 245\n6    tmpxmpg7uds                        0x0000557d661bd249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    for item in items {\n        if item != \"(\" && item != \")\" {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpa8z8b8vr/tmpa8z8b8vr.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b88fb327c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b88fb01eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b88fb01e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b88fb01d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa8z8b8vr                        0x000056391d63f63e <unavailable> + 5694\n5    libc.so.6                          0x00002b88fb513460 __libc_start_main + 245\n6    tmpa8z8b8vr                        0x000056391d63f249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n            continue\n        }\n        if item == \")\" {\n            skip = false\n            continue\n        }\n        if skip {\n            continue\n        }\n        result += item\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpblrui0e3/tmpblrui0e3.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afdbcdd0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afdbcac7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afdbcac7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afdbcac67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpblrui0e3                        0x0000558f6640c63e <unavailable> + 5694\n5    libc.so.6                          0x00002afdbcfbc460 __libc_start_main + 245\n6    tmpblrui0e3                        0x0000558f6640c249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var output = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            output += item\n        }\n    }\n    return output\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmp9klsshmh/tmp9klsshmh.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afff8fc4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afff8cbbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afff8cbb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afff8cba7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9klsshmh                        0x00005625def5363e <unavailable> + 5694\n5    libc.so.6                          0x00002afff91b0460 __libc_start_main + 245\n6    tmp9klsshmh                        0x00005625def53249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    return items.joined(separator: \"\")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmp8d_xdad1/tmp8d_xdad1.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acb3f242c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acb3ef39b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acb3ef39988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acb3ef387b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8d_xdad1                        0x000056017c4c552e <unavailable> + 5422\n5    libc.so.6                          0x00002acb3f42e460 __libc_start_main + 245\n6    tmp8d_xdad1                        0x000056017c4c5139 <unavailable> + 4409\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    for item in items {\n        if item.contains(\"(\") {\n            result += item.components(separatedBy: \"(\").first!\n        } else {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "/tmp/tmpzfrprt4f.swift:7:28: error: value of type 'String' has no member 'components'\n            result += item.components(separatedBy: \"(\").first!\n                      ~~~~ ^~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = items\n    var index = 0\n    while index < new_items.count {\n        if new_items[index] == \"(\" {\n            new_items.remove(at: index)\n            while new_items[index] != \")\" {\n                new_items.remove(at: index)\n            }\n            new_items.remove(at: index)\n        }\n        index += 1\n    }\n    return new_items.joined(separator: \"\")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpgebu5foi/tmpgebu5foi.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6dcf99ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6dcf695b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6dcf695988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6dcf6947b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgebu5foi                        0x000055629e2f462e <unavailable> + 5678\n5    libc.so.6                          0x00002b6dcfb8a460 __libc_start_main + 245\n6    tmpgebu5foi                        0x000055629e2f4239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    \n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    \n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpxgoeefbf/tmpxgoeefbf.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5420f7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac541deeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac541dee988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac541ded7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxgoeefbf                        0x000056460571763e <unavailable> + 5694\n5    libc.so.6                          0x00002ac5422e3460 __libc_start_main + 245\n6    tmpxgoeefbf                        0x0000564605717249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    \n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    \n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmp35vprvsd/tmp35vprvsd.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b980a225c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9809f1cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9809f1c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9809f1b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp35vprvsd                        0x000055a675a3463e <unavailable> + 5694\n5    libc.so.6                          0x00002b980a411460 __libc_start_main + 245\n6    tmp35vprvsd                        0x000055a675a34249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var is_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            is_parenthesis = true\n        } else if item == \")\" {\n            is_parenthesis = false\n        } else if !is_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpzh5k_d2g/tmpzh5k_d2g.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b372ffbdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b372fcb4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b372fcb4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b372fcb37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzh5k_d2g                        0x000055a60d42d63e <unavailable> + 5694\n5    libc.so.6                          0x00002b37301a9460 __libc_start_main + 245\n6    tmpzh5k_d2g                        0x000055a60d42d249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parens = false\n    for item in items {\n        if item == \"(\" {\n            in_parens = true\n        } else if item == \")\" {\n            in_parens = false\n        } else if !in_parens {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpcrz2rnqq/tmpcrz2rnqq.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b999f34ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b999f045b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b999f045988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b999f0447b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcrz2rnqq                        0x00005555c2c1163e <unavailable> + 5694\n5    libc.so.6                          0x00002b999f53a460 __libc_start_main + 245\n6    tmpcrz2rnqq                        0x00005555c2c11249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var open = 0\n    for item in items {\n        if item == \"(\" {\n            open += 1\n        } else if item == \")\" {\n            open -= 1\n        } else if open == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpv7wxn1g5/tmpv7wxn1g5.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3025d60c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3025a57b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3025a57988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3025a567b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv7wxn1g5                        0x000055f61070e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b3025f4c460 __libc_start_main + 245\n6    tmpv7wxn1g5                        0x000055f61070e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_string = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            new_string += item\n        }\n    }\n    return new_string\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmp10yja1i2/tmp10yja1i2.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b76a403ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b76a3d31b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b76a3d31988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b76a3d307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp10yja1i2                        0x000055c23aec963e <unavailable> + 5694\n5    libc.so.6                          0x00002b76a4226460 __libc_start_main + 245\n6    tmp10yja1i2                        0x000055c23aec9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_paren = false\n    for item in items {\n        if item == \"(\" {\n            in_paren = true\n        } else if item == \")\" {\n            in_paren = false\n        } else if !in_paren {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp6ycp68lf/tmp6ycp68lf.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6f03a35c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6f0372cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6f0372c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6f0372b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6ycp68lf                        0x000055bc9712e63e <unavailable> + 5694\n5    libc.so.6                          0x00002b6f03c21460 __libc_start_main + 245\n6    tmp6ycp68lf                        0x000055bc9712e249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else {\n            if !in_parenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmp0dqh7w8o/tmp0dqh7w8o.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b13757ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b13754d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b13754d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b13754d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0dqh7w8o                        0x000055fd7aaa963e <unavailable> + 5694\n5    libc.so.6                          0x00002b13759c9460 __libc_start_main + 245\n6    tmp0dqh7w8o                        0x000055fd7aaa9249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var skip = false\n    for item in items {\n        if item == \"(\" {\n            skip = true\n            continue\n        }\n        if item == \")\" {\n            skip = false\n            continue\n        }\n        if !skip {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpwg5bypy_/tmpwg5bypy_.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b68dcdcfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b68dcac6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b68dcac6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b68dcac57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg5bypy_                        0x000055c3d54eb63e <unavailable> + 5694\n5    libc.so.6                          0x00002b68dcfbb460 __libc_start_main + 245\n6    tmpwg5bypy_                        0x000055c3d54eb249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var new_items = items\n    var index = 0\n    while index < new_items.count {\n        if new_items[index] == \"(\" {\n            var count = 1\n            var i = index + 1\n            while count > 0 {\n                if new_items[i] == \"(\" {\n                    count += 1\n                } else if new_items[i] == \")\" {\n                    count -= 1\n                }\n                i += 1\n            }\n            new_items.removeSubrange(index...i-1)\n        }\n        index += 1\n    }\n    return new_items.joined()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmp0tdfsvpg/tmp0tdfsvpg.swift:38: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba608de8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba608adfb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba608adf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba608ade7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0tdfsvpg                        0x000055bd8bf0975e <unavailable> + 5982\n5    libc.so.6                          0x00002ba608fd4460 __libc_start_main + 245\n6    tmp0tdfsvpg                        0x000055bd8bf09369 <unavailable> + 4969\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    for item in items {\n        if item != \"(\" && item != \")\" {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123220,
      "stdout": "",
      "stderr": "tmpa8z8b8vr/tmpa8z8b8vr.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b88fb327c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b88fb01eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b88fb01e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b88fb01d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa8z8b8vr                        0x000056391d63f63e <unavailable> + 5694\n5    libc.so.6                          0x00002b88fb513460 __libc_start_main + 245\n6    tmpa8z8b8vr                        0x000056391d63f249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var parenthesis_counter = 0\n    for item in items {\n        if item == \"(\" {\n            parenthesis_counter += 1\n        } else if item == \")\" {\n            parenthesis_counter -= 1\n        } else if parenthesis_counter == 0 {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmpefj2xt11/tmpefj2xt11.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adbe5197c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adbe4e8eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adbe4e8e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adbe4e8d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpefj2xt11                        0x000055904bb6d63e <unavailable> + 5694\n5    libc.so.6                          0x00002adbe5383460 __libc_start_main + 245\n6    tmpefj2xt11                        0x000055904bb6d249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var stack = Stack<Character>()\n    for item in items {\n        for char in item {\n            if char == \"(\" {\n                stack.push(char)\n            } else if char == \")\" {\n                stack.pop()\n            } else if stack.isEmpty {\n                result.append(char)\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "/tmp/tmp__tmm4il.swift:5:17: error: cannot find 'Stack' in scope\n    var stack = Stack<Character>()\n                ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var inParenthesis = false\n    for item in items {\n        if item == \"(\" {\n            inParenthesis = true\n        } else if item == \")\" {\n            inParenthesis = false\n        } else {\n            if !inParenthesis {\n                result += item\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1666123221,
      "stdout": "",
      "stderr": "tmppeoj_u4j/tmppeoj_u4j.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7761a16c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b776170db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b776170d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b776170c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppeoj_u4j                        0x000055f8699ef63e <unavailable> + 5694\n5    libc.so.6                          0x00002b7761c02460 __libc_start_main + 245\n6    tmppeoj_u4j                        0x000055f8699ef249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var in_parenthesis = false\n    for item in items {\n        if item == \"(\" {\n            in_parenthesis = true\n        } else if item == \")\" {\n            in_parenthesis = false\n        } else if !in_parenthesis {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpb4_qnpgt/tmpb4_qnpgt.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba23022cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba22ff23b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba22ff23988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba22ff227b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb4_qnpgt                        0x00005641ee3a563e <unavailable> + 5694\n5    libc.so.6                          0x00002ba230418460 __libc_start_main + 245\n6    tmpb4_qnpgt                        0x00005641ee3a5249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to remove the parenthesis and what is inbetween them from a string.\nfunc remove_parenthesis(items: [String]) -> String {\n    var result = \"\"\n    var inParen = false\n    for item in items {\n        if item == \"(\" {\n            inParen = true\n        } else if item == \")\" {\n            inParen = false\n        } else if !inParen {\n            result += item\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_parenthesis(items: [\"python (chrome)\"]) == \"python\")\nassert(remove_parenthesis(items: [\"string(.abc)\"]) == \"string\")\nassert(remove_parenthesis(items: [\"alpha(num)\"]) == \"alpha\")",
      "timestamp": 1665510052,
      "stdout": "",
      "stderr": "tmpoq9_gctj/tmpoq9_gctj.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba9c82adc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba9c7fa4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba9c7fa4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba9c7fa37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpoq9_gctj                        0x000055c8fb5c663e <unavailable> + 5694\n5    libc.so.6                          0x00002ba9c8499460 __libc_start_main + 245\n6    tmpoq9_gctj                        0x000055c8fb5c6249 <unavailable> + 4681\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
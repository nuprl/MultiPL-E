name: HumanEval_55_fib
language: py
results:
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo8yqrw_d.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpo8yqrw_d.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpo8yqrw_d.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpo8yqrw_d.py\", line 10, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpo8yqrw_d.py\", line 10,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpo8yqrw_d.py\",\
    \ line 10, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 994 more times]\nRecursionError: maximum recursion depth exceeded\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    f0, f1 = 0, 1\n    for i in range(n - 1):\n       \
    \ f0, f1 = f1, f0 + f1\n    return f1\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while n > 0:\n        a, b = b, a + b\n        n -= 1\n\
    \    return a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n   \
    \ assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fib_list = [0, 1]\n    while len(fib_list) < n + 1:\n        fib_list.append(fib_list[-1]\
    \ + fib_list[-2])\n    return fib_list[n]\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_iter(n, 1, 0)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppad2u52d.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppad2u52d.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmppad2u52d.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmppad2u52d.py\", line 10, in fib\n\
    \    return fib_iter(n, 1, 0)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"n < 0\")\n    if n in (0, 1):\n\
    \        return n\n    x, y = 0, 1\n    for _ in range(n - 1):\n        x, y =\
    \ y, x + y\n    return y\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if\
    \ n > 2:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n   \
    \ assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqqp22xau.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqqp22xau.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpqqp22xau.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpqqp22xau.py\", line 12, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpqqp22xau.py\", line 12,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpqqp22xau.py\",\
    \ line 12, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 993 more times]\n  File \"/tmp/tmpqqp22xau.py\", line 10, in fib\n    if n ==\
    \ 1:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fibonacci(n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph8hxcyl1.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmph8hxcyl1.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmph8hxcyl1.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmph8hxcyl1.py\", line 10, in fib\n\
    \    return fibonacci(n)\nNameError: name 'fibonacci' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n <= 2:\n        return 1\n    return fib(n - 1)\
    \ + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n  \
    \  assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    ...\n    # it's better to return None if the n is not a positive number\n\
    \    # not just return nothing like `return`, since it's not a proper return.\n\
    \    # So the None will cause `TypeError` when it's used in a arithimetic operation.\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqmjzsrwj.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpqmjzsrwj.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpqmjzsrwj.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        a, b = 1, 1\n       \
    \ for i in range(3, n + 1):\n            a, b = b, a + b\n        return b\n\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    fib_l = [0, 1] + [0] * (n - 1)\n    for i in range(2,\
    \ n + 1):\n        fib_l[i] = fib_l[i - 1] + fib_l[i - 2]\n    return fib_l[n]\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\nprint(fib(10))\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: "55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5cagd04k.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp5cagd04k.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp5cagd04k.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp5cagd04k.py\", line 12, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmp5cagd04k.py\", line 12,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmp5cagd04k.py\",\
    \ line 12, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 993 more times]\n  File \"/tmp/tmp5cagd04k.py\", line 10, in fib\n    if n ==\
    \ 1:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    def fib_help(n: int, curr: int, prev: int) -> int:\n        if n == 0:\n\
    \            return prev\n        return fib_help(n - 1, curr + prev, curr)\n\
    \    return fib_help(n, 1, 0)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError(\"Fibonacci number is not defined\
    \ for n < 1\")\n    if n == 1 or n == 2:\n        return 1\n    n_1, n_2 = 1,\
    \ 1\n    for _ in range(n - 2):\n        n_1, n_2 = n_1 + n_2, n_1\n    return\
    \ n_1\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\n@count_calls\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpavdlf3tu.py\", line\
    \ 18, in <module>\n    @count_calls\nNameError: name 'count_calls' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    return n if n <= 2 else fib(n - 1) + fib(n - 2)\n\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp776ohn30.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp776ohn30.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp776ohn30.py\", line 15, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n < 1:\n        return 0\n    else:\n\
    \        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    # Insert your code here\n    a, b = 0,\
    \ 1\n    for i in range(2, n+1):\n        a, b = b, a + b\n    return b\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n == 1:\n        return 1\n    n_minus_2 = 1\n \
    \   n_minus_1 = 1\n    for _ in range(3, n + 1):\n        res = n_minus_2 + n_minus_1\n\
    \        n_minus_2 = n_minus_1\n        n_minus_1 = res\n    return res\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    a, b = 0, 1\n    for _ in range(n):\n        a, b =\
    \ b, a + b\n    return a\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum(fib_seq(n))\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmwdynglr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmwdynglr.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpmwdynglr.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpmwdynglr.py\", line 10, in fib\n\
    \    return sum(fib_seq(n))\nNameError: name 'fib_seq' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a = 0\n    b = 1\n    while n > 0:\n        a, b = b, a + b\n        n\
    \ -= 1\n    return a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcr0jb87f.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpcr0jb87f.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpcr0jb87f.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpcr0jb87f.py\", line 10, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"parameter n must be a non-negative\
    \ integer\")\n    if n in (0, 1):\n        return n\n    fib_prev, fib_curr =\
    \ 0, 1\n    for _ in range(n - 1):\n        fib_prev, fib_curr = fib_curr, fib_prev\
    \ + fib_curr\n    return fib_curr\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # make use of memoization\n    memo = {0: 0, 1: 1}\n    return fib_helper(n,\
    \ memo)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp728jxmzl.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp728jxmzl.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp728jxmzl.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp728jxmzl.py\", line 12, in fib\n\
    \    return fib_helper(n, memo)\nNameError: name 'fib_helper' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n   \
    \ assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fib1 = 0\n    fib2 = 1\n    if n == 1:\n        return fib1\n    elif\
    \ n == 2:\n        return fib2\n    else:\n        while n > 2:\n            fib_sum\
    \ = fib1 + fib2\n            fib1 = fib2\n            fib2 = fib_sum\n       \
    \     n -= 1\n        return fib_sum\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvun2h2v3.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpvun2h2v3.py\", line 33,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpvun2h2v3.py\", line 26, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n == 1:\n        return 1\n    elif n == 2:\n  \
    \      return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # Simple check\n    if n < 1:\n        raise ValueError(\"Bad value\"\
    )\n    # Initial values\n    a, b = 0, 1\n    # Loop from 2 to n (we already have\
    \ a=0 and b=1)\n    for _ in range(2, n + 1):\n        a, b = b, a + b\n    return\
    \ b\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return 1 if n < 3 else fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_iterative(n)\n    # return fib_recursive(n)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprkj5d7vz.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmprkj5d7vz.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmprkj5d7vz.py\", line 15, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmprkj5d7vz.py\", line 10, in fib\n\
    \    return fib_iterative(n)\nNameError: name 'fib_iterative' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    f_last, f_next = 0, 1\n    for _ in range(n - 1):\n\
    \        f_last, f_next = f_next, f_last + f_next\n    return f_next\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n == 1:\n        return 1\n    else:\n        return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppn9mg48_.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmppn9mg48_.py\", line 25,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmppn9mg48_.py\", line 18, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmppn9mg48_.py\", line 14, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmppn9mg48_.py\", line 14,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmppn9mg48_.py\",\
    \ line 14, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 6 more times]\n  File \"/tmp/tmppn9mg48_.py\", line 10, in fib\n    assert n\
    \ >= 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    k = 0\n    a = 0\n    b = 1\n    while k < n:\n        a, b = b, a + b\n\
    \        k += 1\n    return a\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # Initialize the history of fibonacci numbers\n    fib_hist = [0, 1]\n\
    \    for i in range(2, n+1):\n        next_fib = fib_hist[i-1] + fib_hist[i-2]\n\
    \        fib_hist.append(next_fib)\n    return fib_hist[n]\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"n should be >= 0\")\n    return\
    \ fib_iter(n, 0, 1)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzo9v84yh.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpzo9v84yh.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpzo9v84yh.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpzo9v84yh.py\", line 12, in fib\n\
    \    return fib_iter(n, 0, 1)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum_series(n)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiudeg45a.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpiudeg45a.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpiudeg45a.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpiudeg45a.py\", line 10, in fib\n\
    \    return sum_series(n)\nNameError: name 'sum_series' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while n > 0:\n        a, b = b, a + b\n        n -= 1\n\
    \    return a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    first, second = 0, 1\n    for _ in range(n - 1):\n\
    \        first, second = second, first + second\n    return second\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"Input must be positive\")\n    elif\
    \ n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n \
    \       return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError\n    elif n < 2:\n        return n\n\
    \    else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return _fib_iterative(n)\n    # return _fib_recursive(n)\n    # return\
    \ _fib_recursive_bad(n)\n\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeqelfuuy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpeqelfuuy.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpeqelfuuy.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpeqelfuuy.py\", line 10, in fib\n\
    \    return _fib_iterative(n)\nNameError: name '_fib_iterative' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return FIB_DICT[n]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptz9pxtpz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmptz9pxtpz.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmptz9pxtpz.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmptz9pxtpz.py\", line 10, in fib\n\
    \    return FIB_DICT[n]\nNameError: name 'FIB_DICT' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fib_nums = [0, 1]\n    for i in range(2, n + 1):\n        fib_nums.append(fib_nums[i\
    \ - 1] + fib_nums[i - 2])\n    return fib_nums[n]\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError\n    if n in (1, 2):\n        return\
    \ 1\n    return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fibs = [0, 1]\n    while len(fibs) < n + 1:\n        fibs.append(fibs[-1]\
    \ + fibs[-2])\n    return fibs[n]\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n == 1:\n        return 1\n    first = 1\n    second\
    \ = 1\n    counter = 2\n    while counter < n:\n        third = first + second\n\
    \        first = second\n        second = third\n        counter += 1\n    return\
    \ second\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\nprint(fib(8))\nprint(fib(4))\n\
    print(fib(10))\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: "21\n3\n55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    else:\n\
    \        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while a < n:\n        print(a, end=' ')\n        a, b\
    \ = b, a+b\n    print()\n    return b\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: "0 1 1 2 3 5 8 \n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpntm5osw5.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpntm5osw5.py\", line 26,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpntm5osw5.py\", line 19, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib2(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9mk6sza9.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9mk6sza9.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp9mk6sza9.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp9mk6sza9.py\", line 10, in fib\n\
    \    return fib2(n)[0]\nNameError: name 'fib2' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    print(fib(10))\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: "55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx5rdk_se.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpx5rdk_se.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpx5rdk_se.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpx5rdk_se.py\", line 12, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpx5rdk_se.py\", line 12,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpx5rdk_se.py\",\
    \ line 12, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 993 more times]\n  File \"/tmp/tmpx5rdk_se.py\", line 10, in fib\n    if n ==\
    \ 1:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxq308tm0.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpxq308tm0.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpxq308tm0.py\", line 17, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpxq308tm0.py\", line 13, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpxq308tm0.py\", line 13,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpxq308tm0.py\",\
    \ line 13, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 993 more times]\n  File \"/tmp/tmpxq308tm0.py\", line 10, in fib\n    if n ==\
    \ 1:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    fib_n_1, fib_n_2 = 1, 0\n    for _ in range(n - 1):\n\
    \        fib_n_1, fib_n_2 = fib_n_1 + fib_n_2, fib_n_1\n    return fib_n_1\n\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum_series(n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0mv7emte.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp0mv7emte.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp0mv7emte.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp0mv7emte.py\", line 10, in fib\n\
    \    return sum_series(n)\nNameError: name 'sum_series' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    f0, f1 = 0, 1\n    for i in range(n - 1):\n       \
    \ f0, f1 = f1, f0 + f1\n    return f1\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\nprint(fib(10))\nprint(fib(1))\nprint(fib(8))\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: "55\n1\n21\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\n@given(st.integers(min_value=0))\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd9tki4gj.py\", line\
    \ 16, in <module>\n    @given(st.integers(min_value=0))\nNameError: name 'given'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    else:\n\
    \        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    prev_fib, curr_fib = 0, 1\n    for _ in range(n - 1):\n\
    \        prev_fib, curr_fib = curr_fib, prev_fib + curr_fib\n    return curr_fib\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # TODO: Get the n-th number from the sequence and return it\n    if n\
    \ == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n   \
    \     return fib(n-1) + fib(n-2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError\n    if n in (0, 1):\n        return\
    \ n\n    return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n - 1):\n        a, b = b, a + b\n   \
    \ return b\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    a, b = 0, 1\n    for i in range(2, n+1):\n\
    \        a, b = b, a + b\n    return b\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while a < n:\n        a, b = b, a + b\n    return b\n\
    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8t51cyfb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8t51cyfb.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp8t51cyfb.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return _fib(n, 1, 0)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkdh9pgzf.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpkdh9pgzf.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpkdh9pgzf.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpkdh9pgzf.py\", line 10, in fib\n\
    \    return _fib(n, 1, 0)\nNameError: name '_fib' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    return n * fib(n - 1)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgooe6au4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpgooe6au4.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpgooe6au4.py\", line 16, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    first, second = 0, 1\n    for _ in range(n\
    \ - 1):\n        first, second = second, first + second\n    return second\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"n should be positive\")\n    if\
    \ n in (0, 1):\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError(\"n must be positive\")\n    return\
    \ _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptsx2vx8h.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptsx2vx8h.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmptsx2vx8h.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmptsx2vx8h.py\", line 12, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n > 1:\n        return fib(n -\
    \ 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc5xkbhff.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpc5xkbhff.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpc5xkbhff.py\", line 17, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpc5xkbhff.py\", line 13, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpc5xkbhff.py\", line 13,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpc5xkbhff.py\",\
    \ line 13, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 6 more times]\nTypeError: unsupported operand type(s) for +: 'int' and 'NoneType'\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_iter(n, 1, 0)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgasniy5j.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpgasniy5j.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpgasniy5j.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpgasniy5j.py\", line 10, in fib\n\
    \    return fib_iter(n, 1, 0)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"n should be positive.\")\n    if\
    \ n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return fib(n\
    \ - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"n must be nonnegative\")\n    return\
    \ _fib(n)[0]\n\n\n@lru_cache(maxsize=None)\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem2puv5z.py\", line\
    \ 15, in <module>\n    @lru_cache(maxsize=None)\nNameError: name 'lru_cache' is\
    \ not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n \n \n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert(n > 0)\n    return fib_rec(n)\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpenmzl_uq.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpenmzl_uq.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpenmzl_uq.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpenmzl_uq.py\", line 11, in fib\n\
    \    return fib_rec(n)\nNameError: name 'fib_rec' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    i, j = 0, 1\n    while n > 0:\n        i, j = j, i + j\n        n -= 1\n\
    \    return i\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n   \
    \ assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while n > 0:\n        a, b = b, a + b\n        n -= 1\n\
    \    return a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n    \ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError(f\"n must be greater than 0, but it's\
    \ {n}\")\n    if n == 1 or n == 2:\n        return 1\n    return fib(n - 1) +\
    \ fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return _fib(n, 0, 1)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa5cmbt90.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpa5cmbt90.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpa5cmbt90.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpa5cmbt90.py\", line 10, in fib\n\
    \    return _fib(n, 0, 1)\nNameError: name '_fib' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n   \
    \ assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum_series(n)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4cslh0fk.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp4cslh0fk.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp4cslh0fk.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp4cslh0fk.py\", line 10, in fib\n\
    \    return sum_series(n)\nNameError: name 'sum_series' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    a, b = 0, 1\n    for i in range(2, n\
    \ + 1):\n        a, b = b, a + b\n    return b\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError(\"n must be a natural number\")\n\
    \    elif n == 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgad5rj4h.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpgad5rj4h.py\", line 26,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpgad5rj4h.py\", line 19, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpgad5rj4h.py\", line 15, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpgad5rj4h.py\", line 15,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpgad5rj4h.py\",\
    \ line 15, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 6 more times]\n  File \"/tmp/tmpgad5rj4h.py\", line 11, in fib\n    raise ValueError(\"\
    n must be a natural number\")\nValueError: n must be a natural number\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n == 1:\n        return 1\n    elif n == 2:\n  \
    \      return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpin599zon.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpin599zon.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpin599zon.py\", line 15, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpin599zon.py\", line 11, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmcukicss.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpmcukicss.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpmcukicss.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpmcukicss.py\", line 10, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fibs[n]\n\n\nprint(fib(50))\nprint(fib(100))\n\n\"\"\"\n100th fibonacci\
    \ number:\n218922995834555169026\n\"\"\"\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgwa3jj28.py\", line\
    \ 13, in <module>\n    print(fib(50))\n  File \"/tmp/tmpgwa3jj28.py\", line 10,\
    \ in fib\n    return fibs[n]\nNameError: name 'fibs' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fib_before, fib_after = 0, 1\n    for _ in range(n):\n        fib_before,\
    \ fib_after = fib_after, fib_before + fib_after\n    return fib_before\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\nfib(10)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n   \
    \ assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_recur(n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo4fsm4kg.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpo4fsm4kg.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpo4fsm4kg.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpo4fsm4kg.py\", line 10, in fib\n\
    \    return fib_recur(n)\nNameError: name 'fib_recur' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fibonacci(n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5me9bubu.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5me9bubu.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp5me9bubu.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp5me9bubu.py\", line 10, in fib\n\
    \    return fibonacci(n)\nNameError: name 'fibonacci' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    fib_nums = [0, 1]\n    if n <= 2:\n        return fib_nums[n\
    \ - 1]\n    while n > 2:\n        n -= 1\n        fib_nums = [fib_nums[1], sum(fib_nums)]\n\
    \    return fib_nums[1]\n\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp50kwoqzq.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp50kwoqzq.py\", line 28,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp50kwoqzq.py\", line 21, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise Exception(\"Incorrect n\")\n    n1 = 0\n    n2\
    \ = 1\n    i = 1\n    while i < n:\n        n1, n2 = n2, n1 + n2\n        i +=\
    \ 1\n    return n2\n\nprint(fib(10))\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: "55\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum_series(n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzkpzmilc.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpzkpzmilc.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpzkpzmilc.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpzkpzmilc.py\", line 10, in fib\n\
    \    return sum_series(n)\nNameError: name 'sum_series' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a = b = 1\n    for i in range(n - 1):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_tuple(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9v0w6akr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9v0w6akr.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp9v0w6akr.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp9v0w6akr.py\", line 10, in fib\n\
    \    return fib_tuple(n)[0]\nNameError: name 'fib_tuple' is not defined\n"
  exit_code: -1
  status: Exception

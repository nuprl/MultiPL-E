name: HumanEval_13_greatest_common_divisor
language: py
results:
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n    if\
    \ a > b:\n        return greatest_common_divisor(a - b, b)\n    return greatest_common_divisor(a,\
    \ b - a)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return max(a, b)\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ a if b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    r\
    \ = 1\n    a = abs(a)\n    b = abs(b)\n    while r:\n        r = a % b\n     \
    \   a = b\n        b = r\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\ndef check(candidate):\n  \
    \  assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ iterative version:\n    # while a != 0 and b != 0:\n    #     if a > b:\n  \
    \  #         a %= b\n    #     else:\n    #         b %= a\n    # return a + b\n\
    \n    # recursive version:\n    if a == 0 or b == 0:\n        return a + b\n \
    \   if a > b:\n        return greatest_common_divisor(a % b, b)\n    else:\n \
    \       return greatest_common_divisor(a, b % a)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert\
    \ isinstance(a, int) and isinstance(b, int) and a >= 0 and b >= 0, \"wrong input\"\
    \n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif\
    \ a >= b:\n        return greatest_common_divisor(a % b, b)\n    else:\n     \
    \   return greatest_common_divisor(a, b % a)\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ a if b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    for\
    \ divisor in range(min(a, b), 0, -1):\n        if a % divisor == 0 and b % divisor\
    \ == 0:\n            return divisor\n    return 1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ TODO: Implement this function\n    if (a == 0 or b == 0):\n        return 0\n\
    \    if (a == b):\n        return a\n    if (a > b):\n        return greatest_common_divisor(a-b,\
    \ b)\n    return greatest_common_divisor(a, b-a)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = sorted([a, b])\n    if a == 0:\n        return b\n    return greatest_common_divisor(b\
    \ % a, a)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a >=\
    \ b:\n        return greatest_common_divisor(a % b, b)\n    else:\n        return\
    \ greatest_common_divisor(a, b % a)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ b if a % b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\ndef check(candidate):\n  \
    \  assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ a if b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ Write your code here\n\n\ndef check(candidate):\n    assert candidate(3, 7)\
    \ == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n\
    \    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzsx4wd_1.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmpzsx4wd_1.py\", line 18,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmpzsx4wd_1.py\"\
    , line 12, in check\n    assert candidate(3, 7) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ TODO replace pass statement with your code\n    if a == 0 or b == 0:\n     \
    \   return a or b\n    while a != b:\n        if a > b:\n            a = a - b\n\
    \        else:\n            b = b - a\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ a if b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert\
    \ a > 0 and b > 0, 'Arguments must be positive numbers'\n    if a == b:\n    \
    \    return a\n    if a > b:\n        a, b = b, a\n    for i in range(a, 0, -1):\n\
    \        if a % i == 0 and b % i == 0:\n            return i\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return 0\n    if b == 0:\n        return a\n    return\
    \ greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdytffgt3.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpdytffgt3.py\", line 22,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmpdytffgt3.py\"\
    , line 16, in check\n    assert candidate(3, 7) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a\
    \ = abs(a)\n    b = abs(b)\n    while a:\n        a, b = b % a, a\n    return\
    \ b\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert\
    \ a >= 0 and b >= 0\n    for x in range(min(a, b), 0, -1):\n        if a % x ==\
    \ 0 and b % x == 0:\n            return x\n    return 1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ abs(a * b) / least_common_multiple(a, b)\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2xywjloy.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp2xywjloy.py\", line 17,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmp2xywjloy.py\"\
    , line 11, in check\n    assert candidate(3, 7) == 1\n  File \"/tmp/tmp2xywjloy.py\"\
    , line 8, in greatest_common_divisor\n    return abs(a * b) / least_common_multiple(a,\
    \ b)\nNameError: name 'least_common_multiple' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ Greatest common divisor is always positive\n    a = abs(a)\n    b = abs(b)\n\
    \    if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n\
    \    while a != b:\n        if a > b:\n            a -= b\n        else:\n   \
    \         b -= a\n    return a\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return 0\n    if a < 0:\n        a = -a\n    if b\
    \ < 0:\n        b = -b\n    a, b = max(a, b), min(a, b)\n    while b:\n      \
    \  a, b = b, a % b\n    return a\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = max(a, b), min(a, b)\n    while b != 0:\n        a, b = b, a % b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd\
    \ = 1\n    for i in range(1, a + 1):\n        if a % i == 0 and b % i == 0:\n\
    \            gcd = i\n    return gcd\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a < b:\n        a, b = b, a\n    while a % b:\n        a, b = b, a % b\n   \
    \ return b\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ b if a % b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a ==\
    \ b:\n        return a\n    elif a > b:\n        return greatest_common_divisor(a\
    \ % b, b)\n    else:\n        return greatest_common_divisor(a, b % a)\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b > a:\n        a, b = b, a\n    if b == 0:\n        return a\n    return greatest_common_divisor(b,\
    \ a % b)\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    for\
    \ x in range(min(a, b), 0, -1):\n        if a % x == 0 and b % x == 0:\n     \
    \       return x\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b > a:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n  \
    \  return a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a < b:\n        a, b = b, a\n    if a == 0:\n        return b\n    if b == 0:\n\
    \        return a\n    return greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n  \
    \  return a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = sorted([a, b])\n    for i in range(a, 0, -1):\n        if a % i == 0 and\
    \ b % i == 0:\n            return i\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a > b:\n        m = a\n        n = b\n    else:\n        m = b\n        n =\
    \ a\n    if m == n:\n        return m\n    else:\n        for i in range(n, 0,\
    \ -1):\n            if n % i == 0 and m % i == 0:\n                return i\n\n\
    \ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a % b != 0:\n        a, b = b, a % b\n    return b\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert\
    \ a > 0 and b > 0, \"a and b should be positive integers\"\n    if a % b == 0:\n\
    \        return b\n    elif b % a == 0:\n        return a\n    else:\n       \
    \ for i in range(1, min(a, b) + 1):\n            if a % i == 0 and b % i == 0:\n\
    \                return i\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4oygm2o8.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp4oygm2o8.py\", line 26,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmp4oygm2o8.py\"\
    , line 21, in check\n    assert candidate(10, 15) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    min_number\
    \ = min(a, b)\n    for i in range(min_number, 0, -1):\n        if a % i == 0 and\
    \ b % i == 0:\n            return i\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    pass\n\
    \n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxmx6t8ia.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmpxmx6t8ia.py\", line 18,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmpxmx6t8ia.py\"\
    , line 12, in check\n    assert candidate(3, 7) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return a + b\n    if a >= b:\n        return greatest_common_divisor(a\
    \ % b, b)\n    return greatest_common_divisor(a, b % a)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        remainder = a % b\n        a = b\n        b = remainder\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert\
    \ a >= 0 and b >= 0 and a + b > 0\n\n    def euclidean_algorithm(a: int, b: int)\
    \ -> int:\n        while b:\n            a, b = b, a % b\n        return a\n\n\
    \    return euclidean_algorithm(a, b)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = sorted([a, b])\n    if a == 0:\n        return b\n    return greatest_common_divisor(b\
    \ % a, a)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    for\
    \ d in range(min(a, b), 0, -1):\n        if a % d == 0 and b % d == 0:\n     \
    \       return d\n    return 1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n    if\
    \ a > b:\n        return greatest_common_divisor(a - b, b)\n    return greatest_common_divisor(a,\
    \ b - a)\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ fractions.gcd(a, b)\n\ndef check(candidate):\n    assert candidate(3, 7) ==\
    \ 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n  \
    \  assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr0553f_i.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpr0553f_i.py\", line 17,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmpr0553f_i.py\"\
    , line 11, in check\n    assert candidate(3, 7) == 1\n  File \"/tmp/tmpr0553f_i.py\"\
    , line 8, in greatest_common_divisor\n    return fractions.gcd(a, b)\nNameError:\
    \ name 'fractions' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = max(a, b), min(a, b)\n    while b != 0:\n        a, b = b, a % b\n    return\
    \ a\n\nprint(\"Greatest common divisor of 3 and 5:\", greatest_common_divisor(3,\
    \ 5))\nprint(\"Greatest common divisor of 25 and 15:\", greatest_common_divisor(25,\
    \ 15))\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: "Greatest common divisor of 3 and 5: 1\nGreatest common divisor of 25 and\
    \ 15: 5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a ==\
    \ b:\n        return a\n    elif a > b:\n        return greatest_common_divisor(a\
    \ - b, b)\n    else:\n        return greatest_common_divisor(a, b - a)\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a > b:\n        a, b = b, a\n    c = a\n    while c > 0:\n        if a % c ==\
    \ 0 and b % c == 0:\n            return c\n        c -= 1\n    return 1\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    else:\n        return greatest_common_divisor(b\
    \ % a, a)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    return greatest_common_divisor(b % a, a)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert\
    \ a > 0 and b > 0, \"Arguments must be positive\"\n    for i in range(min(a, b),\
    \ 0, -1):\n        if a % i == 0 and b % i == 0:\n            return i\n    return\
    \ 1\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    for\
    \ d in range(min(a, b), 0, -1):\n        if a % d == 0 and b % d == 0:\n     \
    \       return d\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = abs(a), abs(b)\n    if a < b:\n        a, b = b, a\n    while b != 0:\n\
    \        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert\
    \ a > 0 and b > 0\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\
    \ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = max(a, b), min(a, b)\n    while b != 0:\n        a, b = b, a % b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = sorted([a, b])\n    if b % a == 0:\n        return a\n    for d in range(a\
    \ // 2, 0, -1):\n        if a % d == 0 and b % d == 0:\n            return d\n\
    \    return 1\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n  \
    \  assert candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert\
    \ candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a < b:\n        a, b = b, a\n    while b:\n        a, b = b, a % b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a > b:\n        a, b = b, a\n    for i in range(a, 0, -1):\n        if a % i\
    \ == 0 and b % i == 0:\n            return i\n    return 1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ Note the goal is to minimize the number of computation.\n    #\n    # To do\
    \ so, we use a nice property of gcd: if a divides b, then gcd(a, b) = a.\n   \
    \ # This allows us to reduce the number of computation by a factor of two.\n \
    \   while b:\n        if a > b:\n            a = a % b\n        else:\n      \
    \      b = b % a\n    return a\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn26qqm5m.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpn26qqm5m.py\", line 27,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmpn26qqm5m.py\"\
    , line 21, in check\n    assert candidate(3, 7) == 1\n  File \"/tmp/tmpn26qqm5m.py\"\
    , line 16, in greatest_common_divisor\n    b = b % a\nZeroDivisionError: integer\
    \ division or modulo by zero\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        temp = a % b\n        a = b\n        b = temp\n    return a\n\
    \n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return 1\n    a = abs(a)\n    b = abs(b)\n    if\
    \ a == b:\n        return a\n    if a > b:\n        return greatest_common_divisor(a\
    \ - b, b)\n    return greatest_common_divisor(a, b - a)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    return greatest_common_divisor(b % a, a)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd\
    \ = 1\n    for x in range(1, min(a, b) + 1):\n        if a % x == 0 and b % x\
    \ == 0:\n            gcd = x\n    return gcd\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        (a, b) = (b, a % b)\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = abs(a), abs(b)\n    if a == 0:\n        return b\n    elif b == 0:\n   \
    \     return a\n    elif a == b:\n        return a\n    elif a == 1 or b == 1:\n\
    \        return 1\n    elif a % 2 == 0 and b % 2 == 0:\n        return 2 * greatest_common_divisor(a\
    \ // 2, b // 2)\n    elif a % 2 == 0:\n        return greatest_common_divisor(a\
    \ // 2, b)\n    elif b % 2 == 0:\n        return greatest_common_divisor(a, b\
    \ // 2)\n    elif a > b:\n        return greatest_common_divisor((a - b) // 2,\
    \ b)\n    else:\n        return greatest_common_divisor(a, (b - a) // 2)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert\
    \ a > 0 and b > 0, \"Both numbers should be positive\"\n    if a > b:\n      \
    \  a, b = b, a\n    if a == 0:\n        return b\n    else:\n        return greatest_common_divisor(b\
    \ % a, a)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyenlk40r.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpyenlk40r.py\", line 24,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmpyenlk40r.py\"\
    , line 18, in check\n    assert candidate(3, 7) == 1\n  File \"/tmp/tmpyenlk40r.py\"\
    , line 14, in greatest_common_divisor\n    return greatest_common_divisor(b %\
    \ a, a)\n  File \"/tmp/tmpyenlk40r.py\", line 14, in greatest_common_divisor\n\
    \    return greatest_common_divisor(b % a, a)\n  File \"/tmp/tmpyenlk40r.py\"\
    , line 8, in greatest_common_divisor\n    assert a > 0 and b > 0, \"Both numbers\
    \ should be positive\"\nAssertionError: Both numbers should be positive\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ a if b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ compute greatest common divisor with Euclidean algorithm\n    while a != 0 and\
    \ b != 0:\n        if a > b:\n            a = a % b\n        else:\n         \
    \   b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\ndef check(candidate):\n  \
    \  assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ gcd(a, b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmparm1fl9l.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmparm1fl9l.py\", line 18,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmparm1fl9l.py\"\
    , line 12, in check\n    assert candidate(3, 7) == 1\n  File \"/tmp/tmparm1fl9l.py\"\
    , line 8, in greatest_common_divisor\n    return gcd(a, b)\nNameError: name 'gcd'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a ==\
    \ b:\n        return a\n    elif a > b:\n        return greatest_common_divisor(a\
    \ - b, b)\n    else:\n        return greatest_common_divisor(a, b - a)\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ TODO: Add your function body\n    if a == 0 or b == 0:\n        return 0\n \
    \   if a < b:\n        a, b = b, a\n    while b != 0:\n        a, b = b, a % b\n\
    \    return a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n  \
    \  assert candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert\
    \ candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert\
    \ a > 0 and b > 0, 'both arguments must be positive numbers'\n    smaller = min(a,\
    \ b)\n    bigger = max(a, b)\n    while smaller != 0:\n        (smaller, bigger)\
    \ = (bigger % smaller, smaller)\n    return bigger\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ abs(a * b) // gcd(a, b) if a and b else 0\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz1g2zvwz.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmpz1g2zvwz.py\", line 18,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmpz1g2zvwz.py\"\
    , line 12, in check\n    assert candidate(3, 7) == 1\n  File \"/tmp/tmpz1g2zvwz.py\"\
    , line 8, in greatest_common_divisor\n    return abs(a * b) // gcd(a, b) if a\
    \ and b else 0\nNameError: name 'gcd' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a >\
    \ b:\n        return greatest_common_divisor(a % b, b)\n    else:\n        return\
    \ greatest_common_divisor(a, b % a)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ greatest_common_divisor_iterative(a, b)\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzvpdqj3z.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmpzvpdqj3z.py\", line 18,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmpzvpdqj3z.py\"\
    , line 12, in check\n    assert candidate(3, 7) == 1\n  File \"/tmp/tmpzvpdqj3z.py\"\
    , line 8, in greatest_common_divisor\n    return greatest_common_divisor_iterative(a,\
    \ b)\nNameError: name 'greatest_common_divisor_iterative' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ abs(a) if b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return max(a, b)\n    return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    for\
    \ x in range(min(a, b), 0, -1):\n        if a % x == 0 and b % x == 0:\n     \
    \       return x\n    return 1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a < b:\n        a, b = b, a\n    if b == 0:\n        return a\n    return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = max(a, b), min(a, b)\n    while a % b:\n        a, b = b, a % b\n    return\
    \ b\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ a = bq + r\n    r = a % b\n    if r == 0:\n        return b\n    else:\n   \
    \     return greatest_common_divisor(b, r)\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return 0\n    if b % a == 0:\n        return a\n\
    \    elif a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(b\
    \ % a, a)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ a if b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return\
    \ greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) ==\
    \ 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n    if\
    \ a > b:\n        a, b = b, a\n    while a != 0:\n        a, b = b % a, a\n  \
    \  return b\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    if b == 0:\n        return a\n    else:\n   \
    \     return greatest_common_divisor(b, a % b)\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n\
    \        return greatest_common_divisor(a % b, b)\n    else:\n        return greatest_common_divisor(a,\
    \ b % a)\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a > b:\n        if a % b == 0:\n            return b\n        else:\n      \
    \      return greatest_common_divisor(b, a % b)\n    else:\n        if b % a ==\
    \ 0:\n            return a\n        else:\n            return greatest_common_divisor(a,\
    \ b % a)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\ndef check(candidate):\n  \
    \  assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ a if b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = abs(a), abs(b)\n    while b:\n        a, b = b, a % b\n    return a\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = max(a, b), min(a, b)\n    while b:\n        a, b = b, a % b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ a if b == 0 else greatest_common_divisor(b, a % b)\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0 or b == 0:\n        return 0\n    a = abs(a)\n    b = abs(b)\n    if\
    \ a == b:\n        return a\n    elif a > b:\n        return greatest_common_divisor(a\
    \ - b, b)\n    else:\n        return greatest_common_divisor(a, b - a)\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b:\n        a, b = b, a % b\n    return a\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a % b != 0:\n        a, b = b, a % b\n    return b\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n\
    \        return greatest_common_divisor(a % b, b)\n    return greatest_common_divisor(a,\
    \ b % a)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    for\
    \ divisor in range(min(a, b), 0, -1):\n        if a % divisor == 0 and b % divisor\
    \ == 0:\n            return divisor\n    return 1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = max(a, b), min(a, b)\n    while b != 0:\n        a, b = b, a % b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b,\
    \ a % b)\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert\
    \ candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144,\
    \ 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n\
    \            b = b % a\n    return a + b\n\ndef check(candidate):\n    assert\
    \ candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49,\
    \ 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a,\
    \ b = max(a, b), min(a, b)\n    while b != 0:\n        a, b = b, a % b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    divisor\
    \ = min(a, b)\n    while divisor > 0:\n        if a % divisor == 0 and b % divisor\
    \ == 0:\n            return divisor\n        divisor -= 1\n    return 1\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    #\
    \ TODO: Implement this\n\n\ndef check(candidate):\n    assert candidate(3, 7)\
    \ == 1\n    assert candidate(10, 15) == 5\n    assert candidate(49, 14) == 7\n\
    \    assert candidate(144, 60) == 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppf_vmiwc.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmppf_vmiwc.py\", line 18,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmppf_vmiwc.py\"\
    , line 12, in check\n    assert candidate(3, 7) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if\
    \ a == 0:\n        return b\n    return greatest_common_divisor(b % a, a)\n\n\n\
    def check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while\
    \ b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 7) == 1\n    assert candidate(10, 15) == 5\n    assert\
    \ candidate(49, 14) == 7\n    assert candidate(144, 60) == 12\n\ndef test_check():\n\
    \    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return\
    \ a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3,\
    \ 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return\
    \ 1\n\n\ndef check(candidate):\n    assert candidate(3, 7) == 1\n    assert candidate(10,\
    \ 15) == 5\n    assert candidate(49, 14) == 7\n    assert candidate(144, 60) ==\
    \ 12\n\ndef test_check():\n    check(greatest_common_divisor)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp0v0trk9.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmpp0v0trk9.py\", line 18,\
    \ in test_check\n    check(greatest_common_divisor)\n  File \"/tmp/tmpp0v0trk9.py\"\
    , line 13, in check\n    assert candidate(10, 15) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception

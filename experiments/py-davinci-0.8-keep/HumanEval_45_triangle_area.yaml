name: HumanEval_45_triangle_area
language: py
prompt: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of a\
  \ side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
  \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
  \ntest_check()\n"
completions: ["    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "    return\
    \ (a * h) / 2.0\n\n", "    return a * h / 2\n", "    return (1/2) * a * h\n",
  "    return a * h / 2\n\n", "    # \u0412 \u043F\u0440\u0438\u043D\u0446\u0438\u043F\
    \u0435 \u043D\u0435 \u043E\u0447\u0435\u043D\u044C \u043F\u043E\u043D\u044F\u0442\
    \u043D\u043E \u0434\u043B\u044F \u0447\u0435\u0433\u043E \u043F\u0430\u0440\u0430\
    \u043C\u0435\u0442\u0440 h, \u0435\u0441\u043B\u0438 \u0443\u0436\u0435 \u0435\
    \u0441\u0442\u044C a\n    return a * h / 2\n\n", "    area = 0.5 * a * h\n   \
    \ return area\n\n\nprint(triangle_area(5, 3))", "    return (a * h) / 2\n\n",
  "    return a * h / 2\n", "    return a * h / 2\n\n", "    return a * h / 2\n",
  "    return a * h / 2\n\n", "    return 1/2 * a * h\n\n", "    return a * h / 2\n",
  "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\
    \n", "    area = a * h / 2\n    return area\n\n\nprint(triangle_area(5, 3))\n\n",
  "    return 0.5 * a * h\n", "    return (1/2)*a*h\n\nassert triangle_area(5, 3)\
    \ == 7.5\n", "    return 0.5 * a * h\n\n", "    return 0.5 * a * h\n\n", "   \
    \ return 0.5 * a * h\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\
    triangle_area(5, 3)\n", "    return 0.5 * a * h\n\nprint(triangle_area(10, 2))",
  "    return a * h / 2\nprint(triangle_area(5, 3))\n", "    return a * h / 2\n\n\
    triangle_area(5, 3)\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n\
    print(triangle_area(5, 3))", "    return a * h / 2\n\n", "    return a * h / 2\n\
    \n", "    return (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return (a\
    \ * h) / 2\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n\n", "   \
    \ return a * h / 2\n\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n\
    \n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return (a *\
    \ h) / 2\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", "   \
    \ return (a * h) / 2\n\n", "    return a * h / 2\n", "    return 1/2 * a * h\n\
    \n\nprint(triangle_area(5, 3))", "    return float(a * h) / 2\n\ntriangle_area(5,\
    \ 3)\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n\n", "    return\
    \ (1/2) * a * h\n", "    return (a * h) / 2.0\n\n", "    return (a * h) / 2\n\n",
  "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", "    return (a * h) /\
    \ 2\n\n", "    return 0.5 * a * h\n\n", "    return (1/2) * a * h\n\n\nprint(triangle_area(5,\
    \ 3))\n\n", "    return 0.5 * a * h\n\n", "    return float(a * h) / 2\n", " \
    \   return (a * h) / 2\n\n", "    return a * h / 2\n\n\nprint(triangle_area(5,\
    \ 3))\nprint(help(triangle_area))", "    return 0.5 * a * h\n\nprint(triangle_area(5,\
    \ 3))\n", "    return (a * h) / 2\n", "    return 0.5 * a * h\n", "    return\
    \ a * h / 2\n\n", "    area = a * h / 2\n    return area\n\n", "    return a *\
    \ h / 2\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n", "    return\
    \ 0.5 * a * h\n\n", "    return a * h / 2\n", "    return a * h / 2\n\n\nprint(triangle_area(5,\
    \ 3))\nprint(triangle_area.__doc__)\nhelp(triangle_area)", "    return (a * h)\
    \ / 2\n\n", "    return (a * h) / 2\n\n", "    return 0.5 * a * h\n\n", "    return\
    \ (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n\n",
  "    return a * h / 2\n\n", "    return 1/2 * a * h\n", "    return 0.5 * a * h\n\
    \n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return a * h\
    \ / 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return\
    \ 0.5 * a * h\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n",
  "    return (a * h) / 2\n\n", "    return (1/2)*(a*h)\n\n", "    return 0.5 * a\
    \ * h\n\n", "    return (a * h) / 2\n\n", "    result = (a * h) / 2\n    return\
    \ result\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", "   \
    \ return (a * h) / 2\n\n", "    area = a * h / 2\n    return area\n\n", "    return\
    \ a * h / 2\n\n", "    return 0.5 * a * h\n\n", "    return a * h / 2\n\n", " \
    \   area = (a * h) / 2\n    return area\n\n", "    return 1/2 * a * h\n\n", " \
    \   return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "    return a * h /\
    \ 2\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    return\
    \ (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", " \
    \   return a * h / 2\n\n", "    return (a * h) / 2\n\n", "    return 1/2 * a *\
    \ h\n\n", "    return a * h / 2\n\n", "    return (1/2) * a * h\n\n", "    return\
    \ (1/2) * a * h\n\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n\
    print(triangle_area(5, 3))", "    return a * h / 2\n\n", "    return (a * h) /\
    \ 2\n", "    return 0.5 * a * h\n", "    return a * h / 2\n", "    return a *\
    \ h / 2\n\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n", "    return\
    \ a * h / 2\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", " \
    \   return a * h / 2\n", "    return (a * h) / 2\n\n", "    return (1/2) * a *\
    \ h\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", "    return\
    \ a * h / 2\n\n\nprint(triangle_area(5, 3))\n\n", "    return a * h / 2\n", '    return
    0.5 * a * h', "    return a * h / 2\n\n", "    return a * h / 2\n", "    return\
    \ a * h / 2\n\n", "    return 1/2 * a * h\n", "    return (a * h) / 2\n\n", " \
    \   return (1/2) * a * h\n\n", "    return (a * h) / 2\n\n", "    return a * h\
    \ / 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\nprint(triangle_area(a=3,\
    \ h=4))\nprint(triangle_area(h=4, a=3))\nprint(triangle_area(3, 4))", "    return\
    \ a * h / 2\n\nprint(triangle_area(a = 5, h = 3))\n\n\"\"\"\nSpecial Slicing \n\
    \"\"\"\n\ndata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ndata[::-1]\n\ndata[::2]\n\n\
    data[::-2]\n\ndata[1:8:2]\n\n\"\"\"\n\n\"\"\"", "    return a * h / 2\n\n", " \
    \   return a * h / 2\n", "    return (a * h) / 2\nprint(triangle_area(5, 3))\n\
    \nprint(triangle_area.__doc__)\nhelp(triangle_area)\n", "    return (a * h) /\
    \ 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\ntriangle_area(5,\
    \ 3)\n", "    return 0.5 * a * h\n\n", "    return (a * h) / 2\n\nprint(triangle_area(a=5,\
    \ h=3))", "    return 0.5 * a * h\n", "    return a * h / 2\n\n\nprint(triangle_area(5,\
    \ 3))\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", "    return\
    \ 0.5 * a * h\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n", "  \
    \  return 0.5 * a * h\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n",
  "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n",
  "    return (a * h) / 2\n\nprint(triangle_area(5, 3))\n", "    return (a * h) /\
    \ 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n", "    return (a\
    \ * h) / 2\n\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n\n", " \
    \   return (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return 0.5 * a *\
    \ h\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", "    return\
    \ (a * h) / 2\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n", "  \
    \  return a * h / 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n",
  "    return a * h / 2\n\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n",
  "    return a * h / 2\n\n", "    return 0.5 * a * h\n    \n    ", "    return 0.5\
    \ * a * h\n\n", "    return (a * h) / 2\n", "    return 1/2 * a * h\n\n", "  \
    \  return (1/2) * a * h\n", "    return (a * h) / 2\n\n\nprint(triangle_area(5,\
    \ 2))\nprint(triangle_area(1, 1))\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

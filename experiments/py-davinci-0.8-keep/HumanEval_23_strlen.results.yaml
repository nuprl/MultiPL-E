name: HumanEval_23_strlen
language: py
results:
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for _ in string:\n        count += 1\n    return count\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for _ in string:\n        count += 1\n    return count\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for letter in string:\n        length += 1\n    return length\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    counter\
    \ = 0\n    for _ in string:\n        counter += 1\n    return counter\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for ch in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    size\
    \ = 0\n    for i in string:\n        size += 1\n    return size\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    i =\
    \ 0\n    for _ in string:\n        i += 1\n    return i\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for char in string:\n        count += 1\n    return count\n\nprint(strlen(''))\n\
    print(strlen('abc'))\n\nprint(\"Docstring: \", strlen.__doc__)\n\nprint(\"help(strlen):\
    \ \")\nhelp(strlen)\ndef check(candidate):\n    assert candidate('') == 0\n  \
    \  assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: "0\n3\nDocstring:   Return length of given string\n    >>> strlen('')\n\
    \    0\n    >>> strlen('abc')\n    3\n    \nhelp(strlen): \nHelp on function strlen\
    \ in module __main__:\n\nstrlen(string: str) -> int\n    Return length of given\
    \ string\n    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    c =\
    \ 0\n    for _ in string:\n        c += 1\n    return c\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for c in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string:\n\
    \        return 1 + strlen(string[1:])\n    return 0\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for char in string:\n        count += 1\n    return count\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for i in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    cnt\
    \ = 0\n    for c in string:\n        cnt += 1\n    return cnt\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ sum(1 for _ in string)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for x in string:\n        length += 1\n    return length\n\n\n@check50.check(exists)\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxlwr0_io.py\", line\
    \ 14, in <module>\n    @check50.check(exists)\nNameError: name 'check50' is not\
    \ defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    n =\
    \ 0\n    for _ in string:\n        n += 1\n    return n\n\n@functools.lru_cache(maxsize=None)\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxp8llwfl.py\", line\
    \ 13, in <module>\n    @functools.lru_cache(maxsize=None)\nNameError: name 'functools'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    # return\
    \ len(string)\n    count = 0\n    for _ in string:\n        count += 1\n    return\
    \ count\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for c in string:\n        length += 1\n    return length\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    len\
    \ = 0\n    for char in string:\n        len += 1\n    return len\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if not\
    \ string:\n        return 0\n    return 1 + strlen(string[1:])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n```\n\n```\n$ pytest test_strlen.py\n```\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp3n_j0cbp.py\", line 9\n    ```\n    ^\nSyntaxError: invalid\
    \ syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    # pylint:\
    \ disable=E0602\n    return len(string)\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for c in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    n =\
    \ 0\n    for _ in string:\n        n += 1\n    return n\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\n\n@typechecked\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm1u2bgfn.py\", line\
    \ 14, in <module>\n    @typechecked\nNameError: name 'typechecked' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for c in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    cnt\
    \ = 0\n    for i in string:\n        cnt += 1\n    return cnt\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string:\n\
    \        return 1 + strlen(string[1:])\n    return 0\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n@typechecked\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpszhvzqo6.py\", line\
    \ 10, in <module>\n    @typechecked\nNameError: name 'typechecked' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for char in string:\n        count += 1\n    return count\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    i =\
    \ 0\n    while string[i:]:\n        i += 1\n    return i\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ sum(1 for c in string)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    n =\
    \ 0\n    for c in string:\n        n += 1\n    return n\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ sum(1 for c in string)\nstrlen('abc')\n\nstrlen('')\n\nstrlen('abc')\nstrlen('')\n\
    strlen.__annotations__\nstrlen.__doc__\n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\
    \ \n \n \n \n \n \n \n \n \ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\n\
    def test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for char in string:\n        count += 1\n    return count\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for i in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for i in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for char in string:\n        count += 1\n    return count\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\n@contract(string='str', returns='int,>=0')\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxju6_n3b.py\", line\
    \ 11, in <module>\n    @contract(string='str', returns='int,>=0')\nNameError:\
    \ name 'contract' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ 0 if string == '' else 1 + strlen(string[1:])\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for _ in string:\n        count += 1\n    return count\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    return 1 + strlen(string[1:])\n\n\n@pytest.mark.parametrize('test_input,\
    \ expected', [\n    ('', 0),\n    ('abc', 3),\n])\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyqc3ayh_.py\", line\
    \ 13, in <module>\n    @pytest.mark.parametrize('test_input, expected', [\nNameError:\
    \ name 'pytest' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for letter in string:\n        length += 1\n    return length\n   \
    \ \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if not\
    \ string:\n        return 0\n    return 1 + strlen(string[1:])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    return 1 + strlen(string[1:])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    i =\
    \ 0\n    while string[i:]:\n        i += 1\n    return i\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n```\n\n```\n>>> import doctest\n>>> doctest.testmod()\n```\n\n\
    ```\n$ python3 -m doctest hello.py\n```\n\n```\n$ python3\n>>> import hello\n\
    >>> hello.strlen('Hello world')\n11\n```\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpgns4nuy0.py\", line 9\n    ```\n    ^\nSyntaxError: invalid\
    \ syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if not\
    \ string:\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n@mycountcalls\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprm3jdbyj.py\", line\
    \ 10, in <module>\n    @mycountcalls\nNameError: name 'mycountcalls' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    i =\
    \ 0\n    for c in string:\n        i += 1\n    return i\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    counter\
    \ = 0\n    for char in string:\n        counter += 1\n    return counter\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    len\
    \ = 0\n    for c in string:\n        len += 1\n    return len\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    return 1 + strlen(string[1:])\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    l =\
    \ 0\n    for char in string:\n        l += 1\n    return l\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ __strlen(string, 0)\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef\
    \ test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpng6np05r.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmpng6np05r.py\", line 16,\
    \ in test_check\n    check(strlen)\n  File \"/tmp/tmpng6np05r.py\", line 11, in\
    \ check\n    assert candidate('') == 0\n  File \"/tmp/tmpng6np05r.py\", line 8,\
    \ in strlen\n    return __strlen(string, 0)\nNameError: name '__strlen' is not\
    \ defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for c in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    l =\
    \ 0\n    for _ in string:\n        l += 1\n    return l\n\nprint(strlen('abc'))\n\
    print(strlen(''))\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: "3\n0\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for i in string:\n        length += 1\n    return length\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ 0 if not string else 1 + strlen(string[1:])\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    n =\
    \ 0\n    for char in string:\n        n += 1\n    return n\n\nprint(strlen('abcd'))\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: "4\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n \ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\n@typechecked\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpftatnic2.py\", line\
    \ 11, in <module>\n    @typechecked\nNameError: name 'typechecked' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for c in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if not\
    \ string:\n        return 0\n    return 1 + strlen(string[1:])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\n@functools.lru_cache(maxsize=64)\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp43av0qdh.py\", line\
    \ 11, in <module>\n    @functools.lru_cache(maxsize=64)\nNameError: name 'functools'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    i =\
    \ 0\n    for c in string:\n        i += 1\n    return i\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    # this\
    \ is a list comprehension for loop!\n    # for each char in the string, increment\
    \ length\n    return sum([1 for char in string])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for char in string:\n        count += 1\n    return count\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ sum(1 for _ in string)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    return 1 + strlen(string[1:])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    s =\
    \ 0\n    for letter in string:\n        s += 1\n    return s\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    return 1 + strlen(string[1:])\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for i in string:\n        count += 1\n    return count\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n```\n\ndef check(candidate):\n    assert candidate('') == 0\n \
    \   assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef\
    \ test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpa_gci84g.py\", line 9\n    ```\n    ^\nSyntaxError: invalid\
    \ syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    i =\
    \ 0\n    for _ in string:\n        i += 1\n    return i\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ sum(1 for _ in string)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    return 1 + strlen(string[1:])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\n@doctest.testmod()\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5jsfiok7.py\", line\
    \ 11, in <module>\n    @doctest.testmod()\nNameError: name 'doctest' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\n@returns(int)\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_z3khlxs.py\", line\
    \ 11, in <module>\n    @returns(int)\nNameError: name 'returns' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \n\n@check_types\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoohyczxb.py\", line\
    \ 14, in <module>\n    @check_types\nNameError: name 'check_types' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for _ in string:\n        count += 1\n    return count\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    pass\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphp1dqoi6.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmphp1dqoi6.py\", line 16,\
    \ in test_check\n    check(strlen)\n  File \"/tmp/tmphp1dqoi6.py\", line 11, in\
    \ check\n    assert candidate('') == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ 0 if string == '' else 1 + strlen(string[1:])\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    count\
    \ = 0\n    for c in string:\n        count += 1\n    return count\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\n@my_logger\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\
    \ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprklehbe_.py\", line\
    \ 11, in <module>\n    @my_logger\nNameError: name 'my_logger' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for char in string:\n        length += 1\n    return length\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    return 1 + strlen(string[1:])\n\nprint(strlen('abc'))\n\
    print(strlen(''))\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: "3\n0\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for _ in string:\n        length += 1\n    return length\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    length\
    \ = 0\n    for i in string:\n        length += 1\n    return length\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    if string\
    \ == '':\n        return 0\n    else:\n        return 1 + strlen(string[1:])\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('x')\
    \ == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n    check(strlen)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    return\
    \ len(string)\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('x') == 1\n    assert candidate('asdasnakj') == 9\n\ndef test_check():\n\
    \    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def strlen(string: str) -> int:\n    \"\"\" Return length of given string\n\
    \    >>> strlen('')\n    0\n    >>> strlen('abc')\n    3\n    \"\"\"\n    # return\
    \ len(string)\n    return sum(1 for _ in string)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('x') == 1\n    assert candidate('asdasnakj')\
    \ == 9\n\ndef test_check():\n    check(strlen)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

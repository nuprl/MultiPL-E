name: HumanEval_60_sum_to_n
language: py
results:
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    return\
    \ n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1) == 1\n\
    \    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum_num = 0\n    for i in range(1, n+1):\n\
    \        sum_num += i\n    return sum_num\n\n\ndef check(candidate):\n    assert\
    \ candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11) ==\
    \ 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef\
    \ test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n   \
    \     total, k = total + k, k + 1\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    k, total = 1, 0\n    while k <= n:\n   \
    \     total, k = total + k, k + 1\n    return total\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n\
    \        total += i\n    return total\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    return\
    \ n + sum_to_n(n - 1)\n\ndef check(candidate):\n    assert candidate(1) == 1\n\
    \    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n   \
    \     total, k = total + k, k + 1\n    return total\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\nprint(sum_to_n(30))\n\
    print(sum_to_n(100))\nprint(sum_to_n(5))\nprint(sum_to_n(10))\nprint(sum_to_n(1))\n\
    def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: "465\n5050\n15\n55\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n-1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    i = 1\n    sum_result = 0\n    while i <=\
    \ n:\n        sum_result += i\n        i += 1\n    return sum_result\n\n\ndef\
    \ check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    count = 1\n    sum_of_n = 0\n    while count\
    \ <= n:\n        sum_of_n += count\n        count += 1\n    return sum_of_n\n\n\
    def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    i = 1\n    sum_int = 0\n    while i <= n:\n\
    \        sum_int += i\n        i += 1\n    return sum_int\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n*(n+1))//2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n*(n+1))//2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    # From the \ndef check(candidate):\n   \
    \ assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv1k392rx.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpv1k392rx.py\", line 23,\
    \ in test_check\n    check(sum_to_n)\n  File \"/tmp/tmpv1k392rx.py\", line 16,\
    \ in check\n    assert candidate(1) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n > 0:\n        return n + sum_to_n(n\
    \ - 1)\n    else:\n        return 0\n    #pass\n\n@functools.lru_cache(maxsize=None)\n\
    def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ok76azn.py\", line\
    \ 20, in <module>\n    @functools.lru_cache(maxsize=None)\nNameError: name 'functools'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum_of_int = 0\n    for i in range(1, n\
    \ + 1):\n        sum_of_int += i\n    return sum_of_int\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum_int = 0\n    for i in range(1, n+1):\n\
    \        sum_int += i\n    return sum_int\n\ndef check(candidate):\n    assert\
    \ candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11) ==\
    \ 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef\
    \ test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n < 1:\n        raise ValueError('Input\
    \ cannot be less than 1.')\n    else:\n        return n*(n+1)//2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n <= 0:\n        return 0\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n >= 1:\n        return n + sum_to_n(n\
    \ - 1)\n    return 0\n\n\ndef check(candidate):\n    assert candidate(1) == 1\n\
    \    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    i = 1\n    sum = 0\n    while i <= n:\n\
    \        sum += i\n        i += 1\n    return sum\n\nimport doctest\ndoctest.testmod()\n\
    def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n\
    \        total += i\n    return total\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum_of_numbers = (n * (n + 1)) // 2\n  \
    \  return sum_of_numbers\n\n\ndef check(candidate):\n    assert candidate(1) ==\
    \ 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    i = 1\n    while i <= n:\n\
    \        total += i\n        i += 1\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = (n * (n + 1)) / 2\n    return sum\n\
    \n\ndef check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6)\
    \ == 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n   \
    \ assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n\
    \        total += i\n    return total\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = n * (n + 1) // 2\n    return sum\n\
    \n\ndef check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6)\
    \ == 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n   \
    \ assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    s = 0\n    for i in range(1, n+1):\n   \
    \     s += i\n    return s\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    assert n > 0, \"n must be positive!\"\n\
    \    return (n * (n + 1)) / 2\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n > 0:\n        return n + sum_to_n(n\
    \ - 1)\n    else:\n        return 0\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    while n > 0:\n        total\
    \ = total + n\n        n = n - 1\n    return total\n\nassert sum_to_n(10) == 55\n\
    \ndef check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6)\
    \ == 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n   \
    \ assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n\
    \        total += i\n    return total\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n <= 0:\n        return 0\n    elif n\
    \ == 1:\n        return 1\n    else:\n        return n + sum_to_n(n - 1)\n\nimport\
    \ doctest\ndoctest.testmod()\nprint(sum_to_n(100))\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: "5050\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n-1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    #create accumulator for sum\n    num_sum\
    \ = 0\n    #range is exclusive so add 1\n    for num in range(1, n+1):\n     \
    \   num_sum += num\n    return num_sum\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    for num in range(1, n + 1):\n\
    \        total += num\n    return total\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    i, ans = 1, 0\n    while i <= n:\n     \
    \   ans += i\n        i += 1\n    return ans\n\ndef check(candidate):\n    assert\
    \ candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11) ==\
    \ 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef\
    \ test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n   \
    \     total, k = total + k, k + 1\n    return total\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return sum_to_n(n-1) + n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n*(n+1))//2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    def _helper(k: int) -> int:\n        if\
    \ k == n:\n            return k\n        return k + _helper(k + 1)\n    return\
    \ _helper(1)\n\n\ndef check(candidate):\n    assert candidate(1) == 1\n    assert\
    \ candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(i for i in range(1, n + 1))\n\
    \ndef check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6)\
    \ == 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n   \
    \ assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n <= 0:\n        return 0\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    return\
    \ n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1) == 1\n\
    \    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\n@functools.lru_cache(maxsize=None)\n\
    def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr7qksfed.py\", line\
    \ 17, in <module>\n    @functools.lru_cache(maxsize=None)\nNameError: name 'functools'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    for i in range(1,n+1):\n        total =\
    \ total + i\n    return total\n\nprint(sum_to_n(100))\nprint(sum_to_n(1000))\n\
    print(sum_to_n(30))\ndef check(candidate):\n    assert candidate(1) == 1\n   \
    \ assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_63d4oiy.py\", line\
    \ 18, in <module>\n    print(sum_to_n(100))\n  File \"/tmp/tmp_63d4oiy.py\", line\
    \ 15, in sum_to_n\n    total = total + i\nUnboundLocalError: local variable 'total'\
    \ referenced before assignment\n"
  exit_code: -1
  status: Exception
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    # sum = n + (n-1) + (n-2) + (n-3) + ...\
    \ + 1\n    # sum = n * (n+1) / 2\n    return n * (n+1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\nsum_to_n(30)\n\
    \ndef check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6)\
    \ == 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n   \
    \ assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    assert isinstance(n, int) and n > 0, 'n\
    \ must be an integer greater than 0'\n    return int(n*(n+1)/2)\n    \ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n-1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return sum_to_n(n-1) + n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n\
    \        total += i\n    return total\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n > 0:\n        return n + sum_to_n(n\
    \ - 1)\n    else:\n        return 0\n    \n    \ndef check(candidate):\n    assert\
    \ candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11) ==\
    \ 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef\
    \ test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    print(n*(n+1)//2)\n    return n*(n+1)//2\n\
    \ndef check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6)\
    \ == 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n   \
    \ assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\n\
    test_check()\n"
  stdout: "1\n21\n66\n465\n5050\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n   \
    \     total, k = total + k, k + 1\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    k, total = 1, 0\n    while k <= n:\n   \
    \     total += k\n        k += 1\n    return total\n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \ndef check(candidate):\n    assert candidate(1) == 1\n    assert\
    \ candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    k, total = 1, 0\n    while k <= n:\n   \
    \     total += k\n        k += 1\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    # base case\n    if n == 1:\n        return\
    \ 1\n    # recursive step\n    else:\n        return n + sum_to_n(n - 1)\n\n\n\
    def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    return\
    \ n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1) == 1\n\
    \    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n*(n+1))//2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    # We will use two variables to keep track\
    \ of our sum.\n    total = 0\n    num = 1\n    # We will iterate until we reach\
    \ n.\n    while num <= n:\n        # The current value of num is added to the\
    \ total.\n        total += num\n        # We then increment num.\n        num\
    \ += 1\n    # We return the total.\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    # the sum variable will hold our result.\n\
    \    sum = 0\n    # the counter variable will count from 1 to n.\n    counter\
    \ = 1\n    # in this while loop, we keep adding 'counter' to sum until counter\
    \ reaches n\n    while counter <= n:\n        sum += counter\n        counter\
    \ += 1\n    return sum\n\n\ndef check(candidate):\n    assert candidate(1) ==\
    \ 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\n\nprint(sum_to_n(30))\n\
    print(sum_to_n(100))\nprint(sum_to_n(5))\nprint(sum_to_n(10))\nprint(sum_to_n(1))\n\
    def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: "465\n5050\n15\n55\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n > 0:\n        # sum = int((n*(n+1))/2)\n\
    \        sum = 0\n        for i in range(1, n+1):\n            sum += i\n    \
    \    return sum\n    else:\n        return n\n\ndef check(candidate):\n    assert\
    \ candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11) ==\
    \ 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef\
    \ test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n-1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    for x in range(1, n+1):\n\
    \        total += x\n    return total\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    # need a base case\n    if n == 1:\n   \
    \     return 1\n    else:\n        return n + sum_to_n(n-1)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return ((n * (n + 1)) / 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n < 1:\n        raise ValueError('The\
    \ input number should be larger than 0')\n    return int(n * (n + 1) / 2)\n\n\n\
    def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    num = 0\n    for i in range(1, n+1):\n \
    \       num += i\n    return num\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n   \
    \     total, k = total + k, k + 1\n    return total\nsum_to_n(30)\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n + 1) * n // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total, k = 0, 1\n    while k <= n:\n   \
    \     total, k = total + k, k + 1\n    return total\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert\
    \ candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11) ==\
    \ 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef\
    \ test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdi6yxido.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpdi6yxido.py\", line 25,\
    \ in test_check\n    check(sum_to_n)\n  File \"/tmp/tmpdi6yxido.py\", line 18,\
    \ in check\n    assert candidate(1) == 1\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\nprint(sum_to_n(100))\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: "5050\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    if n == 1:\n        return\
    \ 1\n    else:\n        return n + sum_to_n(n-1)\n\ndef check(candidate):\n  \
    \  assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n@update_wrapper(sum_to_n)\n\
    def check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6) ==\
    \ 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n    assert\
    \ candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpagysb9dy.py\", line\
    \ 16, in <module>\n    @update_wrapper(sum_to_n)\nNameError: name 'update_wrapper'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    while n >= 1:\n        sum\
    \ += n\n        n -= 1\n    return sum\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum_of_numbers = n * (n + 1) // 2\n    return\
    \ sum_of_numbers\n\n\ndef check(candidate):\n    assert candidate(1) == 1\n  \
    \  assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    assert n >= 1, \"sum_to_n: n must be greater\
    \ than 1\"\n    if n == 1:\n        return 1\n    return n + sum_to_n(n - 1)\n\
    \n\ndef check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6)\
    \ == 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n   \
    \ assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return ((n + 1) * n) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(i for i in range(1, n + 1))\n\
    \ndef check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6)\
    \ == 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n   \
    \ assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    #sum = 0\n    #for i in range(1, n+1):\n\
    \    #    sum += i\n    #return sum\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n-1)\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    total = 0\n    k = 1\n    while k <= n:\n\
    \        total, k = total + k, k + 1\n    return total\n\nprint(sum_to_n(30))\n\
    \ndef check(candidate):\n    assert candidate(1) == 1\n    assert candidate(6)\
    \ == 21\n    assert candidate(11) == 66\n    assert candidate(30) == 465\n   \
    \ assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\n\
    test_check()\n"
  stdout: "465\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    number = 1\n    sum_of_numbers = 0\n   \
    \ while number <= n:\n        sum_of_numbers += number\n        number += 1\n\
    \    return sum_of_numbers\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n \
    \       sum += i\n    return sum\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return (n*(n+1))/2\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    assert type(n) == int, \"Please enter a\
    \ valid int.\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11) ==\
    \ 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef\
    \ test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n\
    \        return n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1)\
    \ == 1\n    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert\
    \ candidate(30) == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n\
    \    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    return\
    \ n + sum_to_n(n - 1)\n\n\ndef check(candidate):\n    assert candidate(1) == 1\n\
    \    assert candidate(6) == 21\n    assert candidate(11) == 66\n    assert candidate(30)\
    \ == 465\n    assert candidate(100) == 5050\n\ndef test_check():\n    check(sum_to_n)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def sum_to_n(n: int) -> int:\n    \"\"\"sum_to_n is a function that sums\
    \ numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n\
    \    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>>\
    \ sum_to_n(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef check(candidate):\n\
    \    assert candidate(1) == 1\n    assert candidate(6) == 21\n    assert candidate(11)\
    \ == 66\n    assert candidate(30) == 465\n    assert candidate(100) == 5050\n\n\
    def test_check():\n    check(sum_to_n)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

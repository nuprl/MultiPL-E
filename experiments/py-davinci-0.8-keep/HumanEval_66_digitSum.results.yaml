name: HumanEval_66_digitSum
language: py
results:
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(lambda c: ord(c) if c.isupper() else 0,\
    \ s))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    if s == \"\":\n        return 0\n    return sum(map(lambda\
    \ x: ord(x), filter(lambda x: ord(x) in range(65,91), s)))\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    res = 0\n    for char in s:\n        if 65 <= ord(char)\
    \ <= 90:\n            res += ord(char)\n    return res\n\n\nprint(digitSum(\"\"\
    ))  # 0\nprint(digitSum(\"abAB\"))  # 131\nprint(digitSum(\"abcCd\"))  # 67\n\
    print(digitSum(\"helloE\"))  # 69\nprint(digitSum(\"woArBld\"))  # 131\nprint(digitSum(\"\
    aAaaaXa\"))  # 153\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: "0\n131\n67\n69\n131\n153\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # s = s.upper()\n    # return sum(ord(l) for l in s if\
    \ l.isupper())\n    return sum(ord(c) - ord('A') + 1 for c in s.upper() if c.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa66culnf.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpa66culnf.py\", line 30,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpa66culnf.py\", line 21,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    s = s.upper()\n    return sum(map(ord, filter(str.isupper,\
    \ s)))\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt_uw0xrn.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpt_uw0xrn.py\", line 27,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpt_uw0xrn.py\", line 18,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(int(d) for d in s if d.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmponpule9p.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmponpule9p.py\", line 28,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmponpule9p.py\", line 19,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmponpule9p.py\"\
    , line 14, in digitSum\n    return sum(int(d) for d in s if d.isupper())\n  File\
    \ \"/tmp/tmponpule9p.py\", line 14, in <genexpr>\n    return sum(int(d) for d\
    \ in s if d.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    res = 0\n    for ch in s:\n        if ch.isupper():\n \
    \           res += ord(ch)\n    return res\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum_ = 0\n    for i in s:\n        if i.isupper():\n  \
    \          sum_ += ord(i)\n    return sum_\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    upper_sum = 0\n    for char in s:\n        if char.isupper():\n\
    \            upper_sum += ord(char)\n    return upper_sum\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(e) for e in s if e.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n   \
    \         sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum = 0\n    for i in s:\n        if ord(i) <= 90:\n  \
    \          sum += ord(i)\n    return sum\n\nprint(digitSum(\"\"))\nprint(digitSum(\"\
    abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"\
    woArBld\"))\nprint(digitSum(\"aAaaaXa\"))\nprint(digitSum(\"A\") == 65)\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: "0\n131\n67\n69\n131\n153\nTrue\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr57_r8uu.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpr57_r8uu.py\", line 38,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpr57_r8uu.py\", line 34,\
    \ in check\n    assert candidate(' How are yOu?') == 151\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    import re\n    upper = re.findall(r'[A-Z]', s)\n    upper_sum\
    \ = sum(ord(i) for i in upper)\n    return upper_sum\n\n\nprint(digitSum(\"abAB\"\
    ))\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: "131\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    x = 0\n    for i in s:\n        if ord(i) > 64 and ord(i)\
    \ < 91:\n            x += ord(i)\n    return x\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    n = 0\n    for l in s:\n        n += ord(l) if l.isupper()\
    \ else 0\n    return n\n```\n\n```python\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp4vlejgfa.py\", line 18\n    ```\n    ^\nSyntaxError: invalid\
    \ syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    else:\n        return\
    \ sum(map(ord, [c for c in s if c.isupper()]))\n\n\nprint(digitSum(\"abcCd\"))\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: "67\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if ord(i) > 64 and ord(i)\
    \ < 91)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    output = 0\n    for i in s:\n        if i.isupper():\n\
    \            output += ord(i)\n    return output\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # return sum(ord(c) for c in s if c.isupper())\n    return\
    \ sum(ord(c) for c in s if 65 <= ord(c) <= 90)\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if 65 <= ord(c) <= 90)\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # write your code here\n    return sum(ord(ch) for ch in\
    \ s if ch.isupper())\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(char for char in s if char.isupper())\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpesh8424d.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpesh8424d.py\", line 28,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpesh8424d.py\", line 19,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpesh8424d.py\"\
    , line 14, in digitSum\n    return sum(char for char in s if char.isupper())\n\
    TypeError: unsupported operand type(s) for +: 'int' and 'str'\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    upper_s = 0\n    for char in s:\n        if 65 <= ord(char)\
    \ <= 90:\n            upper_s += ord(char)\n    return upper_s\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(list(map(lambda x: ord(x), filter(lambda x:\
    \ x.isupper(), s))))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n   \
    \         sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if 65 <= ord(ch) <= 90)\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    total = 0\n    for char in s:\n        if ord(char) <=\
    \ 90:\n            total += ord(char)\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkj2_sim8.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpkj2_sim8.py\", line 32,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpkj2_sim8.py\", line 28,\
    \ in check\n    assert candidate(' How are yOu?') == 151\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    \n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"\
    abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\"\
    ) == 131\nassert digitSum(\"aAaaaXa\") == 153\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(char for char in map(ord, s) if 65 <= char <=\
    \ 90)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    res = 0\n    for ch in s:\n        if ch.isupper():\n \
    \           res += ord(ch)\n    return res\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum = 0\n    for i in s:\n        if ord(i) >= 65 and ord(i)\
    \ <= 90:\n            sum += ord(i)\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum = 0\n    for el in s:\n        if el.isupper():\n \
    \           sum += ord(el)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if 65 <= ord(c) <= 90)\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # return sum(ord(c) for c in s if c.isupper())\n    return\
    \ sum(map(ord, filter(str.isupper, s)))\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(lambda x: ord(x), filter(lambda x: x.isupper(),\
    \ s)))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    total = 0\n    for ch in s:\n        if ch.isupper():\n\
    \            total += ord(ch)\n    return total\n\n\ndef check(candidate):\n \
    \   assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    code = list(map(ord, s))\n    return sum(filter(lambda\
    \ x: x >= 65 and x <= 90, code))\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"\
    abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"\
    woArBld\"))\nprint(digitSum(\"aAaaaXa\"))\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: "0\n131\n67\n69\n131\n153\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    r = 0\n    for i in s:\n        if i.isupper():\n     \
    \       r += ord(i)\n    return r\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    def sum(s: str) -> int:\n        \"\"\"Sum of character\
    \ ASCII codes in the string\n        \"\"\"\n        summ = 0\n        for i in\
    \ s:\n            summ += ord(i)\n        return summ\n\n    return sum(s.upper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_it8e8rz.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp_it8e8rz.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp_it8e8rz.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(i for i in map(ord, s) if ord('A') <= i <= ord('Z'))\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if 65 <= ord(char) <=\
    \ 90)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # upper letter ASCII codes range is 65-90\n    a = list(map(lambda\
    \ x: ord(x), s))\n    return sum(filter(lambda x: 65 <= x <= 90, a))\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(list(map(lambda x: ord(x), filter(lambda x:\
    \ x.isupper(), s))))\ndef check(candidate):\n    assert candidate('') == 0\n \
    \   assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n   \
    \ assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n \
    \   assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(s) for s in s if ord(s) > 64 and ord(s)\
    \ < 91)\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    s = s.upper()\n    upper_chars = [\n        chr(i) for\
    \ i in range(ord('A'), ord('Z') + 1)\n    ]\n    return sum(\n        [ord(c)\
    \ for c in s if c in upper_chars]\n    )\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfp3hf9mu.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpfp3hf9mu.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpfp3hf9mu.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # return sum(ord(i) for i in s if ord(i) > 64 and ord(i)\
    \ < 91)\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(lambda c: ord(c), filter(lambda c: c.isupper(),\
    \ s)))\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    #a = 0\n    #for c in s:\n    #    if c.isupper():\n  \
    \  #        a += ord(c)\n    #return a\n    return sum(map(ord, filter(str.isupper,\
    \ s)))\n\nprint(digitSum('abAB'))\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: "131\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum_ = 0\n    for c in s:\n        if c.isupper():\n  \
    \          sum_ += ord(c)\n    return sum_\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    total = 0\n    for i in s:\n        if i.isupper():\n \
    \           total += ord(i)\n    return total\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if 64 < ord(i) < 91)\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum = 0\n    for ch in s:\n        if 'A' <= ch <= 'Z':\n\
    \            sum += ord(ch)\n    return sum\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    total = 0\n    for char in s:\n        if 64 < ord(char)\
    \ < 91:\n            total += ord(char)\n    return total\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    r = 0\n    for i in s:\n        if i.isupper():\n     \
    \       r += ord(i)\n    return r\n\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # n = len(s)\n    # if n == 0:\n    #     return 0\n  \
    \  # else:\n    #     return ord(s[0]) + digitSum(s[1:])\n    return sum(ord(c)\
    \ for c in s if c.isupper())\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(lambda x: ord(x), filter(lambda x: x.isupper(),\
    \ s)))\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    c = 0\n    for x in s:\n        c += ord(x) if ord(x) <\
    \ 96 else 0\n    return c\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplffn45gz.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmplffn45gz.py\", line 31,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplffn45gz.py\", line 27,\
    \ in check\n    assert candidate(' How are yOu?') == 151\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(list(map(lambda x: ord(x), s)))\n\n\nprint(digitSum(\"\
    woArBld\"))\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: "683\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_q4svd5o.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp_q4svd5o.py\", line 29,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp_q4svd5o.py\", line 20,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    sum_ = 0\n    for x in s:\n        if x.isupper():\n  \
    \          sum_ += ord(x)\n    return sum_\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if 'A' <= x <= 'Z')\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    total = 0\n    for x in s:\n        if x.isupper():\n \
    \           total += ord(x)\n    return total\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # My attempt\n    def sumOfUpper(s: str) -> int:\n    \
    \    return sum(ord(i) for i in s if i.isupper())\n\n    # Best practices\n  \
    \  return sum(ord(x) for x in s if x.isupper())\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # your code here\n    \"\"\"\n    ASCII Tabelle:\n    A\
    \ = 65\n    B = 66\n    C = 67\n    D = 68\n    E = 69\n    a = 97\n    b = 98\n\
    \    c = 99\n    d = 100\n    e = 101\n    \"\"\"\n    return sum(ord(char) for\
    \ char in s if char.isupper())\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    total = 0\n    for c in s:\n        if c.isupper():\n \
    \           total += ord(c)\n    return total\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(lambda x: ord(x) if x.isupper() else 0,\
    \ s))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if ord(x) >= 65 and ord(x)\
    \ <= 90)\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(lambda x: ord(x) - 96, filter(lambda x:\
    \ ord(x) >= 65 and ord(x) <= 90, s)))\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgjaj7065.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpgjaj7065.py\", line 26,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpgjaj7065.py\", line 17,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    summa = 0\n    for i in s:\n        if i.isupper():\n \
    \           summa += ord(i)\n    return summa\n\nprint(digitSum(\"woArBld\"))\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: "131\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if 65 <= ord(char) <=\
    \ 90)\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    if type(s) != str:\n        raise TypeError('s must be\
    \ a string')\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # My Solution\n    return sum(ord(c) for c in s if c.isupper())\n\
    \n    # Alternative\n    # return sum(ord(c) for c in s if c.upper() == c)\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    # Your code here\n    return 0\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjjnu0lr4.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpjjnu0lr4.py\", line 29,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpjjnu0lr4.py\", line 20,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(map(lambda x: ord(x), filter(lambda x: x.isupper(),\
    \ s)))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"\
    abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\"\
    ) => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") =>\
    \ 153\n    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

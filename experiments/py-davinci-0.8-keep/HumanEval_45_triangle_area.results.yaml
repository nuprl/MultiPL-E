name: HumanEval_45_triangle_area
language: py
results:
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2.0\n\n\ndef check(candidate):\n   \
    \ assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2) * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    # \u0412 \u043F\u0440\u0438\u043D\u0446\u0438\u043F\u0435\
    \ \u043D\u0435 \u043E\u0447\u0435\u043D\u044C \u043F\u043E\u043D\u044F\u0442\u043D\
    \u043E \u0434\u043B\u044F \u0447\u0435\u0433\u043E \u043F\u0430\u0440\u0430\u043C\
    \u0435\u0442\u0440 h, \u0435\u0441\u043B\u0438 \u0443\u0436\u0435 \u0435\u0441\
    \u0442\u044C a\n    return a * h / 2\n\n\ndef check(candidate):\n    assert candidate(5,\
    \ 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10, 8) ==\
    \ 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    area = 0.5 * a * h\n    return area\n\n\nprint(triangle_area(5,\
    \ 3))\ndef check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 1/2 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    area = a * h / 2\n    return area\n\n\nprint(triangle_area(5,\
    \ 3))\n\n\ndef check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert\
    \ candidate(2, 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n\
    \    check(triangle_area)\n\ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2)*a*h\n\nassert triangle_area(5, 3) == 7.5\n\
    \ndef check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\ntriangle_area(5, 3)\n\ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\nprint(triangle_area(10, 2))\ndef\
    \ check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "10.0\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\nprint(triangle_area(5, 3))\n\ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ntriangle_area(5, 3)\n\ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\nprint(triangle_area(5, 3))\ndef\
    \ check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 1/2 * a * h\n\n\nprint(triangle_area(5, 3))\n\
    def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return float(a * h) / 2\n\ntriangle_area(5, 3)\n\ndef\
    \ check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2) * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2.0\n\n\ndef check(candidate):\n   \
    \ assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2) * a * h\n\n\nprint(triangle_area(5, 3))\n\
    \n\ndef check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return float(a * h) / 2\n\ndef check(candidate):\n  \
    \  assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\nprint(triangle_area(5, 3))\nprint(help(triangle_area))\n\
    def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\nHelp on function triangle_area in module __main__:\n\ntriangle_area(a:\
    \ int, h: int) -> float\n    Given length of a side and high return area for a\
    \ triangle.\n    >>> triangle_area(5, 3)\n    7.5\n\nNone\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\nprint(triangle_area(5, 3))\n\n\
    def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    area = a * h / 2\n    return area\n\n\ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\nprint(triangle_area(5, 3))\nprint(triangle_area.__doc__)\n\
    help(triangle_area)\ndef check(candidate):\n    assert candidate(5, 3) == 7.5\n\
    \    assert candidate(2, 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef\
    \ test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: "7.5\nGiven length of a side and high return area for a triangle.\n    >>>\
    \ triangle_area(5, 3)\n    7.5\n    \nHelp on function triangle_area in module\
    \ __main__:\n\ntriangle_area(a: int, h: int) -> float\n    Given length of a side\
    \ and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n\
    \n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 1/2 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2)*(a*h)\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    result = (a * h) / 2\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    area = a * h / 2\n    return area\n\n\ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    area = (a * h) / 2\n    return area\n\n\ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 1/2 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 1/2 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2) * a * h\n\n\ndef check(candidate):\n   \
    \ assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2) * a * h\n\n\ndef check(candidate):\n   \
    \ assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\nprint(triangle_area(5, 3))\ndef\
    \ check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2) * a * h\n\n\ndef check(candidate):\n   \
    \ assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\nprint(triangle_area(5, 3))\n\n\n\
    def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 1/2 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2) * a * h\n\n\ndef check(candidate):\n   \
    \ assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\nprint(triangle_area(a=3, h=4))\n\
    print(triangle_area(h=4, a=3))\nprint(triangle_area(3, 4))\ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: "6.0\n6.0\n6.0\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\nprint(triangle_area(a = 5, h = 3))\n\
    \n\"\"\"\nSpecial Slicing \n\"\"\"\n\ndata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\
    data[::-1]\n\ndata[::2]\n\ndata[::-2]\n\ndata[1:8:2]\n\n\"\"\"\n\n\"\"\"\ndef\
    \ check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\nprint(triangle_area(5, 3))\n\nprint(triangle_area.__doc__)\n\
    help(triangle_area)\n\ndef check(candidate):\n    assert candidate(5, 3) == 7.5\n\
    \    assert candidate(2, 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef\
    \ test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: "7.5\nGiven length of a side and high return area for a triangle.\n    >>>\
    \ triangle_area(5, 3)\n    7.5\n    \nHelp on function triangle_area in module\
    \ __main__:\n\ntriangle_area(a: int, h: int) -> float\n    Given length of a side\
    \ and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n\
    \n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\ntriangle_area(5, 3)\n\ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\nprint(triangle_area(a=5, h=3))\n\
    def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\nprint(triangle_area(5, 3))\n\n\
    def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\nprint(triangle_area(5, 3))\n\n\
    def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
    \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  stdout: "7.5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return a * h / 2\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n    \n    \ndef check(candidate):\n\
    \    assert candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert\
    \ candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 0.5 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return 1/2 * a * h\n\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (1/2) * a * h\n\ndef check(candidate):\n    assert\
    \ candidate(5, 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10,\
    \ 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of\
    \ a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n \
    \   7.5\n    \"\"\"\n    return (a * h) / 2\n\n\nprint(triangle_area(5, 2))\n\
    print(triangle_area(1, 1))\n\n\ndef check(candidate):\n    assert candidate(5,\
    \ 3) == 7.5\n    assert candidate(2, 2) == 2.0\n    assert candidate(10, 8) ==\
    \ 40.0\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  stdout: "5.0\n0.5\n"
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_108_count_nums
language: py
results:
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpty2v6by1.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpty2v6by1.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpty2v6by1.py\", line 17,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for num in arr if sum(abs(int(digit)) for digit in str(num)) > 0)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdegub84i.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpdegub84i.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpdegub84i.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpdegub84i.py\"\
    , line 13, in count_nums\n    return sum(1 for num in arr if sum(abs(int(digit))\
    \ for digit in str(num)) > 0)\n  File \"/tmp/tmpdegub84i.py\", line 13, in <genexpr>\n\
    \    return sum(1 for num in arr if sum(abs(int(digit)) for digit in str(num))\
    \ > 0)\n  File \"/tmp/tmpdegub84i.py\", line 13, in <genexpr>\n    return sum(1\
    \ for num in arr if sum(abs(int(digit)) for digit in str(num)) > 0)\nValueError:\
    \ invalid literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    res = 0\n\
    \    for n in arr:\n        if signed_digits_sum(n) > 0:\n            res += 1\n\
    \    return res\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgjum6pe2.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpgjum6pe2.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpgjum6pe2.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpgjum6pe2.py\"\
    , line 15, in count_nums\n    if signed_digits_sum(n) > 0:\nNameError: name 'signed_digits_sum'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        if i > 0:\n            nums = list(str(i))\n \
    \           sign = 1\n        else:\n            nums = list(str(i)[1:])\n   \
    \         sign = -1\n        if sign * sum(map(int, nums)) > 0:\n            count\
    \ += 1\n    return count\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3,\
    \ 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq7y3_7fn.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpq7y3_7fn.py\", line 35,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpq7y3_7fn.py\", line 30,\
    \ in check\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        sum_of_digits = 0\n        for i in str(abs(num)):\n\
    \            sum_of_digits += int(i)\n        if sum_of_digits > 0:\n        \
    \    count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfqkgvwsb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpfqkgvwsb.py\", line 33,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpfqkgvwsb.py\", line 24,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_signed_digits(num:\
    \ int) -> int:\n        if num < 0:\n            return -1 * sum(map(int, str(num)[1:]))\n\
    \        return sum(map(int, str(num)))\n    return sum(map(lambda x: 1 if sum_signed_digits(x)\
    \ > 0 else 0, arr))\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3,\
    \ 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj1a5o0r3.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpj1a5o0r3.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpj1a5o0r3.py\", line 25,\
    \ in check\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([num\
    \ for num in arr if sum(map(int, str(abs(num)))) > 0])\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgh0e2jd0.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpgh0e2jd0.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpgh0e2jd0.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        abs_num = abs(num)\n        while abs_num >\
    \ 0:\n            count += abs_num % 10\n            abs_num //= 10\n    return\
    \ count\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5nw0_8aj.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5nw0_8aj.py\", line 32,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp5nw0_8aj.py\", line 23,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ...\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdq0qd5yx.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpdq0qd5yx.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpdq0qd5yx.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    arr_=[]\n    for i in arr:\n        if i<0:\n            i=i*-1\n\
    \        j=0\n        while i>0:\n            j+=i%10\n            i=i//10\n \
    \       arr_.append(j)\n    for i in arr_:\n        if i==0:\n            arr_.remove(i)\n\
    \    return len(arr_)\n        \n    raise NotImplementedError()\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7zkshk6a.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp7zkshk6a.py\", line 42,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp7zkshk6a.py\", line 33,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for x in arr if sum(map(int, str(abs(x)))) > 0)\n\ndef check(candidate):\n \
    \   assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbojm0do0.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbojm0do0.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpbojm0do0.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        if sum([int(x) for x in str(abs(i))]) > 0:\n \
    \           count += 1\n    return count\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n\
    \    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphxq1hjb1.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmphxq1hjb1.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmphxq1hjb1.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ####\n \
    \   #### YOUR CODE HERE\n    ####\n    count = 0\n    for num in arr:\n      \
    \  # print(num)\n        if num < 0:\n            signed_digits = [int(i) for\
    \ i in str(num)[1:]]\n            signed_digits.insert(0, int(str(num)[0])*(-1))\n\
    \        else:\n            signed_digits = [int(i) for i in str(num)]\n     \
    \   # print(signed_digits)\n        if sum(signed_digits) > 0:\n            count\
    \ += 1\n    return count\n    \n    \n    \n    \n    \n    \n    # if __name__\
    \ == \"__main__\":\n    #     import doctest\n    #     doctest.testmod()\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqysi9a3t.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpqysi9a3t.py\", line 48,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpqysi9a3t.py\", line 39,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpqysi9a3t.py\"\
    , line 21, in count_nums\n    signed_digits.insert(0, int(str(num)[0])*(-1))\n\
    ValueError: invalid literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgfsqc_k_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpgfsqc_k_.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpgfsqc_k_.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for num in arr if sum_of_digits(num) > 0)\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n\
    \    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzbiw46vs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpzbiw46vs.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpzbiw46vs.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpzbiw46vs.py\"\
    , line 13, in count_nums\n    return sum(1 for num in arr if sum_of_digits(num)\
    \ > 0)\n  File \"/tmp/tmpzbiw46vs.py\", line 13, in <genexpr>\n    return sum(1\
    \ for num in arr if sum_of_digits(num) > 0)\nNameError: name 'sum_of_digits' is\
    \ not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe6vdvw8a.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpe6vdvw8a.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpe6vdvw8a.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([i\
    \ for i in arr if sum([int(j) for j in str(abs(i))])])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp6o2dwr9.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpp6o2dwr9.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpp6o2dwr9.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counter\
    \ = 0\n    for num in arr:\n        if num < 0:\n            if (abs(num) % 10)\
    \ + (abs(num) // 10) != 0:\n                counter += 1\n        else:\n    \
    \        if (num % 10) + (num // 10) != 0:\n                counter += 1\n   \
    \ return counter\n\ndef check(candidate):\n    assert candidate([]) == 0\n   \
    \ assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf1jw7_k5.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpf1jw7_k5.py\", line 34,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpf1jw7_k5.py\", line 25,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ug19l3r.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp_ug19l3r.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp_ug19l3r.py\", line 15,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        # Break down the number and add them up\n  \
    \      sum = 0\n        for digit in str(num):\n            if digit == '-':\n\
    \                continue\n            else:\n                sum += int(digit)\n\
    \        if sum > 0:\n            count += 1\n    return count\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnsn6w5rf.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpnsn6w5rf.py\", line 36,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpnsn6w5rf.py\", line 27,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    total =\
    \ 0\n    for i in arr:\n        if i == 0:\n            continue\n        if sum(map(int,\
    \ str(abs(i)))) > 0:\n            total += 1\n    return total\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa3fo5iql.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpa3fo5iql.py\", line 31,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpa3fo5iql.py\", line 22,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpodb0qpb7.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpodb0qpb7.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpodb0qpb7.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if sum(map(int, str(abs(num)))) > 0:\n     \
    \       count += 1\n    return count\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl5t571zq.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpl5t571zq.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpl5t571zq.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if len(str(num)) == 1:\n            if num >\
    \ 0:\n                count += 1\n        else:\n            sum_of_digits = 0\n\
    \            for digit in str(num):\n                if digit != '-':\n      \
    \              sum_of_digits += int(digit)\n            if sum_of_digits > 0:\n\
    \                count += 1\n    return count\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n\
    \    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxbrddjls.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpxbrddjls.py\", line 38,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpxbrddjls.py\", line 29,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sum(map(int,\
    \ str(abs(num)))) > 0 for num in arr)\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqfjc7w9a.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpqfjc7w9a.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpqfjc7w9a.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        sum_of_digits = 0\n        if num < 0:\n   \
    \         signed_num = -num\n        else:\n            signed_num = num\n   \
    \     while signed_num > 0:\n            sum_of_digits += signed_num % 10\n  \
    \          signed_num //= 10\n        if sum_of_digits > 0:\n            count\
    \ += 1\n    return count\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpamr9zhpy.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpamr9zhpy.py\", line 38,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpamr9zhpy.py\", line 29,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    list1 = []\n    for i in arr:\n        if i > 0:\n            list1.append(i)\n\
    \        else:\n            list1.append(abs(i))\n    count = 0\n    for i in\
    \ list1:\n        sum = 0\n        while i > 0:\n            sum += i % 10\n \
    \           i = i // 10\n        if sum > 0:\n            count += 1\n    return\
    \ count\n\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjykml203.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpjykml203.py\", line 42,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpjykml203.py\", line 33,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sum(map(int,\
    \ str(i))) > 0 for i in arr)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoiip8jq4.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpoiip8jq4.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpoiip8jq4.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpoiip8jq4.py\"\
    , line 13, in count_nums\n    return sum(sum(map(int, str(i))) > 0 for i in arr)\n\
    \  File \"/tmp/tmpoiip8jq4.py\", line 13, in <genexpr>\n    return sum(sum(map(int,\
    \ str(i))) > 0 for i in arr)\nValueError: invalid literal for int() with base\
    \ 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpun__6gvg.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpun__6gvg.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpun__6gvg.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if num < 0:\n            num = -num\n      \
    \  total = 0\n        while num > 0:\n            total += num % 10\n        \
    \    num //= 10\n        if total > 0:\n            count += 1\n    return count\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw41r5qla.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpw41r5qla.py\", line 36,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpw41r5qla.py\", line 27,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        # Turn the number into string representation\n\
    \        num_string = str(num)\n        # Initialize the sum of digits to 0\n\
    \        digit_sum = 0\n        # Iterate over the digits\n        for digit in\
    \ num_string:\n            # Check if the first character is '-' and skip it if\
    \ it is\n            if digit == '-':\n                continue\n            #\
    \ Add the digit to the sum\n            digit_sum += int(digit)\n        # If\
    \ the sum is > 0, increment the counter\n        if digit_sum > 0:\n         \
    \   count += 1\n    return count\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx77eaz_y.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpx77eaz_y.py\", line 41,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpx77eaz_y.py\", line 32,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([x\
    \ for x in arr if sum(map(int, str(abs(x)))) > 0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1aq4ghxi.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp1aq4ghxi.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp1aq4ghxi.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        sum_num = 0\n        for digit in str(num):\n\
    \            sum_num += int(digit)\n        if sum_num > 0:\n            count\
    \ += 1\n    return count\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnowbdtsh.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpnowbdtsh.py\", line 33,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpnowbdtsh.py\", line 24,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpnowbdtsh.py\"\
    , line 17, in count_nums\n    sum_num += int(digit)\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sum(map(int,\
    \ str(x))) for x in arr) > 0\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_2s4fprw.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp_2s4fprw.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp_2s4fprw.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp_2s4fprw.py\"\
    , line 13, in count_nums\n    return sum(sum(map(int, str(x))) for x in arr) >\
    \ 0\n  File \"/tmp/tmp_2s4fprw.py\", line 13, in <genexpr>\n    return sum(sum(map(int,\
    \ str(x))) for x in arr) > 0\nValueError: invalid literal for int() with base\
    \ 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sumOfDigits\
    \ = []\n    for i in arr:\n        if i < 0:\n            i = -i\n        sum\
    \ = 0\n        while i > 0:\n            sum += i % 10\n            i = i // 10\n\
    \        sumOfDigits.append(sum)\n    count = 0\n    for j in sumOfDigits:\n \
    \       if j > 0:\n            count += 1\n    return count\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps7vj9p6q.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmps7vj9p6q.py\", line 38,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmps7vj9p6q.py\", line 29,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if num == 0:\n            continue\n       \
    \ elif num < 0:\n            num = -num\n        if sum_digits(num) > 0:\n   \
    \         count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3lb70tnr.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp3lb70tnr.py\", line 34,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp3lb70tnr.py\", line 25,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp3lb70tnr.py\"\
    , line 19, in count_nums\n    if sum_digits(num) > 0:\nNameError: name 'sum_digits'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for x in arr if sum(map(int, list(str(abs(x))))) > 0)\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk5xt5pzn.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpk5xt5pzn.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpk5xt5pzn.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n\
    \        return 0\n    count = 0\n    for num in arr:\n        if num < 0:\n \
    \           sum_of_digits = num\n        else:\n            sum_of_digits = sum([int(i)\
    \ for i in str(num)])\n        if sum_of_digits > 0:\n            count += 1\n\
    \    return count\n\ndef check(candidate):\n    assert candidate([]) == 0\n  \
    \  assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl46vfot4.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpl46vfot4.py\", line 36,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpl46vfot4.py\", line 31,\
    \ in check\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6yunz9_k.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp6yunz9_k.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp6yunz9_k.py\", line 17,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ...\n  \
    \  return 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_9wxkofv.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp_9wxkofv.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp_9wxkofv.py\", line 19,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for num in arr if sum(map(int, str(abs(num)))) > 0)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj5w5t3dq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpj5w5t3dq.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpj5w5t3dq.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n\
    \        return 0\n    return sum(1 for x in arr if sum(map(abs, map(int, str(x))))\
    \ > 0)\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2vgd3idb.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2vgd3idb.py\", line 28,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp2vgd3idb.py\", line 19,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp2vgd3idb.py\"\
    , line 15, in count_nums\n    return sum(1 for x in arr if sum(map(abs, map(int,\
    \ str(x)))) > 0)\n  File \"/tmp/tmp2vgd3idb.py\", line 15, in <genexpr>\n    return\
    \ sum(1 for x in arr if sum(map(abs, map(int, str(x)))) > 0)\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if sum_signed_digits(num) > 0:\n           \
    \ count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprnwr8wdc.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmprnwr8wdc.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmprnwr8wdc.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmprnwr8wdc.py\"\
    , line 15, in count_nums\n    if sum_signed_digits(num) > 0:\nNameError: name\
    \ 'sum_signed_digits' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([num\
    \ for num in arr if sum(map(abs, int_to_digits(num))) > 0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdlxkr9dw.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpdlxkr9dw.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpdlxkr9dw.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpdlxkr9dw.py\"\
    , line 13, in count_nums\n    return len([num for num in arr if sum(map(abs, int_to_digits(num)))\
    \ > 0])\n  File \"/tmp/tmpdlxkr9dw.py\", line 13, in <listcomp>\n    return len([num\
    \ for num in arr if sum(map(abs, int_to_digits(num))) > 0])\nNameError: name 'int_to_digits'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    return sum(1 for a in arr if sum(map(int, str(abs(a)))) > 0)\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiavk2rv0.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpiavk2rv0.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpiavk2rv0.py\", line 18,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ans = 0\n\
    \    for el in arr:\n        if el < 0:\n            sum_of_digits = sum(map(lambda\
    \ x: int(x), str(el)[1:]))\n        else:\n            sum_of_digits = sum(map(lambda\
    \ x: int(x), str(el)))\n        if sum_of_digits > 0:\n            ans += 1\n\
    \    return ans\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp55h9p94a.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp55h9p94a.py\", line 33,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp55h9p94a.py\", line 24,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkskdkng8.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpkskdkng8.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpkskdkng8.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # All we\
    \ need to do is check if the sum of the digits of each number\n    # is > 0.\n\
    \    return sum(1 for n in arr if sum(abs(int(d)) for d in str(n)) > 0)\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_zzy6por.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp_zzy6por.py\", line 28,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp_zzy6por.py\", line 19,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp_zzy6por.py\"\
    , line 15, in count_nums\n    return sum(1 for n in arr if sum(abs(int(d)) for\
    \ d in str(n)) > 0)\n  File \"/tmp/tmp_zzy6por.py\", line 15, in <genexpr>\n \
    \   return sum(1 for n in arr if sum(abs(int(d)) for d in str(n)) > 0)\n  File\
    \ \"/tmp/tmp_zzy6por.py\", line 15, in <genexpr>\n    return sum(1 for n in arr\
    \ if sum(abs(int(d)) for d in str(n)) > 0)\nValueError: invalid literal for int()\
    \ with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        if sum(int(n) for n in str(abs(i))) > 0:\n   \
    \         count += 1\n    return count\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp44q36ga.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpp44q36ga.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpp44q36ga.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphigxizwr.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphigxizwr.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmphigxizwr.py\", line 19,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if abs(num) % 10 != 0:\n            count +=\
    \ 1\n        num //= 10\n        while num != 0:\n            if num % 10 != 0:\n\
    \                count += 1\n                break\n            num //= 10\n \
    \   return count\n\ndef check(candidate):\n    assert candidate([]) == 0\n   \
    \ assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo0shfxyi.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpo0shfxyi.py\", line 36,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpo0shfxyi.py\", line 27,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    res = 0\n\
    \    for i in arr:\n        x = abs(i)\n        sum = 0\n        while x > 0:\n\
    \            sum += x % 10\n            x //= 10\n        if sum > 0:\n      \
    \      res += 1\n    return res\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp4xmxu1i.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpp4xmxu1i.py\", line 34,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpp4xmxu1i.py\", line 25,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6wm23wij.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp6wm23wij.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp6wm23wij.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    positive_sum_digits\
    \ = lambda num: sum(map(int, str(abs(num)))) > 0\n    return len(list(filter(positive_sum_digits,\
    \ arr)))\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjaqiiybl.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpjaqiiybl.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpjaqiiybl.py\", line 18,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # TODO\n\
    \    #   Figure out how to count digits of a negative number\n    #   Split each\
    \ number into digits\n    #   Sum the digits of each number\n    #   Return the\
    \ count of numbers which have a sum greater than 0\n    count = 0\n    for i in\
    \ arr:\n        if sum(map(int, str(abs(i)))) > 0:\n            count += 1\n \
    \   return count\n\ndef check(candidate):\n    assert candidate([]) == 0\n   \
    \ assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm9a_zdod.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpm9a_zdod.py\", line 35,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpm9a_zdod.py\", line 26,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    arr = [abs(x)\
    \ for x in arr]\n    nums = [sum(int(a) for a in str(x)) for x in arr]\n    return\
    \ len([i for i in nums if i > 0])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsx2rhw78.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpsx2rhw78.py\", line 28,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpsx2rhw78.py\", line 19,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([x\
    \ for x in arr if sum([int(y) for y in str(abs(x))])])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi0wk4ef9.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpi0wk4ef9.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpi0wk4ef9.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counter\
    \ = 0\n    for num in arr:\n        digits = [int(x) for x in str(abs(num))]\n\
    \        counter += sum(digits) > 0\n    return counter\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph73bd4jo.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmph73bd4jo.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmph73bd4jo.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([x\
    \ for x in arr if sum(map(int, str(abs(x)))) > 0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf09fd08e.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpf09fd08e.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpf09fd08e.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps1rcte4g.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmps1rcte4g.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmps1rcte4g.py\", line 17,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = filter(lambda\
    \ x: x > 0, map(lambda x: sum(map(int, str(abs(x)))), arr))\n    return len(list(nums))\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9o3wmpkv.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp9o3wmpkv.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp9o3wmpkv.py\", line 18,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if sum_digits(num) > 0:\n            count +=\
    \ 1\n    return count\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3,\
    \ 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8zwpzxmh.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp8zwpzxmh.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp8zwpzxmh.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp8zwpzxmh.py\"\
    , line 15, in count_nums\n    if sum_digits(num) > 0:\nNameError: name 'sum_digits'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # replace\
    \ the line below with your solution\n    return 0\ndef check(candidate):\n   \
    \ assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa4txil8k.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpa4txil8k.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpa4txil8k.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for n in arr:\n        sum = 0\n        if n < 0:\n            n = -n\n\
    \        while n > 0:\n            sum += n % 10\n            n //= 10\n     \
    \   if sum > 0:\n            count += 1\n    return count\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmivhnbb6.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpmivhnbb6.py\", line 35,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpmivhnbb6.py\", line 26,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    arr = [abs(n)\
    \ for n in arr]\n    return sum(1 for n in arr if sum([int(c) for c in str(n)])\
    \ > 0)\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw6nucmo5.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpw6nucmo5.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpw6nucmo5.py\", line 18,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjcq63ebw.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpjcq63ebw.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpjcq63ebw.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_of_digits(num:\
    \ int) -> int:\n        \"\"\"\n        Write a function sum_of_digits which takes\
    \ an integer and returns the\n        sum of its digits.\n        >>> sum_of_digits(0)\
    \ == 0\n        >>> sum_of_digits(123) == 6\n        >>> sum_of_digits(-1) ==\
    \ 1\n        >>> sum_of_digits(-123) == 6\n        \"\"\"\n        pass\n    \n\
    \    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwu5_xsot.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpwu5_xsot.py\", line 37,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpwu5_xsot.py\", line 27,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum = 0\n\
    \    for i in arr:\n        if i < 0:\n            i = -i\n        while i > 0:\n\
    \            sum += i % 10\n            i //= 10\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkvkr_jc8.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpkvkr_jc8.py\", line 33,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpkvkr_jc8.py\", line 24,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num:\
    \ int) -> int:\n        s = 0\n        while num:\n            s += num % 10\n\
    \            num //= 10\n        return s\n\n    return sum(sum_digits(num) >\
    \ 0 for num in arr)\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3,\
    \ 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd1d4fe3q.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpd1d4fe3q.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpd1d4fe3q.py\", line 17,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for n in arr:\n        n = abs(n)\n        while n != 0:\n          \
    \  count += n % 10\n            n //= 10\n    return count\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8iujh03_.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp8iujh03_.py\", line 32,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp8iujh03_.py\", line 23,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqrtctub5.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpqrtctub5.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpqrtctub5.py\", line 15,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counter\
    \ = 0\n    for item in arr:\n        if sum(list(map(int, str(abs(item))))) >\
    \ 0:\n            counter += 1\n    return counter\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7s7imh_5.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp7s7imh_5.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp7s7imh_5.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    raise NotImplementedError\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm671pcmz.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpm671pcmz.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpm671pcmz.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\n  File \"/tmp/tmpm671pcmz.py\", line\
    \ 13, in count_nums\n    raise NotImplementedError\nNotImplementedError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkvdo1juk.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpkvdo1juk.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpkvdo1juk.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpykh4kqfm.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpykh4kqfm.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpykh4kqfm.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        digit_sum = 0\n        if num < 0:\n       \
    \     num = -num\n        while num > 0:\n            digit_sum += num % 10\n\
    \            num //= 10\n        if digit_sum > 0:\n            count += 1\n \
    \   return count\n\ndef check(candidate):\n    assert candidate([]) == 0\n   \
    \ assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqk5ihenl.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpqk5ihenl.py\", line 36,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpqk5ihenl.py\", line 27,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ### BEGIN\
    \ SOLUTION\n    def sum_digits(n):\n        n = abs(n)\n        total = 0\n  \
    \      while n:\n            total += n % 10\n            n //= 10\n        return\
    \ total\n    return sum(sum_digits(x) for x in arr)\n    ### END SOLUTION\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5yj4erl1.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp5yj4erl1.py\", line 35,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp5yj4erl1.py\", line 26,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2zxhs8q.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpy2zxhs8q.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpy2zxhs8q.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([n\
    \ for n in arr if sum(map(abs, map(int, str(n)))) > 0])\n    # return len([1 for\
    \ n in arr if sum(map(abs, map(int, str(n)))) > 0])\n    # return len(list(filter(lambda\
    \ n: sum(map(abs, map(int, str(n)))) > 0, arr)))\n\ndef check(candidate):\n  \
    \  assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpob68vxz9.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpob68vxz9.py\", line 28,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpob68vxz9.py\", line 19,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpob68vxz9.py\"\
    , line 13, in count_nums\n    return len([n for n in arr if sum(map(abs, map(int,\
    \ str(n)))) > 0])\n  File \"/tmp/tmpob68vxz9.py\", line 13, in <listcomp>\n  \
    \  return len([n for n in arr if sum(map(abs, map(int, str(n)))) > 0])\nValueError:\
    \ invalid literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    raise NotImplementedError\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbgalf4gu.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpbgalf4gu.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpbgalf4gu.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\n  File \"/tmp/tmpbgalf4gu.py\", line\
    \ 13, in count_nums\n    raise NotImplementedError\nNotImplementedError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # your code\
    \ goes here\n    return 0\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsk6ovkli.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpsk6ovkli.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpsk6ovkli.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        a = 0\n        if i < 0:\n            i = -i\n\
    \        while i > 0:\n            a += i % 10\n            i //= 10\n       \
    \ if a > 0:\n            count += 1\n    return count\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjvi31r_f.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpjvi31r_f.py\", line 36,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpjvi31r_f.py\", line 27,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sign = 1\n\
    \    counter = 0\n    for i in arr:\n        if i < 0:\n            sign = -1\n\
    \        else:\n            sign = 1\n        i = sign * i\n        sum_digits\
    \ = 0\n        while i != 0:\n            sum_digits += i % 10\n            i\
    \ = i // 10\n        if sum_digits > 0:\n            counter += 1\n    return\
    \ counter\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfumz2s9m.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpfumz2s9m.py\", line 40,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpfumz2s9m.py\", line 31,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for el in arr:\n        if sum(list(map(int, list(str(abs(el)))))) >\
    \ 0:\n            count += 1\n    return count\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n\
    \    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8nokcwix.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp8nokcwix.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp8nokcwix.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_uw00jv2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp_uw00jv2.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp_uw00jv2.py\", line 17,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7nyi16cg.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp7nyi16cg.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp7nyi16cg.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num:\
    \ int) -> int:\n        \"\"\"\n        Returns the sum of the digits in num.\n\
    \        e.g. sum_digits(123) == 6\n        \"\"\"\n        return sum(int(n)\
    \ for n in str(num))\n\n    return sum(1 for n in arr if sum_digits(n) > 0)\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcrq1io1o.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpcrq1io1o.py\", line 32,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpcrq1io1o.py\", line 23,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpcrq1io1o.py\"\
    , line 20, in count_nums\n    return sum(1 for n in arr if sum_digits(n) > 0)\n\
    \  File \"/tmp/tmpcrq1io1o.py\", line 20, in <genexpr>\n    return sum(1 for n\
    \ in arr if sum_digits(n) > 0)\n  File \"/tmp/tmpcrq1io1o.py\", line 18, in sum_digits\n\
    \    return sum(int(n) for n in str(num))\n  File \"/tmp/tmpcrq1io1o.py\", line\
    \ 18, in <genexpr>\n    return sum(int(n) for n in str(num))\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ans = 0\n\
    \    for num in arr:\n        if sum(map(int, str(abs(num)))) > 0:\n         \
    \   ans += 1\n    return ans\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp90ak8ao5.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp90ak8ao5.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp90ak8ao5.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([x\
    \ for x in arr if sum(map(abs, divmod(x, 10))) > 0])\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwkcnmp26.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpwkcnmp26.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpwkcnmp26.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(map(lambda\
    \ x: x > 0, map(lambda x: sum(map(lambda y: int(y), list(str(abs(x))))), arr)))\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpijohjxjr.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpijohjxjr.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpijohjxjr.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(n:\
    \ int) -> int:\n        \"\"\"\n        Sum the digits of n, including the signed\
    \ digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n  \
    \      >>> sum_digits(2) == 2\n        >>> sum_digits(123) == 6\n        >>> sum_digits(-1)\
    \ == -1\n        >>> sum_digits(-123) == -6\n        \"\"\"\n        total = 0\n\
    \        for i in str(n):\n            if i == '-':\n                continue\n\
    \            total += int(i)\n        return total\n\n    return len([i for i\
    \ in arr if sum_digits(i) > 0])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwpsh1700.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpwpsh1700.py\", line 43,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpwpsh1700.py\", line 34,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # alternatively\
    \ use collections.Counter\n    return sum(sum(map(int, str(num))) > 0 for num\
    \ in arr)\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp409hqgtu.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp409hqgtu.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp409hqgtu.py\", line 18,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp409hqgtu.py\"\
    , line 14, in count_nums\n    return sum(sum(map(int, str(num))) > 0 for num in\
    \ arr)\n  File \"/tmp/tmp409hqgtu.py\", line 14, in <genexpr>\n    return sum(sum(map(int,\
    \ str(num))) > 0 for num in arr)\nValueError: invalid literal for int() with base\
    \ 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([x\
    \ for x in arr if sum(map(int, str(abs(x)))) > 0])\ndef check(candidate):\n  \
    \  assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm0hpaph0.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpm0hpaph0.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpm0hpaph0.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu4t1ostj.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpu4t1ostj.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpu4t1ostj.py\", line 15,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counter\
    \ = 0\n    for elem in arr:\n        signed_digits = list(map(int, str(abs(elem))))\n\
    \        if sum(signed_digits) > 0:\n            counter += 1\n    return counter\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk3s4l7a6.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpk3s4l7a6.py\", line 31,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpk3s4l7a6.py\", line 22,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    res = 0\n\
    \    for num in arr:\n        if num < 0:\n            num = -num\n        while\
    \ num != 0:\n            res += num % 10\n            num //= 10\n    return res\n\
    \nprint(count_nums([-1, 11, -11]))\nprint(count_nums([1, 1, 2]))\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: "5\n4\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5byubd42.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp5byubd42.py\", line 35,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp5byubd42.py\", line 26,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for x in arr:\n        if x < 0:\n            x = -x\n        if sum([int(y)\
    \ for y in str(x)]) > 0:\n            count += 1\n    return count\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfumq6tlo.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpfumq6tlo.py\", line 32,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpfumq6tlo.py\", line 23,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpayqhrbv8.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpayqhrbv8.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpayqhrbv8.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pos_arr\
    \ = []\n    for num in arr:\n        if num > 0:\n            pos_arr.append(num)\n\
    \        elif num < 0:\n            pos_arr.append(abs(num))\n        else:\n\
    \            continue\n    sum_arr = []\n    for num in pos_arr:\n        sums\
    \ = 0\n        for i in str(num):\n            sums += int(i)\n        sum_arr.append(sums)\n\
    \    count = 0\n    for num in sum_arr:\n        if num != 0:\n            count\
    \ += 1\n    return count\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfiaansgu.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpfiaansgu.py\", line 44,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpfiaansgu.py\", line 35,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([i\
    \ for i in arr if sum(int(j) for j in str(abs(i))) > 0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphm5vqvni.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmphm5vqvni.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmphm5vqvni.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for n in arr:\n        digits = sum(map(int, str(abs(n))))\n        if\
    \ digits > 0:\n            count += 1\n    return count\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpej4vnng6.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpej4vnng6.py\", line 31,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpej4vnng6.py\", line 22,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for num in arr if sum(map(int, str(abs(num)))) > 0)\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph55csana.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmph55csana.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmph55csana.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([i\
    \ for i in arr if sum(int(d) for d in str(abs(i))) > 0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoqg6f64w.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpoqg6f64w.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpoqg6f64w.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # TODO:\
    \ implement the body\n    # Hint: you can use str.isdigit() and int(x) to get\
    \ the integer representation\n    #       of a string x\n    return 0\n\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyq5dhu8h.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpyq5dhu8h.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpyq5dhu8h.py\", line 22,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        digits = [int(d) for d in str(abs(num))]\n \
    \       count += 1 if sum(digits) > 0 else 0\n    return count\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5dy523lc.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp5dy523lc.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp5dy523lc.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        num = abs(num)\n        while num:\n       \
    \     if num % 10:\n                count += 1\n                break\n      \
    \      num //= 10\n    return count\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv8xwm0jx.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpv8xwm0jx.py\", line 34,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpv8xwm0jx.py\", line 25,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([arr[i]\
    \ for i in range(len(arr)) if sum(map(int, str(abs(arr[i])))) > 0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_yvvsbq6.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp_yvvsbq6.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp_yvvsbq6.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for n in arr:\n        if sum([int(d) for d in str(abs(n))]) > 0:\n \
    \           count += 1\n    return count\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptxx6hynl.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmptxx6hynl.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmptxx6hynl.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp31gan7yu.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp31gan7yu.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp31gan7yu.py\", line 17,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if sum(map(int, list(str(abs(num))))) > 0:\n\
    \            count += 1\n    return count\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp44aiiby5.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp44aiiby5.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp44aiiby5.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for el in arr:\n        digits = [int(x) for x in str(abs(el))]\n   \
    \     if sum(digits) > 0:\n            count += 1\n    return count\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8xmgj3x2.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp8xmgj3x2.py\", line 31,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp8xmgj3x2.py\", line 22,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(\n\
    \        sum(map(int, str(num).lstrip('-'))) > 0\n        for num in arr\n   \
    \ )\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7jvav_w5.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp7jvav_w5.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp7jvav_w5.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sum(map(int,\
    \ str(abs(num)))) > 0 for num in arr)\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp9lp_kw9.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpp9lp_kw9.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpp9lp_kw9.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sum(map(int,\
    \ str(abs(i)))) > 0 for i in arr)\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3vcbpd3k.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp3vcbpd3k.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp3vcbpd3k.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    #count =\
    \ 0\n    #for i in arr:\n    #    if i < 0:\n    #        i = -i\n    #    s =\
    \ 0\n    #    while i > 0:\n    #        s += i % 10\n    #        i //= 10\n\
    \    #    if s > 0:\n    #        count += 1\n    #return count\n    return sum(sum(map(int,\
    \ str(i))) > 0 for i in arr)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd58w2r25.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpd58w2r25.py\", line 37,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpd58w2r25.py\", line 28,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpd58w2r25.py\"\
    , line 24, in count_nums\n    return sum(sum(map(int, str(i))) > 0 for i in arr)\n\
    \  File \"/tmp/tmpd58w2r25.py\", line 24, in <genexpr>\n    return sum(sum(map(int,\
    \ str(i))) > 0 for i in arr)\nValueError: invalid literal for int() with base\
    \ 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        if i < 0:\n            i = -i\n        sum_of_digits\
    \ = 0\n        while i:\n            sum_of_digits += i % 10\n            i //=\
    \ 10\n        if sum_of_digits > 0:\n            count += 1\n    return count\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpan84h4sw.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpan84h4sw.py\", line 36,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpan84h4sw.py\", line 27,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        sum_digits = 0\n        sign = 1\n        if i\
    \ < 0:\n            sign = -1\n        while i != 0:\n            digit = i %\
    \ 10\n            sum_digits += digit\n            i = i // 10\n        if sum_digits\
    \ * sign > 0:\n            count += 1\n    return count\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if sum(map(int, str(abs(num)))) > 0:\n     \
    \       count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2fgjlv98.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp2fgjlv98.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp2fgjlv98.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmputed1_4i.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmputed1_4i.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmputed1_4i.py\", line 17,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # TODO\n\
    \    count = 0\n    for i in arr:\n        x = i\n        if i < 0:\n        \
    \    x = -i\n        while x > 0:\n            count += x % 10\n            x\
    \ = x // 10\n    return count\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptg6v3x29.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmptg6v3x29.py\", line 35,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmptg6v3x29.py\", line 26,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sign_digit_sum\
    \ = lambda x: x if x < 0 else sum(map(int, str(x)))\n    return sum(map(lambda\
    \ x: sign_digit_sum(x) > 0, arr))\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptrm03_pq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmptrm03_pq.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmptrm03_pq.py\", line 21,\
    \ in check\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # itertools.groupby\
    \ groups consecutive digits, by default in ascending order\n    # so we only need\
    \ to look at the first digit of each group to see if it's\n    # negative\n  \
    \  count = 0\n    for _, group in groupby(arr):\n        # is the first element\
    \ negative?\n        if next(group) < 0:\n            count += 1\n    return count\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp99wptak_.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp99wptak_.py\", line 34,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp99wptak_.py\", line 24,\
    \ in check\n    assert candidate([]) == 0\n  File \"/tmp/tmp99wptak_.py\", line\
    \ 17, in count_nums\n    for _, group in groupby(arr):\nNameError: name 'groupby'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu34orrs3.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpu34orrs3.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpu34orrs3.py\", line 17,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for x in arr if sum(map(int, str(abs(x)))) > 0)\n\ndef check(candidate):\n \
    \   assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5nn2o6jd.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp5nn2o6jd.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp5nn2o6jd.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for el in arr if sum(map(int, str(abs(el)))) > 0)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphdy1nrk7.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmphdy1nrk7.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmphdy1nrk7.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for x in arr if sum(map(int, str(abs(x)))) > 0)\n\ndef check(candidate):\n \
    \   assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprz7ebc88.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmprz7ebc88.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmprz7ebc88.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpahqlqmai.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpahqlqmai.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpahqlqmai.py\", line 19,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sum(map(int,\
    \ str(num))) > 0 for num in arr)\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpalog5ze8.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpalog5ze8.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpalog5ze8.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpalog5ze8.py\"\
    , line 13, in count_nums\n    return sum(sum(map(int, str(num))) > 0 for num in\
    \ arr)\n  File \"/tmp/tmpalog5ze8.py\", line 13, in <genexpr>\n    return sum(sum(map(int,\
    \ str(num))) > 0 for num in arr)\nValueError: invalid literal for int() with base\
    \ 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgbqlokos.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpgbqlokos.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpgbqlokos.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sum(map(int,\
    \ str(i))) > 0 for i in arr)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppg79_fud.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmppg79_fud.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmppg79_fud.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmppg79_fud.py\"\
    , line 13, in count_nums\n    return sum(sum(map(int, str(i))) > 0 for i in arr)\n\
    \  File \"/tmp/tmppg79_fud.py\", line 13, in <genexpr>\n    return sum(sum(map(int,\
    \ str(i))) > 0 for i in arr)\nValueError: invalid literal for int() with base\
    \ 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf_zbxoz_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpf_zbxoz_.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpf_zbxoz_.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplkxd6jl0.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplkxd6jl0.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmplkxd6jl0.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # return\
    \ arr.count(0)\n    count = 0\n    for i in arr:\n        if i < 0:\n        \
    \    i = -i\n        if i > 0:\n            while i > 0:\n                count\
    \ += i % 10\n                i = i // 10\n        else:\n            count +=\
    \ 1\n    return count\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3,\
    \ 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps7hm_y_p.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmps7hm_y_p.py\", line 37,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmps7hm_y_p.py\", line 28,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = 0\n\
    \    for i in arr:\n        nums += sum([int(d) for d in str(abs(i))]) > 0\n \
    \   return nums\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmp2c9c3x.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpmp2c9c3x.py\", line 28,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpmp2c9c3x.py\", line 19,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps8n6cn8o.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmps8n6cn8o.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmps8n6cn8o.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8hf979cp.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp8hf979cp.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp8hf979cp.py\", line 17,\
    \ in check\n    assert candidate([]) == 0\n  File \"/tmp/tmp8hf979cp.py\", line\
    \ 14, in count_nums\n    raise NotImplementedError()\nNotImplementedError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [sum(map(int,\
    \ str(abs(i)))) for i in arr]\n    return len([x for x in nums if x > 0])\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5y_dcj4w.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp5y_dcj4w.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp5y_dcj4w.py\", line 18,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Your code\
    \ here\n    count = 0\n    for i in arr:\n        if i >= 0:\n            sum_digits\
    \ = sum(map(int, str(i)))\n        else:\n            i = -i\n            sum_digits\
    \ = -1 * sum(map(int, str(i)))\n        if sum_digits > 0:\n            count\
    \ += 1\n    return count\n\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl_igu_h7.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpl_igu_h7.py\", line 37,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpl_igu_h7.py\", line 32,\
    \ in check\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = 0\n\
    \    for num in arr:\n        if sum(int(num) for num in str(abs(num))) > 0:\n\
    \            nums += 1\n    return nums\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm8zkis4g.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpm8zkis4g.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpm8zkis4g.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sign_digit_sum(num:\
    \ int) -> int:\n        \"\"\" Return sum of signed digits for num.\n        >>>\
    \ sign_digit_sum(1) == 1\n        >>> sign_digit_sum(-1) == -1\n        >>> sign_digit_sum(10)\
    \ == 1\n        >>> sign_digit_sum(-10) == -1\n        >>> sign_digit_sum(11)\
    \ == 2\n        >>> sign_digit_sum(-11) == -2\n        \"\"\"\n        def sign_digit(num:\
    \ int) -> int:\n            \"\"\" Return sign of num if num != 0, else return\
    \ 0.\n            >>> sign_digit(1) == 1\n            >>> sign_digit(-1) == -1\n\
    \            >>> sign_digit(0) == 0\n            \"\"\"\n            if num >\
    \ 0:\n                return 1\n            elif num < 0:\n                return\
    \ -1\n            else:\n                return 0\n        if num == 0:\n    \
    \        return 0\n        else:\n            return sign_digit(num) + sign_digit_sum(num\
    \ // 10)\n    return sum(1 for x in arr if sign_digit_sum(x) > 0)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5q97ki99.py\", line\
    \ 53, in <module>\n    test_check()\n  File \"/tmp/tmp5q97ki99.py\", line 51,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp5q97ki99.py\", line 42,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp5q97ki99.py\"\
    , line 38, in count_nums\n    return sum(1 for x in arr if sign_digit_sum(x) >\
    \ 0)\n  File \"/tmp/tmp5q97ki99.py\", line 38, in <genexpr>\n    return sum(1\
    \ for x in arr if sign_digit_sum(x) > 0)\n  File \"/tmp/tmp5q97ki99.py\", line\
    \ 37, in sign_digit_sum\n    return sign_digit(num) + sign_digit_sum(num // 10)\n\
    \  File \"/tmp/tmp5q97ki99.py\", line 37, in sign_digit_sum\n    return sign_digit(num)\
    \ + sign_digit_sum(num // 10)\n  File \"/tmp/tmp5q97ki99.py\", line 37, in sign_digit_sum\n\
    \    return sign_digit(num) + sign_digit_sum(num // 10)\n  [Previous line repeated\
    \ 990 more times]\n  File \"/tmp/tmp5q97ki99.py\", line 28, in sign_digit\n  \
    \  if num > 0:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    count = 0\n    for num in arr:\n        if num >= 0:\n           \
    \ sum = 0\n            while num != 0:\n                sum += num % 10\n    \
    \            num = num // 10\n            if sum > 0:\n                count +=\
    \ 1\n        else:\n            num = -num\n            sum = 0\n            while\
    \ num != 0:\n                sum += num % 10\n                num = num // 10\n\
    \            if sum < 0:\n                count += 1\n    return count\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptkhfljc2.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmptkhfljc2.py\", line 44,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmptkhfljc2.py\", line 39,\
    \ in check\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for num in arr if sum(map(int, list(str(abs(num))))) > 0)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprvc_n2mr.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmprvc_n2mr.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmprvc_n2mr.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        if i > 0:\n            count += 1\n        else:\n\
    \            if sum(map(int, list(str(i)))) > 0:\n                count += 1\n\
    \    return count\n\ndef check(candidate):\n    assert candidate([]) == 0\n  \
    \  assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbzu3lmfa.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpbzu3lmfa.py\", line 33,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpbzu3lmfa.py\", line 24,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpbzu3lmfa.py\"\
    , line 18, in count_nums\n    if sum(map(int, list(str(i)))) > 0:\nValueError:\
    \ invalid literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jayfm79.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp2jayfm79.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp2jayfm79.py\", line 19,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr_mqkg1i.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpr_mqkg1i.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpr_mqkg1i.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Insert\
    \ your code here\n    pass\n\nimport unittest\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1,\
    \ 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n\
    \    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12,\
    \ 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsq3746gu.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpsq3746gu.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpsq3746gu.py\", line 19,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num:\
    \ int) -> int:\n        num = abs(num)\n        total = 0\n        while num:\n\
    \            total += num % 10\n            num //= 10\n        return total\n\
    \n    total = 0\n    for num in arr:\n        if sum_digits(num) > 0:\n      \
    \      total += 1\n    return total\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl1iwfxou.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpl1iwfxou.py\", line 38,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpl1iwfxou.py\", line 29,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_cshcp6h.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp_cshcp6h.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp_cshcp6h.py\", line 17,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for n in arr if sum(map(int, str(abs(n)))) > 0)\ndef check(candidate):\n   \
    \ assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkjjj5zho.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpkjjj5zho.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpkjjj5zho.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprdbuozhl.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmprdbuozhl.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmprdbuozhl.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    total =\
    \ 0\n    for item in arr:\n        if sum(map(int, list(str(abs(item))))) > 0:\n\
    \            total += 1\n    return total\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn30vgdyx.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpn30vgdyx.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpn30vgdyx.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp988m1ny8.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp988m1ny8.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp988m1ny8.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    count = 0\n    for num in arr:\n        if sum(map(int, list(str(abs(num)))))\
    \ > 0:\n            count += 1\n    return count\n\ndef check(candidate):\n  \
    \  assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi92o1ybj.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpi92o1ybj.py\", line 31,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpi92o1ybj.py\", line 22,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        if sum(int(x) for x in str(abs(i))) > 0:\n   \
    \         count += 1\n    return count\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdqgjrz7w.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpdqgjrz7w.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpdqgjrz7w.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if sum(map(int, str(abs(num)))) > 0:\n     \
    \       count += 1\n    return count\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkkkawzp8.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpkkkawzp8.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpkkkawzp8.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([num\
    \ for num in arr if sum([int(digit) for digit in str(abs(num))])])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk3i3u_ak.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpk3i3u_ak.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpk3i3u_ak.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdg94dkz1.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpdg94dkz1.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpdg94dkz1.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n\
    \        return 0\n    count = 0\n    for num in arr:\n        sum_digits = 0\n\
    \        for digit in str(abs(num)):\n            sum_digits += int(digit)\n \
    \       if sum_digits > 0:\n            count += 1\n    return count\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbj6d6r45.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpbj6d6r45.py\", line 34,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpbj6d6r45.py\", line 25,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for num in arr if sum(map(int, str(abs(num)))) > 0)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqtnzlolx.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpqtnzlolx.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpqtnzlolx.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpidusow_j.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpidusow_j.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpidusow_j.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if sum(map(int, str(abs(num)))) > 0:\n     \
    \       count += 1\n    return count\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjh43bsop.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpjh43bsop.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpjh43bsop.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ...\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqjmxpwbx.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpqjmxpwbx.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpqjmxpwbx.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # use a\
    \ set to keep track of visited numbers\n    visited = set()\n    count = 0\n \
    \   for n in arr:\n        # have we seen this number before?\n        if n in\
    \ visited:\n            # we have, so just update the count\n            count\
    \ += 1\n        else:\n            # we haven't, so calculate the signed digit\
    \ sum and add to set\n            visited.add(n)\n            # get the abs of\
    \ the digits sum\n            d_sum = abs(digit_sum(n))\n            # remove\
    \ all of the multiples of this sum\n            to_remove = [x for x in visited\
    \ if x % d_sum == 0]\n            # update the count if any were there\n     \
    \       count += len(to_remove)\n            # now remove them\n            for\
    \ x in to_remove:\n                visited.remove(x)\n    return count\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9tna91ui.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmp9tna91ui.py\", line 46,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp9tna91ui.py\", line 37,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp9tna91ui.py\"\
    , line 25, in count_nums\n    d_sum = abs(digit_sum(n))\nNameError: name 'digit_sum'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        x = i\n        if x < 0:\n            x = x *\
    \ -1\n        sum = 0\n        while x != 0:\n            sum += x % 10\n    \
    \        x = x // 10\n        if sum > 0:\n            count += 1\n    return\
    \ count\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmpfgeeu8.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpmpfgeeu8.py\", line 37,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpmpfgeeu8.py\", line 28,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for n in arr if n // 10 == n % 10)\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmd6_53nf.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmd6_53nf.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpmd6_53nf.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counter\
    \ = 0\n    for i in arr:\n        if i < 0:\n            i = i * -1\n        if\
    \ sum(int(j) for j in str(i)) > 0:\n            counter += 1\n    return counter\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9k4j6zuy.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp9k4j6zuy.py\", line 31,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp9k4j6zuy.py\", line 22,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)\
    \ == 0:\n        return 0\n    else:\n        if sum([abs(int(i)) for i in str(arr[0])])\
    \ > 0:\n            return 1 + count_nums(arr[1:])\n        else:\n          \
    \  return count_nums(arr[1:])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpotftzp_4.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpotftzp_4.py\", line 32,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpotftzp_4.py\", line 23,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpotftzp_4.py\"\
    , line 16, in count_nums\n    if sum([abs(int(i)) for i in str(arr[0])]) > 0:\n\
    \  File \"/tmp/tmpotftzp_4.py\", line 16, in <listcomp>\n    if sum([abs(int(i))\
    \ for i in str(arr[0])]) > 0:\nValueError: invalid literal for int() with base\
    \ 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        abs_num = abs(num)\n        if sum([int(digit)\
    \ for digit in str(abs_num)]) > 0:\n            count += 1\n    return count\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpblmg3roo.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpblmg3roo.py\", line 31,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpblmg3roo.py\", line 22,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Complete\
    \ the body of this function. Don't add any lines here.\n    ans = 0\n    for x\
    \ in arr:\n        if x >= 0:\n            sum = 0\n            while x:\n   \
    \             sum += x % 10\n                x //= 10\n            if sum > 0:\n\
    \                ans += 1\n        else:\n            if x % 10 > 0:\n       \
    \         ans += 1\n    return ans\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph5ssgpua.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmph5ssgpua.py\", line 39,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmph5ssgpua.py\", line 30,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([i\
    \ for i in arr if sum(abs(int(d)) for d in str(i)) > 0])\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphzbxbdgn.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmphzbxbdgn.py\", line 25,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmphzbxbdgn.py\", line 16,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmphzbxbdgn.py\"\
    , line 13, in count_nums\n    return len([i for i in arr if sum(abs(int(d)) for\
    \ d in str(i)) > 0])\n  File \"/tmp/tmphzbxbdgn.py\", line 13, in <listcomp>\n\
    \    return len([i for i in arr if sum(abs(int(d)) for d in str(i)) > 0])\n  File\
    \ \"/tmp/tmphzbxbdgn.py\", line 13, in <genexpr>\n    return len([i for i in arr\
    \ if sum(abs(int(d)) for d in str(i)) > 0])\nValueError: invalid literal for int()\
    \ with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = 0\n\
    \    for x in arr:\n        digits = list(map(int, str(abs(x))))\n        if sum(digits)\
    \ > 0:\n            nums += 1\n    return nums\n\nprint(count_nums([1, 1, 2]))\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: "3\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpen8qgmua.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpen8qgmua.py\", line 32,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpen8qgmua.py\", line 23,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ans = 0\n\
    \    for i in arr:\n        if i > 0:\n            x = sum(int(c) for c in str(i))\n\
    \        elif i < 0:\n            x = sum(int(c) for c in str(i)[1:]) + 1\n  \
    \      else:\n            x = 0\n        if x > 0:\n            ans += 1\n   \
    \ return ans\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0d7vucut.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp0d7vucut.py\", line 36,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp0d7vucut.py\", line 27,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    cnt = 0\n\
    \    for num in arr:\n        digits = list(map(int, str(abs(num))))\n       \
    \ if sum(digits) > 0:\n            cnt += 1\n    return cnt\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgc2g5wv2.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgc2g5wv2.py\", line 31,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpgc2g5wv2.py\", line 22,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([x\
    \ for x in arr if sum(int(y) for y in str(abs(x))) > 0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp139ddxvl.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp139ddxvl.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp139ddxvl.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)\
    \ == 0:\n        return 0\n    elif len(arr) == 1:\n        if sum_digits(arr[0])\
    \ > 0:\n            return 1\n        else:\n            return 0\n    else:\n\
    \        return count_nums([arr[0]]) + count_nums(arr[1:])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpczudbflm.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpczudbflm.py\", line 34,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpczudbflm.py\", line 25,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpczudbflm.py\"\
    , line 21, in count_nums\n    return count_nums([arr[0]]) + count_nums(arr[1:])\n\
    \  File \"/tmp/tmpczudbflm.py\", line 16, in count_nums\n    if sum_digits(arr[0])\
    \ > 0:\nNameError: name 'sum_digits' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpye77l9w2.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpye77l9w2.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpye77l9w2.py\", line 17,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for elem in arr:\n        sum_digits = 0\n        elem = abs(elem)\n\
    \        while elem != 0:\n            sum_digits += elem % 10\n            elem\
    \ //= 10\n        if sum_digits > 0:\n            count += 1\n    return count\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx5krhcge.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpx5krhcge.py\", line 35,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpx5krhcge.py\", line 26,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb09aukcw.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpb09aukcw.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpb09aukcw.py\", line 17,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # TODO:\
    \ Your code here\n    raise NotImplementedError(\"Not implemented.\")\n \n \n\
    \ \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpemb55p_w.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpemb55p_w.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpemb55p_w.py\", line 19,\
    \ in check\n    assert candidate([]) == 0\n  File \"/tmp/tmpemb55p_w.py\", line\
    \ 14, in count_nums\n    raise NotImplementedError(\"Not implemented.\")\nNotImplementedError:\
    \ Not implemented.\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    #return\
    \ 0\n    #return 1\n    #return 3\n    #pass\n    return sum(1 for n in arr if\
    \ sum(map(int, str(abs(n)))) > 0)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp16plr0ch.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp16plr0ch.py\", line 30,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp16plr0ch.py\", line 21,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # your code\
    \ here\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwq80wwvl.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpwq80wwvl.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpwq80wwvl.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \n@test\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw0860f90.py\", line\
    \ 15, in <module>\n    @test\nNameError: name 'test' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n\
    \        return 0\n    count = 0\n    for i in arr:\n        if i < 0:\n     \
    \       j = -i\n        else:\n            j = i\n        while j > 0:\n     \
    \       count += j % 10\n            j //= 10\n    return count\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm4_9576t.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpm4_9576t.py\", line 37,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpm4_9576t.py\", line 28,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        sum_digits = 0\n        if i >= 0:\n         \
    \   for j in str(i):\n                sum_digits += int(j)\n        else:\n  \
    \          for j in str(i)[1:]:\n                sum_digits += int(j)\n      \
    \  if sum_digits > 0:\n            count += 1\n    return count\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq389hic5.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpq389hic5.py\", line 37,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpq389hic5.py\", line 28,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counter\
    \ = 0\n    for num in arr:\n        if abs(num) < 10:\n            if num > 0:\n\
    \                counter += 1\n        else:\n            temp = abs(num)\n  \
    \          last_digit = temp % 10\n            temp //= 10\n            total\
    \ = last_digit\n            while temp > 0:\n                last_digit = temp\
    \ % 10\n                temp //= 10\n                total += last_digit\n   \
    \         if total > 0:\n                counter += 1\n    return counter\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        total = 0\n        if i < 0:\n            i =\
    \ i * -1\n        for n in str(i):\n            total += int(n)\n        if total\
    \ > 0:\n            count += 1\n    return count\n\ndef check(candidate):\n  \
    \  assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9z7ak7wg.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp9z7ak7wg.py\", line 35,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp9z7ak7wg.py\", line 26,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # convert\
    \ to array of signed digits, then count values with non-zero sum\n    return len([x\
    \ for x in [sum(to_signed_digits(n)) for n in arr] if x != 0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpws7bssqz.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpws7bssqz.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpws7bssqz.py\", line 18,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpws7bssqz.py\"\
    , line 14, in count_nums\n    return len([x for x in [sum(to_signed_digits(n))\
    \ for n in arr] if x != 0])\n  File \"/tmp/tmpws7bssqz.py\", line 14, in <listcomp>\n\
    \    return len([x for x in [sum(to_signed_digits(n)) for n in arr] if x != 0])\n\
    NameError: name 'to_signed_digits' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp91a3mstt.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp91a3mstt.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp91a3mstt.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6_iwms3m.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp6_iwms3m.py\", line 27,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp6_iwms3m.py\", line 19,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def signed_digits(n):\n\
    \        return n if n > 0 else n * -1\n    return len([x for x in arr if sum(map(signed_digits,\
    \ num_to_arr(x))) > 0])\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3uuh8ynk.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp3uuh8ynk.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp3uuh8ynk.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp3uuh8ynk.py\"\
    , line 15, in count_nums\n    return len([x for x in arr if sum(map(signed_digits,\
    \ num_to_arr(x))) > 0])\n  File \"/tmp/tmp3uuh8ynk.py\", line 15, in <listcomp>\n\
    \    return len([x for x in arr if sum(map(signed_digits, num_to_arr(x))) > 0])\n\
    NameError: name 'num_to_arr' is not defined\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        if num < 0:\n            num = abs(num)\n  \
    \      arr_str = str(num)\n        arr_sum = 0\n        for s in arr_str:\n  \
    \          arr_sum += int(s)\n        if arr_sum > 0:\n            count += 1\n\
    \    return count\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) ==\
    \ 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv5i3ybzw.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpv5i3ybzw.py\", line 35,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpv5i3ybzw.py\", line 26,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sum(map(int,\
    \ str(i))) > 0 for i in arr)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2r7bu3yn.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2r7bu3yn.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp2r7bu3yn.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmp2r7bu3yn.py\"\
    , line 13, in count_nums\n    return sum(sum(map(int, str(i))) > 0 for i in arr)\n\
    \  File \"/tmp/tmp2r7bu3yn.py\", line 13, in <genexpr>\n    return sum(sum(map(int,\
    \ str(i))) > 0 for i in arr)\nValueError: invalid literal for int() with base\
    \ 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1a6a0r51.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp1a6a0r51.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmp1a6a0r51.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for i in arr:\n        if sum(int(dig) for dig in str(abs(i))) > 0:\n\
    \            count += 1\n    return count\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2,\
    \ -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg7hzsyzq.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpg7hzsyzq.py\", line 29,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpg7hzsyzq.py\", line 20,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprypdg_p9.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmprypdg_p9.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmprypdg_p9.py\", line 16,\
    \ in check\n    assert candidate([]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1\
    \ for i in arr if sum(map(int, str(abs(i)))) > 0)\n\ndef check(candidate):\n \
    \   assert candidate([]) == 0\n    assert candidate([-1, -2, 0]) == 0\n    assert\
    \ candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0,\
    \ 1, 5]) == 5\n    assert candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert\
    \ candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n\
    \    assert candidate([1]) == 1\n\ndef test_check():\n    check(count_nums)\n\n\
    test_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvrkrh4zb.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpvrkrh4zb.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpvrkrh4zb.py\", line 17,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for num in arr:\n        string = str(num)\n        sum = 0\n       \
    \ if num < 0:\n            sum += abs(int(string[0]))\n            i = 1\n   \
    \     else:\n            i = 0\n        while i < len(string):\n            sum\
    \ += int(string[i])\n            i += 1\n        if sum > 0:\n            count\
    \ += 1\n    return count\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2,\
    \ 3, 4, 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert\
    \ candidate([1, 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45,\
    \ -56, 0]) == 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1])\
    \ == 1\n\ndef test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg6fiir1w.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpg6fiir1w.py\", line 40,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmpg6fiir1w.py\", line 31,\
    \ in check\n    assert candidate([-1, -2, 0]) == 0\n  File \"/tmp/tmpg6fiir1w.py\"\
    , line 18, in count_nums\n    sum += abs(int(string[0]))\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  exit_code: -1
  status: Exception
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count =\
    \ 0\n    for a in arr:\n        if a > 0:\n            while a > 0:\n        \
    \        count += a % 10\n                a //= 10\n        else:\n          \
    \  while a < 0:\n                count += abs(a % 10)\n                a //= 10\n\
    \    return count\n\ndef check(candidate):\n    assert candidate([]) == 0\n  \
    \  assert candidate([-1, -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4,\
    \ 5]) == 6\n    assert candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1,\
    \ 100, 98, -7, 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) ==\
    \ 5\n    assert candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef\
    \ test_check():\n    check(count_nums)\n\ntest_check()\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n  \
    \  \"\"\"\n    Write a function count_nums which takes an array of integers and\
    \ returns\n    the number of elements which has a sum of digits > 0.\n    If a\
    \ number is negative, then its first signed digit will be negative:\n    e.g.\
    \ -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1,\
    \ 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([-1,\
    \ -2, 0]) == 0\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\n    assert\
    \ candidate([1, 6, 9, -6, 0, 1, 5]) == 5\n    assert candidate([1, 100, 98, -7,\
    \ 1, -1]) == 4\n    assert candidate([12, 23, 34, -45, -56, 0]) == 5\n    assert\
    \ candidate([0, 1]) == 1\n    assert candidate([1]) == 1\n\ndef test_check():\n\
    \    check(count_nums)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6gi8eh2.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph6gi8eh2.py\", line 26,\
    \ in test_check\n    check(count_nums)\n  File \"/tmp/tmph6gi8eh2.py\", line 18,\
    \ in check\n    assert candidate([1, 1, 2, -2, 3, 4, 5]) == 6\nAssertionError\n"
  exit_code: -1
  status: Exception

name: HumanEval_118_get_closest_vowel
language: py
results:
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv87e92as.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpv87e92as.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpv87e92as.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpylzeed7a.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpylzeed7a.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpylzeed7a.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for c in reversed(word):\n\
    \        if c in \"aeiou\":\n            return c\n        elif c in \"bcdfghjklmnpqrstvwxyz\"\
    :\n            return \"\"\n    return \"\"\n\n\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl2kdusn_.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpl2kdusn_.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpl2kdusn_.py\"\
    , line 25, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    word = word.lower()\n    vowels_pos = [pos for pos, ch in enumerate(word)\
    \ if ch in vowels]\n    for pos in vowels_pos[::-1]:\n        if word[pos - 1]\
    \ not in vowels and word[pos + 1] not in vowels:\n            return word[pos]\n\
    \    return ''\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx93m_0jt.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpx93m_0jt.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpx93m_0jt.py\"\
    , line 29, in check\n    assert candidate('ali') == ''\n  File \"/tmp/tmpx93m_0jt.py\"\
    , line 20, in get_closest_vowel\n    if word[pos - 1] not in vowels and word[pos\
    \ + 1] not in vowels:\nIndexError: string index out of range\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    last_vowel\
    \ = \"\"\n    last_consonant = \"\"\n    for c in word[::-1]:\n        if c in\
    \ \"aeiou\":\n            last_vowel = c\n        elif c not in \"aeiou\":\n \
    \           last_consonant = c\n            break\n    if last_vowel and last_consonant:\n\
    \        return last_vowel\n    else:\n        return \"\"\n\n\n@pytest.mark.parametrize(\n\
    \    \"word, expected\",\n    [\n        (\"yogurt\", \"u\"),\n        (\"FULL\"\
    , \"U\"),\n        (\"quick\", \"\"),\n        (\"ab\", \"\"),\n        (\"abc\"\
    , \"\"),\n        (\"abcdef\", \"e\"),\n        (\"abcde\", \"e\"),\n        (\"\
    abcdefg\", \"e\"),\n        (\"abcdeU\", \"U\"),\n        (\"abcdefU\", \"U\"\
    ),\n        (\"abcdefgU\", \"U\"),\n        (\"abcdefUg\", \"U\"),\n        (\"\
    abcdefgUi\", \"U\"),\n        (\"abcdefgUii\", \"U\"),\n        (\"abcdefgUiii\"\
    , \"U\"),\n        (\"abcdefgUiiii\", \"U\"),\n        (\"abcdefgUiiiii\", \"\
    U\"),\n        (\"abcdefgUiiiiii\", \"U\"),\n        (\"abcdefgUiiiiiii\", \"\
    U\"),\n        (\"abcdefgUiiiiiiii\", \"U\"),\n        (\"abcdefgUiiiiiiiii\"\
    , \"U\"),\n        (\"abcdefgUiiiiiiiiii\", \"U\"),\n        (\"abcdefgUiiiiiiiiiii\"\
    , \"U\"),\n        (\"abcdefgUiiiiiiiiiiii\", \"U\"),\n        (\"abcdefgUiiiiiiiiiiiii\"\
    , \"U\"),\n        (\"abcdefgUiiiiiiiiiiiiii\", \"U\"),\n        (\"abcdefgUiiiiiiiiiiiiiii\"\
    , \"U\"),\n        (\"abcdefgUiiiiiiiiiiiiiiii\", \"U\"),\n        (\"abcdefgUiiiiiiiiiiiiiiiii\"\
    , \"U\"),\n        (\"abcdefgUiiiiiiiiiiiiiiiiii\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpfh98yfsj.py\", line 62\n    (\"abcdefgUiiiiiiiiiiiiiiiiii\n\
    \                               ^\nSyntaxError: EOL while scanning string literal\n"
  exit_code: 1
  status: SyntaxError
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Your code\
    \ here\n\n\n@pytest.mark.parametrize(\n    \"word, expected\",\n    [\n      \
    \  (\"yogurt\", \"u\"),\n        (\"FULL\", \"U\"),\n        (\"quick\", \"\"\
    ),\n        (\"ab\", \"\"),\n        (\"EU_mo_Vi\", \"o\"),\n        (\"lab\"\
    , \"a\"),\n        (\"EiaAAe\", \"A\"),\n        (\"trOi_Ae\", \"A\"),\n     \
    \   (\"ShA_EuM\", \"A\"),\n        (\"a_OMA_Ae\", \"A\"),\n        (\"poA\", \"\
    A\"),\n        (\"_mEaAM_\", \"A\"),\n        (\"AE_EuS\", \"E\"),\n        (\"\
    _euS_i\", \"u\"),\n        (\"_hEi_\", \"E\"),\n        (\"_e_\", \"e\"),\n  \
    \      (\"MaO_a\", \"O\"),\n        (\"au_\", \"u\"),\n        (\"O\", \"O\"),\n\
    \        (\"A\", \"A\"),\n        (\"e\", \"e\"),\n        (\"i\", \"i\"),\n \
    \       (\"o\", \"o\"),\n        (\"u\", \"u\"),\n        (\"_\", \"\"),\n   \
    \     (\"\", \"\"),\n    ],\n)\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc0pn_xo9.py\", line\
    \ 19, in <module>\n    @pytest.mark.parametrize(\nNameError: name 'pytest' is\
    \ not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqkixsvoz.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpqkixsvoz.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpqkixsvoz.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a',\
    \ 'e', 'i', 'o', 'u']\n    closest_vowel = ''\n    for idx, letter in enumerate(word):\n\
    \        if letter in vowels:\n            if (word[idx-1] not in vowels) and\
    \ (word[idx+1] not in vowels):\n                closest_vowel = letter\n    return\
    \ closest_vowel\n \nassert get_closest_vowel(\"yogurt\") == \"u\"\nassert get_closest_vowel(\"\
    FULL\") == \"U\"\nassert get_closest_vowel(\"quick\") == \"\"\nassert get_closest_vowel(\"\
    ab\") == \"\"\n \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe9vbahap.py\", line\
    \ 25, in <module>\n    assert get_closest_vowel(\"FULL\") == \"U\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n   \
    \ assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd57dk5wn.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpd57dk5wn.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpd57dk5wn.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n\
    \    word = word[::-1]\n    for i in range(len(word)):\n        if word[i] in\
    \ vowels:\n            if word[i + 1] not in vowels:\n                return word[i]\n\
    \    return ''\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdnqnl4e6.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpdnqnl4e6.py\", line 41,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpdnqnl4e6.py\"\
    , line 28, in check\n    assert candidate('easy') == ''\n  File \"/tmp/tmpdnqnl4e6.py\"\
    , line 20, in get_closest_vowel\n    if word[i + 1] not in vowels:\nIndexError:\
    \ string index out of range\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return ''\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp239l_gpl.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp239l_gpl.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp239l_gpl.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9v40zx0s.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp9v40zx0s.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp9v40zx0s.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word[::-1]\n\
    \    word_vowels = [char for char in word if char in \"aeiou\"]\n    word_consonants\
    \ = [char for char in word if char not in \"aeiou\"]\n    for index, vowel in\
    \ enumerate(word_vowels):\n        if vowel == word_consonants[index] or vowel\
    \ == word_consonants[index + 1]:\n            return vowel\n    return \"\"\n\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe17ubh7k.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpe17ubh7k.py\", line 41,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpe17ubh7k.py\"\
    , line 26, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # My code\
    \ here\n    return \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgx_nxzly.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpgx_nxzly.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpgx_nxzly.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx04windf.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpx04windf.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpx04windf.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return get_closest_element(word,\
    \ 'aeiou')\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdpub7gy5.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpdpub7gy5.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpdpub7gy5.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpdpub7gy5.py\"\
    , line 16, in get_closest_vowel\n    return get_closest_element(word, 'aeiou')\n\
    NameError: name 'get_closest_element' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word)\
    \ < 3:\n        return \"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    i = len(word) - 1\n    while i > 0:\n        curr = word[i]\n        prev\
    \ = word[i - 1]\n        if curr in vowels and prev not in vowels:\n         \
    \   return curr\n        i -= 1\n    return \"\"\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk34igifg.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpk34igifg.py\", line 45,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpk34igifg.py\"\
    , line 34, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = ''\n\
    \    consonant = []\n    if len(word) <= 2:\n        return ''\n    else:\n  \
    \      for letter in word:\n            if letter in 'AEIOU':\n              \
    \  vowel = letter\n            else:\n                consonant.append(letter)\n\
    \        for let in word[::-1]:\n            if let in 'AEIOU':\n            \
    \    if word.index(let) == len(word) - 1:\n                    pass\n        \
    \        else:\n                    if word[word.index(let) + 1] in consonant:\n\
    \                        return let\n                    else:\n             \
    \           pass\n            else:\n                pass\n    return vowel\n\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyexxblsy.py\", line\
    \ 58, in <module>\n    test_check()\n  File \"/tmp/tmpyexxblsy.py\", line 56,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpyexxblsy.py\"\
    , line 41, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n    pass\n\n\ndef check(candidate):\n    assert candidate('yogurt') ==\
    \ 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n\
    \    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwuxhh7q4.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpwuxhh7q4.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpwuxhh7q4.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Get the\
    \ reversed word and find first vowel\n    # between two consonants.\n    return\
    \ get_first_vowel_between_consonants(word[::-1])[::-1]\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqj11pyd1.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpqj11pyd1.py\", line 37,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpqj11pyd1.py\"\
    , line 22, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpqj11pyd1.py\"\
    , line 18, in get_closest_vowel\n    return get_first_vowel_between_consonants(word[::-1])[::-1]\n\
    NameError: name 'get_first_vowel_between_consonants' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\
    aeiou\"\n    list_word = [x for x in word]\n    result = [x for x in list_word\
    \ if x in vowel]\n    if not result:\n        return \"\"\n    else:\n       \
    \ vow_pos = [x for x in list_word if x in vowel]\n        con_pos = [x for x in\
    \ list_word if x not in vowel]\n        if len(con_pos) <= 1:\n            return\
    \ \"\"\n        else:\n            vow_pos.reverse()\n            con_pos.reverse()\n\
    \            result = []\n            for i in range(len(vow_pos)):\n        \
    \        if i == 0:\n                    if vow_pos[i] in vowel and vow_pos[i\
    \ + 1] in vowel:\n                        result.append(vow_pos[i])\n        \
    \        else:\n                    if con_pos[i - 1] in con_pos and vow_pos[i\
    \ + 1] in vowel:\n                        result.append(vow_pos[i])\n        \
    \    return str(result[-1])\n\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwa747rfm.py\", line\
    \ 59, in <module>\n    test_check()\n  File \"/tmp/tmpwa747rfm.py\", line 57,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpwa747rfm.py\"\
    , line 42, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpwa747rfm.py\"\
    , line 35, in get_closest_vowel\n    if con_pos[i - 1] in con_pos and vow_pos[i\
    \ + 1] in vowel:\nIndexError: list index out of range\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word)\
    \ == 1:\n        return ''\n    elif len(word) == 2:\n        if word[0] not in\
    \ \"aeiouAEIOU\" and word[1] in \"aeiouAEIOU\":\n            return word[1]\n\
    \        else:\n            return ''\n    else:\n        for i in range(len(word)-2,\
    \ -1, -1):\n            if word[i] not in \"aeiouAEIOU\" and word[i+1] in \"aeiouAEIOU\"\
    :\n                return word[i+1]\n        return ''\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd0r6kqo3.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpd0r6kqo3.py\", line 45,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpd0r6kqo3.py\"\
    , line 34, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    cons = 'bcdfghjklmnpqrstvwxyz'\n    word = word.lower()\n    for i in range(len(word)\
    \ - 1, 0, -1):\n        if word[i] in vowels and word[i - 1] in cons:\n      \
    \      return word[i]\n    return ''\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_mlds0z3.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp_mlds0z3.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp_mlds0z3.py\"\
    , line 29, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppyxwr5x4.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmppyxwr5x4.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmppyxwr5x4.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n   \
    \ \n    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfv5alfly.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpfv5alfly.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpfv5alfly.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyr2e2uxc.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpyr2e2uxc.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpyr2e2uxc.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Write code\
    \ here:\n\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_closest\
    \ = []\n    for i in range(len(word)):\n        if i == 0:\n            if word[i]\
    \ in vowels:\n                break\n        elif word[i] in vowels:\n       \
    \     if word[i - 1] not in vowels:\n                if word[i + 1] not in vowels:\n\
    \                    vowels_closest.append(word[i])\n        elif i == len(word)\
    \ - 1:\n            if word[i] in vowels:\n                break\n    if len(vowels_closest)\
    \ > 0:\n        return vowels_closest[-1]\n    else:\n        return \"\"\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6khvkyqf.py\", line\
    \ 55, in <module>\n    test_check()\n  File \"/tmp/tmp6khvkyqf.py\", line 53,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp6khvkyqf.py\"\
    , line 46, in check\n    assert candidate('ba') == ''\n  File \"/tmp/tmp6khvkyqf.py\"\
    , line 26, in get_closest_vowel\n    if word[i + 1] not in vowels:\nIndexError:\
    \ string index out of range\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    index = len(word)\
    \ - 1\n    while index > 0:\n        if word[index].lower() in 'aeiou':\n    \
    \        break\n        index -= 1\n    return word[index] if index > 0 else ''\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5g7_vfnq.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp5g7_vfnq.py\", line 39,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp5g7_vfnq.py\"\
    , line 26, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(\"\
    aeiouAEIOU\")\n    for word in word.split()[::-1]:\n        prev_l, curr_l = \"\
    \", \"\"\n        for c in word:\n            if c in vowels:\n              \
    \  if prev_l not in vowels and curr_l not in vowels:\n                    return\
    \ c\n            prev_l, curr_l = curr_l, c\n    return \"\"\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphj_b5u2t.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmphj_b5u2t.py\", line 43,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmphj_b5u2t.py\"\
    , line 28, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpruigtf0k.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpruigtf0k.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpruigtf0k.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a',\
    \ 'e', 'i', 'o', 'u']\n    left_consonant = None\n    right_consonant = None\n\
    \    vowel = None\n    for c in word[::-1]:\n        if c in vowels:\n       \
    \     vowel = c\n        else:\n            if vowel is not None:\n          \
    \      right_consonant = c\n                break\n            left_consonant\
    \ = c\n    if left_consonant is None or right_consonant is None:\n        return\
    \ ''\n    return vowel\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7vnl12or.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmp7vnl12or.py\", line 48,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp7vnl12or.py\"\
    , line 42, in check\n    assert candidate('quick') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a',\
    \ 'e', 'i', 'o', 'u']\n    pass\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpalupypwl.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpalupypwl.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpalupypwl.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for i in range(len(word)-1,\
    \ 0, -1):\n        if word[i] in \"AEIOUaeiou\" and word[i-1] not in \"AEIOUaeiou\"\
    :\n            return word[i]\n    return \"\"\n\n\ndef check(candidate):\n  \
    \  assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n  \
    \  assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc4ek5dbl.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpc4ek5dbl.py\", line 38,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpc4ek5dbl.py\"\
    , line 27, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Your code\
    \ here\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n   \
    \ assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphn5nf4s8.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmphn5nf4s8.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmphn5nf4s8.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n   \
    \ assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxymaoxqr.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpxymaoxqr.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpxymaoxqr.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    index = 0\n\
    \    vowel = ''\n    last_vowel = ''\n    if len(word) == 1:\n        return \"\
    \"\n    while index < len(word) - 1:\n        if index == 0:\n            if word[index]\
    \ not in vowels and word[index + 1] in vowels:\n                last_vowel = word[index\
    \ + 1]\n        elif word[index] in vowels and word[index - 1] not in vowels and\
    \ word[index + 1] not in vowels:\n            vowel = word[index]\n          \
    \  break\n        index += 1\n    if vowel:\n        return vowel\n    elif last_vowel:\n\
    \        return last_vowel\n    else:\n        return \"\"\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5aiibhh.py\", line\
    \ 55, in <module>\n    test_check()\n  File \"/tmp/tmpi5aiibhh.py\", line 53,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpi5aiibhh.py\"\
    , line 38, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpi5aiibhh.py\"\
    , line 23, in get_closest_vowel\n    if word[index] not in vowels and word[index\
    \ + 1] in vowels:\nNameError: name 'vowels' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    prev_char = None\n    prev_vowel = None\n    for c in reversed(word):\n\
    \        if c in vowels:\n            if prev_char in vowels:\n              \
    \  continue\n            else:\n                prev_vowel = c\n             \
    \   break\n        prev_char = c\n    return prev_vowel\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb25td2ju.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmpb25td2ju.py\", line 46,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpb25td2ju.py\"\
    , line 33, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    for i in range(len(word) - 1, 0, -1):\n        if word[i] in vowels\
    \ and word[i - 1] not in vowels:\n            return word[i]\n    return \"\"\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvwz9s39q.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpvwz9s39q.py\", line 39,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpvwz9s39q.py\"\
    , line 28, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpndxns1tq.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpndxns1tq.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpndxns1tq.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxzsyppz8.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpxzsyppz8.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpxzsyppz8.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n    if len(word)\
    \ < 3:\n        return ''\n    for x in range(len(word)-2, 0, -1):\n        if\
    \ word[x] in vowels and word[x-1] in consonants and word[x+1] in consonants:\n\
    \            return word[x]\n    return ''\n\nprint(get_closest_vowel(\"yogurt\"\
    ))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\n\
    print(get_closest_vowel(\"ab\"))\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: "u\n\n\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = set(\"\
    aeiou\")\n    for i in range(len(word) - 1, 0, -1):\n        if word[i] in vowel\
    \ and word[i - 1] not in vowel:\n            return word[i]\n    return \"\"\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpapfz0i2_.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpapfz0i2_.py\", line 39,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpapfz0i2_.py\"\
    , line 28, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    idx = word.rfind(vowels[0])\n\n    while idx > 0:\n        if word[idx\
    \ - 1] not in vowels and word[idx + 1] not in vowels:\n            return word[idx]\n\
    \        idx = word.rfind(vowels[vowels.find(word[idx]) + 1], 0, idx)\n\n    return\
    \ \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n   \
    \ assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn2ebe49l.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpn2ebe49l.py\", line 43,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpn2ebe49l.py\"\
    , line 28, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] in vowels:\n\
    \            return word[i]\n    return \"\"\n\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7eibxsop.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp7eibxsop.py\", line 38,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp7eibxsop.py\"\
    , line 25, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    VOWELS = 'aeiou'\n\
    \    CONSONANTS = 'bcdfghjklmnpqrstvwxyz'\n    # Your code goes here\n    conseq\
    \ = []\n    for i in range(len(word)):\n        for j in range(i+1, len(word)):\n\
    \            if word[i] in CONSONANTS and word[j] in CONSONANTS:\n           \
    \     conseq.append(word[i:j+1])\n    print(conseq)\n    for seq in conseq:\n\
    \        for char in seq:\n            if char in VOWELS:\n                return\
    \ char\n    return ''\n\nget_closest_vowel(\"yogurt\") \ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: "['yog', 'yogur', 'yogurt', 'gur', 'gurt', 'rt']\n['yog', 'yogur', 'yogurt',\
    \ 'gur', 'gurt', 'rt']\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph0e1wkg6.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmph0e1wkg6.py\", line 48,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmph0e1wkg6.py\"\
    , line 33, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprg8jwcnj.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmprg8jwcnj.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmprg8jwcnj.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pattern =\
    \ re.compile(r'[^aeiou]([aeiou])(?=[^aeiou])')\n    match = pattern.search(word[::-1])\n\
    \    return match.group(1) if match else ''\n\n\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpljxugm7v.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpljxugm7v.py\", line 37,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpljxugm7v.py\"\
    , line 22, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpljxugm7v.py\"\
    , line 16, in get_closest_vowel\n    pattern = re.compile(r'[^aeiou]([aeiou])(?=[^aeiou])')\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    VOWELS = set(\"\
    AEIOUaeiou\")\n    CONSONANTS = set(\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    )\n    closest_vowel = ''\n    for idx, ch in enumerate(word[::-1]):\n       \
    \ if ch in VOWELS:\n            closest_vowel = ch\n        elif ch in CONSONANTS:\n\
    \            if closest_vowel:\n                break\n    return closest_vowel\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplsxpfshe.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmplsxpfshe.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmplsxpfshe.py\"\
    , line 31, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n    consonants = \"bcdfghjklmnpqrstvwxz\"\n    vowels = \"aeiou\"\n  \
    \  if word == \"\":\n        return \"\"\n    elif word[-1] in vowels:\n     \
    \   return \"\"\n    elif word[-1] in consonants:\n        for i in range(len(word)-1,\
    \ -1, -1):\n            if word[i] in vowels:\n                if i == len(word)-1:\n\
    \                    return \"\"\n                elif word[i+1] in consonants:\n\
    \                    return word[i]\n                else:\n                 \
    \   return \"\"\n    else:\n        return \"\"\n\n\ndef check(candidate):\n \
    \   assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n \
    \   assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp9r5tb7f.py\", line\
    \ 54, in <module>\n    test_check()\n  File \"/tmp/tmpp9r5tb7f.py\", line 52,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpp9r5tb7f.py\"\
    , line 44, in check\n    assert candidate('ab') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    word = word[::-1]\n    for i in range(len(word)):\n\
    \        if word[i] in vowel:\n            if i + 1 < len(word) and word[i + 1]\
    \ not in vowel:\n                return word[i]\n            elif i - 1 >= 0 and\
    \ word[i - 1] not in vowel:\n                return word[i]\n    return \"\"\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpptzuk25i.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpptzuk25i.py\", line 43,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpptzuk25i.py\"\
    , line 30, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for i in range(len(word)\
    \ - 1, 0, -1):\n        if word[i] in \"aeiou\":\n            if word[i - 1] not\
    \ in \"aeiou\":\n                return word[i]\n    return \"\"\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4fe47u73.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp4fe47u73.py\", line 39,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp4fe47u73.py\"\
    , line 28, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    regex = r'[^aeiou][aeiou][^aeiou]|[^aeiou][aeiou]$'\n\
    \    vowels = re.findall(regex, word, re.IGNORECASE)\n    return '' if len(vowels)\
    \ == 0 else vowels[-1][1]\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"\
    FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"\
    ))\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpef0etjg_.py\", line\
    \ 20, in <module>\n    print(get_closest_vowel(\"yogurt\"))\n  File \"/tmp/tmpef0etjg_.py\"\
    , line 17, in get_closest_vowel\n    vowels = re.findall(regex, word, re.IGNORECASE)\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Your code\
    \ here\n    if len(word)<3:\n        return \"\"\n    vowel = [\"a\",\"e\",\"\
    i\",\"o\",\"u\"]\n    for index,_ in enumerate(word):\n        if word[index]\
    \ in vowel:\n            return word[index]\n    for index,_ in enumerate(word):\n\
    \        if (word[index] not in vowel) and (word[index+1] in vowel) and (word[index+2]\
    \ not in vowel):\n            return word[index+1]\n    return \"\"\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ol6kg0s.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmp3ol6kg0s.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp3ol6kg0s.py\"\
    , line 29, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiqk5cn01.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpiqk5cn01.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpiqk5cn01.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    ...\n    return\
    \ result\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n \
    \   assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkcoo3m3z.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpkcoo3m3z.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpkcoo3m3z.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpkcoo3m3z.py\"\
    , line 17, in get_closest_vowel\n    return result\nNameError: name 'result' is\
    \ not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    last_consonant = 0\n    for i in range(len(word)\
    \ - 1, -1, -1):\n        if word[i] not in vowels:\n            last_consonant\
    \ = i\n            break\n    if last_consonant == 0:\n        return \"\"\n \
    \   for i in range(last_consonant - 1, -1, -1):\n        if word[i] in vowels:\n\
    \            return word[i]\n    return \"\"\n\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdfkathmt.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpdfkathmt.py\", line 45,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpdfkathmt.py\"\
    , line 32, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_w72owoi.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp_w72owoi.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp_w72owoi.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for i in range(len(word)-1,\
    \ 1, -1):\n        if word[i] in \"aeiou\" and word[i-1] not in \"aeiou\" and\
    \ word[i+1] not in \"aeiou\":\n            return word[i]\n    return \"\"\n \
    \   \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_rrw9p7n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp_rrw9p7n.py\", line 37,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp_rrw9p7n.py\"\
    , line 23, in check\n    assert candidate('full') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfew53m4y.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpfew53m4y.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpfew53m4y.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'AEIOU'\n\
    \    consonants = 'BCDFGHJKLMNPQRSTVWXYZ'\n    ind = 0\n    found = ''\n    while\
    \ ind < len(word) - 1:\n        try:\n            if word[ind] in consonants and\
    \ word[ind + 1] in vowels:\n                found = word[ind + 1]\n          \
    \      break\n        except IndexError:\n            return ''\n        ind +=\
    \ 1\n    return found\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp39ltsrvl.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmp39ltsrvl.py\", line 46,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp39ltsrvl.py\"\
    , line 31, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word[::-1]\n\
    \    vowel = 'aeiou'\n    for i in range(len(word)):\n        if word[i] in vowel:\n\
    \            if i < len(word) - 1 and word[i + 1] not in vowel:\n            \
    \    return word[i]\n            elif i < len(word) - 2 and word[i + 2] not in\
    \ vowel:\n                return word[i]\n    return ''\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdp9j7f8a.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpdp9j7f8a.py\", line 42,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpdp9j7f8a.py\"\
    , line 31, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoa1a8xt0.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpoa1a8xt0.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpoa1a8xt0.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiouAEIOU\"\n    if not word:\n        return \"\"\n    if len(word) == 1:\n\
    \        return \"\"\n\n    if word[-1] in vowels:\n        return \"\"\n    #\
    \ if len(word) == 2:\n    #     return \"\"\n    if len(word) == 2:\n        if\
    \ word[0] in vowels:\n            return \"\"\n        else:\n            return\
    \ \"\"\n    if word[-1] not in vowels:\n        for i in range(len(word) - 1,\
    \ -1, -1):\n            if word[i] in vowels:\n                if word[i - 1]\
    \ not in vowels:\n                    return word[i]\n    return \"\"\n\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj83bfckd.py\", line\
    \ 57, in <module>\n    test_check()\n  File \"/tmp/tmpj83bfckd.py\", line 55,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpj83bfckd.py\"\
    , line 42, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    index = len(word)\
    \ - 1\n    while index >= 0:\n        if word[index] in \"aeiouAEIOU\":\n    \
    \        if index == len(word) - 1:\n                index -= 1\n            \
    \    continue\n            if word[index + 1] not in \"aeiouAEIOU\":\n       \
    \         return word[index]\n        index -= 1\n    return \"\"\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6iv0xfjm.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmp6iv0xfjm.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp6iv0xfjm.py\"\
    , line 31, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n    vowel = \"\"\n    for i in range(len(word)-1,0,-1):\n        if word[i]\
    \ in \"aeiou\":\n            if word[i-1] not in \"aeiou\":\n                return\
    \ word[i]\n            else:\n                vowel = word[i]\n    return vowel\n\
    \    \n    \n    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd3jdho7r.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpd3jdho7r.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpd3jdho7r.py\"\
    , line 31, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiouAEIOU\"\n    if len(word) < 3:\n        return \"\"\n    if word[-1] in vowels:\n\
    \        return \"\"\n    if word[-2] in vowels:\n        return \"\"\n    right_vowels\
    \ = [letter for letter in reversed(word) if letter in vowels]\n    if len(right_vowels)\
    \ == 0:\n        return \"\"\n    if right_vowels[0] == word[-2]:\n        return\
    \ right_vowels[0]\n    return right_vowels[1]\n\n\nprint(get_closest_vowel(\"\
    yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"\
    ))\nprint(get_closest_vowel(\"ab\"))\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: "o\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpznklrgps.py\", line\
    \ 32, in <module>\n    print(get_closest_vowel(\"FULL\"))\n  File \"/tmp/tmpznklrgps.py\"\
    , line 28, in get_closest_vowel\n    return right_vowels[1]\nIndexError: list\
    \ index out of range\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    consonants = 'bcdfghjklmnpqrstvwxyz'\n    for index, char in enumerate(word[::-1]):\n\
    \        if char in vowels:\n            if index == len(word) - 1:\n        \
    \        return ''\n            if word[::-1][index + 1] in consonants:\n    \
    \            return char\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_xe496mk.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp_xe496mk.py\", line 42,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp_xe496mk.py\"\
    , line 31, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return None\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy9cwez3h.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpy9cwez3h.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpy9cwez3h.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    VOWELS = 'aeiouAEIOU'\n\
    \    result = ''\n    for i in range(len(word) - 1, 0, -1):\n        if word[i]\
    \ in VOWELS and word[i - 1] not in VOWELS:\n            result = word[i]\n   \
    \         break\n    return result\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppznouup5.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmppznouup5.py\", line 41,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmppznouup5.py\"\
    , line 30, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for i in range(len(word)\
    \ - 1, 0, -1):\n        if word[i] in VOWELS and word[i - 1] not in VOWELS:\n\
    \            return word[i]\n    return \"\"\n\n\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcf8o95ed.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpcf8o95ed.py\", line 38,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpcf8o95ed.py\"\
    , line 23, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpcf8o95ed.py\"\
    , line 17, in get_closest_vowel\n    if word[i] in VOWELS and word[i - 1] not\
    \ in VOWELS:\nNameError: name 'VOWELS' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    pass\n\n\ndef check(candidate):\n    assert candidate('yogurt') ==\
    \ 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n\
    \    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3_bc2pqe.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp3_bc2pqe.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp3_bc2pqe.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    n = len(word)\n\
    \    for i in range(n-1, 0, -1):\n        if word[i] in \"AEIOUaeiou\":\n    \
    \        if word[i-1] not in \"AEIOUaeiou\":\n                return word[i]\n\
    \    return \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt') ==\
    \ 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n\
    \    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg0c5wpcl.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpg0c5wpcl.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpg0c5wpcl.py\"\
    , line 29, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp67vhqeoo.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp67vhqeoo.py\", line 34,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp67vhqeoo.py\"\
    , line 19, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    raise NotImplementedError\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4nhluq3u.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp4nhluq3u.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp4nhluq3u.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmp4nhluq3u.py\"\
    , line 16, in get_closest_vowel\n    raise NotImplementedError\nNotImplementedError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word)\
    \ < 3:\n        return \"\"\n    for i in range(len(word) - 2, -1, -1):\n    \
    \    if word[i] in \"aeiou\" and word[i + 1] not in \"aeiou\":\n            return\
    \ word[i]\n    return \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpow84ntz9.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpow84ntz9.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpow84ntz9.py\"\
    , line 27, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return \"\"\
    \n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpicda2wjh.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpicda2wjh.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpicda2wjh.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    closest_vowel\
    \ = ''\n    # your code here\n    return closest_vowel\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp02dnf4zx.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp02dnf4zx.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp02dnf4zx.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    for i in range(len(word) - 1, 0, -1):\n        if word[i] in vowels\
    \ and word[i - 1] not in vowels:\n            return word[i]\n    return \"\"\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcdnoezbl.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpcdnoezbl.py\", line 39,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpcdnoezbl.py\"\
    , line 28, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    idx = -1\n\
    \    for i in range(len(word) - 1, -1, -1):\n        if word[i] in \"aeiou\":\n\
    \            idx = i\n            break\n    if idx == -1:\n        return \"\"\
    \n    for i in range(idx, -1, -1):\n        if word[i] not in \"aeiou\":\n   \
    \         return word[idx]\n    return \"\"\n\n\nassert get_closest_vowel(\"yogurt\"\
    ) == \"u\"\nassert get_closest_vowel(\"FULL\") == \"U\"\nassert get_closest_vowel(\"\
    quick\") == \"\"\nassert get_closest_vowel(\"ab\") == \"\"\nprint(\"PASSED!!!\"\
    )\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjtbvcob7.py\", line\
    \ 30, in <module>\n    assert get_closest_vowel(\"FULL\") == \"U\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in range(len(word) - 1, 0, -1):\n\
    \        if word[i] in vowels and word[i-1] not in vowels:\n            return\
    \ word[i]\n    return \"\"\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwq_g572t.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpwq_g572t.py\", line 38,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpwq_g572t.py\"\
    , line 27, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    reverse_word\
    \ = word[::-1]\n    vowel_list = ['a', 'e', 'i', 'o', 'u']\n    for vowel in vowel_list:\n\
    \        if vowel in reverse_word:\n            for i in range(1, len(reverse_word)):\n\
    \                if reverse_word[i] in vowel_list:\n                    continue\n\
    \                else:\n                    return reverse_word[i - 1]\n    return\
    \ ''\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"\
    ))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: "t\n\nk\n\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt74mqq_p.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpt74mqq_p.py\", line 48,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpt74mqq_p.py\"\
    , line 33, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a',\
    \ 'e', 'i', 'o', 'u']\n    closest_vowel = ''\n    if word[-1] in vowels:\n  \
    \      return ''\n    if word[0] in vowels:\n        return ''\n    else:\n  \
    \      for i in range(1, len(word)):\n            if word[-i] in vowels:\n   \
    \             closest_vowel = word[-i]\n                return closest_vowel\n\
    \                break\n    return closest_vowel\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_1npr7op.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmp_1npr7op.py\", line 47,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp_1npr7op.py\"\
    , line 41, in check\n    assert candidate('quick') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set([\"\
    a\", \"e\", \"i\", \"o\", \"u\"])\n    found = False\n    prev_char = word[-1]\n\
    \    for char in word[::-1]:\n        if char in vowels:\n            if found:\n\
    \                return prev_char\n            found = True\n        else:\n \
    \           if found:\n                return char\n        prev_char = char\n\
    \    return \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt') ==\
    \ 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n\
    \    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr2oa2yoo.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmpr2oa2yoo.py\", line 47,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpr2oa2yoo.py\"\
    , line 32, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    reversed_word\
    \ = word[::-1]\n    vowels = (\"A\", \"E\", \"I\", \"O\", \"U\", \"Y\")\n    vowels_reached\
    \ = False\n    result = \"\"\n    for c in reversed_word:\n        if c.upper()\
    \ in vowels:\n            if vowels_reached:\n                return result[::-1]\n\
    \            else:\n                vowels_reached = True\n        else:\n   \
    \         if vowels_reached:\n                return result[::-1]\n        result\
    \ += c\n    return \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzz1qq8co.py\", line\
    \ 51, in <module>\n    test_check()\n  File \"/tmp/tmpzz1qq8co.py\", line 49,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpzz1qq8co.py\"\
    , line 34, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7_8u7194.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp7_8u7194.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp7_8u7194.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(['a',\
    \ 'e', 'i', 'o', 'u'])\n    closest_vowel = ''\n    for i in range(len(word) -\
    \ 1, -1, -1):\n        if (word[i] in vowels) and (not word[i + 1] in vowels):\n\
    \            closest_vowel = word[i]\n            break\n    return closest_vowel\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_fxmvqot.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp_fxmvqot.py\", line 41,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp_fxmvqot.py\"\
    , line 28, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'AEIOUaeiou'\n\
    \    for i in range(len(word) - 1, 0, -1):\n        cur_letter = word[i]\n   \
    \     if cur_letter in vowels:\n            if word[i - 1] not in vowels:\n  \
    \              return cur_letter\n        else:\n            if word[i - 1] in\
    \ vowels:\n                return ''\n    return ''\nget_closest_vowel(\"yogurt\"\
    )\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9id4bafg.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmp9id4bafg.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp9id4bafg.py\"\
    , line 29, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a',\
    \ 'e', 'i', 'o', 'u']\n    for vowel in reversed(word):\n        if vowel in vowels:\n\
    \            for cons in reversed(word):\n                if cons not in vowels:\n\
    \                    return vowel\n        else:\n            pass\n    return\
    \ ''\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfk0b2q1d.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpfk0b2q1d.py\", line 43,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpfk0b2q1d.py\"\
    , line 30, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(\"\
    aeiouAEIOU\")\n    for i in range(len(word) - 1, -1, -1):\n        if word[i]\
    \ in vowels:\n            if word[i + 1] not in vowels:\n                return\
    \ word[i]\n    return \"\"\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0mncvkrn.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp0mncvkrn.py\", line 39,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp0mncvkrn.py\"\
    , line 26, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    ...\n\n\n\
    assert get_closest_vowel(\"yogurt\") == \"u\"\nassert get_closest_vowel(\"FULL\"\
    ) == \"U\"\nassert get_closest_vowel(\"quick\") == \"\"\nassert get_closest_vowel(\"\
    ab\") == \"\"\nassert get_closest_vowel(\"bacrra\") == \"a\"\nassert get_closest_vowel(\"\
    cbu\") == \"u\"\nassert get_closest_vowel(\"faa\") == \"a\"\n \nprint(\"Exercise\
    \ 77 is correct.\")\n \n \ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0844tkzy.py\", line\
    \ 19, in <module>\n    assert get_closest_vowel(\"yogurt\") == \"u\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_upper = [vowel.upper() for vowel\
    \ in vowels]\n    vowels += vowels_upper\n    vowel_positions = []\n    for i,\
    \ letter in enumerate(word):\n        if letter in vowels:\n            vowel_positions.append(i)\n\
    \    reversed_word = word[::-1]\n    reversed_vowel_positions = [len(word) - position\
    \ - 1 for position in vowel_positions]\n    for i, letter in enumerate(reversed_word):\n\
    \        if i == 0:\n            if reversed_word[i] in vowels_upper and reversed_word[i\
    \ + 1] not in vowels:\n                return reversed_word[i]\n        if i ==\
    \ len(reversed_word) - 1:\n            if reversed_word[i] in vowels and reversed_word[i\
    \ - 1] not in vowels:\n                return reversed_word[i]\n        if reversed_word[i]\
    \ in vowels:\n            if reversed_word[i + 1] not in vowels and reversed_word[i\
    \ - 1] not in vowels:\n                return reversed_word[i]\n    return \"\"\
    \n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp16zfsfl5.py\", line\
    \ 56, in <module>\n    test_check()\n  File \"/tmp/tmp16zfsfl5.py\", line 54,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp16zfsfl5.py\"\
    , line 41, in check\n    assert candidate('easy') == ''\n  File \"/tmp/tmp16zfsfl5.py\"\
    , line 33, in get_closest_vowel\n    if reversed_word[i + 1] not in vowels and\
    \ reversed_word[i - 1] not in vowels:\nIndexError: string index out of range\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    result = \"\
    \"\n    vowels = \"aeiou\"\n    for i in range(len(word) - 1, 0, -1):\n      \
    \  if word[i] in vowels and word[i-1] not in vowels:\n            result = word[i]\n\
    \            break\n    return result\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3_8s06j8.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp3_8s06j8.py\", line 41,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp3_8s06j8.py\"\
    , line 30, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return '\\\
    0'\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf_k0lnjc.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpf_k0lnjc.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpf_k0lnjc.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Your code\
    \ here\n    pass\n    word = word[::-1]\n    vowel = \"\"\n    for i in range(len(word)):\n\
    \        if word[i] in \"aeiouAEIOU\":\n            vowel = word[i]\n        \
    \    break\n    if vowel:\n        return vowel\n    else:\n        return \"\"\
    \n\n\n@pytest.mark.parametrize(\n    \"test_input,expected\",\n    [\n       \
    \ (\"yogurt\", \"u\"),\n        (\"FULL\", \"U\"),\n        (\"quick\", \"\"),\n\
    \        (\"ab\", \"\"),\n        (\"m\", \"\"),\n        (\"muffin\", \"u\"),\n\
    \        (\"sweat\", \"e\"),\n        (\"aeeou\", \"\"),\n        (\"w\", \"\"\
    ),\n        (\"\", \"\"),\n        (\"b\", \"\"),\n        (\"g\", \"\"),\n  \
    \      (\"e\", \"\"),\n        (\"a\", \"\"),\n        (\"A\", \"\"),\n      \
    \  (\"o\", \"\"),\n        (\"O\", \"\"),\n        (\"u\", \"\"),\n        (\"\
    U\", \"\"),\n        (\"i\", \"\"),\n        (\"I\", \"\"),\n        (\"E\", \"\
    \"),\n        (\"xxyyx\", \"y\"),\n        (\"zzzy\", \"y\"),\n        (\"xx\"\
    , \"\"),\n        (\"zz\", \"\"),\n        (\"xzyxzyz\", \"y\"),\n        (\"\
    xxxyxyzy\", \"y\"),\n        (\"xxxyxyz\", \"x\"),\n        (\"xyz\", \"\"),\n\
    \        (\"xyzxyz\", \"z\"),\n        (\"yyyxyzxyz\", \"y\"),\n        (\"whatsup\"\
    , \"a\"),\n        (\"Norman\", \"o\"),\n        (\"San\", \"a\"),\n        (\"\
    xzyxzyxzyz\", \"y\"),\n        (\"xzyxzyxzy\", \"z\"),\n        (\"d\", \"\"),\n\
    \        (\"t\", \"\"),\n        (\"l\", \"\"),\n        (\"xxxyxyzxyz\", \"y\"\
    ),\n        (\"muffinzzz\", \"u\"),\n        (\"yogurtzzz\", \"u\"),\n       \
    \ (\"zzzz\", \"\"),\n        (\"yyyy\", \"\"),\n        (\"xxxx\", \"\"),\n  \
    \      (\"yyxyxx\", \"\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp77jqwtpf.py\", line 79\n    (\"yyxyxx\", \"\n        \
    \       ^\nSyntaxError: EOL while scanning string literal\n"
  exit_code: 1
  status: SyntaxError
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    word = word.lower()\n    x = word[-1]\n\
    \    for i in word[-2::-1]:\n        if i in vowels:\n            return i\n \
    \       elif x in vowels:\n            return x\n    return \"\"\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphke41sz7.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmphke41sz7.py\", line 43,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmphke41sz7.py\"\
    , line 30, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not word:\n\
    \        return \"\"\n    vowels = \"aeiou\"\n    left = right = 0\n    for i\
    \ in range(len(word) - 1, -1, -1):\n        if word[i] in vowels:\n          \
    \  left = i\n            break\n    for i in range(left, len(word)):\n       \
    \ if word[i] not in vowels:\n            right = i\n            break\n    return\
    \ word[left:right] or \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqip3kywe.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmpqip3kywe.py\", line 47,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpqip3kywe.py\"\
    , line 34, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    for i in range(len(word) - 1, -1, -1):\n        char = word[i]\n        if\
    \ char not in vowels:\n            continue\n        if i < len(word) - 1 and\
    \ word[i + 1] not in vowels:\n            return char\n        if i > 0 and word[i\
    \ - 1] not in vowels:\n            return char\n    return ''\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf2nrkkl0.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpf2nrkkl0.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpf2nrkkl0.py\"\
    , line 31, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = list(word)\n\
    \    consonants = [c for c in word if c not in 'aeiou']\n    vowels = [c for c\
    \ in word if c in 'aeiou']\n    # print(consonants, vowels)\n    if len(consonants)\
    \ < 2:\n        return ''\n    c = consonants[-1]\n    index = word.index(c)\n\
    \    if len(consonants) == 2:\n        return word[-1]\n    for i in range(len(vowels)):\n\
    \        if word.index(vowels[i]) > index:\n            return vowels[i]\n   \
    \ return ''\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0pbvdva6.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmp0pbvdva6.py\", line 47,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp0pbvdva6.py\"\
    , line 32, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(\"\
    aeiou\")\n    last_vowel = \"\"\n    for letter in reversed(word):\n        if\
    \ letter in vowels:\n            last_vowel = letter\n            break\n    if\
    \ not last_vowel:\n        return \"\"\n    last_consonant = \"\"\n    for letter\
    \ in reversed(word):\n        if letter not in vowels:\n            last_consonant\
    \ = letter\n            break\n    if not last_consonant:\n        return \"\"\
    \n    for letter in reversed(word):\n        if letter in vowels:\n          \
    \  return letter\n    return \"\"\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu9bg2ydg.py\", line\
    \ 54, in <module>\n    test_check()\n  File \"/tmp/tmpu9bg2ydg.py\", line 52,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpu9bg2ydg.py\"\
    , line 39, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    @pytest.mark.parametrize(\n    \"word,expected\",\n    [\n        (\"yogurt\"\
    , \"u\"),\n        (\"FULL\", \"U\"),\n        (\"quick\", \"\"),\n        (\"\
    ab\", \"\"),\n        (\"hello\", \"e\"),\n        (\"woRld\", \"o\"),\n     \
    \   (\"xRime\", \"\"),\n        (\"yeYe\", \"e\"),\n        (\"Nice\", \"i\"),\n\
    \        (\"LovE\", \"e\"),\n        (\"SmiLE\", \"i\"),\n        (\"cArs\", \"\
    a\"),\n        (\"sYuShi\", \"u\"),\n        (\"ThE\", \"E\"),\n        (\"FacE\"\
    , \"E\"),\n        (\"BoOk\", \"o\"),\n        (\"aPPle\", \"a\"),\n        (\"\
    WorD\", \"o\"),\n        (\"RUle\", \"U\"),\n        (\"SING\", \"I\"),\n    \
    \    (\"OPEN\", \"E\"),\n        (\"wE\", \"e\"),\n        (\"hE\", \"e\"),\n\
    \        (\"brEaK\", \"e\"),\n        (\"tOp\", \"o\"),\n        (\"a\", \"\"\
    ),\n        (\"b\", \"\"),\n        (\"c\", \"\"),\n        (\"d\", \"\"),\n \
    \       (\"f\", \"\"),\n        (\"g\", \"\"),\n        (\"h\", \"\"),\n     \
    \   (\"j\", \"\"),\n        (\"k\", \"\"),\n        (\"l\", \"\"),\n        (\"\
    m\", \"\"),\n        (\"n\", \"\"),\n        (\"p\", \"\"),\n        (\"q\", \"\
    \"),\n        (\"r\", \"\"),\n        (\"s\", \"\"),\n        (\"t\", \"\"),\n\
    \        (\"v\", \"\"),\n        (\"w\", \"\"),\n        (\"x\", \"\"),\n    \
    \    (\"y\", \"\"),\n        (\"z\", \"\"),\n        (\"U\", \"\"),\n        (\"\
    W\", \"\"),\n        (\"zZ\", \"\"),\n        (\"zW\", \"\"),\n        (\"dQ\"\
    , \"\"),\n        (\"fW\", \"\"),\n        (\"gX\", \"\"),\n        (\"hY\", \"\
    \"),\n        (\"jZ\", \"\"),\n        (\"pW\", \"\"),\n        (\"qX\", \"\"\
    ),\n        (\"rY\", \"\"),\n        (\"sZ\", \"\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp801s0pec.py\", line 81\n    (\"sZ\", \"\n           ^\n\
    SyntaxError: EOL while scanning string literal\n"
  exit_code: 1
  status: SyntaxError
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return \"\"\
    \n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvjd1jus_.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpvjd1jus_.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpvjd1jus_.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5g01d4f6.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp5g01d4f6.py\", line 34,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp5g01d4f6.py\"\
    , line 19, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a',\
    \ 'e', 'i', 'o', 'u']\n    vowel_indices = [i for i, c in enumerate(word) if c\
    \ in vowels]\n    for index in vowel_indices[::-1]:\n        if index > 0 and\
    \ index < len(word) - 1:\n            prev_char = word[index - 1]\n          \
    \  next_char = word[index + 1]\n            if prev_char not in vowels and next_char\
    \ not in vowels:\n                return word[index]\n    return ''\n    # since\
    \ we check from the end, if there is a vowel in the middle of\n    # two consonants,\
    \ we can return it. If no vowel is found, we can return\n    # an empty string\
    \ \n    # if we only check the vowels from the beginning, we can only return\n\
    \    # the very first vowel that meets the condition, and we won't know if\n \
    \   # there are other vowels in the rest of the word\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc622tjm7.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpc622tjm7.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpc622tjm7.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # TODO: Implement\
    \ me\n    pass\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps2423b_d.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmps2423b_d.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmps2423b_d.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for idx, c\
    \ in enumerate(word[::-1]):\n        if c not in VOWELS:\n            continue\n\
    \        prev_idx = len(word) - idx - 1\n        prev_c = word[prev_idx - 1]\n\
    \        if prev_c not in VOWELS:\n            return c\n    return \"\"\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7v39n3jj.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp7v39n3jj.py\", line 42,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp7v39n3jj.py\"\
    , line 27, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmp7v39n3jj.py\"\
    , line 17, in get_closest_vowel\n    if c not in VOWELS:\nNameError: name 'VOWELS'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = {'a',\
    \ 'e', 'i', 'o', 'u'}\n    cons = set(string.ascii_lowercase) - vowels\n\n   \
    \ right = [v for v in word[::-1] if v in vowels]\n    left = [v for v in word[::-1]\
    \ if v in cons]\n\n    try:\n        return left[left.index(left[next(i for i,\
    \ l in enumerate(left) if l in vowels)])]\n    except IndexError:\n        return\
    \ ''\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqwezsn24.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpqwezsn24.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpqwezsn24.py\"\
    , line 29, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpqwezsn24.py\"\
    , line 17, in get_closest_vowel\n    cons = set(string.ascii_lowercase) - vowels\n\
    NameError: name 'string' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwnvbs9vj.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpwnvbs9vj.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpwnvbs9vj.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0_bykm03.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp0_bykm03.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp0_bykm03.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    assert len(word)\
    \ > 0\n    word = word.upper()\n    vowels = \"AEIOU\"\n    for i in range(len(word)\
    \ - 1, -1, -1):\n        if word[i] in vowels:\n            if i + 1 < len(word)\
    \ and word[i + 1] not in vowels:\n                return word[i]\n           \
    \ if i - 1 >= 0 and word[i - 1] not in vowels:\n                return word[i]\n\
    \    return \"\"\n    pass\n\n\nassert get_closest_vowel(\"yogurt\") == \"U\"\n\
    assert get_closest_vowel(\"FULL\") == \"U\"\nassert get_closest_vowel(\"quick\"\
    ) == \"\"\nassert get_closest_vowel(\"ab\") == \"\"\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprsiltzgu.py\", line\
    \ 31, in <module>\n    assert get_closest_vowel(\"quick\") == \"\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwhujgf1u.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpwhujgf1u.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpwhujgf1u.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    word = word.lower()\n    for i in range(len(word) - 1, 0, -1):\n        curr\
    \ = word[i]\n        prev = word[i - 1]\n        if curr in vowels and prev not\
    \ in vowels:\n            return curr\n    return ''\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1_33azuu.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp1_33azuu.py\", line 42,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp1_33azuu.py\"\
    , line 31, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # vowels,\
    \ consonants = \"AEIOU\", \"BCDFGHJKLMNPQRSTVWXYZ\"\n    # stack = []\n    # vowels_found\
    \ = []\n    # if not word[-1] in vowels:\n    #     stack.append(word[-1])\n \
    \   # for c in reversed(word[:-1]):\n    #     if c in vowels:\n    #        \
    \ vowels_found.append(c)\n    #     elif c in consonants:\n    #         stack.append(c)\n\
    \    #     if len(stack) == 2:\n    #         break\n    # if len(stack) == 2:\n\
    \    #     return min(vowels_found, key=lambda v: abs(ord(v) - ord(stack[0])))\n\
    \    # return \"\"\n\n    # key:\n    # If a vowel is found between two consonants,\
    \ return the vowel. \n    # If a consonant is found between two vowels, return\
    \ nothing. \n    # If a consonant is found at the end, return nothing. \n    #\
    \ If a vowel is found at the end, return nothing. \n    # The word will never\
    \ contain two consonants next to each other. \n    # The word will never contain\
    \ two vowels next to each other. \n    # If a consonant is found at the beginning\
    \ of the word, return nothing. \n    # If a vowel is found at the beginning of\
    \ the word, return nothing. \n    # The only case you need to pay attention to\
    \ is if the word has no vowels, \n    # then return an empty string. \n    # If\
    \ a consonant is found in the middle of the word, \n    # check if it is between\
    \ two vowels. If it is, return nothing.\n    vowels = set(\"AEIOU\")\n    prev_vowel\
    \ = None\n    prev_consonant = None\n    for c in reversed(word):\n        if\
    \ c in vowels:\n            prev_vowel = c\n        else:\n            prev_consonant\
    \ = c\n            if prev_vowel:\n                return prev_vowel\n    return\
    \ \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n   \
    \ assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwpzsxqkt.py\", line\
    \ 76, in <module>\n    test_check()\n  File \"/tmp/tmpwpzsxqkt.py\", line 74,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpwpzsxqkt.py\"\
    , line 59, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n    return\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgw06epnx.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpgw06epnx.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpgw06epnx.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpubjawfro.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpubjawfro.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpubjawfro.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = (\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n    word = word.strip()\n    cons_count = 0\n\
    \    for i in range(len(word) - 1, -1, -1):\n        if word[i] not in vowels:\n\
    \            cons_count += 1\n        elif cons_count > 1:\n            return\
    \ word[i]\n    return \"\"\n\n\n@pytest.mark.parametrize(\n    \"input_argument,\
    \ expected_return\",\n    [\n        (\"yogurt\", \"u\"),\n        (\"FULL\",\
    \ \"U\"),\n        (\"quick\", \"\"),\n        (\"ab\", \"\"),\n        (\"\"\
    , \"\"),\n        (\"I\", \"\"),\n        (\"O\", \"\"),\n        (\"U\", \"\"\
    ),\n        (\"E\", \"\"),\n        (\"A\", \"\"),\n        (\"AaAaAaAaEeEeEeEeIiIiIiIiOoOoOoOoUuUuUuUu\"\
    , \"A\"),\n        (\"a\", \"\"),\n        (\"e\", \"\"),\n        (\"i\", \"\"\
    ),\n        (\"o\", \"\"),\n        (\"u\", \"\"),\n        (\"z\", \"\"),\n \
    \       (\"zz\", \"\"),\n        (\"ZZ\", \"\"),\n        (\"zzz\", \"\"),\n \
    \       (\"xYYxYYxYYxYY\", \"Y\"),\n        (\"XxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxX\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmp8ke5mn9l.py\", line 51\n    (\"XxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxX\n\
    \                                                                            \
    \                                                                            \
    \                                        ^\nSyntaxError: EOL while scanning string\
    \ literal\n"
  exit_code: 1
  status: SyntaxError
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n    pass\n\n\ndef check(candidate):\n    assert candidate('yogurt') ==\
    \ 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n\
    \    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1p4_92pt.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp1p4_92pt.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp1p4_92pt.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp433dw1ot.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp433dw1ot.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp433dw1ot.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf8musn33.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpf8musn33.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpf8musn33.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Your code\
    \ here\n    from string import ascii_letters\n    vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n    result = ''\n    for char in ascii_letters:\n        if char in word:\n\
    \            if char in vowels:\n                if word.rfind(char) > 0:\n  \
    \                  if word[word.rfind(char) - 1] not in vowels:\n            \
    \            result = char\n    return result\n\n\ndef check(candidate):\n   \
    \ assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n   \
    \ assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppcmsytla.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmppcmsytla.py\", line 45,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmppcmsytla.py\"\
    , line 34, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcwrrz1st.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpcwrrz1st.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpcwrrz1st.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n    pass\n\n\ndef check(candidate):\n    assert candidate('yogurt') ==\
    \ 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n\
    \    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1s4ad1u5.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp1s4ad1u5.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp1s4ad1u5.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc_zqo2jv.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpc_zqo2jv.py\", line 34,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpc_zqo2jv.py\"\
    , line 19, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = {\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    for i in range(len(word) - 1, -1, -1):\n\
    \        if word[i] in vowels:\n            if i > 0 and word[i - 1] not in vowels:\n\
    \                return word[i]\n            elif i < len(word) - 1 and word[i\
    \ + 1] not in vowels:\n                return word[i]\n    return \"\"\n\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxnnh9m1k.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpxnnh9m1k.py\", line 42,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpxnnh9m1k.py\"\
    , line 29, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    @pytest.mark.parametrize(\"test_input,expected\", [\n    (\"yogurt\", \"u\"),\n\
    \    (\"FULL\", \"U\"),\n    (\"quick\", \"\"),\n    (\"ab\", \"\"),\n    (\"\
    AB\", \"\"),\n    (\"AyU\", \"A\"),\n    (\"frau\", \"a\"),\n    (\"A\", \"\"\
    ),\n    (\"\", \"\"),\n    (\"e\", \"\"),\n    (\"eE\", \"E\"),\n    (\"aei\"\
    , \"a\"),\n    (\"AAe\", \"A\"),\n    (\"aeEiO\", \"E\"),\n    (\"aeiou\", \"\
    e\"),\n    (\"cAEIOU\", \"A\"),\n    (\"caeiou\", \"a\"),\n    (\"Caeiou\", \"\
    a\"),\n    (\"cAEIOu\", \"A\"),\n    (\"cAEIO\", \"\"),\n    (\"aeioua\", \"a\"\
    ),\n    (\"aeiouA\", \"A\"),\n    (\"caeiouA\", \"a\"),\n    (\"caeioua\", \"\
    a\"),\n    (\"aeioUC\", \"U\"),\n    (\"aeioUCa\", \"a\"),\n    (\"aeioUCA\",\
    \ \"A\"),\n    (\"aeioUCa\", \"a\"),\n    (\"aeiouc\", \"u\"),\n    (\"aeioucA\"\
    , \"a\"),\n    (\"AeioucA\", \"A\"),\n    (\"aeioucA\", \"a\"),\n    (\"aeiouc\"\
    , \"u\"),\n    (\"aEIOUC\", \"E\"),\n    (\"aEIOUc\", \"E\"),\n    (\"aEIOUC\"\
    , \"E\"),\n    (\"aEIOUc\", \"E\"),\n    (\"aeioucA\", \"a\"),\n    (\"AEIOUcA\"\
    , \"A\"),\n    (\"aeioucA\", \"a\"),\n    (\"aeioucA\", \"a\"),\n    (\"AEIOUcA\"\
    , \"A\"),\n    (\"aeioucA\", \"a\"),\n    (\"AEIOUcA\", \"A\"),\n    (\"AEIOUcA\"\
    , \"A\"),\n    (\"aeioucA\", \"a\"),\n    (\"AeI\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpbd9qq192.py\", line 66\n    (\"AeI\n        ^\nSyntaxError:\
    \ EOL while scanning string literal\n"
  exit_code: 1
  status: SyntaxError
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnorilnaf.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpnorilnaf.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpnorilnaf.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_uf5h5s.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp5_uf5h5s.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp5_uf5h5s.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiouAEIOU\"\n    for index, char in enumerate(word[::-1]):\n        if index\
    \ == 0:\n            continue\n        if word[-index] in vowels:\n          \
    \  if word[-index - 1] not in vowels:\n                return word[-index]\n \
    \       else:\n            if word[-index - 1] in vowels:\n                return\
    \ word[-index - 1]\n    return \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfg0h1bke.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpfg0h1bke.py\", line 45,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpfg0h1bke.py\"\
    , line 32, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1v66x_k1.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp1v66x_k1.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp1v66x_k1.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    s = ''\n \
    \   for i in word[::-1]:\n        if i in 'AEIOUaeiou':\n            s += i\n\
    \        else:\n            break\n    return s[0] if len(s) > 1 else ''\nprint(get_closest_vowel(\"\
    yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"\
    ))\nprint(get_closest_vowel(\"ab\"))\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: "\n\n\n\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqz2n5t1p.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpqz2n5t1p.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpqz2n5t1p.py\"\
    , line 29, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not word:\n\
    \        return ''\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    idx = []\n   \
    \ for i, c in enumerate(word):\n        if c in vowels:\n            idx.append(i)\n\
    \    if len(idx) < 2:\n        return ''\n    for i in range(len(idx) - 1, 0,\
    \ -1):\n        if idx[i] - idx[i - 1] > 1:\n            return word[idx[i - 1]]\n\
    \    return ''\n\n\n\ndef check(candidate):\n    assert candidate('yogurt') ==\
    \ 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n\
    \    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxq1az7q7.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpxq1az7q7.py\", line 48,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpxq1az7q7.py\"\
    , line 33, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkfuvfrwp.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpkfuvfrwp.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpkfuvfrwp.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word)\
    \ == 1:\n        return \"\"\n    result = []\n    vowel = \"aeiou\"\n    for\
    \ x in range(len(word)):\n        if word[x] in vowel:\n            result.append(x)\n\
    \    if len(result) == 0:\n        return \"\"\n    elif len(result) == 1:\n \
    \       return word[result[0]]\n    elif len(result) == 2:\n        if abs(result[0]\
    \ - result[1]) == 1:\n            return word[result[0]]\n        else:\n    \
    \        return \"\"\n    elif len(result) == 3:\n        return word[result[1]]\n\
    \    else:\n        if abs(result[-1] - result[-2]) == 1:\n            return\
    \ word[result[-2]]\n        else:\n            return word[result[-3]]\n\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt3alkkmh.py\", line\
    \ 59, in <module>\n    test_check()\n  File \"/tmp/tmpt3alkkmh.py\", line 57,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpt3alkkmh.py\"\
    , line 42, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpukhmqogo.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpukhmqogo.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpukhmqogo.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n    pass\n\n\n@pytest.mark.skip\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwzhp6a1s.py\", line\
    \ 20, in <module>\n    @pytest.mark.skip\nNameError: name 'pytest' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuz2xv7o.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmptuz2xv7o.py\", line 34,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmptuz2xv7o.py\"\
    , line 19, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    rev_word = word[::-1]\n    vowels_in_word\
    \ = []\n    for letter in rev_word:\n        if letter in vowels:\n          \
    \  vowels_in_word.append(letter)\n    if len(vowels_in_word) > 1:\n        return\
    \ vowels_in_word[1]\n    else:\n        return \"\"\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4aq291qa.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmp4aq291qa.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp4aq291qa.py\"\
    , line 29, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for i in reversed(range(len(word)\
    \ - 1)):\n        if word[i] in \"aeiou\" and word[i + 1] not in \"aeiou\":\n\
    \            return word[i]\n    return \"\"\n\n\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgscl96y_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpgscl96y_.py\", line 38,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpgscl96y_.py\"\
    , line 25, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    indices =\
    \ [i for i, x in enumerate(word) if x in \"aeiou\"]\n    print(indices)\n    if\
    \ len(indices) == 0:\n        return \"\"\n    if len(indices) == 1:\n       \
    \ return word[indices[0]]\n    for i in range(1, len(indices)):\n        if indices[i]\
    \ - indices[i-1] > 1:\n            return word[indices[i-1]+1]\n    return word[indices[-1]-1]\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: "[1, 3]\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphsquqrg_.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmphsquqrg_.py\", line 43,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmphsquqrg_.py\"\
    , line 28, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4zbze3zs.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp4zbze3zs.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp4zbze3zs.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    cons = set(\"\
    bcdfghjklmnpqrstvwxyz\")\n\n    # reverse string\n    reversed_string = word[::-1]\n\
    \n    # get all vowels in string\n    vowels = [char for char in reversed_string\
    \ if char in \"aeiou\"]\n\n    # find first vowel\n    idx = 0\n    while vowels[idx]\
    \ not in cons:\n        idx += 1\n\n    # return vowel if first consonant is found\
    \ else return empty string\n    return vowels[idx] if vowels[idx] in cons else\
    \ \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n   \
    \ assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd97dc6dx.py\", line\
    \ 51, in <module>\n    test_check()\n  File \"/tmp/tmpd97dc6dx.py\", line 49,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpd97dc6dx.py\"\
    , line 34, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpd97dc6dx.py\"\
    , line 26, in get_closest_vowel\n    while vowels[idx] not in cons:\nIndexError:\
    \ list index out of range\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    n = len(word)\n\
    \    vowels = \"aeiouAEIOU\"\n    for i in range(n-1, 0, -1):\n        if word[i]\
    \ in vowels and word[i-1] not in vowels:\n            return word[i]\n    return\
    \ \"\"\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpirx56vfd.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpirx56vfd.py\", line 39,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpirx56vfd.py\"\
    , line 28, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel_indexes\
    \ = []\n    for char in word:\n        if char in \"AEIOUaeiou\":\n          \
    \  vowel_indexes.append(word.index(char))\n    if len(vowel_indexes) > 1:\n  \
    \      vowel_indexes = [vowel_indexes[-1]]\n    else:\n        vowel_indexes =\
    \ []\n    return word[vowel_indexes[0]] if vowel_indexes else \"\"\n\n\nassert\
    \ get_closest_vowel(\"yogurt\") == \"u\"\nassert get_closest_vowel(\"FULL\") ==\
    \ \"U\"\nassert get_closest_vowel(\"quick\") == \"\"\nassert get_closest_vowel(\"\
    ab\") == \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9tyfhf0o.py\", line\
    \ 28, in <module>\n    assert get_closest_vowel(\"FULL\") == \"U\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprnn92utl.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmprnn92utl.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmprnn92utl.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    closest_vowel = ''\n    distance = float('inf')\n    for i, ch in enumerate(word):\n\
    \        if ch in vowels:\n            if i > 0 and i < len(word) - 1:\n     \
    \           if word[i - 1] not in vowels and word[i + 1] not in vowels:\n    \
    \                distance = min(distance, i)\n                    closest_vowel\
    \ = ch\n    return closest_vowel\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    from re import\
    \ search\n    vowels = \"aeiou\"\n    for i in range(len(word)-1, 0, -1):\n  \
    \      if word[i] in vowels and word[i-1] not in vowels:\n            return word[i]\n\
    \    return \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt') ==\
    \ 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n\
    \    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd2kgan54.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpd2kgan54.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpd2kgan54.py\"\
    , line 29, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    word = word.lower()\n    cons_count = 0\n    vowel_index = -1\n \
    \   for i in range(len(word) - 1, -1, -1):\n        if word[i] not in vowels:\n\
    \            cons_count += 1\n        else:\n            if cons_count > 1:\n\
    \                vowel_index = i\n                break\n            else:\n \
    \               cons_count = 0\n    if vowel_index != -1:\n        return word[vowel_index]\n\
    \    else:\n        return \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_p53kqf_.py\", line\
    \ 53, in <module>\n    test_check()\n  File \"/tmp/tmp_p53kqf_.py\", line 51,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp_p53kqf_.py\"\
    , line 38, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    ...\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoalvf5kc.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpoalvf5kc.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpoalvf5kc.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n\
    \    vowels_in_word = set(word) & set(vowels)\n    if len(vowels_in_word) == 0:\n\
    \        return ''\n    closest_vowel = None\n    closest_distance = len(word)\n\
    \    for v in vowels_in_word:\n        index = word.rfind(v)\n        if index\
    \ > 0 and word[index - 1] not in vowels:\n            if closest_distance > index:\n\
    \                closest_distance = index\n                closest_vowel = v\n\
    \    return closest_vowel\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1cw41lj5.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmp1cw41lj5.py\", line 47,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp1cw41lj5.py\"\
    , line 32, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyg7funcl.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpyg7funcl.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpyg7funcl.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvuxvorpq.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpvuxvorpq.py\", line 34,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpvuxvorpq.py\"\
    , line 19, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiouAEIOU\"\n    rev_word = word[::-1]\n    for i in range(1, len(rev_word)):\n\
    \        if rev_word[i] in vowels and rev_word[i-1] not in vowels:\n         \
    \   return rev_word[i]\n    return \"\"\n\nassert get_closest_vowel(\"yogurt\"\
    ) == \"u\"\nassert get_closest_vowel(\"FULL\") == \"U\"\nassert get_closest_vowel(\"\
    quick\") == \"\"\nassert get_closest_vowel(\"ab\") == \"\"\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa19xmi59.py\", line\
    \ 25, in <module>\n    assert get_closest_vowel(\"quick\") == \"\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Your code\
    \ goes here\n    pass\n\n\n@testwrapper\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprgsochoy.py\", line\
    \ 20, in <module>\n    @testwrapper\nNameError: name 'testwrapper' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants\
    \ = set(\"bcdfghjklmnpqrstvwxyz\")\n    vowels = set(\"aeiou\")\n    i = len(word)\
    \ - 1\n    while i >= 0:\n        if word[i] in consonants:\n            for c\
    \ in word[i:]:\n                if c in vowels:\n                    return c\n\
    \            return \"\"\n        i -= 1\n    return \"\"\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu8g6t_um.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpu8g6t_um.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpu8g6t_um.py\"\
    , line 29, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    # separate the last consonant\n\
    \    last_conso = \"\"\n    for ch in word[::-1]:\n        if ch not in vowels:\n\
    \            last_conso = ch + last_conso\n        else:\n            break\n\
    \    # separate the first consonant\n    first_conso = \"\"\n    for ch in word:\n\
    \        if ch not in vowels:\n            first_conso += ch\n        else:\n\
    \            break\n    # slice the string\n    if last_conso and first_conso:\n\
    \        sliced_word = word[len(first_conso):len(word)-len(last_conso)]\n    elif\
    \ last_conso:\n        sliced_word = word[:len(word)-len(last_conso)]\n    elif\
    \ first_conso:\n        sliced_word = word[len(first_conso):]\n    else:\n   \
    \     return \"\"\n    # slice the word and find the closest vowel \n    for index,\
    \ ch in enumerate(sliced_word):\n        if ch in vowels:\n            if ch in\
    \ sliced_word[index+1:]:\n                left = sliced_word[index+1:].index(ch)\n\
    \                right = len(sliced_word[index+1:]) - 1 - left\n             \
    \   if left > right:\n                    return ch\n                else:\n \
    \                   return sliced_word[index+1:][-1]\n            else:\n    \
    \            return ch\n    return \"\"\n\n\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppgfr8rap.py\", line\
    \ 74, in <module>\n    test_check()\n  File \"/tmp/tmppgfr8rap.py\", line 72,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmppgfr8rap.py\"\
    , line 57, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr0iap467.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpr0iap467.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpr0iap467.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = {\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    index = 1\n    cons_count = 0\n    while\
    \ index < len(word):\n        if word[len(word) - index] in vowels:\n        \
    \    if cons_count >= 2:\n                return word[len(word) - index]\n   \
    \         cons_count = 0\n        else:\n            cons_count += 1\n       \
    \ index += 1\n    return \"\"\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf2vhwvlb.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpf2vhwvlb.py\", line 45,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpf2vhwvlb.py\"\
    , line 32, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    for i in range(len(word) - 1, 0, -1):\n        if word[i] in vowels\
    \ and word[i-1] not in vowels:\n            return word[i]\n    return \"\"\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp33eh7rn5.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp33eh7rn5.py\", line 38,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp33eh7rn5.py\"\
    , line 27, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    consonants = 'bcdfghjklmnpqrstvwxyz'\n    v_pos = -1\n    c_pos = len(word)\n\
    \    result = ''\n    for i in range(len(word)):\n        char = word[i]\n   \
    \     if char in vowels:\n            v_pos = i\n        elif char in consonants:\n\
    \            c_pos = i\n            if v_pos > -1 and c_pos > v_pos:\n       \
    \         result = word[v_pos]\n                break\n    return result\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7wcsgx9l.py\", line\
    \ 51, in <module>\n    test_check()\n  File \"/tmp/tmp7wcsgx9l.py\", line 49,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp7wcsgx9l.py\"\
    , line 34, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    reversed_word\
    \ = word[::-1]\n    found_first_consonant = False\n    for letter in reversed_word:\n\
    \        if letter in \"aeiouAEIOU\":\n            if found_first_consonant:\n\
    \                return letter\n        else:\n            found_first_consonant\
    \ = True\n    return \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgtynac8r.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpgtynac8r.py\", line 43,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpgtynac8r.py\"\
    , line 30, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    index = len(word) - 1\n    while index >= 0:\n        if word[index]\
    \ in vowels:\n            return word[index]\n        index -= 1\n    return \"\
    \"\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7bgq0u_.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpk7bgq0u_.py\", line 41,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpk7bgq0u_.py\"\
    , line 28, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    idx = len(word)\
    \ - 1\n    vowels = \"aeiouAEIOU\"\n    while idx >= 0:\n        if word[idx]\
    \ in vowels:\n            return word[idx]\n        idx -= 1\n    return \"\"\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppu1rv02q.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmppu1rv02q.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmppu1rv02q.py\"\
    , line 27, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp259bf5i3.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp259bf5i3.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp259bf5i3.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvjrirum5.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpvjrirum5.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpvjrirum5.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not word:\n\
    \        return \"\"\n    elif len(word) == 1:\n        return \"\"\n    else:\n\
    \        vowels = ('a', 'e', 'i', 'o', 'u')\n        index = 0\n        for i\
    \ in range(len(word)-1, 0, -1):\n            if word[i] in vowels:\n         \
    \       index = i\n                break\n        if index == 0:\n           \
    \ return \"\"\n        elif word[index-1] in vowels:\n            return \"\"\n\
    \        elif index == len(word)-1:\n            return \"\"\n        elif word[index+1]\
    \ in vowels:\n            return \"\"\n        else:\n            return word[index]\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp34yh1zlh.py\", line\
    \ 57, in <module>\n    test_check()\n  File \"/tmp/tmp34yh1zlh.py\", line 55,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp34yh1zlh.py\"\
    , line 50, in check\n    assert candidate('anime') == 'i'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ goes here\n    if len(word) < 2:\n        return \"\"\n    vowels = \"aeiou\"\
    \n    if word[0] in vowels:\n        word = word[1:]\n    if word[-1] in vowels:\n\
    \        word = word[:-1]\n    if not word:\n        return \"\"\n    for i in\
    \ range(len(word) - 1, -1, -1):\n        if word[i] in vowels:\n            if\
    \ word[i + 1] not in vowels:\n                return word[i]\n    return \"\"\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7tfnyq8v.py\", line\
    \ 51, in <module>\n    test_check()\n  File \"/tmp/tmp7tfnyq8v.py\", line 49,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp7tfnyq8v.py\"\
    , line 36, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # # my solution:\n\
    \    # vowel = \"aeiou\"\n    # for i in range(len(word)-1, 0, -1):\n    #   \
    \  if word[i] in vowel and word[i-1] not in vowel:\n    #         return word[i]\n\
    \    # return \"\"\n\n    # \"\".join([x for x in word if x in \"aeiou\"]) ==>\
    \ 'ou'\n    # \"\".join([x for x in word if x not in \"aeiou\"]) ==> 'qck'\n \
    \   consonants = \"\".join([x for x in word if x not in \"aeiou\"])\n    vowels\
    \ = \"\".join([x for x in word if x in \"aeiou\"])\n    for i in range(len(vowels)-1,\
    \ 0, -1):\n        if vowels[i] in word and vowels[i-1] not in word:\n       \
    \     return vowels[i]\n    return \"\"\n\n\ndef check(candidate):\n    assert\
    \ candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n    assert\
    \ candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali')\
    \ == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n\
    \    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert\
    \ candidate('quick') == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia')\
    \ == ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb_pzj22t.py\", line\
    \ 51, in <module>\n    test_check()\n  File \"/tmp/tmpb_pzj22t.py\", line 49,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpb_pzj22t.py\"\
    , line 34, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiouAEIOU\"\n    consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n\
    \    i = len(word) - 1\n    while i >= 0:\n        c = word[i]\n        if c in\
    \ vowels:\n            break\n        i -= 1\n    if i == 0:\n        return \"\
    \"\n    else:\n        if word[i-1] in consonants:\n            return c\n   \
    \     else:\n            return \"\"\n    return \"\"\n\n\n@pytest.mark.parametrize(\"\
    test_input,expected\", [\n    (\"yogurt\", \"u\"),\n    (\"FULL\", \"U\"),\n \
    \   (\"quick\", \"\"),\n    (\"ab\", \"\"),\n    (\"aiouEE\", \"o\"),\n    (\"\
    abc\", \"\"),\n    (\"qwer\", \"\"),\n    (\"\", \"\"),\n    (\"aeioO\", \"e\"\
    ),\n    (\"bac\", \"\"),\n    (\"ooA\", \"o\"),\n    (\"ABa\", \"A\"),\n    (\"\
    aAa\", \"a\"),\n    (\"s aaAa\", \"a\"),\n    (\"abce\", \"e\"),\n    (\"yogu\"\
    , \"\"),\n    (\"a aaAa\", \"a\"),\n    (\"xabcfaeiou\", \"a\"),\n    (\"abcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcdeabcde\"\
    , \"e\"),\n    (\"myABcCdEfGhIJklmNoPQrStUvwXyZ\", \"U\"),\n    (\"aBcCdEfGhIJklmNoPQrStUvwXyZ\"\
    , \"a\"),\n    (\"abCcDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ\", \"E\"),\n\
    \    (\"abcDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ\", \"e\"),\n    (\"pqrStUvwXyZ\"\
    , \"U\"),\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n  \
    \  assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpl4k7ijny.py\", line 60\n    def check(candidate):\n  \
    \  ^\nSyntaxError: invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiouAEIOU\"\n    pattern = re.compile(\".*[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]([aeiouAEIOU])[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ].*\"\
    )\n    result = pattern.match(word)\n    if result:\n        return result.group(1)\n\
    \    else:\n        return \"\"\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"\
    FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"\
    ))\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2bc6gc_6.py\", line\
    \ 24, in <module>\n    print(get_closest_vowel(\"yogurt\"))\n  File \"/tmp/tmp2bc6gc_6.py\"\
    , line 17, in get_closest_vowel\n    pattern = re.compile(\".*[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]([aeiouAEIOU])[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ].*\"\
    )\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return \"\"\
    .join(re.findall(r'[a-zA-Z]*([aeiou]{1})[a-zA-Z]*', word))\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph9zdpnf2.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmph9zdpnf2.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmph9zdpnf2.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmph9zdpnf2.py\"\
    , line 16, in get_closest_vowel\n    return \"\".join(re.findall(r'[a-zA-Z]*([aeiou]{1})[a-zA-Z]*',\
    \ word))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word[::-1]\n\
    \    l = len(word)\n    result = \"\"\n    for i in range(l):\n        if word[i]\
    \ in 'aeiouAEIOU':\n            if i+1 < l and word[i+1] not in 'aeiouAEIOU':\n\
    \                if i+2 < l and word[i+2] not in 'aeiouAEIOU':\n             \
    \       result = word[i]\n        if result != \"\":\n            break\n    return\
    \ result\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n \
    \   assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplopcevqy.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmplopcevqy.py\", line 45,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmplopcevqy.py\"\
    , line 30, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    raise NotImplementedError()\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb6je9nnp.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpb6je9nnp.py\", line 34,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpb6je9nnp.py\"\
    , line 19, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpb6je9nnp.py\"\
    , line 16, in get_closest_vowel\n    raise NotImplementedError()\nNotImplementedError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpujagtclk.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpujagtclk.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpujagtclk.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n   \
    \ \nassert get_closest_vowel(\"yogurt\") == \"u\"\nassert get_closest_vowel(\"\
    FULL\") == \"U\"\nassert get_closest_vowel(\"quick\") == \"\"\nassert get_closest_vowel(\"\
    ab\") == \"\"\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq3015sut.py\", line\
    \ 18, in <module>\n    assert get_closest_vowel(\"yogurt\") == \"u\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not word\
    \ or len(word) == 1:\n        return \"\"\n    # from the right side\n    for\
    \ i in range(len(word) - 1, 0, -1):\n        if word[i] in \"aeiou\":\n      \
    \      # not in the beginning\n            if i > 0 and word[i - 1] not in \"\
    aeiou\":\n                return word[i]\n            # not in the ending\n  \
    \          if i < len(word) - 1 and word[i + 1] not in \"aeiou\":\n          \
    \      return word[i]\n    return \"\"\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp56bw1cvs.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmp56bw1cvs.py\", line 45,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp56bw1cvs.py\"\
    , line 32, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    index_offset\
    \ = 0\n    index_set = {-1, -1}\n    for index, char in enumerate(word):\n   \
    \     if is_vowel(char):\n            index_set.add(index)\n            index_set.remove(max(index_set))\n\
    \        if index_set == {-1, -1}:\n            return ''\n    return word[max(index_set)\
    \ + index_offset]\n    \n \ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq5h285ns.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpq5h285ns.py\", line 43,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpq5h285ns.py\"\
    , line 28, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpq5h285ns.py\"\
    , line 19, in get_closest_vowel\n    if is_vowel(char):\nNameError: name 'is_vowel'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz_oua5pj.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpz_oua5pj.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpz_oua5pj.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for char in\
    \ word[::-1]:\n        if char in \"aeiou\":\n            return char\n      \
    \  if char not in \"aeiouAEIOU\":\n            return \"\"\n    return \"\"\n\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqgm6mox8.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpqgm6mox8.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpqgm6mox8.py\"\
    , line 25, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word)\
    \ < 3:\n        return \"\"\n    vowels = \"aeiou\"\n    for i in range(len(word)\
    \ - 2, -1, -1):\n        if word[i + 1] in vowels and word[i + 2] not in vowels:\n\
    \            return word[i + 1]\n    return \"\"\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3e1glq6w.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp3e1glq6w.py\", line 41,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp3e1glq6w.py\"\
    , line 28, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiouAEIOU\"\n    cons = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for\
    \ i in range(len(word) - 1, 0, -1):\n        if word[i] in vowels and word[i -\
    \ 1] in cons:\n            return word[i]\n    return \"\"\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk4s8bupr.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpk4s8bupr.py\", line 39,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpk4s8bupr.py\"\
    , line 28, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphoxp55u0.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmphoxp55u0.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmphoxp55u0.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    ...\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp__nyzk3g.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp__nyzk3g.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp__nyzk3g.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    last_seen_consonant = None\n    closest_vowel\
    \ = None\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] in vowels:\n\
    \            closest_vowel = word[i]\n        else:\n            if last_seen_consonant\
    \ is not None:\n                break\n            last_seen_consonant = word[i]\n\
    \    return closest_vowel if last_seen_consonant is not None else \"\"\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnrjw14tj.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpnrjw14tj.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpnrjw14tj.py\"\
    , line 29, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfr1_qovo.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpfr1_qovo.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpfr1_qovo.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # your code\
    \ here\n    pass\n\n\ndef check(candidate):\n    assert candidate('yogurt') ==\
    \ 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n\
    \    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn6dafh4q.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpn6dafh4q.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpn6dafh4q.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for index,\
    \ letter in enumerate(word[::-1]):\n        if letter in 'aeiou':\n          \
    \  continue\n        if word[-index - 1] in 'aeiou':\n            return word[-index\
    \ - 1]\n    return ''\n\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpstpzujf5.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpstpzujf5.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpstpzujf5.py\"\
    , line 25, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg5lbkq1b.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpg5lbkq1b.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpg5lbkq1b.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\
    aeiou\"\n    word = word[::-1]\n    flag = False\n    ret = \"\"\n    for i in\
    \ word:\n        if i in vowel:\n            if flag:\n                ret = i\n\
    \                break\n        else:\n            flag = True\n    return ret\n\
    \ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7q0yygei.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmp7q0yygei.py\", line 45,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp7q0yygei.py\"\
    , line 32, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(\"\
    aeiouAEIOU\")\n    for idx, val in enumerate(word[::-1]):\n        if val in vowels:\n\
    \            if idx == 0 or idx == len(word) - 1:\n                continue\n\
    \            elif word[-idx-1] not in vowels and word[-idx-2] not in vowels:\n\
    \                return val\n    return \"\"\n        \ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptmhwzhos.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmptmhwzhos.py\", line 41,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmptmhwzhos.py\"\
    , line 26, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    pass\n\n\n\
    def check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplg93kqfh.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmplg93kqfh.py\", line 35,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmplg93kqfh.py\"\
    , line 20, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(\"\
    aeiou\")\n    consonants = set(\"bcdfghjklmnpqrstvwxyz\")\n\n    for i in range(len(word)\
    \ - 1, -1, -1):\n        if word[i] in vowels:\n            continue\n       \
    \ if word[i - 1] in consonants:\n            return word[i]\n    return \"\"\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp42cyr2vb.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmp42cyr2vb.py\", line 43,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp42cyr2vb.py\"\
    , line 28, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return \"\"\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgtq5fkj1.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpgtq5fkj1.py\", line 34,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpgtq5fkj1.py\"\
    , line 19, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a',\
    \ 'e', 'i', 'o', 'u']\n    vowels_in_word = [v for v in word if v in vowels]\n\
    \    if not vowels_in_word:\n        return ''\n    else:\n        position =\
    \ len(word) - 1\n        while True:\n            if position < 0:\n         \
    \       return ''\n            if word[position] in vowels:\n                if\
    \ position == len(word) - 1:\n                    position -= 1\n            \
    \        continue\n                if word[position - 1] in vowels or word[position\
    \ + 1] in vowels:\n                    position -= 1\n                    continue\n\
    \                else:\n                    return word[position]\n          \
    \  position -= 1\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n\
    \    assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n   \
    \ assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert\
    \ candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab')\
    \ == ''\n    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n\
    \    assert candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n  \
    \  assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3o61i1_0.py\", line\
    \ 54, in <module>\n    test_check()\n  File \"/tmp/tmp3o61i1_0.py\", line 52,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp3o61i1_0.py\"\
    , line 40, in check\n    assert candidate('eAsy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiouAEIOU\"\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] in\
    \ vowels:\n            for j in range(i, -1, -1):\n                if word[j]\
    \ not in vowels:\n                    return word[i]\n    return \"\"\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpela9z6sg.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpela9z6sg.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpela9z6sg.py\"\
    , line 29, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    result = \"\
    \"\n    if len(word) > 1:\n        for i in range(len(word) - 1, 0, -1):\n   \
    \         if word[i] in \"AEIOUaeiou\":\n                if word[i - 1] not in\
    \ \"AEIOUaeiou\":\n                    if word[i + 1] not in \"AEIOUaeiou\":\n\
    \                        result = word[i]\n                    else:\n       \
    \                 result = \"\"\n    return result\n\n\ndef check(candidate):\n\
    \    assert candidate('yogurt') == 'u'\n    assert candidate('full') == 'u'\n\
    \    assert candidate('easy') == ''\n    assert candidate('eAsy') == ''\n    assert\
    \ candidate('ali') == ''\n    assert candidate('bad') == 'a'\n    assert candidate('most')\
    \ == 'o'\n    assert candidate('ab') == ''\n    assert candidate('ba') == ''\n\
    \    assert candidate('quick') == ''\n    assert candidate('anime') == 'i'\n \
    \   assert candidate('Asia') == ''\n    assert candidate('Above') == 'o'\n\ndef\
    \ test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0qo2i22w.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmp0qo2i22w.py\", line 44,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp0qo2i22w.py\"\
    , line 29, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiouAEIOU\"\n    index = len(word) - 1\n    while index > 0:\n        if word[index]\
    \ in vowels:\n            return word[index]\n        index -= 1\n    return \"\
    \"\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert\
    \ candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy')\
    \ == ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps9vexzei.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmps9vexzei.py\", line 40,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmps9vexzei.py\"\
    , line 27, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a',\
    \ 'e', 'i', 'o', 'u']\n    for c in word[::-1]:\n        if c in vowels:\n   \
    \         return c\n    return ''\n\ndef check(candidate):\n    assert candidate('yogurt')\
    \ == 'u'\n    assert candidate('full') == 'u'\n    assert candidate('easy') ==\
    \ ''\n    assert candidate('eAsy') == ''\n    assert candidate('ali') == ''\n\
    \    assert candidate('bad') == 'a'\n    assert candidate('most') == 'o'\n   \
    \ assert candidate('ab') == ''\n    assert candidate('ba') == ''\n    assert candidate('quick')\
    \ == ''\n    assert candidate('anime') == 'i'\n    assert candidate('Asia') ==\
    \ ''\n    assert candidate('Above') == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpieuef0i7.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpieuef0i7.py\", line 38,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpieuef0i7.py\"\
    , line 25, in check\n    assert candidate('easy') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\
    aeiou\"\n    for i in range(len(word) - 1, 0, -1):\n        if word[i] in vowels\
    \ and word[i - 1] not in vowels:\n            return word[i]\n    return \"\"\n\
    \n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8k7dtk_8.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp8k7dtk_8.py\", line 39,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmp8k7dtk_8.py\"\
    , line 28, in check\n    assert candidate('ali') == ''\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    ...\n    return\
    \ \"\"\n\n\ndef check(candidate):\n    assert candidate('yogurt') == 'u'\n   \
    \ assert candidate('full') == 'u'\n    assert candidate('easy') == ''\n    assert\
    \ candidate('eAsy') == ''\n    assert candidate('ali') == ''\n    assert candidate('bad')\
    \ == 'a'\n    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n\
    \    assert candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert\
    \ candidate('anime') == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above')\
    \ == 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmfbbhnmi.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpmfbbhnmi.py\", line 36,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpmfbbhnmi.py\"\
    , line 21, in check\n    assert candidate('yogurt') == 'u'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def get_closest_vowel(word: str) -> str:\n    \"\"\"You are given a word.\
    \ Your task is to find the closest vowel that stands between \n    two consonants\
    \ from the right side of the word (case sensitive).\n    \n    Vowels in the beginning\
    \ and ending doesn't count. Return empty string if you didn't\n    find any vowel\
    \ met the above condition. \n\n    You may assume that the given string contains\
    \ English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==>\
    \ \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\"\
    ) ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not vowels_set.intersection(word):\n\
    \        return \"\"\n    for i in range(len(word) - 1, -1, -1):\n        if word[i]\
    \ in vowels_set:\n            return word[i]\n        elif i > 0 and word[i -\
    \ 1] in vowels_set:\n            return word[i - 1]\n    return \"\"\n\n\ndef\
    \ check(candidate):\n    assert candidate('yogurt') == 'u'\n    assert candidate('full')\
    \ == 'u'\n    assert candidate('easy') == ''\n    assert candidate('eAsy') ==\
    \ ''\n    assert candidate('ali') == ''\n    assert candidate('bad') == 'a'\n\
    \    assert candidate('most') == 'o'\n    assert candidate('ab') == ''\n    assert\
    \ candidate('ba') == ''\n    assert candidate('quick') == ''\n    assert candidate('anime')\
    \ == 'i'\n    assert candidate('Asia') == ''\n    assert candidate('Above') ==\
    \ 'o'\n\ndef test_check():\n    check(get_closest_vowel)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpymi4s09r.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpymi4s09r.py\", line 42,\
    \ in test_check\n    check(get_closest_vowel)\n  File \"/tmp/tmpymi4s09r.py\"\
    , line 27, in check\n    assert candidate('yogurt') == 'u'\n  File \"/tmp/tmpymi4s09r.py\"\
    , line 16, in get_closest_vowel\n    if not vowels_set.intersection(word):\nNameError:\
    \ name 'vowels_set' is not defined\n"
  exit_code: -1
  status: Exception

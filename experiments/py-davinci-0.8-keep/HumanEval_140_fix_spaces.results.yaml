name: HumanEval_140_fix_spaces
language: py
results:
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    replaced_with_underscore =\
    \ text.replace(\" \", \"_\")\n    replaced_with_dash = replaced_with_underscore.replace(\"\
    ___\", \"-\")\n    return replaced_with_dash\n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return \"_\".join(text.split())\n\
    print(fix_spaces(\"Example\")) \nprint(fix_spaces(\"Example 1\")) \nprint(fix_spaces(\"\
    \ Example 2\")) \nprint(fix_spaces(\" Example   3\")) \n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: "Example\nExample_1\nExample_2\nExample_3\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvdh76uj7.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpvdh76uj7.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvdh76uj7.py\", line 20,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = re.sub(r\"  +\", \"\
    -\", text)\n    text = re.sub(r\" +\", \"_\", text)\n    return text\n\n\ndef\
    \ check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2sal4juo.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp2sal4juo.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2sal4juo.py\", line 18,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp2sal4juo.py\"\
    , line 12, in fix_spaces\n    text = re.sub(r\"  +\", \"-\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    -\", text.replace(\" \", \"_\"))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkwt7mm6n.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpkwt7mm6n.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpkwt7mm6n.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpkwt7mm6n.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"-\")\n    return text\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe2em7oaz.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpe2em7oaz.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpe2em7oaz.py\", line 19,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s\\s+',\
    \ '-', re.sub(r'\\s', '_', text))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7vi6uci9.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp7vi6uci9.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7vi6uci9.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp7vi6uci9.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s\\s+', '-', re.sub(r'\\s', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s\\s+',\
    \ '-', re.sub(r'\\s', '_', text))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdkb6ntg0.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpdkb6ntg0.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpdkb6ntg0.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpdkb6ntg0.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s\\s+', '-', re.sub(r'\\s', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    raise NotImplementedError()\n\
    fix_spaces(\"Example\") == \"Example\"\nfix_spaces(\"Example 1\") == \"Example_1\"\
    \nfix_spaces(\" Example 2\") == \"_Example_2\"\nfix_spaces(\" Example   3\") ==\
    \ \"_Example-3\"\nassert fix_spaces(\"Example\") == \"Example\"\nassert fix_spaces(\"\
    Example 1\") == \"Example_1\"\nassert fix_spaces(\" Example 2\") == \"_Example_2\"\
    \nassert fix_spaces(\" Example   3\") == \"_Example-3\"\n \ne\n \n \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvdjbvixm.py\", line\
    \ 13, in <module>\n    fix_spaces(\"Example\") == \"Example\"\n  File \"/tmp/tmpvdjbvixm.py\"\
    , line 12, in fix_spaces\n    raise NotImplementedError()\nNotImplementedError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code goes here\n  \
    \  list_text = list(text)\n    result = []\n    prev_char = ' '\n    for i in\
    \ range(len(list_text)):\n        if list_text[i] == ' ':\n            list_text[i]\
    \ = '_'\n        if list_text[i] == '_' and prev_char == '_':\n            list_text[i]\
    \ = '-'\n        prev_char = list_text[i]\n    return \"\".join(list_text)\n\n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf4z9rs9s.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpf4z9rs9s.py\", line 32,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpf4z9rs9s.py\", line 27,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if not text:\n        return\
    \ text\n    return re.sub(r\"\\s{2,}\", r\"-\", text.replace(\" \", \"_\"))\n\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgkkb7l0_.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpgkkb7l0_.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpgkkb7l0_.py\", line 18,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpgkkb7l0_.py\"\
    , line 14, in fix_spaces\n    return re.sub(r\"\\s{2,}\", r\"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r' {2,}', '-',\
    \ text.replace(' ', '_'))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjpu0vo64.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpjpu0vo64.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpjpu0vo64.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpjpu0vo64.py\"\
    , line 12, in fix_spaces\n    return re.sub(r' {2,}', '-', text.replace(' ', '_'))\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if len(text) == 0:\n     \
    \   return text\n    result = \"\"\n    for i in range(len(text)):\n        if\
    \ i == 0 and text[i] == \" \":\n            result += \"_\"\n        elif text[i]\
    \ == \" \":\n            if text[i-1] == \" \":\n                result += \"\
    -\"\n            else:\n                result += \"_\"\n        else:\n     \
    \       result += text[i]\n    return result\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp5se9a05.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpp5se9a05.py\", line 34,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpp5se9a05.py\", line 29,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # YOUR CODE HERE\n    text_with_underscores\
    \ = text.replace(\" \", \"_\")\n    return text_with_underscores.replace(\"_ \"\
    , \"-\")\n    # return '_'.join(text.split())\n\n\ndef check(candidate):\n   \
    \ assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyip12dxs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpyip12dxs.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpyip12dxs.py\", line 22,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text_list = list(text)\n \
    \   for i in range(len(text_list)):\n        if text_list[i] == \" \":\n     \
    \       text_list[i] = \"_\"\n    if \"___\" in text:\n        text = text.replace(\"\
    ___\", \"-\")\n    text = \"\".join(text_list)\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx2cf3p5s.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpx2cf3p5s.py\", line 30,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpx2cf3p5s.py\", line 26,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    return re.sub(r\"_{2,}\", \"-\", text)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp41uza665.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp41uza665.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp41uza665.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp41uza665.py\"\
    , line 13, in fix_spaces\n    return re.sub(r\"_{2,}\", \"-\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"__\", \"_\").replace(\"__\", \"-\")\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplbc7t821.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplbc7t821.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmplbc7t821.py\", line 18,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    #return text.replace(\" \"\
    , \"_\").replace(\"  \", \"-\")\n\n    while \"  \" in text:\n        text = text.replace(\"\
    \  \", \"-\")\n    text = text.replace(\" \", \"_\")\n    return text\n\n\ndef\
    \ check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi9ig69p1.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpi9ig69p1.py\", line 28,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpi9ig69p1.py\", line 23,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    new_text = []\n    space_count\
    \ = 0\n    for char in text:\n        if char != \" \":\n            if space_count\
    \ > 2:\n                new_text.append(\"-\")\n            elif space_count ==\
    \ 1:\n                new_text.append(\"_\")\n            space_count = 0\n  \
    \          new_text.append(char)\n        else:\n            space_count += 1\n\
    \    return \"\".join(new_text)\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpityrv5s0.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpityrv5s0.py\", line 34,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpityrv5s0.py\", line 28,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    while \"  \" in text:\n  \
    \      text = text.replace(\"  \", \" \")\n    return text.replace(\" \", \"_\"\
    ).replace(\" \", \"-\")\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpga8yzoyy.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpga8yzoyy.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpga8yzoyy.py\", line 19,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    while \"__\" in text:\n        text = text.replace(\"__\", \"_\"\
    )\n    text = text.replace(\"__\", \"-\")\n    return text\nfix_spaces(\"Example\"\
    )\nfix_spaces(\"Example 1\")\nfix_spaces(\" Example 2\")\nfix_spaces(\" Example\
    \   3\")\n \n \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvypr_nuk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpvypr_nuk.py\", line 31,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvypr_nuk.py\", line 26,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r' {2,}', '-',\
    \ text.replace(' ', '_'))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp00hhigca.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp00hhigca.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp00hhigca.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp00hhigca.py\"\
    , line 12, in fix_spaces\n    return re.sub(r' {2,}', '-', text.replace(' ', '_'))\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"_\")\n    if text.startswith(\"_\"\
    ):\n        text = text[1:]\n    text = text.replace(\"__\", \"-\")\n    return\
    \ text\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7f5h5fya.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp7f5h5fya.py\", line 27,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7f5h5fya.py\", line 22,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    pass\n \n \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6iyrn8kx.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6iyrn8kx.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp6iyrn8kx.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if not text:\n        return\
    \ \"\"\n    text = re.sub(r'\\s{2,}', '-', text)\n    return re.sub(r'\\s', '_',\
    \ text)\n    \n    \n    \n    \n    \nfix_spaces(\"Example\")\nfix_spaces(\"\
    Example 1\")\nfix_spaces(\" Example 2\")\nfix_spaces(\" Example   3\")\n\ndef\
    \ check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj7y7hm1j.py\", line\
    \ 21, in <module>\n    fix_spaces(\"Example\")\n  File \"/tmp/tmpj7y7hm1j.py\"\
    , line 14, in fix_spaces\n    text = re.sub(r'\\s{2,}', '-', text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    new_text = text.replace(\"\
    \ \", \"_\")\n    new_text = new_text.replace(\"  \", \"-\")\n    return new_text\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp2vph9og.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpp2vph9og.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpp2vph9og.py\", line 20,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = re.sub(r'\\s', '_',\
    \ text)\n    text = re.sub(r'_+', '-', text)\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpejb6nd9x.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpejb6nd9x.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpejb6nd9x.py\", line 18,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpejb6nd9x.py\"\
    , line 12, in fix_spaces\n    text = re.sub(r'\\s', '_', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\" {2,}\",\
    \ \"-\", text.replace(\" \", \"_\"))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpicvwj6hc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpicvwj6hc.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpicvwj6hc.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpicvwj6hc.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\" {2,}\", \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'(\\s+|_+)',\
    \ {' ': '_', '_': '-'}[text[0]], text)\n\n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6apxg77d.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6apxg77d.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp6apxg77d.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp6apxg77d.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'(\\s+|_+)', {' ': '_', '_': '-'}[text[0]],\
    \ text)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"_ \", \"_\")\n    text = text.replace(\"_\
    \ _\", \"_\")\n    text = text.replace(\"  \", \" \")\n    text = text.replace(\"\
    \ \", \"-\")\n    return text\n        \n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwxx_49wz.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpwxx_49wz.py\", line 28,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpwxx_49wz.py\", line 24,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    new_string = \"\"\n    for\
    \ i in range(len(text)):\n        if text[i] == \" \":\n            if i == 0:\n\
    \                new_string += \"_\"\n            elif i == len(text) - 1:\n \
    \               continue\n            elif text[i - 1] == \" \":\n           \
    \     if new_string[-1] == \"_\":\n                    new_string += \"-\"\n \
    \               else:\n                    new_string += \"_\"\n            else:\n\
    \                new_string += \"_\"\n        else:\n            new_string +=\
    \ text[i]\n    return new_string\n\n\nprint(fix_spaces(\"Example\"))\nprint(fix_spaces(\"\
    Example 1\"))\nprint(fix_spaces(\" Example 2\"))\nprint(fix_spaces(\" Example\
    \   3\"))\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: "Example\nExample_1\n_Example_2\n_Example_-_3\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsjtipb71.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpsjtipb71.py\", line 43,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpsjtipb71.py\", line 37,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5y1ztdh4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp5y1ztdh4.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp5y1ztdh4.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = re.sub(r\"\\s+\", \"\
    \ \", text)\n    return re.sub(r\"\\s\", \"-\", text)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphbnluszb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmphbnluszb.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmphbnluszb.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmphbnluszb.py\"\
    , line 12, in fix_spaces\n    text = re.sub(r\"\\s+\", \" \", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', lambda\
    \ x: '_' if len(x.group()) == 1 else '-', text)\n    \n    \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpohsvslov.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpohsvslov.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpohsvslov.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpohsvslov.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', lambda x: '_' if len(x.group())\
    \ == 1 else '-', text)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = re.sub(r\" +\", \"\
    \ \", text)\n    text = re.sub(r\" \", \"_\", text)\n    text = re.sub(r\"__+\"\
    , \"-\", text)\n    return text\n \ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnwohjfpy.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpnwohjfpy.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpnwohjfpy.py\", line 18,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpnwohjfpy.py\"\
    , line 12, in fix_spaces\n    text = re.sub(r\" +\", \" \", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'[ ]{2,}',\
    \ '-', re.sub(r'[ ]', '_', text))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp440becg6.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp440becg6.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp440becg6.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp440becg6.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'[ ]{2,}', '-', re.sub(r'[ ]', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    new_text = text.replace(\"\
    \ \", \"_\")\n    new_text = new_text.replace(\"  \", \"-\")\n    return new_text\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpex_8pv0c.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpex_8pv0c.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpex_8pv0c.py\", line 20,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    fixed_text = text.replace(\"\
    \ \", \"_\")\n    fixed_text = fixed_text.replace(\"__\", \"_\")\n    fixed_text\
    \ = fixed_text.replace(\"__\", \"-\")\n    return fixed_text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp00nbdks2.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp00nbdks2.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp00nbdks2.py\", line 21,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    return re.sub(r\"_+\", \"_\", text)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcq7hwfn5.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpcq7hwfn5.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpcq7hwfn5.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpcq7hwfn5.py\"\
    , line 13, in fix_spaces\n    return re.sub(r\"_+\", \"_\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"_\")\n    text = text.replace(\"__\"\
    , \"-\")\n    return text\n    \ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5qchn4e7.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp5qchn4e7.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp5qchn4e7.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # replace all spaces with\
    \ underscore\n    text = text.replace(\" \", \"_\")\n    # replace 3+ spaces with\
    \ -\n    text = re.sub(r\"_+\", \"-\", text)\n    return text\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppl3yhal8.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmppl3yhal8.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmppl3yhal8.py\", line 19,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmppl3yhal8.py\"\
    , line 15, in fix_spaces\n    text = re.sub(r\"_+\", \"-\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # \u0432\u0430\u0448\u0435\
    \ \u0440\u0435\u0448\u0435\u043D\u0438\u0435 \u0437\u0434\u0435\u0441\u044C\n\
    \    return re.sub(r' {2,}', '-', text.replace(' ', '_'))\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgt2gt_44.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpgt2gt_44.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpgt2gt_44.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpgt2gt_44.py\"\
    , line 13, in fix_spaces\n    return re.sub(r' {2,}', '-', text.replace(' ', '_'))\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '-',\
    \ text.replace(' ', '_'))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfuhia8xf.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpfuhia8xf.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpfuhia8xf.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpfuhia8xf.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '-', text.replace(' ', '_'))\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"-\")\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps9jhqaoi.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmps9jhqaoi.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmps9jhqaoi.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"_\")\n    if text.count(\"_\") > 2:\n\
    \        text = text.replace(\"_\", \"-\")\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp53cxl0yz.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp53cxl0yz.py\", line 27,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp53cxl0yz.py\", line 22,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code here\n\n\ndef\
    \ check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppejzvq23.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmppejzvq23.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmppejzvq23.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\"  \"\
    , \"-\")\n    text = text.replace(\" \", \"_\")\n    return text\nassert fix_spaces(\"\
    Example\") == \"Example\"\nassert fix_spaces(\"Example 1\") == \"Example_1\"\n\
    assert fix_spaces(\" Example 2\") == \"_Example_2\"\nassert fix_spaces(\" Example\
    \   3\") == \"_Example-3\"\n \n \ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5n7c_ab0.py\", line\
    \ 18, in <module>\n    assert fix_spaces(\" Example   3\") == \"_Example-3\"\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return '-'.join([word.replace('\
    \ ', '_') for word in text.split('  ')])\n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2og8ffjp.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp2og8ffjp.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2og8ffjp.py\", line 17,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code here\n    return\
    \ text.replace('  ', '-').replace(' ', '_')\nfix_spaces(\"Example 1\")\n\ndef\
    \ check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbp_k1aak.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbp_k1aak.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbp_k1aak.py\", line 19,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s{2,}',\
    \ '-', re.sub(r'\\s', '_', text))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjv0lo18u.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpjv0lo18u.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpjv0lo18u.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpjv0lo18u.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s{2,}', '-', re.sub(r'\\s', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"_\")\n    text = text.replace(\"__\"\
    , \"-\")\n    return text\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbl_uwe6d.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpbl_uwe6d.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbl_uwe6d.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"  \", \"-\")\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0t21mp75.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0t21mp75.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp0t21mp75.py\", line 19,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"-\")\n    return text\n\nprint(fix_spaces(\"\
    Example\"))\nprint(fix_spaces(\"Example 1\"))\nprint(fix_spaces(\" Example 2\"\
    ))\nprint(fix_spaces(\" Example   3\"))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: "Example\nExample_1\n_Example_2\n_Example-_3\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp15916p85.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp15916p85.py\", line 29,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp15916p85.py\", line 24,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn2bo2r7e.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpn2bo2r7e.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpn2bo2r7e.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s\\s+',\
    \ r'-', re.sub(r'\\s', r'_', text))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptkuhjil9.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptkuhjil9.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmptkuhjil9.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmptkuhjil9.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s\\s+', r'-', re.sub(r'\\s', r'_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '-',\
    \ text).replace(' ', '_')\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvx0qov9a.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpvx0qov9a.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvx0qov9a.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpvx0qov9a.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s+', '-', text).replace(' ', '_')\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s{2,}\"\
    , \"-\", text.replace(\" \", \"_\"))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsczqok81.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpsczqok81.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpsczqok81.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpsczqok81.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s{2,}\", \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    spaces = text.split()\n  \
    \  if len(spaces) > 1:\n        return \"_\".join(spaces)\n    else:\n       \
    \ return text.replace(\"  \", \"-\")\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphogi5m2_.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmphogi5m2_.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmphogi5m2_.py\", line 20,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"_ \",\"_\").replace(\"  \",\"-\")\n\n@test\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9nwj10hw.py\", line\
    \ 14, in <module>\n    @test\nNameError: name 'test' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"__\", \"-\")\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_bulcgx8.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_bulcgx8.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_bulcgx8.py\", line 17,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\" \", \"-\")\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpabjazn2t.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpabjazn2t.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpabjazn2t.py\", line 19,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    new_text = \"\"\n    space_counter\
    \ = 0\n    for letter in text:\n        if letter == \" \":\n            if space_counter\
    \ < 2:\n                new_text += \"_\"\n                space_counter += 1\n\
    \            else:\n                new_text += \"-\"\n        else:\n       \
    \     new_text += letter\n            space_counter = 0\n    return new_text\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_o8wu2d.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpk_o8wu2d.py\", line 35,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpk_o8wu2d.py\", line 31,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    output = text.replace(\" \
    \ \", \"-\")\n    output = output.replace(\" \", \"_\")\n    return output\nfix_spaces(\"\
    Example\") == \"Example\"\n\nfix_spaces(\"Example 1\") == \"Example_1\"\n\nfix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\n\nfix_spaces(\" Example   3\") == \"_Example-3\"\
    \n \n \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn5l1mm_e.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpn5l1mm_e.py\", line 33,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpn5l1mm_e.py\", line 28,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    res = ''\n    count = 0\n\
    \    for c in text:\n        if c != ' ':\n            res += c\n            count\
    \ = 0\n        else:\n            count += 1\n            if count == 1:\n   \
    \             res += '_'\n            elif count > 2:\n                res +=\
    \ '-'\n    return res\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbkt0cxs6.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpbkt0cxs6.py\", line 34,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbkt0cxs6.py\", line 29,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if len(text) == 0:\n     \
    \   return \"\"\n    else:\n        if text[0] == \" \":\n            prefix =\
    \ \"_\"\n        else:\n            prefix = text[0]\n        return prefix +\
    \ fix_spaces(text[1:]).replace(\" \", \"_\").replace(\"__\", \"-\")\n    \ndef\
    \ check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvd4submn.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvd4submn.py\", line 29,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvd4submn.py\", line 24,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"  \", \"-\")\nprint(fix_spaces(\"Example\"))\nprint(fix_spaces(\"\
    Example 1\"))\nprint(fix_spaces(\" Example 2\"))\nprint(fix_spaces(\" Example\
    \   3\"))\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: "Example\nExample_1\n_Example_2\n_Example___3\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitn8l_6y.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpitn8l_6y.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpitn8l_6y.py\", line 22,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # new_list = []\n    # for\
    \ i in text:\n    #     if i != \" \":\n    #         new_list.append(i)\n   \
    \ #     else:\n    #         new_list.append(\"_\")\n    # return \"\".join(new_list)\n\
    \    count = 0\n    new_list = []\n    for i in text:\n        if i == \" \":\n\
    \            count += 1\n            if count > 2:\n                new_list.append(\"\
    -\")\n            else:\n                new_list.append(\"_\")\n        else:\n\
    \            count = 0\n            new_list.append(i)\n    return \"\".join(new_list)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppoxgd13o.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmppoxgd13o.py\", line 42,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmppoxgd13o.py\", line 38,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\"  \"\
    , \"-\").replace(\" \", \"_\")\nfix_spaces(\"Example 1\")\n\nfix_spaces(\" Example\
    \ 2\")\n\nfix_spaces(\" Example   3\")\n\nfix_spaces(\" example   3\")\n\nfix_spaces(\"\
    \  example   3\")\n\nfix_spaces(\"  example   3\")\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc5yutuhf.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpc5yutuhf.py\", line 34,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpc5yutuhf.py\", line 29,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return '-'.join(text.split())\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvf7sx9bx.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpvf7sx9bx.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvf7sx9bx.py\", line 16,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s{2,}',\
    \ '-', re.sub(r'\\s', '_', text))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplxtasamr.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmplxtasamr.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmplxtasamr.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmplxtasamr.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s{2,}', '-', re.sub(r'\\s', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r' {2,}', '-',\
    \ text.replace(' ', '_'))\n    # return text.replace(' ', '_').replace('  ', '-')\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2v1rc3t.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpy2v1rc3t.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpy2v1rc3t.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpy2v1rc3t.py\"\
    , line 12, in fix_spaces\n    return re.sub(r' {2,}', '-', text.replace(' ', '_'))\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # Your code here\n    \n \
    \   return text.replace(' ', '_').replace('__', '-').replace('_-', '-').replace('-',\
    \ '_')\n\"\"\"\n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"\
    Example 1\") == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\
    \n    fix_spaces(\" Example   3\") == \"_Example-3\"\n\"\"\"\n\nassert fix_spaces(\"\
    Example\") == \"Example\"\nassert fix_spaces(\"Example 1\") == \"Example_1\"\n\
    assert fix_spaces(\" Example 2\") == \"_Example_2\"\nassert fix_spaces(\" Example\
    \   3\") == \"_Example-3\"\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn_zczg7m.py\", line\
    \ 25, in <module>\n    assert fix_spaces(\" Example   3\") == \"_Example-3\"\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return \" \".join(text.split()).replace(\"\
    \ \", \"_\")\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmply_vxlsq.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmply_vxlsq.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmply_vxlsq.py\", line 17,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'(  +)', r'-',\
    \ re.sub(r'( )', r'_', text))\n\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpodwp0tmr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpodwp0tmr.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpodwp0tmr.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpodwp0tmr.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'(  +)', r'-', re.sub(r'( )', r'_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    return re.sub(r'_{2,}', '-', text)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp74g5w7qo.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp74g5w7qo.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp74g5w7qo.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp74g5w7qo.py\"\
    , line 13, in fix_spaces\n    return re.sub(r'_{2,}', '-', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return \"\".join([\"_\" if\
    \ t == \" \" else t for t in text])\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp153nb6e7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp153nb6e7.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp153nb6e7.py\", line 19,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\" +\", lambda\
    \ m: \"-\" if len(m.group()) > 2 else \"_\", text)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr4k1mzpu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpr4k1mzpu.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpr4k1mzpu.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpr4k1mzpu.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\" +\", lambda m: \"-\" if len(m.group())\
    \ > 2 else \"_\", text)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"-\")\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4cmoch8o.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp4cmoch8o.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp4cmoch8o.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # text_lower = text.lower()\n\
    \    # text_lower = text_lower.replace(\" \", \"_\")\n    # return text_lower\n\
    \    return re.sub(r\" {2,}\", \"-\", text.replace(\" \", \"_\"))\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0033owhe.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp0033owhe.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp0033owhe.py\", line 19,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp0033owhe.py\"\
    , line 15, in fix_spaces\n    return re.sub(r\" {2,}\", \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"  \", \"-\")\n    pass\n\n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_egeqjyf.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp_egeqjyf.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_egeqjyf.py\", line 20,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code here\n    \nassert\
    \ fix_spaces(\"Example\") == \"Example\"\nassert fix_spaces(\"Example 1\") ==\
    \ \"Example_1\"\nassert fix_spaces(\" Example 2\") == \"_Example_2\"\nassert fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n \n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf6mq22y7.py\", line\
    \ 14, in <module>\n    assert fix_spaces(\"Example\") == \"Example\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    new = []\n    for i in range(len(text)):\n\
    \        if i == 0 and text[i] == \" \":\n            new.append(\"_\")\n    \
    \    elif i == len(text) - 1 and text[i] == \" \":\n            pass\n       \
    \ elif text[i] == \" \" and text[i+1] == \" \":\n            new.append(\"-\"\
    )\n        elif text[i] == \" \":\n            new.append(\"_\")\n        else:\n\
    \            new.append(text[i])\n    return \"\".join(new)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyib4sxc0.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpyib4sxc0.py\", line 35,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpyib4sxc0.py\", line 29,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if len(text) > 2:\n      \
    \  text = re.sub(r\"\\s{2,}\", \"-\", text)\n        text = re.sub(r\"\\s+\",\
    \ \"_\", text)\n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3zlwwop.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpb3zlwwop.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpb3zlwwop.py\", line 19,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpb3zlwwop.py\"\
    , line 13, in fix_spaces\n    text = re.sub(r\"\\s{2,}\", \"-\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    start = text.replace(\" \"\
    , \"_\")\n    if len(start) > 2:\n        return re.sub(r'[ ]{2,}', '-', start)\n\
    \    else:\n        return start\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfliv8q5v.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpfliv8q5v.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpfliv8q5v.py\", line 19,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpfliv8q5v.py\"\
    , line 14, in fix_spaces\n    return re.sub(r'[ ]{2,}', '-', start)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # `re.sub(pattern, replacement,\
    \ string)` replaces any occurence of pattern in string \n    # with replacement.\
    \ \n    # replacement can be a string or a function. \n    return re.sub(r\"\\\
    s+\", lambda m: \"-\" if len(m.group()) > 2 else \"_\", text)\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcxzngpnw.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpcxzngpnw.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpcxzngpnw.py\", line 18,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpcxzngpnw.py\"\
    , line 15, in fix_spaces\n    return re.sub(r\"\\s+\", lambda m: \"-\" if len(m.group())\
    \ > 2 else \"_\", text)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    pass\nfix_spaces(\"Example\"\
    ) == \"Example\"\nfix_spaces(\"Example 1\") == \"Example_1\"\nfix_spaces(\" Example\
    \ 2\") == \"_Example_2\"\nfix_spaces(\" Example   3\") == \"_Example-3\"\n \n\
    assert fix_spaces(\"Example\") == \"Example\"\nassert fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\nassert fix_spaces(\" Example 2\") == \"_Example_2\"\nassert\
    \ fix_spaces(\" Example   3\") == \"_Example-3\"\n \n \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6ae0n_dj.py\", line\
    \ 18, in <module>\n    assert fix_spaces(\"Example\") == \"Example\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return \n \n \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz2ztaqn8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpz2ztaqn8.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpz2ztaqn8.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"_\")\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpri8ym633.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpri8ym633.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpri8ym633.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s{2,}\"\
    , \"-\", text.replace(\" \", \"_\"))\nprint(fix_spaces(\"  Example   3   \"))\n\
    print(fix_spaces(\" Example 2\"))\nprint(fix_spaces(\"Example 1\"))\nprint(fix_spaces(\"\
    Example\"))\n\nprint(fix_spaces(\"Tests\"))\n\nprint(fix_spaces(\"Readme\"))\n\
    \nprint(fix_spaces(\"Test\"))\n\nprint(fix_spaces(\"Foo Bar\"))\n\nprint(fix_spaces(\"\
    Foo     Bar\"))\n\nprint(fix_spaces(\" Foo Bar\"))\n\nprint(fix_spaces(\" Foo\
    \  Bar\"))\n\nprint(fix_spaces(\"Foo     Bar   \"))\n\nprint(fix_spaces(\"Foo\
    \     Bar\"))\n\nprint(fix_spaces(\"  Foo Bar\"))\n\nprint(fix_spaces(\"  Foo\
    \    Bar\"))\n\nprint(fix_spaces(\"Foo Bar   \"))\n\nprint(fix_spaces(\" Foo \
    \    Bar\"))\n\nprint(fix_spaces(\" Foo    Bar\"))\n\nprint(fix_spaces(\"Foo \
    \  Bar\"))\n\nprint(fix_spaces(\"Foo   Bar \"))\n\nprint(fix_spaces(\" Foo Bar\
    \ \"))\n\nprint(fix_spaces(\"Foo Bar\"))\n\nprint(fix_spaces(\"Foo   Bar  \"))\n\
    \nprint(fix_spaces(\"  Foo Bar  \"))\n\nprint(fix_spaces(\" Foo  Bar\"))\n\nprint(fix_spaces(\"\
    Foo  Bar\"))\n\nprint(fix_spaces(\"  Foo  Bar  \"))\n\nprint(fix_spaces(\"Foo\
    \   Bar   \"))\n\nprint(fix_spaces(\" Foo    Bar \"))\n\nprint(fix_spaces(\" Foo\
    \    Bar\"))\n\nprint(fix_spaces(\" Foo     Bar \"))\n\nprint(fix_spaces(\" Foo\
    \     Bar\"))\n\nprint(fix_spaces(\" Foo      Bar \"))\n\nprint(fix_spaces(\"\
    \ Foo      Bar\"))\n\nprint(fix_spaces(\" Foo       Bar \"))\n\nprint(fix_spaces(\"\
    \ Foo       Bar\"))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuc3n_2q6.py\", line\
    \ 13, in <module>\n    print(fix_spaces(\"  Example   3   \"))\n  File \"/tmp/tmpuc3n_2q6.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s{2,}\", \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    while '  ' in text:\n    \
    \    text = text.replace('  ', ' ')\n    return text.replace(' ', '_')\n\nassert\
    \ fix_spaces(\"Example\") == \"Example\"\nassert fix_spaces(\"Example 1\") ==\
    \ \"Example_1\"\nassert fix_spaces(\" Example 2\") == \"_Example_2\"\nassert fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n \ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_31yhkbn.py\", line\
    \ 19, in <module>\n    assert fix_spaces(\" Example   3\") == \"_Example-3\"\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"_\")\n    text = text.replace(\" \
    \ \", \"-\")\n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqnuxzcmg.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpqnuxzcmg.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpqnuxzcmg.py\", line 21,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    return re.sub(r\"_+\", r\"-\", text)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeyy2mtrl.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpeyy2mtrl.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpeyy2mtrl.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpeyy2mtrl.py\"\
    , line 13, in fix_spaces\n    return re.sub(r\"_+\", r\"-\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"-\")\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkb0yeiot.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpkb0yeiot.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpkb0yeiot.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'[ ]{2,}',\
    \ '-', re.sub(r'[ ]', '_', text))\n    \nassert fix_spaces(\"Example\") == \"\
    Example\"\nassert fix_spaces(\"Example 1\") == \"Example_1\"\nassert fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\nassert fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n \
    \   assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwiit_888.py\", line\
    \ 14, in <module>\n    assert fix_spaces(\"Example\") == \"Example\"\n  File \"\
    /tmp/tmpwiit_888.py\", line 12, in fix_spaces\n    return re.sub(r'[ ]{2,}', '-',\
    \ re.sub(r'[ ]', '_', text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    if text.count(\"_\") > 2:\n        text = text.replace(\"_\", \"\
    -\")\n    return text\n\nprint(fix_spaces(\"Example\"))\nprint(fix_spaces(\"Example\
    \ 1\"))\nprint(fix_spaces(\" Example 2\"))\nprint(fix_spaces(\" Example   3\"\
    ))\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n  \
    \  assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: "Example\nExample_1\n_Example_2\n-Example---3\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp180k8_ae.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp180k8_ae.py\", line 30,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp180k8_ae.py\", line 25,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text_list = list(text)\n \
    \   if len(text_list) == 0:\n        return ''\n    if text_list[0] == ' ':\n\
    \        text_list[0] = '_'\n    for i in range(1, len(text_list)):\n        if\
    \ text_list[i] == ' ':\n            if text_list[i-1] == ' ':\n              \
    \  text_list[i] = '-'\n            else:\n                text_list[i] = '_'\n\
    \    return ''.join(text_list)\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo3eeu60_.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpo3eeu60_.py\", line 34,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpo3eeu60_.py\", line 30,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    pass\n \n \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgxxygg7g.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpgxxygg7g.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpgxxygg7g.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # replace all spaces with\
    \ underscore, then replace 2 or more underscores with '-'\n    return re.sub(r'_+',\
    \ '-', text.replace(' ', '_'))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4jbthobg.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4jbthobg.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp4jbthobg.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp4jbthobg.py\"\
    , line 13, in fix_spaces\n    return re.sub(r'_+', '-', text.replace(' ', '_'))\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r' +', lambda\
    \ x: '_' if len(x.group()) == 1 else '-', text)\n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp53fpn481.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp53fpn481.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp53fpn481.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp53fpn481.py\"\
    , line 12, in fix_spaces\n    return re.sub(r' +', lambda x: '_' if len(x.group())\
    \ == 1 else '-', text)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # Write your code here.\n\
    \    return text.replace(' ', '_').replace('__', '-').replace('__', '-')\n\n\n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8pkqqkx9.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8pkqqkx9.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp8pkqqkx9.py\", line 19,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", lambda\
    \ m: m.group(0).count(\" \") * \"-\", text.replace(\" \", \"_\"))\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqj3q6t0i.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpqj3q6t0i.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpqj3q6t0i.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpqj3q6t0i.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", lambda m: m.group(0).count(\"\
    \ \") * \"-\", text.replace(\" \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return \" \".join(text.split()).replace(\"\
    \ \", \"_\")\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0d8bme3y.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp0d8bme3y.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp0d8bme3y.py\", line 17,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # YOUR CODE HERE\n    raise\
    \ NotImplementedError()\nfrom nose.tools import assert_equal\n\nassert_equal(fix_spaces(\"\
    Example\"), \"Example\")\nassert_equal(fix_spaces(\"Example 1\"), \"Example_1\"\
    )\nassert_equal(fix_spaces(\" Example 2\"), \"_Example_2\")\nassert_equal(fix_spaces(\"\
    \ Example   3\"), \"_Example-3\")\n \nprint(\"Success!\")\n \n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaj_x2uyy.py\", line\
    \ 14, in <module>\n    from nose.tools import assert_equal\nModuleNotFoundError:\
    \ No module named 'nose'\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r' {2,}', '-',\
    \ text.replace(' ', '_'))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4_0ua8ub.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp4_0ua8ub.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp4_0ua8ub.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp4_0ua8ub.py\"\
    , line 12, in fix_spaces\n    return re.sub(r' {2,}', '-', text.replace(' ', '_'))\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\" +\", \"\
    -\", text.replace(\" \", \"_\"))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkg33pi0s.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpkg33pi0s.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpkg33pi0s.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpkg33pi0s.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\" +\", \"-\", text.replace(\" \"\
    , \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code here\n    if text.count('\
    \ ') >= 2:\n        text = text.replace(' ', '-')\n    else:\n        text = text.replace('\
    \ ', '_')\n    return text\n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy3934zv1.py\", line\
    \ 60, in <module>\n    test_check()\n  File \"/tmp/tmpy3934zv1.py\", line 58,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpy3934zv1.py\", line 52,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\"  \"\
    , \"-\").replace(\" \", \"_\")\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7lqseysh.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7lqseysh.py\", line 21,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7lqseysh.py\", line 16,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    lst = text.split(\" \")\n\
    \    for i in range(len(lst)):\n        if lst[i] == \"\":\n            lst[i]\
    \ = \"-\"\n        else:\n            lst[i] = lst[i].replace(\" \", \"_\")\n\
    \    return \"\".join(lst)\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj5q9en0k.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpj5q9en0k.py\", line 28,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpj5q9en0k.py\", line 22,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # Replace each space with\
    \ '_' (since we can't set the count directly,\n    # we need to replace non-space\
    \ characters with the opposite)\n    text = text.replace(' ', '_')\n    # Replace\
    \ each non-space character with ' ' (which creates 2 or more consecutive spaces)\n\
    \    text = text.replace('_', ' ')\n    # Replace each 2 or more consecutive spaces\
    \ with '-'\n    text = text.replace('  ', '-')\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp2fz565o.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpp2fz565o.py\", line 30,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpp2fz565o.py\", line 24,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"-\")\n    text = text.replace(\"___\"\
    , \"-\")\n    text = text.replace(\"____\", \"-\")\n    text = text.replace(\"\
    _____\", \"-\")\n    text = text.replace(\"______\", \"-\")\n    text = text.replace(\"\
    _______\", \"-\")\n    text = text.replace(\"________\", \"-\")\n    text = text.replace(\"\
    _________\", \"-\")\n    text = text.replace(\"__________\", \"-\")\n    text\
    \ = text.replace(\"___________\", \"-\")\n    text = text.replace(\"____________\"\
    , \"-\")\n    text = text.replace(\"_____________\", \"-\")\n    text = text.replace(\"\
    ______________\", \"-\")\n    text = text.replace(\"_______________\", \"-\")\n\
    \    text = text.replace(\"________________\", \"-\")\n    text = text.replace(\"\
    _________________\", \"-\")\n    text = text.replace(\"__________________\", \"\
    -\")\n    text = text.replace(\"___________________\", \"-\")\n    text = text.replace(\"\
    ____________________\", \"-\")\n    text = text.replace(\"_____________________\"\
    , \"-\")\n    text = text.replace(\"______________________\", \"-\")\n    text\
    \ = text.replace(\"_______________________\", \"-\")\n    text = text.replace(\"\
    ________________________\", \"-\")\n    text = text.replace(\"_________________________\"\
    , \"-\")\n    text = text.replace(\"__________________________\", \"-\")\n   \
    \ text = text.replace(\"___________________________\", \"-\")\n    text = text.replace(\"\
    ____________________________\", \"-\")\n    text = text.replace(\"_____________________________\"\
    , \"-\")\n    text = text.replace(\"______________________________\", \"-\")\n\
    \    text = text.replace(\"_______________________________\", \"-\")\n    text\
    \ = text.replace(\"________________________________\", \"-\")\n    text = text.replace(\"\
    _________________________________\", \"-\")\n    text = text.replace(\"__________________________________\"\
    , \"-\")\n    text = text.replace(\"___________________________________\", \"\
    -\")\n    text = text.replace(\"____________________________________\", \"-\"\
    )\n    text = text.replace(\"_____________________________________\", \"-\")\n\
    \    text = text.replace(\"______________________________________\", \"-\")\n\
    \    text = text.replace(\"_______________________________________\", \"-\")\n\
    \    text = text.replace(\"________________________________________\", \"-\")\n\
    \    text =\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpespdrk0x.py\", line 52\n    text =\n         ^\nSyntaxError:\
    \ invalid syntax\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"-\")\n    return text\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphg8it7dk.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmphg8it7dk.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmphg8it7dk.py\", line 19,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", lambda\
    \ x: \"-\", text.replace(\" \", \"_\"))\n    #return re.sub(r\"(\\s{2,})\", lambda\
    \ x: \"-\", text.replace(\" \", \"_\"))\n    \n    \ndef check(candidate):\n \
    \   assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx9djpp9i.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpx9djpp9i.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpx9djpp9i.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpx9djpp9i.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", lambda x: \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"-\")\n    return text\n\nimport pytest\n\
    \n@pytest.mark.parametrize(\"text, result\", [\n    (\"Example\", \"Example\"\
    ),\n    (\"Example 1\", \"Example_1\"),\n    (\" Example 2\", \"_Example_2\"),\n\
    \    (\" Example   3\", \"_Example-3\"),\n])\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfty4tf5t.py\", line\
    \ 16, in <module>\n    import pytest\nModuleNotFoundError: No module named 'pytest'\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    for i in range(0, len(text) - 1):\n        if text[i] == text[i\
    \ + 1] == \"_\":\n            text = text.replace(\"_\", \"-\")\n    return text\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbo43wplb.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpbo43wplb.py\", line 27,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbo43wplb.py\", line 22,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"   \", \"-\")\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbjcg5csg.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpbjcg5csg.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbjcg5csg.py\", line 18,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"_\", \"-\")\n    text = text.replace(\"--\"\
    , \"_\")\n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxbdphcgi.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpxbdphcgi.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpxbdphcgi.py\", line 20,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return \" \".join(text.split())\n\
    import pytest\n\n@pytest.mark.parametrize(\"input_argument, expected_return\"\
    , [\n    (\"Example\", \"Example\"),\n    (\"Example 1\", \"Example_1\"),\n  \
    \  (\" Example 2\", \"_Example_2\"),\n    (\" Example   3\", \"_Example-3\"),\n\
    ])\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf_k4vavb.py\", line\
    \ 13, in <module>\n    import pytest\nModuleNotFoundError: No module named 'pytest'\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'(\\s)\\1+',\
    \ r'-', text.replace(' ', '_'))\n    \n \n    \nprint(fix_spaces(\"Example 1\"\
    ))\n\n\"\"\"\nsolution:\nimport re\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "  File \"/tmp/tmpbiap0oqy.py\", line 33\n    test_check()\n           \
    \    ^\nSyntaxError: EOF while scanning triple-quoted string literal\n"
  exit_code: 1
  status: SyntaxError
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\"  \"\
    , \"-\")\n    text = text.replace(\" \", \"_\")\n    return text\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwoqwadav.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpwoqwadav.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpwoqwadav.py\", line 19,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s{2,}',\
    \ '-', re.sub(r' ', '_', text))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvbc_sjjq.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpvbc_sjjq.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvbc_sjjq.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpvbc_sjjq.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s{2,}', '-', re.sub(r' ', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    pass\n    return text.replace(\"\
    \  \", \"-\").replace(\" \", \"_\")\n    \n    \n    \n    \n    \n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps1ix5ol8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmps1ix5ol8.py\", line 28,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmps1ix5ol8.py\", line 23,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code here\n    pass\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2a_d_p3c.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp2a_d_p3c.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2a_d_p3c.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code here\n    return\
    \ text.replace('  ', '-').replace(' ', '_')\n \n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptnk_f7ul.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmptnk_f7ul.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmptnk_f7ul.py\", line 19,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # Your code here\n    return\
    \ re.sub(r'\\s{2,}', '-', re.sub(r'\\s', '_', text))\nassert fix_spaces(\"Example\"\
    ) == \"Example\"\nassert fix_spaces(\"Example 1\") == \"Example_1\"\nassert fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\nassert fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n \
    \   assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps1ldvg_m.py\", line\
    \ 14, in <module>\n    assert fix_spaces(\"Example\") == \"Example\"\n  File \"\
    /tmp/tmps1ldvg_m.py\", line 13, in fix_spaces\n    return re.sub(r'\\s{2,}', '-',\
    \ re.sub(r'\\s', '_', text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if len(text) >= 2:\n     \
    \   text = text.replace(\" \", \"_\")\n        text = text.replace(\"___\", \"\
    -\")\n        text = text.replace(\"__\", \"_\")\n    else:\n        text = text.replace(\"\
    \ \", \"_\")\n    \n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpowlo2gn0.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpowlo2gn0.py\", line 30,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpowlo2gn0.py\", line 25,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text_new = text.replace(\"\
    \ \", \"_\")\n    text_new = text_new.replace(\"__\", \"-\")\n    text_new = text_new.replace(\"\
    _ \", \"_\")\n    text_new = text_new.replace(\" _\", \"_\")\n    text_new = text_new.replace(\"\
    _\", \" \")\n    return text_new\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmw_what1.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpmw_what1.py\", line 27,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpmw_what1.py\", line 21,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code here\n    text\
    \ = text.replace(\" \", \"_\")\n    text = text.replace(\"_ _\", \"_\")\n    text\
    \ = text.replace(\"__\", \"-\")\n    return text\n    raise NotImplementedError()\n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcmvjm30u.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpcmvjm30u.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpcmvjm30u.py\", line 21,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', lambda\
    \ match: '-' if len(match.group()) > 2 else '_', text)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm6x8nkd3.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm6x8nkd3.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpm6x8nkd3.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpm6x8nkd3.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', lambda match: '-' if len(match.group())\
    \ > 2 else '_', text)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if ' ' not in text:\n    \
    \    return text\n    else:\n        return re.sub('\\s+', '-', text.replace('\
    \ ', '_'))\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi1pg9x03.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpi1pg9x03.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpi1pg9x03.py\", line 19,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n  File\
    \ \"/tmp/tmpi1pg9x03.py\", line 15, in fix_spaces\n    return re.sub('\\s+', '-',\
    \ text.replace(' ', '_'))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"  \", \"-\")\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpozppl254.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpozppl254.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpozppl254.py\", line 18,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return replace_spaces(text)\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf71g3ozw.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpf71g3ozw.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpf71g3ozw.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpf71g3ozw.py\"\
    , line 12, in fix_spaces\n    return replace_spaces(text)\nNameError: name 'replace_spaces'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if text.count(\" \") > 1:\n\
    \        text = text.replace(\" \", \"_\")\n        text = text.replace(\"__\"\
    , \"-\")\n    elif text.count(\" \") == 1:\n        text = text.replace(\" \"\
    , \"_\")\n    else:\n        pass\n    return text\n\n\nassert fix_spaces(\"Example\"\
    ) == \"Example\"\nassert fix_spaces(\"Example 1\") == \"Example_1\"\nassert fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\nassert fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n \n \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw43u34v3.py\", line\
    \ 25, in <module>\n    assert fix_spaces(\" Example   3\") == \"_Example-3\"\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return \"\".join([f\"-{i}\"\
    \ if i == \" \" and prev == \" \" else i for i, prev in zip(text, \" \" + text)])[1:].replace(\"\
    \ \", \"_\")\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmr5baba1.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpmr5baba1.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpmr5baba1.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    raise NotImplementedError()\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppmzi1ju7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmppmzi1ju7.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmppmzi1ju7.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmppmzi1ju7.py\"\
    , line 12, in fix_spaces\n    raise NotImplementedError()\nNotImplementedError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s+', '-',\
    \ text).replace(' ', '_')\ntext = \"Example   3\"\nprint(re.sub(r'\\s+', '-',\
    \ text))\nprint(text.replace(' ', '_'))\n\nfor item in re.finditer(r'\\s+', text):\n\
    \    print(item.group())\n    \nfor item in re.finditer(r'\\s+', text):\n    print(item.group())\n\
    \nre.sub(r'\\s+', '-', text)\n\nprint(fix_spaces(text))\nprint(fix_spaces(\"Example\"\
    ))\nprint(fix_spaces(\"Example 1\"))\nprint(fix_spaces(\" Example 2\"))\nprint(fix_spaces(\"\
    \ Example   3\"))\n\ndef check(candidate):\n    assert candidate('Example') ==\
    \ 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert\
    \ candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps3qb470g.py\", line\
    \ 14, in <module>\n    print(re.sub(r'\\s+', '-', text))\nNameError: name 're'\
    \ is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"  \", \"-\")\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdp4vqm4v.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpdp4vqm4v.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpdp4vqm4v.py\", line 19,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if not text:\n        return\
    \ text\n    return text.replace(\"  \", \"-\").replace(\" \", \"_\")\n \n \ndef\
    \ check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkl1zz98x.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpkl1zz98x.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpkl1zz98x.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if '  ' in text:\n       \
    \ return re.sub('  ', '-', text.replace(' ', '_'))\n    else:\n        return\
    \ text.replace(' ', '_')\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaanfdtvi.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpaanfdtvi.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpaanfdtvi.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \  File \"/tmp/tmpaanfdtvi.py\", line 13, in fix_spaces\n    return re.sub(' \
    \ ', '-', text.replace(' ', '_'))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s{2,}',\
    \ '-', re.sub(r'\\s', '_', text))\nfix_spaces(\" Example   3\")\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbqle_e7k.py\", line\
    \ 13, in <module>\n    fix_spaces(\" Example   3\")\n  File \"/tmp/tmpbqle_e7k.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s{2,}', '-', re.sub(r'\\s', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    x = text.strip()\n    if \"\
    \  \" in x:\n        x = x.replace(\" \", \"-\")\n    else:\n        x = x.replace(\"\
    \ \", \"_\")\n    return x\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprli1u5n4.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmprli1u5n4.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmprli1u5n4.py\", line 20,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s\\s+',\
    \ r'-', re.sub(r'\\s', r'_', text))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2yek9a8t.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp2yek9a8t.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2yek9a8t.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp2yek9a8t.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s\\s+', r'-', re.sub(r'\\s', r'_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # replace all spaces with\
    \ underscores, \n    # then replace all 2 or more consecutive spaces with -\n\
    \    return ' '.join(text.split()).replace(' ', '_').replace('  ', '-')\n\n\n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4a3r91xv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp4a3r91xv.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp4a3r91xv.py\", line 19,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # \u043D\u0435\u0437\u0430\
    \u0447\u0435\u043C \u043B\u0438\u0448\u043D\u0438\u0445 \u0434\u0435\u0439\u0441\
    \u0442\u0432\u0438\u0439. \u043C\u043E\u0436\u043D\u043E \u043F\u0440\u043E\u0441\
    \u0442\u043E \u0432\u0441\u0451 \u0437\u0430\u043C\u0435\u043D\u0438\u0442\u044C\
    \ \u043F\u043E\u0434\u0447\u0451\u0440\u043A\u0438\u0432\u0430\u043D\u0438\u044F\
    \u043C\u0438 \u0438 \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0442\u043E\
    \ \u0436\u0435 \u0441\u0430\u043C\u043E\u0435\n    return text.replace(\" \",\
    \ \"_\").replace(\"  \", \"-\")\n \ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqy8gg6jc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpqy8gg6jc.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpqy8gg6jc.py\", line 19,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ re.sub(r'[ ]{2,}', '-', re.sub(r'[ ]', '_', text))\n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2f5rpds7.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp2f5rpds7.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2f5rpds7.py\", line 18,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp2f5rpds7.py\"\
    , line 13, in fix_spaces\n    return re.sub(r'[ ]{2,}', '-', re.sub(r'[ ]', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code here\n    return\
    \ text.replace(' ', '_').replace('  ', '-')\n\n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpne17375v.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpne17375v.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpne17375v.py\", line 20,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s{2,}\"\
    , \"-\", text.replace(\" \", \"_\"))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_dw3q3z3.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_dw3q3z3.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_dw3q3z3.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp_dw3q3z3.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s{2,}\", \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = re.sub(r'\\s{2,}',\
    \ '-', text)\n    text = re.sub(r' ', '_', text)\n    return text\n \n \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfz7rdsa2.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpfz7rdsa2.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpfz7rdsa2.py\", line 18,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpfz7rdsa2.py\"\
    , line 12, in fix_spaces\n    text = re.sub(r'\\s{2,}', '-', text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"_ _\", \"-\")\n    return text\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeaoiau1x.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpeaoiau1x.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpeaoiau1x.py\", line 20,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"  \", \"-\")\n    \n    \ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpji5gakkv.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpji5gakkv.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpji5gakkv.py\", line 19,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # iterate and replace '  '\
    \ with '-'\n    while text.find('  ') != -1:\n        text = text.replace('  ',\
    \ '-')\n    # iterate and replace ' ' with '_'\n    while text.find(' ') != -1:\n\
    \        text = text.replace(' ', '_')\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp0zqmcap.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpp0zqmcap.py\", line 29,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpp0zqmcap.py\", line 24,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    import re\n    text = re.sub('\
    \ +', ' ', text)\n    text = text.replace(' ', '_')\n    return text\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsl0vsoem.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpsl0vsoem.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpsl0vsoem.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return '-'.join(text.split())\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl67e9165.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl67e9165.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpl67e9165.py\", line 17,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # YOUR CODE HERE\n    text_list\
    \ = []\n    prev_space = False\n    for t in text:\n        if t == ' ':\n   \
    \         if prev_space:\n                text_list.append('-')\n            else:\n\
    \                text_list.append('_')\n            prev_space = True\n      \
    \  else:\n            text_list.append(t)\n            prev_space = False\n  \
    \  return ''.join(text_list)\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7r_cp5p2.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp7r_cp5p2.py\", line 35,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7r_cp5p2.py\", line 30,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"_\")\n    text = text.replace(\"__\"\
    , \"_\")\n    text = text.replace(\"_ \", \"_\")\n    text = text.replace(\"_\
    \ \", \"_\")\n    text = text.replace(\" _\", \"_\")\n    text = text.replace(\"\
    \ _\", \"_\")\n    text = text.replace(\"_\", \"-\")\n    return text\n\n\ndef\
    \ check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7vud_vm5.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp7vud_vm5.py\", line 31,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7vud_vm5.py\", line 25,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\" \", \"-\")\n    text = text.replace(\"-\"\
    , \"\")\n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp28eq0yc6.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp28eq0yc6.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp28eq0yc6.py\", line 22,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s\\s+',\
    \ '-', re.sub(r'\\s', '_', text))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0ui9nxj2.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp0ui9nxj2.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp0ui9nxj2.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp0ui9nxj2.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s\\s+', '-', re.sub(r'\\s', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # your code here\n    return\
    \ re.sub(r\"\\s{2,}\", \"-\", text.replace(\" \", \"_\"))\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp89s4gh5t.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp89s4gh5t.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp89s4gh5t.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp89s4gh5t.py\"\
    , line 13, in fix_spaces\n    return re.sub(r\"\\s{2,}\", \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"_\")\n    text = text.replace(\"___\"\
    , \"-\")\n    return text\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfqkrxqo1.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpfqkrxqo1.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpfqkrxqo1.py\", line 21,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if text.count(\" \") > 2:\n\
    \        text = text.replace(\" \", \"_\")\n        return text.replace(\"_\"\
    , \"-\")\n    return text.replace(\" \", \"_\")\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1ultseu3.py\", line\
    \ 64, in <module>\n    test_check()\n  File \"/tmp/tmp1ultseu3.py\", line 62,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp1ultseu3.py\", line 57,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    return re.sub(r\"_{2,}\", \"-\", text)\n    \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwbhirqml.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpwbhirqml.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpwbhirqml.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpwbhirqml.py\"\
    , line 13, in fix_spaces\n    return re.sub(r\"_{2,}\", \"-\", text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    a = text.replace(\" \", \"\
    _\")\n    b = a.replace(\"  \", \"-\")\n    c = b.replace(\"   \", \"-\")\n  \
    \  return c\n    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvy2kr_0n.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpvy2kr_0n.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvy2kr_0n.py\", line 21,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'(  +)|( )',\
    \ r'-', text).replace(' ', '_')\n\nprint(fix_spaces(\"Example\"))\nprint(fix_spaces(\"\
    Example 1\"))\nprint(fix_spaces(\" Example 2\"))\nprint(fix_spaces(\" Example\
    \   3\"))\n\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8pm3jz7j.py\", line\
    \ 14, in <module>\n    print(fix_spaces(\"Example\"))\n  File \"/tmp/tmp8pm3jz7j.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'(  +)|( )', r'-', text).replace('\
    \ ', '_')\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"  \", \"-\")\n    return text\n    \ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzue36vyo.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpzue36vyo.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpzue36vyo.py\", line 20,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub('[ ]{2,}', '-',\
    \ text.replace(' ', '_'))\n\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbo9kgqr.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpkbo9kgqr.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpkbo9kgqr.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpkbo9kgqr.py\"\
    , line 12, in fix_spaces\n    return re.sub('[ ]{2,}', '-', text.replace(' ',\
    \ '_'))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # Replace all spaces with\
    \ underscores\n    new_text = text.replace(\" \", \"_\")\n    # Replace all 2\
    \ or more consecutive spaces with a dash\n    new_text = re.sub(r'_+', '-', new_text)\n\
    \    return new_text\n\n\nassert fix_spaces(\"Example\") == \"Example\"\nassert\
    \ fix_spaces(\"Example 1\") == \"Example_1\"\nassert fix_spaces(\" Example 2\"\
    ) == \"_Example_2\"\nassert fix_spaces(\" Example   3\") == \"_Example-3\"\n \n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj75_ylll.py\", line\
    \ 19, in <module>\n    assert fix_spaces(\"Example\") == \"Example\"\n  File \"\
    /tmp/tmpj75_ylll.py\", line 15, in fix_spaces\n    new_text = re.sub(r'_+', '-',\
    \ new_text)\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(' +', '-', text.replace('\
    \ ', '_'))\n\nprint(fix_spaces(\" Example   3\"))\n\ndef check(candidate):\n \
    \   assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpasdalxyz.py\", line\
    \ 14, in <module>\n    print(fix_spaces(\" Example   3\"))\n  File \"/tmp/tmpasdalxyz.py\"\
    , line 12, in fix_spaces\n    return re.sub(' +', '-', text.replace(' ', '_'))\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if (len(text) == 1):\n   \
    \     return text\n    else:\n        if (text[0] == \" \"):\n            return\
    \ \"_\" + fix_spaces(text[1:])\n        elif (text[0] == text[1]):\n         \
    \   return text[0] + fix_spaces(text[1:])\n        else:\n            return text[0]\
    \ + fix_spaces(text[1:])\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdct9jynt.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpdct9jynt.py\", line 30,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpdct9jynt.py\", line 24,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if \"  \" in text:\n     \
    \   text = text.replace(\"  \", \"-\")\n    return text.replace(\" \", \"_\")\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpheu48y9d.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpheu48y9d.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpheu48y9d.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    space_arr = []\n    splited_arr\
    \ = []\n    i = 0\n    while i < len(text):\n        if text[i] == \" \":\n  \
    \          space_arr.append(i)\n        i += 1\n    j = 0\n    while j < len(space_arr):\n\
    \        if space_arr[j] == space_arr[j-1] + 1:\n            space_arr[j] = -1\n\
    \        j += 1\n    k = 0\n    while k < len(space_arr):\n        if space_arr[k]\
    \ != -1:\n            text = text[:space_arr[k]] + \"_\" + text[space_arr[k]+1:]\n\
    \        else:\n            text = text[:space_arr[k-1]+1] + \"-\" + text[space_arr[k]+1:]\n\
    \        k += 1\n    return text\nfix_spaces(\"Example 1\")\n\nfix_spaces(\" Example\
    \ 2\")\n\nfix_spaces(\" Example   3\")\n\nfix_spaces(\"Example\")\n\nfix_spaces(\"\
    \    Example\")\n\n\ndef check(candidate):\n    assert candidate('Example') ==\
    \ 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert\
    \ candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy1f7j_oh.py\", line\
    \ 53, in <module>\n    test_check()\n  File \"/tmp/tmpy1f7j_oh.py\", line 51,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpy1f7j_oh.py\", line 46,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"  \", \"-\")\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkwhe3td6.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpkwhe3td6.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpkwhe3td6.py\", line 19,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    parts = text.split(\" \")\n\
    \    for idx, part in enumerate(parts):\n        if not part:\n            parts[idx]\
    \ = \"_\"\n    text = \"-\".join(parts)\n    return text.replace(\"_\", \"\")\n\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbbbowsaf.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpbbbowsaf.py\", line 28,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbbbowsaf.py\", line 22,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    pass\nassert fix_spaces(\"\
    Example\") == \"Example\"\nassert fix_spaces(\"Example 1\") == \"Example_1\"\n\
    assert fix_spaces(\" Example 2\") == \"_Example_2\"\nassert fix_spaces(\" Example\
    \   3\") == \"_Example-3\"\n \n \ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk3i0xsi1.py\", line\
    \ 13, in <module>\n    assert fix_spaces(\"Example\") == \"Example\"\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return text.replace(\" \"\
    , \"_\").replace(\"  \", \"-\")\nprint(fix_spaces(\"Example 1\"))\nprint(fix_spaces(\"\
    \ Example 2\"))\nprint(fix_spaces(\" Example   3\"))\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: "Example_1\n_Example_2\n_Example___3\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_hibvf5r.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp_hibvf5r.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_hibvf5r.py\", line 21,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"_\")\n    return text.replace(\"_\
    \ _\", \"-\")\n\nprint(fix_spaces(\" Example   3\"))\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: "_Example__3\n"
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7_dc13kq.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp7_dc13kq.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7_dc13kq.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if len(text) < 2:\n      \
    \  return text\n    else:\n        text = text.replace(\" \", \"_\")\n       \
    \ while text.find(\"__\") != -1:\n            text = text.replace(\"__\", \"-\"\
    )\n        return text\n\nfix_spaces(\"Example\")\nfix_spaces(\"Example 1\")\n\
    fix_spaces(\" Example 2\")\nfix_spaces(\" Example   3\")\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1gzx_inn.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp1gzx_inn.py\", line 33,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp1gzx_inn.py\", line 28,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    num_of_spaces = text.count(\"\
    \ \")\n    if num_of_spaces == 0:\n        return text\n    elif num_of_spaces\
    \ == 1:\n        return text.replace(\" \", \"_\")\n    else:\n        return\
    \ re.sub(r' +', '-', text.replace(\" \", \"_\"))\n\ndef check(candidate):\n  \
    \  assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk6z15n9u.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpk6z15n9u.py\", line 28,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpk6z15n9u.py\", line 22,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n  File\
    \ \"/tmp/tmpk6z15n9u.py\", line 18, in fix_spaces\n    return re.sub(r' +', '-',\
    \ text.replace(\" \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"_ _ _ _ _\", \"-\")\n    text = text.replace(\"\
    _ _ _ _\", \"-\")\n    text = text.replace(\"_ _ _\", \"-\")\n    text = text.replace(\"\
    _ _\", \"-\")\n    return text\n    \n    # ok\nassert fix_spaces(\"Example\"\
    ) == \"Example\"\nassert fix_spaces(\"Example 1\") == \"Example_1\"\nassert fix_spaces(\"\
    \ Example 2\") == \"_Example_2\"\nassert fix_spaces(\" Example   3\") == \"_Example-3\"\
    \n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6avnfmbc.py\", line\
    \ 23, in <module>\n    assert fix_spaces(\" Example   3\") == \"_Example-3\"\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    #replace spaces with underscores\n\
    \    text = text.replace(\" \", \"_\")\n    #replace consecutive spaces with -\n\
    \    text = re.sub(r'_+', '-', text)\n    return text\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7l1ydbt7.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp7l1ydbt7.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp7l1ydbt7.py\", line 19,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp7l1ydbt7.py\"\
    , line 15, in fix_spaces\n    text = re.sub(r'_+', '-', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc02cwwof.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpc02cwwof.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpc02cwwof.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    import re\n    spaces = r'\\\
    s'\n    underscores = r'_'\n    return re.sub(spaces, underscores, re.sub(r'\\\
    s{2,}', r'-', text))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_iu9lpz9.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp_iu9lpz9.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_iu9lpz9.py\", line 21,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # YOUR CODE HERE\n    text\
    \ = re.sub(r'( )+', '-', text)\n    text = re.sub(r'( )', '_', text)\n    return\
    \ text\n    \n    \n    \ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdanek21s.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpdanek21s.py\", line 27,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpdanek21s.py\", line 20,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpdanek21s.py\"\
    , line 13, in fix_spaces\n    text = re.sub(r'( )+', '-', text)\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s+\", \"\
    -\", text.replace(\" \", \"_\"))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_1_dwt12.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp_1_dwt12.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_1_dwt12.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp_1_dwt12.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s+\", \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    import re\n    return re.sub(r'\\\
    s{2,}', '-', re.sub(r'\\s', '_', text))\n\n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp2hdfddv.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpp2hdfddv.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpp2hdfddv.py\", line 20,\
    \ in check\n    assert candidate('Exa   mple') == 'Exa-mple'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return \"\".join((\"-\" if\
    \ i == \" \" and cntr >= 2 else \"_\" if i == \" \" else i) for i, cntr in zip(text,\
    \ list(map(len, text.split(\" \")))))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmporauzgf4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmporauzgf4.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmporauzgf4.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if not text:\n        return\
    \ text\n    text = text.strip()\n    text = re.sub(r'(?<=\\s)\\s+', '-', text)\n\
    \    text = re.sub(r'\\s', '_', text)\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpghhrnanp.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpghhrnanp.py\", line 28,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpghhrnanp.py\", line 21,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpghhrnanp.py\"\
    , line 15, in fix_spaces\n    text = re.sub(r'(?<=\\s)\\s+', '-', text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    # 1. replace space with '_'\n\
    \    # 2. group all consecutive spaces\n    # 3. replace spaces with '-'\n   \
    \ pat = r'(\\s)'\n    pat2 = r'\\s{2,}'\n    return re.sub(pat2, '-', re.sub(pat,\
    \ '_', text))\n\ndef check(candidate):\n    assert candidate('Example') == 'Example'\n\
    \    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2km9zkbp.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp2km9zkbp.py\", line 27,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp2km9zkbp.py\", line 20,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp2km9zkbp.py\"\
    , line 17, in fix_spaces\n    return re.sub(pat2, '-', re.sub(pat, '_', text))\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s{3,}\"\
    , \"-\", re.sub(r\"\\s+\", \"_\", text))\n\n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp02g1ry49.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp02g1ry49.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp02g1ry49.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp02g1ry49.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s{3,}\", \"-\", re.sub(r\"\\\
    s+\", \"_\", text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = re.sub(r\"\\s{2,}\"\
    , \"-\", text.strip())\n    return re.sub(r\"\\s\", \"_\", text)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4j1cmtli.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp4j1cmtli.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp4j1cmtli.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp4j1cmtli.py\"\
    , line 12, in fix_spaces\n    text = re.sub(r\"\\s{2,}\", \"-\", text.strip())\n\
    NameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r' +', lambda\
    \ x: \"-\" if len(x.group()) > 2 else \"_\", text).lstrip(\"_\")\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphek6i389.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphek6i389.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmphek6i389.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmphek6i389.py\"\
    , line 12, in fix_spaces\n    return re.sub(r' +', lambda x: \"-\" if len(x.group())\
    \ > 2 else \"_\", text).lstrip(\"_\")\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    new_text = text.replace(\"\
    \ \", \"_\")\n    # new_text = new_text.replace(\"__\", \"_\")\n\n    while \"\
    __\" in new_text:\n        new_text = new_text.replace(\"__\", \"_\")\n\n    if\
    \ new_text.startswith(\"_\"):\n        new_text = \"\".join([\"-\", new_text[1:]])\n\
    \n    return new_text.replace(\"_\", \"-\")\n\n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuq1uo1ch.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpuq1uo1ch.py\", line 32,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpuq1uo1ch.py\", line 26,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if text.count(\" \") == 0:\n\
    \        return text\n    if text.count(\" \") == 1:\n        return text.replace(\"\
    \ \", \"_\")\n    elif text.count(\" \") >= 2:\n        return text.replace(\"\
    \ \", \"_\").replace(\"__\", \"-\")\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsxlye_ot.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpsxlye_ot.py\", line 28,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpsxlye_ot.py\", line 23,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    if len(text) == 0:\n     \
    \   return text\n    else:\n        spaces = re.compile(r\"\\s+\")\n        return\
    \ spaces.sub(lambda match: \"-\" if len(match.group()) > 2 else \"_\", text)\n\
    \ndef check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz2_4tih5.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpz2_4tih5.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpz2_4tih5.py\", line 19,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpz2_4tih5.py\"\
    , line 15, in fix_spaces\n    spaces = re.compile(r\"\\s+\")\nNameError: name\
    \ 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    n_spaces = 0\n    for i in\
    \ range(len(text)):\n        if text[i] == \" \":\n            n_spaces += 1\n\
    \        else:\n            n_spaces = 0\n        if n_spaces == 2:\n        \
    \    break\n    \n    if n_spaces == 2:\n        text = text.replace(\"  \", \"\
    -\")\n    return text.replace(\" \", \"_\")\n\ndef check(candidate):\n    assert\
    \ candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif ') ==\
    \ 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplf0j00qn.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplf0j00qn.py\", line 33,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmplf0j00qn.py\", line 28,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'[\\s]+', '-',\
    \ re.sub(r'[\\s]', '_', text))\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvdwghckv.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpvdwghckv.py\", line 22,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpvdwghckv.py\", line 15,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpvdwghckv.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'[\\s]+', '-', re.sub(r'[\\s]', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    text = text.replace(\"__\", \"-\")\n    return text\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiegwj27.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmphiegwj27.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmphiegwj27.py\", line 20,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r\"\\s{2,}\"\
    , \"-\", text.replace(\" \", \"_\"))\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5e7hw9x2.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5e7hw9x2.py\", line 21,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp5e7hw9x2.py\", line 14,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp5e7hw9x2.py\"\
    , line 12, in fix_spaces\n    return re.sub(r\"\\s{2,}\", \"-\", text.replace(\"\
    \ \", \"_\"))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.strip()\n    while\
    \ '  ' in text:\n        text = text.replace('  ', ' ')\n    return text.replace('\
    \ ', '_').replace(' ', '-')\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_7kbdog4.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp_7kbdog4.py\", line 26,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp_7kbdog4.py\", line 20,\
    \ in check\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\nAssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return ''.join([string.replace('\
    \ ', '_') if string[0] != ' ' else '_' for string in text.split('  ')])\n\n\n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzekpp4d_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpzekpp4d_.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpzekpp4d_.py\", line 18,\
    \ in check\n    assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    AssertionError\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    p1 = re.compile(r'\\s+')\n\
    \    p2 = re.compile(r'\\s')\n    return p1.sub('-', p2.sub('_', text))\n\n\n\
    def check(candidate):\n    assert candidate('Example') == 'Example'\n    assert\
    \ candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow\
    \ Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa\
    \   mple') == 'Exa-mple'\n    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\
    \ndef test_check():\n    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbp17cls6.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpbp17cls6.py\", line 25,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmpbp17cls6.py\", line 18,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmpbp17cls6.py\"\
    , line 12, in fix_spaces\n    p1 = re.compile(r'\\s+')\nNameError: name 're' is\
    \ not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    return re.sub(r'\\s{2,}',\
    \ '-', re.sub(r'\\s', '_', text))\n\n\ndef check(candidate):\n    assert candidate('Example')\
    \ == 'Example'\n    assert candidate('Mudasir Hanif ') == 'Mudasir_Hanif_'\n \
    \   assert candidate('Yellow Yellow  Dirty  Fellow') == 'Yellow_Yellow__Dirty__Fellow'\n\
    \    assert candidate('Exa   mple') == 'Exa-mple'\n    assert candidate('   Exa\
    \ 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n    check(fix_spaces)\n\
    \ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4rfj3zkc.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4rfj3zkc.py\", line 23,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp4rfj3zkc.py\", line 16,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp4rfj3zkc.py\"\
    , line 12, in fix_spaces\n    return re.sub(r'\\s{2,}', '-', re.sub(r'\\s', '_',\
    \ text))\nNameError: name 're' is not defined\n"
  exit_code: -1
  status: Exception
- program: "def fix_spaces(text: str) -> str:\n    \"\"\"\n    Given a string text,\
    \ replace all spaces in it with underscores, \n    and if a string has more than\
    \ 2 consecutive spaces, \n    then replace all consecutive spaces with - \n  \
    \  \n    fix_spaces(\"Example\") == \"Example\"\n    fix_spaces(\"Example 1\"\
    ) == \"Example_1\"\n    fix_spaces(\" Example 2\") == \"_Example_2\"\n    fix_spaces(\"\
    \ Example   3\") == \"_Example-3\"\n    \"\"\"\n    text = text.replace(\" \"\
    , \"_\")\n    return re.sub(r'( {2,})', '-', text)\n\n\ndef check(candidate):\n\
    \    assert candidate('Example') == 'Example'\n    assert candidate('Mudasir Hanif\
    \ ') == 'Mudasir_Hanif_'\n    assert candidate('Yellow Yellow  Dirty  Fellow')\
    \ == 'Yellow_Yellow__Dirty__Fellow'\n    assert candidate('Exa   mple') == 'Exa-mple'\n\
    \    assert candidate('   Exa 1 2 2 mple') == '-Exa_1_2_2_mple'\n\ndef test_check():\n\
    \    check(fix_spaces)\n\ntest_check()\n"
  stdout: ''
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp518azerc.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp518azerc.py\", line 24,\
    \ in test_check\n    check(fix_spaces)\n  File \"/tmp/tmp518azerc.py\", line 17,\
    \ in check\n    assert candidate('Example') == 'Example'\n  File \"/tmp/tmp518azerc.py\"\
    , line 13, in fix_spaces\n    return re.sub(r'( {2,})', '-', text)\nNameError:\
    \ name 're' is not defined\n"
  exit_code: -1
  status: Exception

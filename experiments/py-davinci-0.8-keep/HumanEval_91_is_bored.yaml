name: HumanEval_91_is_bored
language: py
prompt: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string of\
  \ words, and your task is to count the number\n    of boredoms. A boredom is a sentence\
  \ that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n\
  \   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"\
  The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
  \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
  \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I will\
  \ be productive. will kill It') == 2\n    assert candidate('You and I are going\
  \ for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
completions: ["    x = S.split(\" \")\n    n = 0\n    for i in x:\n        if i[0]\
    \ == \"I\":\n            n += 1\n    return n\n\n", "    return len([s for s in\
    \ S.split('.') if s.strip().startswith('I')])\n\n", "    count = 0\n    for char\
    \ in S:\n        if char == 'I':\n            count += 1\n    return count\n\n\
    \nprint(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ))", "    return len([word for word in S.split() if word.lower() == \"i\"])\n",
  "    boredoms = 0\n    for sentence in re.split(r\"[.?!]\", S):\n        if sentence.strip().startswith(\"\
    I\"):\n            boredoms += 1\n    return boredoms\n\n", "    boredoms = re.findall(r'I\\\
    W+(?=.)', S)\n    return len(boredoms)\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    return 0\n", "    boredoms = 0\n    sentences = S.split('. ')\n    sentences.extend(S.split('?\
    \ '))\n    sentences.extend(S.split('! '))\n    for sentence in sentences:\n \
    \       if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n",
  "    return S.count(\"I\")\n", "    # TODO: think about ways to solve this problem\
    \ with regular expressions\n    # Split the string S into sentences (delimited\
    \ by ., ? or !)\n    sents = re.split(r'[\\.\\?\\!]', S)\n    # TODO: count how\
    \ many of the sentences start with 'I'\n    count = 0\n    for sent in sents:\n\
    \        if sent.strip().startswith('I'):\n            count += 1\n    return\
    \ count\n    # TODO: return the count\n    # return 0\n\n", "    sentences = S.split('.')\n\
    \    boredoms = 0\n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n   \n   ", "    sentences = re.split('[.?!]',\
    \ S)\n    return len([sentence for sentence in sentences if sentence.split()[0]\
    \ == 'I'])\n\n", "    boredoms = 0\n    for sentence in S.split(\".\"):\n    \
    \    sentence = sentence.strip(\"?!\")\n        for word in sentence.split():\n\
    \            if word.lower() == \"i\":\n                boredoms += 1\n      \
    \          break\n    return boredoms\n", "    boredoms = 0\n    S = S.split()\n\
    \    for word in S:\n        if word[0] == 'I':\n            boredoms += 1\n \
    \   return boredoms\n\n\n", "    return sum(s.startswith(\"I\") for s in S.split(\"\
    .\") + S.split(\"?\") + S.split(\"!\"))\n\n", "    if 'I' in S:\n        count=0\n\
    \        x=S.split('.')\n        for i in x:\n            if 'I' in i:\n     \
    \           count+=1\n        return count\n    else:\n        return 0\n    raise\
    \ NotImplementedError()\n\n", "    n = 0\n    words = S.split()\n    for word\
    \ in words:\n        if word[0] == 'I':\n            n += 1\n    return n\n\n",
  "    return len([s for s in S.split('.') if s.strip().startswith('I')])\n", "  \
    \  return len([word for word in S.split() if word == \"I\"])\n\n", "    count\
    \ = 0\n    sentences = re.split(r'[\\.\\?!]', S)\n    for sentence in sentences:\n\
    \        if sentence.strip().startswith('I'):\n            count += 1\n    return\
    \ count\n\n", "    import re\n    match = re.findall(r'[.?!]\\sI\\s', S)\n   \
    \ return len(match)\n\n", "    boredoms = 0\n    word_list = S.split()\n    for\
    \ i in range(len(word_list)):\n        if i == 0 and word_list[i] == \"I\":\n\
    \            boredoms += 1\n        elif i == 0 and word_list[i] != \"I\":\n \
    \           pass\n        elif i > 0 and word_list[i-1] in \".!?\" and word_list[i]\
    \ == \"I\":\n            boredoms += 1\n        else:\n            pass\n    return\
    \ boredoms\n\n", "    return sum(1 for s in S.split(\".\") if s.strip().startswith(\"\
    I\"))\n\n", "    count = 0\n    first_word = re.compile(r'I')\n    for sentence\
    \ in re.split(r'[.?!]', S):\n        if first_word.match(sentence):\n        \
    \    count += 1\n    return count\n\n", "    boredoms = 0\n    for sentence in\
    \ S.split('.'):\n        for sentence in sentence.split('?'):\n            for\
    \ sentence in sentence.split('!'):\n                if sentence.split()[0] ==\
    \ 'I':\n                    boredoms += 1\n    return boredoms\n\n", "    # try\
    \ to use a list to store the result, and set initial value to 0\n    bored = [0]\n\
    \    # replace all .?! with .,\n    S = S.replace('.', '').replace('?', '').replace('!',\
    \ '')\n    # split the string\n    S = S.split(' ')\n    for i in range(len(S)):\n\
    \        # if the current word is I, and the previous word is not I,\n       \
    \ # add one to the initial value\n        if S[i] == 'I' and S[i-1] != 'I':\n\
    \            bored[0] += 1\n    return bored[0]\n", "    boredoms = 0\n    sentences\
    \ = S.split('.!?')\n    for sentence in sentences:\n        try:\n           \
    \ if sentence.split()[0] == 'I':\n                boredoms += 1\n        except\
    \ IndexError:\n            continue\n    return boredoms\n\n", "    boredoms =\
    \ [1 for word in S.split() if word == \"I\"]\n    return sum(boredoms)\n\n", " \
    \   boredoms = 0\n    sentences = S.split(\". \")\n    for sentence in sentences:\n\
    \        if sentence.startswith(\"I\"):\n            boredoms += 1\n    return\
    \ boredoms\n\n", "    count = 0\n    S = S.replace(\"!\",\".\")\n    S = S.replace(\"\
    ?\",\".\")\n    words = S.split(\".\")\n    for item in words:\n        if item.strip().startswith(\"\
    I\"):\n            count += 1\n    return count\n", "    count = 0\n    for i\
    \ in re.split('[.?!]', S):\n        if i[0] == 'I':\n            count += 1\n\
    \    return count\n", "    boredoms = 0\n    sentence = \"\"\n    for word in\
    \ S.split():\n        sentence += word + \" \"\n        if word[-1] in [\".\"\
    , \"?\", \"!\"]:\n            if sentence.split()[0] == \"I\":\n             \
    \   boredoms += 1\n            sentence = \"\"\n    return boredoms\n\n", "  \
    \  # Process string first, replace '.' with ' ', replace '?' with ' ', replace\
    \ '!' with ' '.\n    S_replaced = S.replace('.', ' ').replace('?', ' ').replace('!',\
    \ ' ')\n    # Split S_replaced by space.\n    S_array = S_replaced.split(' ')\n\
    \    # Count boredoms and return.\n    boredoms = 0\n    for word in S_array:\n\
    \        if word == 'I':\n            boredoms += 1\n    return boredoms\n   \
    \ \n", "    return len([1 for word in S.split('.') if word.startswith('I')])\n\
    \n", "    boredoms = 0\n    for sentence in S.split(\"?\"):\n        for sentence\
    \ in sentence.split(\"!\"):\n            for sentence in sentence.split(\".\"\
    ):\n                if sentence.strip().startswith(\"I\"):\n                 \
    \   boredoms += 1\n    return boredoms\n\n", "    return len([1 for x in S.split(\"\
    .\") if x.startswith(\"I\")])\n    # return sum(x.startswith(\"I\") for x in S.split(\"\
    .\"))\n\n", "    return sum(s.startswith(\"I\") for s in S.split(\".\") if s)\n\
    \n", "    return sum(1 for line in S.split('.') if line.strip().startswith('I'))\n\
    \n", "    boredoms = 0\n    for sentence in S.split('.'):\n        for word in\
    \ sentence.split():\n            if word == 'I':\n                boredoms +=\
    \ 1\n                break\n    return boredoms\n\n", "    return int(re.search(r'I\\\
    b', S) is not None)", "    return len([s for s in S.split('.') if s.strip().startswith('I')])\n\
    \n", "    return len([i for i in S.split() if i.lower() == 'i'])\n\n", "    boredoms\
    \ = 0\n    sentences = []\n    sentence = []\n    while S:\n        if S[0] in\
    \ ('.', '?', '!'):\n            if sentence:\n                sentences.append(sentence)\n\
    \                sentence = []\n        else:\n            sentence.append(S[0])\n\
    \        S = S[1:]\n    for sentence in sentences:\n        if sentence[0] ==\
    \ 'I':\n            boredoms += 1\n    return boredoms\n\n", "    return len([s\
    \ for s in S.split('.') if s.strip().startswith('I')])\n\n", "    # Remove all\
    \ punctuation and split on whitespace.\n    words = S.translate(str.maketrans('',\
    \ '', string.punctuation)).split()\n    # Count the number of \"I\"s.\n    # There\
    \ may be a more efficient way to do this.\n    I_count = 0\n    for word in words:\n\
    \        if word == \"I\":\n            I_count += 1\n    return I_count\n", " \
    \   return 0\n\n", "    # split the string into sentences and remove white space\n\
    \    sentences = [sentence.strip() for sentence in S.split('.')\n            \
    \     if sentence.strip()]\n    # put a full stop at the end of each sentence\n\
    \    sentences = [sentence + '.' for sentence in sentences]\n    # check each\
    \ sentence for the word \"I\"\n    boredoms = [s for s in sentences if s.startswith('I')]\n\
    \    return len(boredoms)\n", "    boredoms = 0\n    for sentence in S.split('.'):\n\
    \        words = sentence.split()\n        if len(words) > 0 and words[0] == 'I':\n\
    \            boredoms += 1\n    return boredoms\n\n", "    cnt = 0\n    for s\
    \ in S.split(\".\"):\n        if s.strip().startswith(\"I\"):\n            cnt\
    \ += 1\n    return cnt\n\n", "    boredoms = 0\n    sentences = re.split(r'[.?!]',\
    \ S)\n    for sentence in sentences:\n        boredoms += sentence.strip().startswith('I')\n\
    \    return boredoms\n", "    sentences = re.split(r'[.?!]', S)\n    num_bored\
    \ = 0\n    for sentence in sentences:\n        sentence = sentence.strip()\n \
    \       if len(sentence) > 0 and sentence[0] == 'I':\n            num_bored +=\
    \ 1\n    return num_bored\n\n", "    # Split the string by the delimiters\n  \
    \  sentences = re.split(r'[!.?]', S)\n    # Get the number of sentences that start\
    \ with 'I'\n    return len([sentence for sentence in sentences if sentence.startswith('I')])\n\
    \n", "    words = S.split(' ')\n    c = 0\n    for w in words:\n        if w ==\
    \ 'I':\n            c += 1\n    return c\n", "    boredoms = 0\n    for s in S.split('.'):\n\
    \        for ss in s.split('?'):\n            for sss in ss.split('!'):\n    \
    \            if sss.strip().startswith('I'):\n                    boredoms +=\
    \ 1\n    return boredoms\n\n", "    boredoms = 0\n    sentence = \"\"\n    for\
    \ c in S:\n        if c in '.!?':\n            if sentence.startswith(\"I\"):\n\
    \                boredoms += 1\n            sentence = \"\"\n        else:\n \
    \           sentence += c\n\n    return boredoms\n", "    boredoms = 0\n    for\
    \ sentence in re.split(r'[.?!]', S):\n        boredoms += sentence.strip().startswith('I')\n\
    \    return boredoms\n\n", "    return len([1 for s in S.split('.') if s.strip().startswith('I')])\n",
  "    boredoms = 0\n    sentences = S.split(\". \")\n    for sentence in sentences:\n\
    \        words = sentence.split()\n        if words[0] == \"I\":\n           \
    \ boredoms += 1\n    return boredoms\n\n", "    sentences = S.split('.')\n   \
    \ boredom = 0\n    for s in sentences:\n        word_list = s.split()\n      \
    \  if len(word_list) > 0 and word_list[0] == 'I':\n            boredom += 1\n\
    \    return boredom\n\n\n@given(st.text())", "    if not S:\n        return 0\n\
    \    res = []\n    for i in S.split(\".\"):\n        res.append(i.strip())\n \
    \   for j in S.split(\"?\"):\n        res.append(j.strip())\n    for k in S.split(\"\
    !\"):\n        res.append(k.strip())\n    return len([word for word in res if\
    \ word.strip().startswith(\"I\")])\n", "    # The number of boredom\n    boredoms\
    \ = 0\n    # Set up the variable to look at the next word\n    next_word = \"\"\
    \n    # Go through each word\n    for word in S.split():\n        # Check if the\
    \ word is \"I\" and if the next word is not \"am\"\n        if word == \"I\" and\
    \ next_word != \"am\":\n            # If so, increment boredoms\n            boredoms\
    \ += 1\n        # Set next_word as the current word\n        next_word = word\n\
    \    # Finally, return boredoms\n    return boredoms\n\n", "    i_counter = 0\n\
    \    S = S.split()\n    for word in S:\n        if word[0] == 'I':\n         \
    \   i_counter += 1\n    return i_counter\n", "    sentences = re.split(r'(?<=[.?!])\\\
    s*', S)\n    return sum(1 for s in sentences if s.startswith('I'))\n\n@pytest.mark.parametrize('string,\
    \ expected', [\n    ('Hello world', 0),\n    ('The sky is blue. The sun is shining.\
    \ I love this weather', 1),\n    ('I love this weather. The sun is shining. The\
    \ sky is blue.', 2),\n    (\"I am a boy. I am a girl. I am a dog. I am a cat\"\
    , 4),\n    (\"I am a boy? I am a girl! I am a dog? I am a cat.\", 4),\n    (\"\
    I.Am.A.Happy.Bot.The.Bot.Is.A.Happy.Boy.\", 1),\n    (\"I am a boy? I am a girl!\
    \ I am a dog? I am a cat. Is it a boy?\", 5),\n    ('The sky is blue. The sun\
    \ is shining. I love this weather. I am a boy', 2),\n    ('I am a boy. The sky\
    \ is blue. The sun is shining. I love this weather', 2),\n    ('I am a boy. I\
    \ am a girl. I am a dog. I am a cat. I am an alien', 5),\n    ('I am a boy. I\
    \ am a girl. I am a dog. I am a cat. I am an alien.', 5),\n    ('I am a boy? I\
    \ am a girl! I am a dog? I am a cat! I am an alien?', 5),\n    ('I am a boy? I\
    \ am a girl! I am a dog? I am a cat! I am an alien.', 5),\n    ('I am a boy! I\
    \ am a girl! I am a dog! I am a cat! I am an alien!', 5),\n    ('I am a boy? I\
    \ am a girl! I am a dog? I am a cat? I am an alien.', 5),\n    ('I am a boy. I\
    \ am a girl. I am a dog. I am a cat. I am an alien!', 5),\n    ('I am a boy. I\
    \ am a girl. I am a dog. I am a cat. I am an alien?',", "    return sum(s.strip().startswith(\"\
    I\") for s in S.split(\".\") if s)\n", "    return S.count(\"I \")\n\n@given(st.text())",
  "    return len([\n        s for s in S.split('.')\n        if s and s[0] == 'I'\n\
    \    ])\n\n", "    boredom = 0\n    S = re.sub(r'\\.|\\?|\\!', '', S)\n    for\
    \ word in S.split():\n        if word.lower() == 'i':\n            boredom +=\
    \ 1\n    return boredom\n", "    return S.split(\" \").count(\"I\")\n\n", "  \
    \  count = 0\n    for c in S:\n        if c == 'I':\n            count += 1\n\
    \    return count\n\n", "    x = 0\n    for c in S:\n        if c == 'I':\n  \
    \          x += 1\n    return x\n\n", "    assert isinstance(S, str)\n    count\
    \ = 0\n    sentences = re.split('[?.!]', S)\n    for sentence in sentences:\n\
    \        word_list = sentence.split()\n        if len(word_list) > 0 and word_list[0]\
    \ == 'I':\n            count += 1\n    return count\n\n", "    count = 0\n   \
    \ for a_str in S.split(\".\"):\n        # print(a_str)\n        if a_str.split(\"\
    \ \")[0] == \"I\":\n            count += 1\n    return count\n\n", "    boredom\
    \ = 0\n    for word in S.split():\n        if word[0] == 'I':\n            boredom\
    \ += 1\n    return boredom\n", "    return len([word for word in S.split() if\
    \ word.startswith('I')])\n", "    sentences = re.split(r'[.?!]', S)\n    boredoms\
    \ = 0\n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n", "    boredoms = 0\n    for\
    \ sentence in S.split('.'):\n        if sentence.strip().startswith('I'):\n  \
    \          boredoms += 1\n    return boredoms\n\n", "    words = S.split()\n \
    \   if words[0] == \"I\":\n        return 1\n    return 0\n    # Replace 0 with\
    \ your code\n\n", "    S = S.lower()\n    boredoms = 0\n    while S:\n       \
    \ s = S.find('i')\n        S = S[s:]\n        if s == -1:\n            return\
    \ boredoms\n        boredoms += 1\n        s = S.find('.')\n        if s == -1:\n\
    \            s = S.find('?')\n            if s == -1:\n                s = S.find('!')\n\
    \        S = S[s+1:]\n    return boredoms\n\n", "    return len([i for i in S.split('.')\
    \ if i.startswith('I')])\n        ", "    count = 0\n    S = S.split(\".\")\n\
    \    for s in S:\n        if s[0] == \"I\":\n            count += 1\n    return\
    \ count\n\n", "    boredoms = 0\n    flag = False\n    for i in S:\n        if\
    \ flag and i != '.' and i != '?' and i != '!':\n            flag = False\n   \
    \     elif i == 'I':\n            flag = True\n            boredoms += 1\n   \
    \     elif i == '.' or i == '?' or i == '!':\n            flag = False\n    return\
    \ boredoms\n\n", "    # todo: implement the function\n    return 0\n\n", "   \
    \ # Your code here\n    boredoms = 0\n    count = 0\n    for char in S:\n    \
    \    if char == '.' or char == '?' or char == '!':\n            if count > 0:\n\
    \                boredoms += 1\n            count = 0\n        if char == 'I':\n\
    \            count += 1\n    return boredoms\n\n", "    count = 0\n    d = S.split()\n\
    \    for i in d:\n        if i == \"I\":\n            count += 1\n    return count\n",
  "    # Check if the firts word is \"I\"\n    return 1 if S.split()[0] == \"I\" else\
    \ 0\n", "    boredoms = 0\n    for sentence in S.split('.'):\n        for sentence\
    \ in sentence.split('?'):\n            for sentence in sentence.split('!'):\n\
    \                if sentence.strip().startswith('I'):\n                    boredoms\
    \ += 1\n    return boredoms\n\n", "    # TODO: Your implementation.\n    S = S.split('.')\n\
    \    count = 0\n    for s in S:\n        S2 = s.split('?')\n        for s2 in\
    \ S2:\n            S3 = s2.split('!')\n            for s3 in S3:\n           \
    \     if s3.strip().lower().startswith('i'):\n                    count = count\
    \ + 1\n    return count\n    \n    \n    \n    \n", "    boredoms = 0\n    for\
    \ sentence in split_sentences(S):\n        if sentence.startswith(\"I\"):\n  \
    \          boredoms += 1\n    return boredoms\n\n", "    return S.count(\"I\"\
    )\n\n", "    boredoms = 0\n    sentences = S.split(\". \")\n    for sentence in\
    \ sentences:\n        if \"I\" in sentence:\n            boredoms += 1\n    return\
    \ boredoms\n\n", "    boredoms = 0\n    words = S.split(' ')\n    for i in range(len(words)):\n\
    \        if words[i] == 'I':\n            boredoms += 1\n    return boredoms\n\
    \n", "    boredoms = 0\n    for i in S.split('.'):\n        if i.startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n", "    sents = re.split(r'[.?!]',\
    \ S)\n    cnt = 0\n    for sent in sents:\n        if sent.strip().startswith('I'):\n\
    \            cnt += 1\n    return cnt\n\n", "    num_boredoms = 0\n    # S.split('.')\n\
    \    # S.split('?')\n    # S.split('!')\n    # S.split('.') + S.split('?') + S.split('!')\n\
    \    # S.split(['.', '?', '!'])\n    sentences = []\n    for c in S:\n       \
    \ if c in ['.', '?', '!']:\n            sentences.append('')\n        else:\n\
    \            sentences[-1] += c\n    for s in sentences:\n        if len(s) >\
    \ 0 and s[0] == 'I':\n            num_boredoms += 1\n    return num_boredoms\n\
    \    # or\n    # return len([s for s in S.split(['.', '?', '!']) if len(s) > 0\
    \ and s[0] == 'I'])\n", "    boredoms = 0\n    sentences = S.split('.')\n    for\
    \ sentence in sentences:\n        if sentence[0].isupper():\n            boredoms\
    \ += 1\n    return boredoms\n\n", "    boredom = 0\n    sentence = ''\n    for\
    \ char in S:\n        if char == '.' or char == '?' or char == '!':\n        \
    \    if sentence.split()[0] == 'I':\n                boredom += 1\n          \
    \  sentence = ''\n        else:\n            sentence += char\n    return boredom\n\
    \n", "    boredoms = 0\n    for word in S.split():\n        if word == \"I\":\n\
    \            boredoms += 1\n    return boredoms\n\n", "    count = 0\n    for\
    \ sentence in S.split('.'):\n        sentence = sentence.strip()\n        if not\
    \ sentence:\n            continue\n        for s in sentence.split('?'):\n   \
    \         if not s:\n                continue\n            for s in s.split('!'):\n\
    \                if not s:\n                    continue\n                words\
    \ = s.split()\n                if words[0] == 'I':\n                    count\
    \ += 1\n    return count\n\n", "    bored = 0\n    sentence = ''\n    for char\
    \ in S:\n        if char in ['?', '.', '!']:\n            if sentence.strip().startswith('I'):\n\
    \                bored += 1\n            sentence = ''\n        else:\n      \
    \      sentence += char\n    if sentence.strip().startswith('I'):\n        bored\
    \ += 1\n    return bored\n\n", "    boredoms = 0\n    for sentence in S.split(\"\
    .\"):\n        if sentence.strip().startswith(\"I\"):\n            boredoms +=\
    \ 1\n    return boredoms\n", "    words = S.split()\n    boredoms = 0\n    for\
    \ word in words:\n        if word == \"I\":\n            boredoms += 1\n    return\
    \ boredoms\n\n", "    # Do not modify this line, we will check your work against\
    \ our own solution\n    return 0\n\n", "    boredoms = 0\n    for sentence in\
    \ S.split('.'):\n        sentence = sentence.split('?')[0]\n        if sentence.startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n\n", "    bored = 0\n    for\
    \ x in S.split(\".\"):\n        if x[0] == \"I\":\n            bored += 1\n  \
    \  return bored\n\n", "    boredom = 0\n    sentence = S.split('.')\n    sentence.extend(S.split('?'))\n\
    \    sentence.extend(S.split('!'))\n    for s in sentence:\n        if 'I' in\
    \ s.split(' '):\n            boredom += 1\n    return boredom\n\n", "    boredoms\
    \ = 0\n    sentence = \"\"\n    for char in S:\n        if char in \".?!\":\n\
    \            if sentence.startswith(\"I\"):\n                boredoms += 1\n \
    \           sentence = \"\"\n        else:\n            sentence += char\n   \
    \ return boredoms\n\n", "    boredoms = 0\n    n = 0\n    for n in range(len(S)):\n\
    \        if S[n] == ' ':\n            if S[n-1] == 'I':\n                boredoms\
    \ += 1\n    return boredoms\n\n", "    pass\n\n", "    return S.count(\"I\")\n\
    \n", "    boredoms = 0\n    for sentence in S.split(\"?\"):\n        if sentence.strip().startswith(\"\
    I\"):\n            boredoms += 1\n    return boredoms\n\n", "    count = 0\n \
    \   if S == \"\":\n        return 0\n    else:\n        for i in S.split():\n\
    \            if i.startswith(\"I\"):\n                count += 1\n        return\
    \ count\n", "    # Split input string on '.|?|!'\n    # Check if first word of\
    \ each sentence is 'I'\n    # if 'I' then increment bored count\n    # return\
    \ bored count\n    bored = 0\n    sentences = re.split('[?!.]', S)\n    for sentence\
    \ in sentences:\n        if sentence.strip().split(' ')[0] == 'I':\n         \
    \   bored += 1\n    return bored\n\n", "    count = 0\n    for word in S.split():\n\
    \        if word == \"I\":\n            count += 1\n    return count\n", '    return
    S.count("I")', "    return len([s for s in S.split('.') if s[0] == 'I'])\n   \n\
    \   ", "    boredoms = 0\n    sentences = S.split(\". \")\n    sentences += S.split(\"\
    ? \")\n    sentences += S.split(\"! \")\n    for sentence in sentences:\n    \
    \    if sentence.split(\" \")[0] == \"I\":\n            boredoms += 1\n    return\
    \ boredoms\n\n", "    boredoms = 0\n    for sentence in S.split(\".\"):\n    \
    \    sentence = sentence.strip()\n        if sentence.startswith(\"I\"):\n   \
    \         boredoms += 1\n    return boredoms\n\n", "    boredoms = 0\n    sen\
    \ = S.split()\n    if len(sen) > 1:\n        if sen[0] == \"I\":\n           \
    \ boredoms += 1\n    return boredoms\n", "    sentences = re.split('\\.|\\?|!',\
    \ S)\n    boredoms = 0\n    for sentence in sentences:\n        boredoms += 1\
    \ if sentence.startswith('I') else 0\n    return boredoms\n\n", "    pass\n\n",
  "    words = S.split()\n    boredom = 0\n    for word in words:\n        if word\
    \ == \"I\":\n            boredom += 1\n    return boredom\n", "    pass\n\n",
  "    boredoms = 0\n    for s in S.split('.'):\n        if s.startswith('I'):\n \
    \           boredoms += 1\n    \n    return boredoms\nprint(is_bored(\"Hello world\"\
    ))\nprint(is_bored(\"The sky is blue. The sun is shining. I love this weather\"\
    ))\n", "    boredoms = 0\n    sentences = re.split('\\.|\\?|!', S)\n    boredoms\
    \ = len([s for s in sentences if s.startswith('I')])\n    return boredoms\n\n\n",
  "    return sum(1 for s in S.split(\".\") if s and s[0] == \"I\")\n\n", "    # The\
    \ overall idea is to split the string on '.', '!' and '?' to get a list\n    #\
    \ of sentences, then take the length of the list of sentences that start\n   \
    \ # with 'I'.\n    sentences = split(S, '.', '!', '?')\n    return len([i for\
    \ i in sentences if i.strip().startswith('I')])\n", "    boredoms = 0\n    for\
    \ sentence in S.split('.'):\n        for statement in sentence.split('?'):\n \
    \           for question in statement.split('!'):\n                words = question.split()\n\
    \                if len(words) > 0 and words[0] == 'I':\n                    boredoms\
    \ += 1\n    return boredoms\n\n", "    if not S:\n        return 0\n    if S[0]\
    \ == 'I':\n        return 1 + is_bored(S[S.find('.') + 1:])\n    else:\n     \
    \   return is_bored(S[S.find('.') + 1:])\n\n", "    sentences = S.split('. ')\n\
    \    print(sentences)\n    count = 0\n    for sen in sentences:\n        if sen.split()[0]\
    \ == 'I':\n            count += 1\n    return count\n\n", "    if S.find(\"I\"\
    ) == -1:\n        return 0\n    return 1\n", "    return 0 if S[0] == 'I' else\
    \ 1\n\n", "    boredoms = 0\n    sentences = S.split('.')\n    sentences += S.split('?')\n\
    \    sentences += S.split('!')\n    for sentence in sentences:\n        sentence\
    \ = sentence.strip()\n        if sentence.startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n\n", "    sentences = []\n    num_of_boredoms = 0\n\
    \    for i in range(len(S)):\n        if S[i] == '.' or S[i] == '?' or S[i] ==\
    \ '!':\n            sentences.append(S[i-1])\n            break\n    for i in\
    \ range(len(S)):\n        if S[i] == '.' or S[i] == '?' or S[i] == '!':\n    \
    \        if S[i-1] == 'I':\n                num_of_boredoms += 1\n    return num_of_boredoms\n",
  "    boredoms = 0\n    for word in S.split():\n        if word == \"I\":\n     \
    \       boredoms += 1\n    return boredoms\n ", "    # your code here\n    return\
    \ S.count(\"I\")\n", "    return S.count(\"I\")\n    # S = S.replace(\"!\", \"\
    .\")\n    # S = S.replace(\"?\", \".\")\n    # sentences = S.split(\".\")\n  \
    \  # boredoms = 0\n    # for sentence in sentences:\n    #     if \"I\" in sentence:\n\
    \    #         boredoms += 1\n    # return boredoms\n\n", "    count = 0\n   \
    \ sentences = S.split('. ')\n    for s in sentences:\n        s = s.split('? ')\n\
    \        for se in s:\n            se = se.split('! ')\n            for sen in\
    \ se:\n                if sen.startswith('I'):\n                    count += 1\n\
    \    return count\n", "    n = 0\n    i = 0\n    while i < len(S):\n        if\
    \ S[i] == 'I':\n            n += 1\n        while i < len(S) and S[i] != '.' and\
    \ S[i] != '?' and S[i] != '!':\n            i += 1\n        i += 1\n    return\
    \ n\n", "    return S.count(\"I\")\n\n", "    if not len(S) > 0:\n        return\
    \ 0\n    count = 0\n    sentence = S.split(\".\")\n    for s in sentence:\n  \
    \      if \"I\" in s:\n            count += 1\n    return count\n\n\n", "    is_bored\
    \ = 0\n    words = S.split()\n    for word in words:\n        if word == \"I\"\
    :\n            is_bored += 1\n    return is_bored\n\n", "    return int(any([True\
    \ for s in S.split(\".\") if s.startswith(\"I\")]))\n    \n", "    pass\n\n",
  "    boredom = 0\n    i = 0\n    while i < len(S):\n        if S[i] == 'I':\n  \
    \          boredom += 1\n        else:\n            while i < len(S) and S[i]\
    \ != '.' and S[i] != '?' and S[i] != '!':\n                i += 1\n        i +=\
    \ 1\n    return boredom\n", "    # Replaces all the full stops, question marks\
    \ and exclamation marks \n    # with spaces, then counts the number of times 'I'\
    \ appears\n    return S.replace('.', ' ').replace('?', ' ').replace('!', ' ').count('I')\n",
  "    count = 0\n    S = S.replace('!', '.')\n    S = S.replace('?', '.')\n    for\
    \ word in S.split('.'):\n        if word.strip().startswith('I'):\n          \
    \  count += 1\n    return count\n\n", "    # Split the string on \".\" \"?\" or\
    \ \"!\"\n    sentences = re.split(r'[.?!]', S)\n    # Loop through the sentences\n\
    \    for s in sentences:\n        # If the sentence starts with \"I\" count it\n\
    \        if s.strip().startswith(\"I\"):\n            return 1\n    # If we don't\
    \ find one, return 0\n    return 0\n\n", "    return len([x for x in S.split('.')\
    \ if x.strip().startswith('I')])\n\n", "    s = S.split(\" \")\n    bored = 0\n\
    \    for i in range(len(s)):\n        if s[i].lower() == \"i\":\n            bored\
    \ += 1\n    return bored\n\n", "    return len([sentence for sentence in S.split('.')\n\
    \                if len(sentence) > 0 and sentence[0] == 'I'])\n", "    sentences\
    \ = S.split('.')\n    sentences.extend(S.split('?'))\n    sentences.extend(S.split('!'))\n\
    \    n_boredoms = 0\n    for sentence in sentences:\n        words = sentence.split()\n\
    \        if len(words) > 0 and words[0] == 'I':\n            n_boredoms += 1\n\
    \    return n_boredoms\n", "    n = 0\n    for i in S.split():\n        if i ==\
    \ \"I\":\n            n += 1\n    return n\n\n", "    # get sentences\n    sentences\
    \ = S.split('.')\n    # get boredoms\n    boredoms = []\n    for sentence in sentences:\n\
    \        if '!' in sentence:\n            sub_sentences = sentence.split('!')\n\
    \            for sub_sentence in sub_sentences:\n                sub_sentence\
    \ = sub_sentence.strip()\n                if 'I' == sub_sentence[0]:\n       \
    \             boredoms.append(sub_sentence)\n        elif '?' in sentence:\n \
    \           sub_sentences = sentence.split('?')\n            for sub_sentence\
    \ in sub_sentences:\n                sub_sentence = sub_sentence.strip()\n   \
    \             if 'I' == sub_sentence[0]:\n                    boredoms.append(sub_sentence)\n\
    \        else:\n            sentence = sentence.strip()\n            if 'I' ==\
    \ sentence[0]:\n                boredoms.append(sentence)\n    return len(boredoms)\n\
    \n", "    boredoms = 0\n    for sentence in S.split('.'):\n        for sentence\
    \ in sentence.split('?'):\n            for sentence in sentence.split('!'):\n\
    \                if sentence.strip().startswith('I'):\n                    boredoms\
    \ += 1\n    return boredoms\n", "    boredoms = 0\n    for word in S.split():\n\
    \        if word.lower() == \"i\":\n            boredoms += 1\n    return boredoms\n\
    \n", "    pass\n", "    return S.count(\"I \")\n\n", "    # Replace the 'pass'\
    \ statement with your code\n    sentences = re.split('[!?.]', S)\n    bored =\
    \ 0\n    for sentence in sentences:\n        if sentence.split() and sentence.split()[0]\
    \ == 'I':\n            bored += 1\n    return bored\n\n", "    count = 0\n   \
    \ for word in S.split():\n        if word == \"I\":\n            count += 1\n\
    \    return count\n", "    return len([s for s in S.split('.!?') if s.startswith('I')])\n",
  "    sentences = S.split(\". \")\n    boredom = 0\n    for sentence in sentences:\n\
    \        if sentence.startswith(\"I\"):\n            boredom += 1\n    return\
    \ boredom\n\n\n", "    count = 0\n    words = S.split()\n    for i in range(len(words)):\n\
    \        if words[i] == \"I\":\n            count += 1\n    return count\n\n",
  "    boredom = 0\n    for sentence in S.split(\"?\"):\n        boredom += sentence.count(\"\
    I\")\n    return boredom\n    # return sum(sentence.count(\"I\") for sentence\
    \ in S.split(\"?\"))\n", "    boredoms = 0\n    for sentence in S.split(\".\"\
    ):\n        if sentence:\n            words = sentence.split()\n            if\
    \ words[0] == \"I\":\n                boredoms += 1\n    return boredoms\n\n",
  "    bored = 0\n    for sent in S.split(\".\"):\n        if sent.split(\"?\")[0].split(\"\
    !\")[0].strip().startswith(\"I\"):\n            bored += 1\n    return bored\n\
    \n", "    return (S.count(\"I\") - S.count(\"I.\"))\n", "    return S.count(\"\
    I\")\n", "    return S.count(\"I\")\n    \n", "    boredoms = 0\n    for item\
    \ in S.split(\".\"):\n        if \"I\" in item:\n            boredoms += 1\n \
    \   return boredoms\n\nprint(is_bored(\"I am bored\"))\nprint(is_bored(\"Hello\
    \ world\"))\nprint(is_bored(\"The sky is blue. The sun is shining. I love this\
    \ weather\"))", "    count = 0\n    for w in S.split():\n        if w == \"I\"\
    :\n            count += 1\n    return count\n\n", "    return len([1 for x in\
    \ S.split() if x == 'I'])\n\n", "    boredoms = 0\n    word_list = S.split()\n\
    \    for i in range(len(word_list)):\n        if word_list[i] == \"I\":\n    \
    \        boredoms += 1\n    return boredoms\n\n", "    bored = 0\n    sentences\
    \ = S.split('. ')\n    for sentence in sentences:\n        words = sentence.split('\
    \ ')\n        if words[0] == 'I':\n            bored += 1\n    return bored\n",
  "    boredoms = 0\n    sentences = split_sentences(S)\n    for sentence in sentences:\n\
    \        words = split_words(sentence)\n        if len(words) > 0 and words[0]\
    \ == \"I\":\n            boredoms += 1\n    return boredoms\n\n", "    bored =\
    \ 0\n    i = 0\n    while i < len(S):\n        if S[i] == 'I':\n            bored\
    \ += 1\n        i += 1\n        while S[i] != '.' and S[i] != '?' and S[i] !=\
    \ '!':\n            i += 1\n        i += 1\n    return bored\n\n", "    boredoms\
    \ = 0\n    for sentence in S.split('.'):\n        if sentence[0] == 'I':\n   \
    \         boredoms += 1\n    return boredoms\n\n", "    sentences = S.split(\"\
    . \")\n    boredoms = 0\n    for sentence in sentences:\n        if sentence.startswith(\"\
    I\"):\n            boredoms += 1\n    return boredoms\n", "    # Split the string\
    \ by '.', '?' or '!'\n    sentences = re.split(r'[?!.]', S)\n    count = 0\n \
    \   for s in sentences:\n        # Clean each sentence by removing spaces\n  \
    \      s = s.strip()\n        # Count the number of boring sentences\n       \
    \ if s.startswith('I'):\n            count += 1\n    return count\n\n", "    boredoms\
    \ = 0\n    sentences = [s.strip() for s in S.split('.')]\n    sentences += [s.strip()\
    \ for s in S.split('?')]\n    sentences += [s.strip() for s in S.split('!')]\n\
    \    for sentence in sentences:\n        if sentence.startswith('I'):\n      \
    \      boredoms += 1\n    return boredoms\n", "    boredoms = 0\n    for sentence\
    \ in S.split(\".\"):\n        sentence = sentence.split(\"!\")[0]\n        sentence\
    \ = sentence.split(\"?\")[0]\n        sentence = sentence.strip()\n        if\
    \ sentence[0] == \"I\":\n            boredoms += 1\n    return boredoms\n\n",
  "    return S.count(\"I\")\n    return sum(map(S.startswith(\"I\"),S.split(\".\"\
    )))", "    res = 0\n    for word in S.split('.'):\n        words = word.split()\n\
    \        if words and words[0] == 'I':\n            res += 1\n    return res\n",
  "    # Sentences are delimited by '.', '?' or '!'\n    sentences = re.split('[\\\
    .\\?\\!]', S)\n    cnt = 0\n    for sentence in sentences:\n        words = sentence.split()\n\
    \        if not words:\n            continue\n        if words[0] == 'I':\n  \
    \          cnt += 1\n    return cnt\n\n", "    sentences = S.split(\". \") + S.split(\"\
    ? \") + S.split(\"! \")\n    return sum(1 for sentence in sentences if sentence.startswith(\"\
    I\"))\n\n", "    return S.count(\"I\")\n\n", "    boredom = 0\n    sentences =\
    \ re.split('\\.|\\?|!', S)\n    for sentence in sentences:\n        word_list\
    \ = sentence.split()\n        if len(word_list) != 0 and word_list[0] == 'I':\n\
    \            boredom += 1\n    return boredom\n", "    return len([s for s in\
    \ S.split('.!?') if s.lstrip().startswith('I')])\n", "    count = 0\n    i = 0\n\
    \    while i < len(S):\n        if S[i] == 'I':\n            count += 1\n    \
    \    i += 1\n        while i < len(S) and S[i] != '.' and S[i] != '?' and S[i]\
    \ != '!':\n            i += 1\n    return count\n\n", "    return S.count(\"I\"\
    )\n", "    sentences = S.split(\". \") + S.split(\"? \") + S.split(\"! \")\n \
    \   boredoms = 0\n    for sentence in sentences:\n        if sentence.startswith(\"\
    I\"):\n            boredoms += 1\n    return boredoms\n", "    return 0\n", " \
    \   return S.count(\"I\")\n\n", "    # Split the sentences\n    sentences = re.split('\\\
    .|\\?|!', S)\n    # What would you need to do to check if a sentence has the word\
    \ 'I'?\n    # This would be a good place to use a regular expression\n    # How\
    \ could you filter out all the sentences that don't start with 'I'?\n    # This\
    \ would be a good place to use a list comprehension\n    # How could you count\
    \ the number of items in the list?\n    # This would be a good place to use the\
    \ built-in Python len() function\n    \n    return len([s for s in sentences if\
    \ re.match('^I', s)])\n", "    return S.count(\"I\")\n\n", "    S = S.split(\"\
    \ \")\n    count = 0\n    for word in S:\n        if word[0] == \"I\":\n     \
    \       count += 1\n    return count\n\nprint(is_bored(\"The sky is blue. The\
    \ sun is shining. I love this weather\"))", "    boredoms = 0\n    for sentence\
    \ in S.split(\".\"):\n        for sentence in sentence.split(\"?\"):\n       \
    \     for sentence in sentence.split(\"!\"):\n                if sentence.strip().startswith(\"\
    I\"):\n                    boredoms += 1\n    return boredoms\n", "    count =\
    \ 0\n    temp = re.split('\\.|\\?|!', S)\n    for sentence in temp:\n        sentence\
    \ = sentence.strip()\n        sentence = sentence.split()\n        if sentence\
    \ and sentence[0] == 'I':\n            count += 1\n    return count\n", "    sentences\
    \ = re.split(r'[.?!]', S)\n    boredoms = 0\n    for sent in sentences:\n    \
    \    boredoms += (sent.split(' ')[0] == 'I')\n    return boredoms\n\n", "    boredoms\
    \ = 0\n    sentence = []\n    for word in S.split():\n        if word == 'I':\n\
    \            boredoms += 1\n        elif word in ['.', '?', '!']:\n          \
    \  if sentence[0] == 'I':\n                boredoms += 1\n            sentence\
    \ = []\n        else:\n            sentence.append(word)\n    return boredoms\n\
    \n", "    boredoms = 0\n    sentences = re.split('[.!?]', S)\n    for sentence\
    \ in sentences:\n        words = sentence.split()\n        if len(words) > 0 and\
    \ words[0] == 'I':\n            boredoms += 1\n    return boredoms\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

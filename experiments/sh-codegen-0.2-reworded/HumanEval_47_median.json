{
  "name": "HumanEval_47_median",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n#\n# $1 is a space-separated list\nmedian() {\n",
  "tests": "}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test",
  "completions": [
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "    local l\n    l=()\n    while read -r -n1 -p \"$1\"\n    do\n        l=`echo $1 | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $",
    "  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=$1\n  if [[ $# -eq 1 ]]; then\n    l=$(echo $l)\n  fi\n\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l",
    "  local l\n  l=()\n  while read -r -n1 -p \"$1\"\n  do\n    l=`echo $l $1 | sed 's/ / /g'`\n  done\n  l=`echo $l | sed 's/ / /g'`\n  if [ -z \"$l\" ]; then\n    return 0\n  fi\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^[0-9]+//g'`\n  l=`echo $l | sed 's/[^0-9]//g'`\n  if [ -z \"$l\" ]; then\n    return 0\n  fi\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^[0-9]+//g'`\n  l=`echo $l | sed 's/[^0-9]//g'`\n  if [ -z \"$l\" ]; then\n    return 0\n  fi\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^[0-9]+//g'`\n  l=`echo $l | sed 's/[^0-9]//g'`\n  if [ -z \"$l\" ]; then\n    return 0\n  fi\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^[0-9]+//g'`\n  l=`echo $l | sed 's/[^0-9]//g'`\n  if [ -z \"$l\" ]; then\n    return 0\n  fi\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^[0-9]+//g'`\n  l=`echo $l | sed 's/[^0-9]//g'`\n  if [ -z \"$l\" ]; then\n    return 0\n  fi\n  l=`echo $l | sed 's/ / /g'`",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  local l\n  l=()\n  while read -r -n1 -p \"$1\"\n  do\n    l=`echo $l $1 | sed -e 's/[^0-9.]//g'`\n  done\n  l=`echo $l | sed -e 's/[^0-9.]//g'`\n  if [ -z \"$l\" ]; then\n    return 0\n  fi\n  return `echo $l | tr '[:upper:]' '[:lower:]' | sort -t $' ' -k1,1 -k2,2n | uniq -c | sort -n | tail -1`",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]",
    "    l=$1\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    l=`echo $l | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:tab:]'`\n    l=`echo $l | tr '[:space:]' ' '`\n    l=`echo $l | tr '[:space:]' '\\t'`\n    l=`echo $l | tr '[:space:]' '\\n'`\n    l=`echo $l | tr '[:space:]' '\\r'`\n    l=`echo $l | tr '[:space:]' '\\v'`\n    l=`echo $l | tr '[:space:]' '\\f'`\n    l=`echo $l | tr '[:space:]' '\\b'`\n    l=`echo $l | tr '[:space:]' '\\a'`\n    l=`echo $l | tr '[:space:]' '\\e'`\n    l=`echo $l | tr '[:space:]' '\\f'`\n    l=`echo $l | tr '[:space:]' '\\n'`\n    l=`echo $l | tr '[:space:]' '\\r'`\n    l=`echo $l | tr '[:space:]' '\\t'`\n    l=`echo $l | tr '[:space:]' '\\v'`\n    l=`echo $l | tr '[:space:]' '\\f'`\n    l=`echo $l | tr '[:space:]' '\\b'`\n    l=`echo $l | tr '[:space:]' '\\a'`\n    l=`echo $l | tr '[:space:]' '\\e'`\n    l=`echo $l | tr '[:space:]' '\\f'`\n    l=`echo $l | tr '[:space:]' '\\n'`\n    l=`echo $l | tr '[:space:]' '\\r'`\n    l=`echo $l | tr '[:space:]' '\\t'",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr '[:upper:]' '[:lower:]' | sort -t $' ' -k1.2n -k3.2n | tail -n1`\n    if [ -n \"$l\" ]; then\n      echo $l\n      return\n    fi\n  done\n  echo \"No elements\"",
    "    l=$1\n    n=0\n    s=0\n    for i in $l; do\n        n=n+1\n        if [ $n -ge 2 ]; then\n            s=s+$i\n        fi\n    done\n    if [ $n -eq 1 ]; then\n        return $s\n    else\n        return $s/$n\n    fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $l | tr -d \" \"`\n    l=`echo $",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[@]}\n  l=${l[",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\n  i=0\n  j=0\n  k=0\n  m=0\n  n=0\n  p=0\n  q=0\n  r=0\n  s=0\n  t=0\n  u=0\n  v=0\n  w=0\n  x=0\n  y=0\n  z=0\n\n  while [ $# -gt 0 ]; do\n    i=\"$1\"\n    shift\n    j=0\n    while [ $# -gt 0 ]; do\n      j=\"$1\"\n      shift\n      k=0\n      while [ $# -gt 0 ]; do\n        k=\"$1\"\n        shift\n        m=0\n        while [ $# -gt 0 ]; do\n          m=\"$1\"\n          shift\n          n=0\n          while [ $# -gt 0 ]; do\n            n=\"$1\"\n            shift\n            p=0\n            while [ $# -gt 0 ]; do\n              p=\"$1\"\n              shift\n              q=0\n              while [ $# -gt 0 ]; do\n                q=\"$1\"\n                shift\n                r=0\n                while [ $# -gt 0 ]; do\n                  r=\"$1\"\n                  shift\n                  s=0\n                  while [ $# -gt 0 ]; do\n                    s=\"$1\"\n                    shift\n                    t=0\n                    while [ $# -gt 0 ]; do\n                      t=\"$1\"\n                      shift\n                      u=0\n                      while [ $# -gt 0 ]; do\n                        u=\"$1\"\n                        shift\n                        v=0\n                        while [ $# -gt 0 ]; do\n                          v=\"$1\"\n                          shift\n                          w=0\n                          while [ $# -gt 0 ]; do\n                            w=\"$1\"\n                            shift\n                            x=0\n                            while [ $# -gt 0 ]; do\n                              x=\"$1\"\n                              shift\n",
    "    l=$1\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]'",
    "    local l\n    l=()\n    while read -r -n1 -p1 $1\n    do\n        l=`echo $1 | sed 's/ / /g'`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | sed 's/[^0-9]//g'`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | sed 's/[^0-9]//g'`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | sed 's/[^0-9]//g'`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | sed 's/[^0-9]//g'`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | sed 's/[^0-9]//g'`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | sed 's/[^0-9]//g'`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | sed 's/[^0-9]//g'`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | sed 's/ / /g'`\n    l=`echo $l | sed 's/^[0-9]+//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $",
    "    l=$1\n    n=0\n    while read -r -n 1 -p \"$1\" i; do\n        n=$((n+1))\n        if [ \"$n\" -gt \"$#\" ]; then\n            echo \"Usage: $0 <list>\"\n            exit 1\n        fi\n    done < \"$1\"\n    if [ \"$n\" -eq 1 ]; then\n        echo \"$l\"\n    else\n        sort -n -r -k1 $l\n        if [ \"$n\" -gt 2 ]; then\n            cut -d' ' -f2-n \"$l\" | tail -n1 | sed 's/\\.$//'\n        fi\n        cut -d' ' -f2-n \"$l\" | tail -n1 | sed 's/\\.$//'\n    fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=()\n  for i in $1; do\n    l=`echo $i | tr '[:upper:]' '[:lower:]'`\n  done\n\n  l=($l)\n  l=($l)\n\n  if [[ $# -eq 1 ]]; then\n    echo \"$l\"\n    return\n  fi\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n  l=($l)\n  l=($l)\n\n",
    "  l=$1\n  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 1 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Sort the list\n  lsort $1\n  # Get the middle element\n  mid=$((len(l) / 2))\n  # If odd, take the middle element\n  if [ $((len(l) % 2)) -eq 1 ]; then\n    echo $l[$mid]\n  # If even, take the average of the middle elements\n  else\n    echo $(((l[$mid-1] + l[$mid]) / 2))\n  fi",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr '[:upper:]' '[:lower:]' | sort -t. -k1.1,1.1 | uniq`\n    if [ \"$#\" -eq \"0\" ]; then\n      echo \"No elements in list\"\n    else\n      echo \"${l[$(((length $l) / 2))]}\"\n    fi\n  done < $1",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local zz\n  local zzz\n  local zzzz\n  local zzzzz\n  local zzzzzz\n  local zzzzzzz\n  local zzzzzzzz\n  local zzzzzzzzz\n  local zzzzzzzzzz\n  local zzzzzzzzzz\n  local zzzzzzzzzzz\n  local zzzzzzzzzzzz\n  local zzzzzzzzzzzz\n  local zzzzzzzzzzzzz\n  local zzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzz",
    "  if [ -z \"$1\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=()\n  for i in $1; do\n    l=`echo $i | tr '[:upper:]' '[:lower:]'`\n  done\n\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 2 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 2 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '-' ]]; then\n      l=$l[1:]\n    fi\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '-' ]]; then\n      l=$l[1:]\n    fi\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '-' ]]; then\n      l=$l[1:]\n    fi\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '-' ]]; then\n      l=$l[1:]\n    fi\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '-' ]]; then\n      l=$l[1:]\n    fi\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '-' ]]; then\n      l=$l[1:]\n    fi\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '-' ]]; then\n      l=$l[1:]\n    fi\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '-' ]]; then\n      l=$l[1:]\n    fi\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '-' ]]; then\n      l=$l[1:]\n    fi\n  fi\n  if [[ $# -eq 2 ]]; then\n    if [[ $l[0] == '",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]'",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  # Sort the list\n  l=sort $l\n  # Find the middle element\n  l=$(echo $l | sed 's/ / /g')\n  # Print the middle element\n  echo $l",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr '",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  # Sort the list\n  l=`echo \"$l\" | sort`\n  # Find the middle element\n  if [ -z \"$2\" ]; then\n    # No second argument, so take the middle element\n    mid=`echo \"$l\" | sed -n 2p`\n  else\n    # Second argument, so take the middle two elements\n    mid=`echo \"$l\" | sed -n 2p | sed -n 1p`\n  fi\n  # Convert to float\n  mid=`echo \"$mid\" | sed -e 's/^[0-9]*//' -e 's/[^0-9.]//'`\n  # Return the median\n  echo $mid",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '",
    "  local l\n  l=()\n  while read -r -n1 -p \"$1\"\n  do\n    l=`echo $l $1 | sed 's/ / /g'`\n  done\n  l=`echo $l | sed 's/ / /g'`\n  if [ -z \"$l\" ]; then\n    return 0\n  fi\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ' '`\n    l=`echo $",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local zz\n  local zzz\n  local zzzz\n  local zzzzz\n  local zzzzzz\n  local zzzzzzz\n  local zzzzzzzz\n  local zzzzzzzzz\n  local zzzzzzzzzz\n  local zzzzzzzzzzz\n  local zzzzzzzzzzzz\n  local zzzzzzzzzzzzz\n  local zzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr '",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr '[:upper:]' '[:lower:]' | sort -t $' ' -k1.1,1.1 -k2.2,2.2n -k3.3,3.3n -k4.4,4.4n -k5.5,5.5n -k6.6,6.6n -k7.7,7.7n -k8.8,8.8n -k9.9,9.9n -k10.10,10.10n -k11.11,11.11n -k12.12,12.12n -k13.13,13.13n -k14.14,14.14n -k15.15,15.15n -k16.16,16.16n -k17.17,17.17n -k18.18,18.18n -k19.19,19.19n -k20.20,20.20n -k21.21,21.21n -k22.22,22.22n -k23.23,23.23n -k24.24,24.24n -k25.25,25.25n -k26.26,26.26n -k27.27,27.27n -k28.28,28.28n -k29.29,29.29n -k30.30,30.30n -k31.31,31.31n -k32.32,32.32n -k33.33,33.33n -k34.34,34.34n -k35.35,35.35n -k36.36,36.36n -k37.37,37.37n -k38.38,38.38n -k39.39,39.39n -k40.40,40.40n -k41.41,41.41n -k42.42,42.42n -k43.43,43.43n -k44.44,44.44n -k45.45,45.45n -k46.46,46.46n -",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  n=0\n  for i in $l; do\n    n=n+1\n  done\n  if [ $n -gt 1 ]; then\n    l=$l/$n\n    sort $l\n    if [ $n -eq 2 ]; then\n      return $l[1]\n    else\n      return $l[$n/2]\n    fi\n  fi\n  return $l",
    "    local l\n    l=()\n    while read -r -n1 -p1 $1\n    do\n        l=`echo $1 | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"$1\"'`\n  l=`echo $l | tr '[:space:]' '[:space:",
    "    l=$1\n    n=0\n    for i in $l; do\n        n=n+1\n    done\n    if [ $n -eq 1 ]; then\n        echo $l\n    else\n        sorted=`echo $l | sort`\n        half=`echo $sorted | cut -d' ' -f1 | uniq | cut -d' ' -f1 | wc -l`/2\n        echo $sorted[$half]\n    fi",
    "  local l\n  l=()\n  while read -r -n1 -p \"$1\"\n  do\n    l=`echo $l $1 | sed 's/ / /g'`\n  done\n  l=`echo $l | sed 's/ / /g'`\n  if [ \"$#\" -eq 1 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -eq 0 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -gt 1 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -eq 1 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -eq 0 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -gt 1 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -eq 1 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -eq 0 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -gt 1 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -eq 1 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -eq 0 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -gt 1 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -eq 1 ]; then\n    l=`echo $l | sed 's/ / /g'`\n  fi\n  if [ \"$#\" -eq 0 ]; then\n    l=`",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:tab:]'`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr '",
    "    l=$1\n    n=0\n    s=\"\"\n    for i in $l; do\n        n=n+1\n        if [ $n -lt 2 ]; then\n            s=$s$i\n        else\n            if [ $i -lt $s ]; then\n                s=$i\n            fi\n        fi\n    done\n    if [ $n -lt 2 ]; then\n        echo $s\n    else\n        if [ $s -lt $l ]; then\n            echo $s\n        else\n            echo $l[$((n-1)/2))\n        fi\n    fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]'",
    "    local l\n    l=()\n    while read -r -n1 -p1 $1\n    do\n        l=`echo $1 | tr ' ' '\\n'`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '\\n' ' '`\n        l=`echo $l | tr ' ' '\\n'`\n        l=`echo $l | tr '",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$1\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$2\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$3\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$4\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$5\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$6\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$7\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$8\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$9\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$10\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$11\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$12\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$13\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$14\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$15\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$16\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$17\" ]; then\n    echo \"",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]'",
    "  l=$1\n  n=0\n  while read -r -n 1 -p \"$1\" i; do\n    n=$((n+1))\n  done\n  if [ \"$n\" -eq 1 ]; then\n    echo \"$l\"\n    return 0\n  fi\n  sort -r -n -k1 $l\n  half=`expr $n / 2`\n  if [ $half -gt 1 ]; then\n    echo $l[$half-1]\n  else\n    echo $l[$half]\n  fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  # Sort the list\n  l=$(echo $l | sort)\n  # Find the middle element\n  l=$(echo $l | sed -n '$((n=1))d' | sed -n '$((n++))d')\n  # Return the middle element\n  echo $l",
    "  l=$1\n  n=0\n  s=0\n  for i in $l; do\n    n=n+1\n    s=s+$i\n  done\n  if [ $n -eq 1 ]; then\n    echo $s\n  else\n    s=s/n\n    s=s*1.0\n    s=s+$s\n    s=s/2\n    echo $s\n  fi",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $",
    "    l=$1\n    n=0\n    while [ $# -gt 0 ]; do\n        n=$((n+1))\n        if [ $n -eq 2 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 4 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 6 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 8 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 10 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 12 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 14 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 16 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 18 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 20 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 22 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 24 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 26 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 28 ]; then\n            if [ $1 ]; then\n                echo $1\n                return\n            fi\n        fi\n        if [ $n -eq 30 ]; then\n            if [ $1 ]; then\n                ",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=$1\n  n=0\n  s=\"\"\n  for i in $l; do\n    n=n+1\n    if [[ $n -eq 2 ]]; then\n      s=$s$i\n    fi\n  done\n\n  if [[ $n -eq 1 ]]; then\n    echo $s\n  else\n    echo \"$s $s\"\n  fi",
    "  local l\n  l=($1)\n  local i\n  local j\n  local k\n  local n\n  local m\n  local t\n  local t2\n  local t3\n  local t4\n  local t5\n  local t6\n  local t7\n  local t8\n  local t9\n  local t10\n  local t11\n  local t12\n  local t13\n  local t14\n  local t15\n  local t16\n  local t17\n  local t18\n  local t19\n  local t20\n  local t21\n  local t22\n  local t23\n  local t24\n  local t25\n  local t26\n  local t27\n  local t28\n  local t29\n  local t30\n  local t31\n  local t32\n  local t33\n  local t34\n  local t35\n  local t36\n  local t37\n  local t38\n  local t39\n  local t40\n  local t41\n  local t42\n  local t43\n  local t44\n  local t45\n  local t46\n  local t47\n  local t48\n  local t49\n  local t50\n  local t51\n  local t52\n  local t53\n  local t54\n  local t55\n  local t56\n  local t57\n  local t58\n  local t59\n  local t60\n  local t61\n  local t62\n  local t63\n  local t64\n  local t65\n  local t66\n  local t67\n  local t68\n  local t69\n  local t70\n  local t71\n  local t72\n  local t73\n  local t74\n  local t75\n  local t76\n  local t77\n  local t78\n  local t79\n  local t80\n  local t81\n  local t82\n  local t83\n  local t84\n  local t85\n  local t86\n  local t87\n  local t88\n  local t89\n  local t90\n  local t91\n  local t92\n  local t93\n  local t94\n  local t95\n  local t96\n  local",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  # Sort the list\n  l=`echo \"$l\" | sort`\n  # Get the middle element\n  if [ -z \"$2\" ]; then\n    # If there is only one element, return it\n    if [ -z \"$3\" ]; then\n      echo \"$l\"\n    else\n      # If there are two elements, return the middle one\n      echo \"$l[$((($2-1)/2))]\"\n    fi\n  else\n    # If there are three elements, return the middle two\n    echo \"$l[$((($2-1)/2))] $l[$((($2+1)/2))]\"\n  fi",
    "    l=$1\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr ' ' '\\n'`\n    l=`echo \"$l\" | tr '\\n' ' '`\n    l=`echo \"$l\" | tr",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "    l=$1\n    n=0\n    while IFS=\" \" read -r l\n    do\n        n=$((n+1))\n    done < \"$l\"\n    if [ $n -gt 1 ]; then\n        echo \"error: $n arguments given\"\n        exit 1\n    fi\n    if [ $n -eq 1 ]; then\n        echo \"$l\"\n    else\n        sort -n $l | tail -n 1\n    fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=($l $1)\n  done < /dev/stdin\n  l=($l $(sort $l))\n  if [ -z \"$#\" ]\n  then\n    echo \"$(head -n 1 $l)\"\n  else\n    echo \"$(head -n $((#l/2)) $l)\"\n  fi",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local n\n  local m\n  local sum\n  local count\n  local nl\n  local nr\n  local nn\n  local nmm\n  local nnn\n  local nmmm\n  local nnnn\n  local nnnmm\n  local nnnnn\n  local nnnnmm\n  local nnnnnn\n  local nnnnnmm\n  local nnnnnnn\n  local nnnnnnmm\n  local nnnnnnnn\n  local nnnnnnnmm\n  local nnnnnnnnn\n  local nnnnnnnnmm\n  local nnnnnnnnnn\n  local nnnnnnnnnmm\n  local nnnnnnnnnnn\n  local nnnnnnnnnnmm\n  local nnnnnnnnnnnn\n  local nnnnnnnnnnnmm\n  local nnnnnnnnnnnnn\n  local nnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnmm\n  local nnnnnnnnnnnnnnnnnnnnnnnn",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local n\n  local m\n  local sum\n  local count\n  local nl\n  local nr\n  local nl2\n  local nr2\n  local nl3\n  local nr3\n  local nl4\n  local nr4\n  local nl5\n  local nr5\n  local nl6\n  local nr6\n  local nl7\n  local nr7\n  local nl8\n  local nr8\n  local nl9\n  local nr9\n  local nl10\n  local nr10\n  local nl11\n  local nr11\n  local nl12\n  local nr12\n  local nl13\n  local nr13\n  local nl14\n  local nr14\n  local nl15\n  local nr15\n  local nl16\n  local nr16\n  local nl17\n  local nr17\n  local nl18\n  local nr18\n  local nl19\n  local nr19\n  local nl20\n  local nr20\n  local nl21\n  local nr21\n  local nl22\n  local nr22\n  local nl23\n  local nr23\n  local nl24\n  local nr24\n  local nl25\n  local nr25\n  local nl26\n  local nr26\n  local nl27\n  local nr27\n  local nl28\n  local nr28\n  local nl29\n  local nr29\n  local nl30\n  local nr30\n  local nl31\n  local nr31\n  local nl32\n  local nr32\n  local nl33\n  local nr33\n  local nl34\n  local nr34\n  local nl35\n  local nr35\n  local nl36\n  local nr36\n  local nl37\n  local nr37\n  local nl38\n  local nr38\n  local nl39\n  local nr39\n  local nl40\n  local n",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  i=0\n  j=0\n  k=0\n  m=0\n  n=0\n  o=0\n  p=0\n  q=0\n  r=0\n  s=0\n  t=0\n  u=0\n  v=0\n  w=0\n  x=0\n  y=0\n  z=0\n  for ((i=0;i<=${#l};i++)); do\n    for ((j=0;j<=${#l};j++)); do\n      for ((k=0;k<=${#l};k++)); do\n        for ((m=0;m<=${#l};m++)); do\n          for ((n=0;n<=${#l};n++)); do\n            for ((o=0;o<=${#l};o++)); do\n              for ((p=0;p<=${#l};p++)); do\n                for ((q=0;q<=${#l};q++)); do\n                  for ((r=0;r<=${#l};r++)); do\n                    for ((s=0;s<=${#l};s++)); do\n                      for ((t=0;t<=${#l};t++)); do\n                        for ((u=0;u<=${#l};u++)); do\n                          for ((v=0;v<=${#l};v++)); do\n                            for ((w=0;w<=${#l};w++)); do\n                              for ((x=0;x<=${#l};x++)); do\n                                for ((y=0;y<=${#l};y++)); do\n                                  for ((z=0;z<=${#l};z++)); do\n                                    if [[ ${l[i]} -lt ${l[j]} ]] && [[ ${l[j",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  l=$1\n  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 1 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Sort the list\n  l=$(echo $l | sort)\n\n  # Get the middle element\n  l=$(echo $l | sed -n 1p)\n\n  # Return the middle element\n  echo $l",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  # Sort the list\n  l=`echo \"$l\" | sort`\n  # Get the middle element\n  if [ -z \"$2\" ]; then\n    # If no second argument, return the middle element\n    echo $l[$((len(l) / 2))]\n  else\n    # If second argument, return the median of the two middle elements\n    echo $l[$((len(l) / 2))] $l[$((len(l) / 2) + 1))\n  fi",
    "    l=$1\n    n=0\n    s=\"\"\n    for i in $l; do\n        n=n+1\n        if [ $n -gt 1 ]; then\n            s=$s$i\n        fi\n    done\n    if [ $n -eq 1 ]; then\n        echo $s\n    else\n        echo $s$l[$((n-1))]\n    fi",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\n  i=0\n  j=0\n  k=0\n  m=0\n  n=0\n  p=0\n  q=0\n  r=0\n  s=0\n  t=0\n  u=0\n  v=0\n  w=0\n  x=0\n  y=0\n  z=0\n\n  for ((i=0;i<=${#l};i++)); do\n    for ((j=i;j<=${#l};j++)); do\n      for ((k=j;k<=${#l};k++)); do\n        for ((m=k;m<=${#l};m++)); do\n          for ((n=m;n<=${#l};n++)); do\n            for ((p=n;p<=${#l};p++)); do\n              for ((q=p;q<=${#l};q++)); do\n                for ((r=q;r<=${#l};r++)); do\n                  for ((s=r;s<=${#l};s++)); do\n                    for ((t=s;t<=${#l};t++)); do\n                      for ((u=t;u<=${#l};u++)); do\n                        for ((v=u;v<=${#l};v++)); do\n                          for ((w=v;w<=${#l};w++)); do\n                            for ((x=w;x<=${#l};x++)); do\n                              for ((y=x;y<=${#l};y++)); do\n                                for ((z=y;z<=${#l};z++)); do\n                                  if ([ $z ] < [ ${l[i]} ]) then\n                                    [ ${l[i]} ] = [ $z ]\n                                  fi\n                                fi\n                              done\n                            done\n                          done\n                        done\n                      ",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "    local l\n    l=()\n    while read -r -n1 -p1 $1\n    do\n        l=`echo $1 | sed -e 's/^\\s*//' -e 's/\\s*$//'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        if [ -z \"$l\" ]; then\n            continue\n        fi\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n        l=`",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  i=0\n  j=0\n  k=0\n  m=0\n  n=0\n  p=0\n  q=0\n  r=0\n  s=0\n  t=0\n  u=0\n  v=0\n  w=0\n  x=0\n  y=0\n  z=0\n  for ((i=0;i<=${#l};i++)); do\n    for ((j=i;j<=${#l};j++)); do\n      for ((k=j;k<=${#l};k++)); do\n        for ((m=k;m<=${#l};m++)); do\n          for ((n=m;n<=${#l};n++)); do\n            for ((p=n;p<=${#l};p++)); do\n              for ((q=p;q<=${#l};q++)); do\n                for ((r=q;r<=${#l};r++)); do\n                  for ((s=r;s<=${#l};s++)); do\n                    for ((t=s;t<=${#l};t++)); do\n                      for ((u=t;u<=${#l};u++)); do\n                        for ((v=u;v<=${#l};v++)); do\n                          for ((w=v;w<=${#l};w++)); do\n                            for ((x=w;x<=${#l};x++)); do\n                              for ((y=x;y<=${#l};y++)); do\n                                for ((z=y;z<=${#l};z++)); do\n                                  if [[ ${l[i]} -lt ${l[j]} ]] && [[ ${l[j]} -lt ${l[k]} ]] && [[ ${l[k]} -lt ${l[m]} ]] && [[ ${l",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  ",
    "    if [ \"$#\" -lt 1 ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    l=()\n    for i in $1; do\n        l=`echo $i | tr '[:upper:]' '[:lower:]'`\n    done\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=(",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  # Sort the list\n  l=$(sort $l)\n  # Find the middle element\n  l=$(echo $l | sed 's/[^0-9.]//g')\n  if [[ -z \"$l\" ]]; then\n    echo \"No numbers in list\"\n  else\n    # Convert to float\n    l=$(echo $l | tr '[:upper:]' '[:lower:]')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l | tr '.' ' ')\n    l=$(echo $l | tr ' ' '.')\n    l=$(echo $l |",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo",
    "  local l\n  l=()\n  while read -r -n1 -p \"$1\" l\n  do\n    l=($l $l)\n  done\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr",
    "  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $(basename $0) <list>\"\n    exit 1\n  fi\n\n  # Split the list into a list of elements and a list of non-elements.\n  elements=()\n  non_elements=()\n  for element in $1; do\n    if [[ $element -eq ' ' ]]; then\n      non_elements=`echo $non_elements $element`\n    else\n      elements=`echo $elements $element`\n    fi\n  done\n\n  # Sort the elements.\n  elements=`echo $elements | sort`\n\n  # Return the median of the elements.\n  if [[ $# -eq 1 ]]; then\n    if [[ $elements -eq ' ' ]]; then\n      echo \"Usage: $(basename $0) <list>\"\n      exit 1\n    fi\n    median_elements=`echo $elements | tr ' ' '\\n' | sort | tail -n 1`\n    if [[ $median_elements == '\\n' ]]; then\n      echo \"No median\"\n    else\n      echo $median_elements\n    fi\n  else\n    # Sort the non-elements.\n    non_elements=`echo $non_elements | sort`\n\n    # Return the median of the non-elements.\n    if [[ $# -eq 2 ]]; then\n      if [[ $non_elements -eq ' ' ]]; then\n        echo \"Usage: $(basename $0) <list>\"\n        exit 1\n      fi\n      median_non_elements=`echo $non_elements | tr ' ' '\\n' | sort | tail -n 1`\n      if [[ $median_non_elements == '\\n' ]]; then\n        echo \"No median\"\n      else\n        echo $median_non_elements\n      fi\n    else\n      # Sort the elements and non-elements.\n      elements=`echo $elements | sort`\n      non_elements=`echo $non_elements | sort`\n\n      # Return the median of the elements and non-elements.\n      if [[ $# -",
    "  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=()\n  for i in $1; do\n    l=`echo $i | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  done\n\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n\n  if [[ $# -eq 1 ]]; then\n    echo $l\n  else\n    echo \"$l\"\n  fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n",
    "    l=$1\n    if [[ $# -eq 0 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 1 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -gt 1 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 1 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 2 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 3 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 4 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 5 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 6 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 7 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 8 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 9 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 10 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 11 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 12 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 13 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 14 ]]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [[ $# -eq 15 ]]; then\n        echo",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr '[:space:]' ' '`",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Split the list into elements\n  l=$1\n  elements=()\n  for i in $l; do\n    elements+=($i)\n  done\n\n  # Sort the elements\n  elements=sort $elements\n\n  # Find the middle element\n  count=$(( $# / 2 ))\n  if [[ $count -eq 0 ]]; then\n    count=1\n  fi\n\n  # Return the middle element\n  if [[ $count -eq 1 ]]; then\n    return $elements[0]\n  else\n    return $elements[$count-1]\n  fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:digit:]' '[:lower:]'`\n  l=`echo $l | tr '[:alpha:]' '[:lower:]'`\n  l=`echo $l | tr '[:alpha:]' '[:digit:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:digit:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=`echo $l | tr '[:alpha:]' '[:upper:]'`\n  l=",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | sed 's/ /\\\\ /g'`\n    l=`echo $1 | sed 's/^[^0-9]//g'`\n    l=`echo $1 | sed 's/[^0-9]$//g'`\n    l=`echo $1 | sed 's/[^0-9]//g'`\n    l=`echo $1 | sed 's/^[^0-9]//g'`\n    l=`echo $1 | sed 's/[^0-9]$//g'`\n    l=`echo $1 | sed 's/^[^0-9]//g'`\n    l=`echo $1 | sed 's/[^0-9]//g'`\n    l=`echo $1 | sed 's/^[^0-9]//g'`\n    l=`echo $1 | sed 's/[^0-9]$//g'`\n    l=`echo $1 | sed 's/^[^0-9]//g'`\n    l=`echo $1 | sed 's/[^0-9]//g'`\n    l=`echo $1 | sed 's/^[^0-9]//g'`\n    l=`echo $1 | sed 's/[^0-9]$//g'`\n    l=`echo $1 | sed 's/^[^0-9]//g'`\n    l=`echo $1 | sed 's/[^0-9]//g'`\n    l=`echo $1 | sed 's/^[^0-9]//g'`\n    l=`echo $1 | sed 's/[^0-9]$//g'`\n    l=`echo $1 | sed 's/^[^0-9]//g'`\n    l=`echo $1 | sed 's/[^0-9]//g'`\n    l=`echo $1 | sed 's/^[^0",
    "    local l\n    l=()\n    while read -r -n1 -p \"$1\"\n    do\n        l=`echo $l $1 | sed 's/ / /g'`\n    done\n    l=`echo $l | sed 's/ / /g'`\n    if [ -z \"$l\" ]; then\n        return 0\n    fi\n    l=`echo $l | sed 's/ / /g'`\n    l=`echo $l | sed 's/^[0-9]+//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    if [ -z \"$l\" ]; then\n        return 0\n    fi\n    l=`echo $l | tr -d ' '`\n    l=`echo $l | tr -d ','`\n    l=`echo $l | tr -d '.'`\n    l=`echo $l | tr -d ':'`\n    l=`echo $l | tr -d ';'`\n    l=`echo $l | tr -d '\\n'`\n    l=`echo $l | tr -d '\\t'`\n    l=`echo $l | tr -d '\\r'`\n    l=`echo $l | tr -d '\\v'`\n    l=`echo $l | tr -d '\\f'`\n    l=`echo $l | tr -d '\\a'`\n    l=`echo $l | tr -d '\\e'`\n    l=`echo $l | tr -d '\\n'`\n    l=`echo $l | tr -d '\\0'`\n    l=`echo $l | tr -d '\\b'`\n    l=`echo $l | tr -d '\\x0B'`\n    l=`echo $l | tr -d '\\x0C'`\n    l=`echo $l | tr -d '\\x0E'`\n    l=`echo $l | tr -d '\\x0F'`\n    l=`echo $l | tr -d '\\x10'`\n    l=`echo $l",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:alpha:]' '[:alnum:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]' '[:alpha:]' | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]' '[:alpha:]' | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]' '[:alpha:]' | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]' '[:alpha:]' | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]' '[:alpha:]' | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]' '[:alpha:]' | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]' '[:alpha:]' | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]' '[:alpha:]' | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]' '[:alpha:]' | tr '[:upper:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:digit:]' | tr '[:alnum:]",
    "    local l\n    l=()\n    while read -r -n1 -p \"$1\"\n    do\n        l=`echo $l $1 | sed -e 's/ / /g' -e 's/[^0-9.]//g'`\n    done\n    l=`echo $l | sed -e 's/ / /g' -e 's/[^0-9.]//g'`\n    if [ -z \"$l\" ]; then\n        return 0\n    fi\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr -d ' '`\n    l=`echo $l | tr '[:upper:]' '[:lower",
    "  local l\n  l=()\n  while read -r -n1 -p \"$1\" l\n  do\n    l=`echo \"$l\" | sed 's/ / /g' | sed 's/[^0-9.]//g'`\n    if [ -z \"$l\" ]; then\n      break\n    fi\n  done\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | sed 's/ / /g' | sed 's/[^0-9.]//g'`\n  l=($l)\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  ",
    "  local l\n  l=()\n  for i in \"$@\"; do\n    l=($l $i)\n  done\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ \"$l\" == *\" \"* ]]; then\n    l=\"$l\"\n  fi\n  l=($l)\n  if [[ \"$l\" == *\" \"* ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\"*\"* ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\"*\" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\" \" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\" \" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\"*\" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\"*\" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\" \" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\" \" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\"*\" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\"*\" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\" \" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\" \" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\"*\" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\"*\" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\" \" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\" \" ]]; then\n    l=\"$l\"\n  fi\n  if [[ \"$l\" == *\"*\" ]]; then\n    l=\"$l\"\n  fi\n  if",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local n\n  local m\n  local sum\n  local count\n  local nl\n  local nr\n  local nn\n  local nnn\n  local nnnn\n  local nnnnn\n  local nnnnnn\n  local nnnnnnn\n  local nnnnnnnn\n  local nnnnnnnnn\n  local nnnnnnnnnn\n  local nnnnnnnnnnn\n  local nnnnnnnnnnnn\n  local nnnnnnnnnnnnn\n  local nnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  ",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:tab:]'`\n  l=`echo $l | tr '[:space:]' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr '",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  local l\n  l=()\n  for i in \"$@\"; do\n    l=($l $i)\n  done\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)",
    "    local l\n    l=()\n    while read -r -n1 -p1 $1\n    do\n        l=`echo $1 | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n        l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:alpha:]' '[:alnum:]'`\n  done\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:alpha:]' '[:alnum:]'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:alpha:]' '[:alnum:]'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:alpha:]' '[:alnum:]'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:alpha:]' '[:alnum:]'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:alpha:]' '[:alnum:]'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr",
    "  l=$1\n  n=0\n  s=\"\"\n  for i in $l; do\n    n=n+1\n    if [ $n -gt 1 ]; then\n      s=$s\"$i\"\n    fi\n  done\n  if [ $n -eq 1 ]; then\n    s=$s\"$i\"\n  fi\n  echo $s",
    "    local l\n    l=()\n    while read -r -n1 -p \"$1\"\n    do\n        l=($l $1)\n    done < /dev/stdin\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Sort the list\n  l=sort $l\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Find the middle element\n  if [[ $l != *[0-9]* ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  #",
    "  if [ -z \"$1\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=()\n  while read -r e\n  do\n    l=($l $e)\n  done < $1\n\n  l=($l)\n  l=($l)\n  l=($l)\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=($l)\n  l=($l)\n  l=($l)\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=($l)\n  l=($l)\n  l=($l)\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=($l)\n  l=($l)\n  l=($l)\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=($l)\n  l=($l)\n  l=($l)\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=($l)\n  l=($l)\n  l=($l)\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=($l)\n  l=($l)\n  l=($l)\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=($l)\n  l=($l)\n  l=($l)\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=($l)\n  l=($l)\n  l=($l)\n\n  if [",
    "    local l\n    l=()\n    while read -r -n1 -p1 $1\n    do\n        l=`echo $1 | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $l | tr -d \" \"`\n        l=`echo $",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Sort the list\n  l=sort $l\n\n  # Find the middle element\n  if [[ $# -eq 1 ]]; then\n    echo $l[$(( $# - 1 ))]\n  else\n    echo $l[$(( $# / 2 ))]\n  fi",
    "  if [ -z \"$1\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $1 | tr ' ' '\\n'`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d '\\n'`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d ' '`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d '\\n'`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d ' '`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d '\\n'`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d ' '`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d '\\n'`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d ' '`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d '\\n'`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  l=`echo $l | tr -d ' '`\n\n  if [ -z \"$l\" ]; then\n    echo \"Usage:",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  ",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]'`\n  done\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [ -z \"$l\" ]\n  then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  ",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | sed 's/ /\\\\ /g'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]$//'`\n    l=`echo $l | sed 's/[^0-9]//'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]$//'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]$//'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]$//'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]$//'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]$//'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]$//'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]$//'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l | sed 's/[^0-9]$//'`\n    l=`echo $l | sed 's/^[^0-9]//'`\n    l=`echo $l |",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:tab:]'`\n  l=`echo $l | tr '[:space:]' '[:tab:]' | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:tab:]' | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | tr '[:punct:]' '[:cntrl:]'`\n  l=`echo $l | tr '[:space:]' '[:tab:]' | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | tr '[:punct:]' '[:cntrl:]' | tr '[:blank:]' '[:cntrl:]'`\n  l=`echo $l | tr '[:space:]' '[:tab:]' | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | tr '[:punct:]' '[:cntrl:]' | tr '[:blank:]' '[:cntrl:]' | tr '[:cntrl:]' '[:space:]' | tr '[:cntrl:]' '[:tab:]' | tr '[:cntrl:]' '[:upper:]' | tr '[:cntrl:]' '[:lower:]' | tr '[:cntrl:]' '[:digit:]'`\n  l=`echo $l | tr '[:space:]' '[:tab:]' | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]' | tr '[:punct:]' '[:cntrl:]' | tr '[:blank:]' '[:cntrl:]' | tr '[:cntrl:]' '[:space:]' | tr '[:cntrl:]' '[:tab:]' | tr '[:cntrl:]' '[:upper:]' | tr '[:cntrl:]' '[:lower",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n    l=`echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  done\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:alpha:]'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '",
    "  l=$1\n  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 2 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 2 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 3 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 4 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 5 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 6 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 7 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 8 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 9 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 10 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 11 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 12 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 13 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 14 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 15 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | sed 's/ /\\ /g'`\n  l=`echo \"$l\" | sed 's/^ *//g'`\n  l=`echo \"$l\" | sed 's/ *$//g'`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | sed 's/ /\\ /g'`\n  l=`echo \"$l\" | sed 's/^ *//g'`\n  l=`echo \"$l\" | sed 's/ *$//g'`\n  l=`echo \"$l\" | sed 's/^$//g'`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | sed 's/ /\\ /g'`\n  l=`echo \"$l\" | sed 's/^ *//g'`\n  l=`echo \"$l\" | sed 's/ *$//g'`\n  l=`echo \"$l\" | sed 's/^$//g'`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | sed 's/ /\\ /g'`\n  l=`echo \"$l\" | sed 's/^ *//g'`\n  l=`echo \"$l\" | sed 's/ *$//g'`\n  l=`echo \"$l\" | sed 's/^$//g'`\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | sed 's/ /\\ /g'`\n  l=`echo \"$l\" | sed 's/^ *//g'`\n  l=`echo \"$l\" | sed 's/ *$//g",
    "  local l\n  l=($1)\n  local i\n  local j\n  local k\n  local n\n  local m\n  local sum\n  local count\n  local nl\n  local nr\n  local nc\n  local nd\n  local nn\n  local nn1\n  local nn2\n  local nn3\n  local nn4\n  local nn5\n  local nn6\n  local nn7\n  local nn8\n  local nn9\n  local nn10\n  local nn11\n  local nn12\n  local nn13\n  local nn14\n  local nn15\n  local nn16\n  local nn17\n  local nn18\n  local nn19\n  local nn20\n  local nn21\n  local nn22\n  local nn23\n  local nn24\n  local nn25\n  local nn26\n  local nn27\n  local nn28\n  local nn29\n  local nn30\n  local nn31\n  local nn32\n  local nn33\n  local nn34\n  local nn35\n  local nn36\n  local nn37\n  local nn38\n  local nn39\n  local nn40\n  local nn41\n  local nn42\n  local nn43\n  local nn44\n  local nn45\n  local nn46\n  local nn47\n  local nn48\n  local nn49\n  local nn50\n  local nn51\n  local nn52\n  local nn53\n  local nn54\n  local nn55\n  local nn56\n  local nn57\n  local nn58\n  local nn59\n  local nn60\n  local nn61\n  local nn62\n  local nn63\n  local nn64\n  local nn65\n  local nn66\n  local nn67\n  local nn68\n  local nn69\n  local nn70\n  local nn71\n  local nn72\n  local nn73\n  local nn74\n  local nn",
    "    l=$1\n    n=0\n    while [ $n -lt $# ]; do\n        n=$n+1\n        if [ $n -eq $# ]; then\n            l=$l\n        else\n            l=$l $1\n        fi\n    done\n    echo $l",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | tr '[:alpha:]' '[:space:]' | tr '[:alnum:]' '[:space:]'`\n    l=`echo $l | tr '[:space:]' '[:punct:]' | tr '[:space:]' '[:alnum:]' | tr '[:space:]' '[:digit:]' | tr '[:space:]' '[:upper:]' | tr '[:space:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:punct:]' | tr '[:space:]' '[:alnum:]' | tr '[:space:]' '[:digit:]' | tr '[:space:]' '[:upper:]' | tr '[:space:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:punct:]' | tr '[:space:]' '[:alnum:]' | tr '[:space:]' '[:digit:]' | tr '[:space:]' '[:upper:]' | tr '[:space:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:punct:]' | tr '[:space:]' '[:alnum:]' | tr '[:space:]' '[:digit:]' | tr '[:space:]' '[:upper:]' | tr '[:space:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:punct:]' | tr '[:space:]' '[:alnum:]' | tr '[:space:]' '[:digit:]' | tr '[:space:]' '[:upper:]' | tr '[:space:]' '[:lower:]'`\n    l=`echo $l | tr '[:space:]' '[:punct:]' | tr '[:space:]' '[:alnum:]' | tr '[:space:]' '[:digit:]' | tr '[:space:]' '[:upper:]' | tr '[",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"'",
    "  local l\n  l=()\n  while read -r -n1 -p \"$1\"\n  do\n    l=($l $1)\n  done < /dev/stdin\n  l=($l $(sort -n $l))\n  if [ \"$#\" -gt \"1\" ]\n  then\n    return $l[$((nth_element - 1))]\n  else\n    return $l[$((nth_element - 2))]\n  fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  # Sort the list\n  l=`echo \"$l\" | sort`\n  # Get the middle element\n  if [ -z \"$2\" ]; then\n    i=`expr $# / 2`\n  else\n    i=`expr $# / 2 - 1`\n  fi\n  # Print the middle element\n  echo $l[$i]",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "    if [[ $# -eq 0 ]]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n\n    # Split the list into elements\n    l=$1\n    elements=()\n    for i in $l; do\n        elements+=($i)\n    done\n\n    # Sort the elements\n    elements=sort $elements\n\n    # Find the middle element\n    half=len(elements)/2\n    if [ $# -eq 1 ]; then\n        # If there is only one element, return it\n        return $elements[$half]\n    else\n        # If there are more than one element, return the middle one\n        return $elements[$half-1:$half]\n    fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\"",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]'`\n  l=`echo $l | tr '[:space:]' '[",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n\n  # Sort the list\n  l=sort $l\n\n  # Get the middle element\n  if [ -z \"$2\" ]; then\n    i=len(l)\n  else\n    i=$2\n  fi\n\n  # If the list is empty, return an empty string\n  if [ -z \"$l\" ]; then\n    echo \"\"\n  else\n    # If the list is odd, return the middle element\n    if [ $i -gt $(len(l))/2 ]; then\n      echo $l[$i]\n    # If the list is even, return the average of the middle two elements\n    else\n      echo $(( $l[$i-1] + $l[$i] ) / 2)\n    fi\n  fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr '",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]'`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo $l | tr '[:space:]' '[:space:]\"'\"' \"'\"`\n  l=`echo",
    "  l=$1\n  if [[ $# -eq 0 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 1 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 2 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 3 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 4 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 5 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 6 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 7 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 8 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 9 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 10 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 11 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 12 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 13 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 14 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 15 ]]; then\n    echo",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=($l)\n  if [[ $# -eq 0 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 1 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 2 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 2 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 2 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 3 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 3 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 3 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 4 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 4 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 4 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 5 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 5 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 5 ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [[ $# -eq",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "    local l\n    l=()\n    while read -r -n1 -p1 $1\n    do\n        l=`echo $1 | tr '[:upper:]' '[:lower:]' | sort`\n        if [ -n \"$l\" ]; then\n            echo $l\n        else\n            echo \"error\"\n        fi\n    done < <(echo $1)",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $l $1 | sed 's/ / /g'`\n  done\n  l=`echo $l | sed 's/ / /g'`\n  if [ -z \"$l\" ]; then\n    return 0\n  fi\n  l=`echo $l | sed 's/ / /g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l=`echo $l | sed 's/^ / /g'`\n  l=`echo $l | sed 's/ $//g'`\n  l",
    "  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Split list into elements\n  l=$1\n  elements=()\n  for i in $l; do\n    elements+=($i)\n  done\n\n  # Sort elements\n  elements=($(sort \"$elements\"))\n\n  # Find middle element\n  middle=len(elements)/2\n  if [ $len(elements) -eq 1 ]; then\n    # If only one element, return it\n    return $elements[middle]\n  else\n    # If more than one element, return middle element\n    return $elements[middle]\n  fi",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local n\n  local m\n  local nn\n  local mm\n  local nnn\n  local mmm\n  local nnnn\n  local mmmm\n  local nnnnn\n  local mnnnn\n  local nnnnnn\n  local mnnnnn\n  local nnnnnnn\n  local mnnnnnn\n  local nnnnnnnn\n  local mnnnnnnn\n  local nnnnnnnnn\n  local mnnnnnnnn\n  local nnnnnnnnnn\n  local mnnnnnnnnn\n  local nnnnnnnnnnn\n  local mnnnnnnnnnn\n  local nnnnnnnnnnnn\n  local mnnnnnnnnnnn\n  local nnnnnnnnnnnnn\n  local mnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn\n  local mnnnnnnnnnnnnnnnnnnnnnn",
    "    local l\n    l=()\n    while read -r -n1 -p \"$1\" l\n    do\n        l=($l $l)\n    done < /dev/stdin\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l)\n    l=($l",
    "    l=$1\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: $0 <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Split list into elements\n  l=$1\n  elements=()\n  for i in $l; do\n    elements+=($i)\n  done\n\n  # Sort elements\n  elements=($(sort \"$elements\"))\n\n  # Find middle element\n  middle=`expr $# / 2`\n  if [ $middle -gt 0 ]; then\n    middle=`echo $elements[$middle]`\n  fi\n\n  # Return middle element\n  echo $middle",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  ",
    "    l=$1\n    if [ -z \"$1\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [ -z \"$l\" ]; then\n        echo \"Usage: median <list>\"\n        exit 1\n    fi\n    if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr -d ' '`",
    "  l=$1\n  if [[ \"$#\" -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ \"$#\" -gt 1 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ \"$#\" -eq 1 ]]; then\n    echo \"$l\"\n    return\n  fi\n  l=$(echo $l | tr \" \" \",\")\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)\n  l=($l)",
    "    local l\n    l=()\n    while read -r -n1 -p1 $1\n    do\n        l=`echo $1 | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $l | tr -d ' '`\n        l=`echo $",
    "  l=$1\n  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -eq 1 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [[ $# -gt 1 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Sort the list\n  l=$(sort $l)\n\n  # Get the number of elements\n  n=$(wc -l $l | awk '{print $1}')\n\n  # Get the number of elements in the middle\n  m=$(expr $n / 2)\n\n  # Get the median\n  if [[ $n -eq 1 ]]; then\n    median=$l\n  else\n    median=$(awk '{print $l[$m]}' $l)\n  fi\n\n  # Print the median\n  echo $median",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n\n  i=0\n  while [ $i -lt $# ]; do\n    l=${l:0:1}$i\n    i=i+1\n  done\n\n  j=0\n  while [ $j -lt $# ]; do\n    l=${l:0:1}$j\n    j=j+1\n  done\n\n  k=0\n  while [ $k -lt $# ]; do\n    l=${l:0:1}$k\n    k=k+1\n  done\n\n  m=0\n  while [ $m -lt $# ]; do\n    l=${l:0:1}$m\n    m=m+1\n  done\n\n  n=0\n  while [ $n -lt $# ]; do\n    l=${l:0:1}$n\n    n=n+1\n  done\n\n  p=0\n  while [ $p -lt $# ]; do\n    l=${l:0:1}$p\n    p=p+1\n  done\n\n  q=0\n  while [ $q -lt $# ]; do\n    l=${l:0:1}$q\n    q=q+1\n  done\n\n  r=0\n  while [ $r -lt $# ]; do\n    l=${l:0:1}$r\n    r=r+1\n  done\n\n  s=0\n  while [ $s -lt $# ]; do\n    l=${l:0:1}$s\n    s=s+1\n  done\n\n  t=0\n  while [ $t -lt $# ]; do\n    l=${l:0:1}$t\n    t=t+1\n  done\n\n  u=0\n  while [ $u -lt $# ]; do\n    l=${l:0:1}$u\n    u=u+1\n  done",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr '\\n' ' '`\n  l",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  ",
    "  local l\n  l=$1\n  local i\n  local j\n  local k\n  local m\n  local n\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local zz\n  local zzz\n  local zzzz\n  local zzzzz\n  local zzzzzz\n  local zzzzzzz\n  local zzzzzzzz\n  local zzzzzzzzz\n  local zzzzzzzzzz\n  local zzzzzzzzzzz\n  local zzzzzzzzzzzz\n  local zzzzzzzzzzzzz\n  local zzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\n  local zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz",
    "  l=$1\n  if [[ -z \"$l\" ]]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr -d ' '`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d '\\t'`\n  l=`echo \"$l\" | tr -d '\\n'`\n  l=`echo \"$l\" | tr -d",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '\\n'`\n  l=`echo $l | tr '[:upper:]' '[",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  if [",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr ' ' '\\n'`\n  l=`echo $l | tr -d '\\n'`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo $l | tr -d '\\n'`\n  l=`echo $l | tr -d ' '`\n  if [ -z \"$l\" ]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n  l=`echo",
    "  local l\n  l=()\n  while read -r -n1 -p1 $1\n  do\n    l=`echo $1 | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | sed 's/ / /g'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | sed 's/ / /g'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | sed 's/ / /g'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | sed 's/ / /g'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | sed 's/ / /g'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | sed 's/ / /g'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | sed 's/ / /g'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | sed 's/ / /g'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr '[:digit:]' '[:space:]' | tr '[:punct:]' '[:space:]' | sed",
    "  if [[ $# -eq 0 ]]; then\n    echo \"Usage: $0 <list>\"\n    exit 1\n  fi\n\n  # Split the list into a list of numbers\n  l=()\n  for i in $1; do\n    l=`echo $i | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'`\n    l=`echo $l | tr '[:upper:]' '[:lower:]' | tr ' ' '-'",
    "  l=$1\n  if [ -z \"$l\" ]; then\n    echo \"Usage: median <list>\"\n    exit 1\n  fi\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr ' ' '\\n'`\n  l=`echo \"$l\" | tr '\\n' ' '`\n  l=`echo \"$l\" | tr '"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
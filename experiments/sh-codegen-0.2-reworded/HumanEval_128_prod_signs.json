{
  "name": "HumanEval_128_prod_signs",
  "language": "sh",
  "prompt": "#!/bin/bash\n# You are given an array arr of integers and you need to return\n# sum of magnitudes of integers multiplied by product of all signs\n# of each number in the array, represented by 1, -1 or 0.\n# Note: return None for empty arr.\n# Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>> $(prod_signs \"0 1\")\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\n#\n# $1 is a space-separated list\nprod_signs() {\n",
  "tests": "}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test",
  "completions": [
    "    local i\n    local result\n    local sign\n    local sign_sum\n    local sign_product\n    local sign_product_sum\n    local sign_product_product\n    local sign_product_product_sum\n    local sign_product_product_product\n    local sign_product_product_product_sum\n    local sign_product_product_product_product\n    local sign_product_product_product_product_sum\n    local sign_product_product_product_product_product\n    local sign_product_product_product_product_product_sum\n    local sign_product_product_product_product_product_product\n    local sign_product_product_product_product_product_product_sum\n    local sign_product_product_product_product_product_product_product\n    local sign_product_product_product_product_product_product_product_sum\n    local sign_product_product_product_product_product_product_product_product\n    local sign_product_product_product_product_product_product_product_product_sum\n\n    for i in \"$@\"; do\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product_product_product_product_product_product_sum=1\n        sign_product_product_product",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        result=$(echo $result $sum $prod)\n    done\n    echo $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local len\n    local count\n    local sign_count\n\n    result=0\n    len=$1\n    count=0\n    sign_count=0\n    for i in $1; do\n        sign=$1\n        sum=0\n        prod=1\n        for j in $1; do\n            sum=$(($sum + $j * $sign))\n            prod=$(($prod * $sign))\n        done\n        if [ $sum -gt 0 ]; then\n            sum=$(($sum * -1))\n            sign_count=$(($sign_count + 1))\n        fi\n        if [ $sum -lt 0 ]; then\n            sum=$(($sum * -1))\n            sign_count=$(($sign_count + 1))\n        fi\n        if [ $sum -eq 0 ]; then\n            sum=0\n            sign_count=$(($sign_count + 1))\n        fi\n        result=$(($result + $sum * $prod))\n        count=$(($count + 1))\n    done\n    if [ $count -gt 1 ]; then\n        result=$(($result / $count))\n    fi\n    if [ $sign_count -gt 1 ]; then\n        result=$(($result / $sign_count))\n    fi\n    if [ $len -gt 0 ]; then\n        result=$(($result / $len))\n    fi\n    if [ $result -gt 0 ]; then\n        result=$(($result * -1))\n    fi\n    if [ $result -lt 0 ]; then\n        result=$(($result * -1))\n    fi\n    if [ $result -eq 0 ]; then\n        result=None\n    fi\n    echo $result",
    "  local i\n  local sum\n  local prod\n  local sign\n  local sign_sum\n  local sign_prod\n\n  for i in \"${1}\"; do\n    sum=0\n    prod=1\n    sign_sum=0\n    sign_prod=1\n    for sign in \"${i}\"; do\n      sign_sum=$(($sign_sum $sign))\n      sign_prod=$(($sign_prod * $sign))\n    done\n    sum=$(($sum $sign_sum))\n    prod=$(($prod * sign_prod))\n  done\n\n  echo \"${sum} ${prod}\"",
    "    local i\n    local j\n    local k\n    local result\n    local sign\n    local product\n    local sum\n    local sum_sign\n    local sum_product\n    local sum_product_sign\n    local sum_product_sign_product\n    local sum_product_sign_product_sign\n\n    result=0\n    for i in \"$@\"; do\n        sum=0\n        sum_sign=0\n        sum_product=1\n        sum_product_sign=1\n        sum_product_sign_product=1\n        for j in \"$i\"; do\n            sign=0\n            if [[ \"$j\" == \"1\" ]]; then\n                sign=1\n            elif [[ \"$j\" == \"-1\" ]]; then\n                sign=-1\n            elif [[ \"$j\" == \"0\" ]]; then\n                sign=0\n            fi\n            product=1\n            for k in \"$j\"; do\n                sum_product_sign_product=${sum_product_sign_product}*${sign}\n                sum_product_sign=${sum_product_sign}*${sign}\n                product=${product}*${sign}\n            done\n            sum_product_sign_product=${sum_product_sign_product}*${product}\n            sum_product=${sum_product}*${product}\n            sum=${sum}+${sum_product_sign_product}\n            sum_sign=${sum_sign}+${sum_product_sign}\n        done\n        sum_product_sign_product=${sum_product_sign_product}*${sum_product}\n        sum_product=${sum_product}*${sum_product}\n        sum=${sum}+${sum_product_sign_product}\n        sum_sign=${sum_sign}+${sum_product_sign}\n        result=${result}+${sum_product_sign_product}*${sum_product_sign}\n    done\n    echo \"${result}\"",
    "  local i\n  local result\n  local sign\n  local product\n  local sum\n  local arr\n\n  arr=($1)\n  if [[ $# -eq 0 ]]; then\n    return None\n  fi\n\n  sum=0\n  for i in \"${arr[@]}\"; do\n    sign=$(echo $i | sed -e 's/[+-]//g')\n    product=$(echo $i | sed -e 's/[+-]//g')\n    sum=$(echo $sum $product $sign)\n  done\n\n  result=$(echo $sum | sed -e 's/[+-]//g')\n  return $result",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local sum_sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_sign\n    local sign_prod_sign\n    local sign_prod_sum\n    local sign_prod_sum_sign\n    local sign_prod_sum_prod\n    local sign_prod_sum_prod_sign\n    local sign_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_sign\n    local sign_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sign\n    local sign_prod_sum_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod_sum_sign\n    local sign_prod_sum_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum_prod_sign\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_sign\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sign\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_sign\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sign\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local sum_sign\n    local sum_sign_prod\n    local sum_sign_prod_sign\n    local sum_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign\n\n    sum_sign_prod_sign_prod_sign=0\n    sum_sign_prod_sign_prod=0\n    sum_sign_prod_sign=0\n    sum_sign_prod=0\n    sum=0\n    sign=0\n\n    for i in \"${1}\"; do\n        for j in \"${i}\"; do\n            sum_sign_prod_sign_prod_sign=`expr \"${sum_sign_prod_sign_prod_sign}\" + \"${j}\"`\n            sum_sign_prod_sign_prod=`expr \"${sum_sign_prod_sign_prod}\" + \"${j}\"`\n            sum_sign_prod_sign=`expr \"${sum_sign_prod_sign}\" + \"${j}\"`\n            sum_sign_prod=`expr \"${sum_sign_prod}\" + \"${j}\"`\n            sum=`expr \"${sum}\" + `expr \"${j}\"`\n            sign=`expr \"${j}\" > 0`\n            if [ \"${sign}\" -eq \"1\" ]; then\n                sum_sign_prod_sign_prod_sign=`expr \"${sum_sign_prod_sign_prod_sign}\" + 1`\n                sum_sign_prod_sign_prod=`expr \"${sum_sign_prod_sign_prod}\" + 1`\n                sum_sign_prod_sign=`expr \"${sum_sign_prod_sign}\" + 1`\n                sum_sign_prod=`expr \"${sum_sign_prod}\" + 1`\n            fi\n        done\n    done\n\n    sum_sign_prod_sign_prod_sign=`expr \"${sum_sign_prod_sign_prod_sign}\" * \"${sum_sign_prod_",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local ret\n\n    ret=0\n    for i in \"$@\"; do\n        sum=0\n        prod=1\n        for j in \"$i\"; do\n            sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n            sum+=sign*$prod\n            prod*=$prod\n        done\n        ret=$(echo \"$ret $sum\" | sed -e 's/[+-]//g')\n    done\n    return $ret",
    "    local i\n    local result\n    local sign\n    local product\n    local magnitude\n\n    result=0\n    for i in \"$@\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//')\n        product=$(echo \"$i\" | sed -e 's/[+-]//')\n        magnitude=$(echo \"$i\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" | sed -e 's",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n            sum=$(echo \"$sum $sign\" | bc)\n            prod=$(echo \"$prod $sign\" | bc)\n        done\n        result=$(echo \"$result $sum $prod\" | bc)\n    done\n    echo \"$result\"",
    "    local i\n    local sum\n    local sign\n    local product\n    local result\n    local arr\n\n    arr=()\n    sum=0\n    sign=1\n    product=1\n    result=0\n\n    for i in \"${1}\"; do\n        if [[ $i == \" \" ]]; then\n            arr=($arr)\n            sum=0\n            sign=1\n            product=1\n        else\n            sum=`expr $sum + $i`\n            sign=`expr $sign * $i`\n            product=`expr $product * $sign`\n        fi\n    done\n\n    if [[ $arr == () ]]; then\n        return None\n    fi\n\n    for i in \"${arr[@]}\"; do\n        result=`expr $result + $i * $product`\n    done\n\n    return $result",
    "    local i\n    local sum\n    local sign\n    local product\n    local result\n    for i in \"$@\"; do\n        sum=0\n        sign=1\n        product=1\n        while [ $i -gt 0 ]; do\n            if [ $i -eq 1 ]; then\n                sum=$sum+1\n            elif [ $i -eq -1 ]; then\n                sum=$sum-1\n            elif [ $i -eq 0 ]; then\n                product=$product*sign\n            else\n                product=$product*sign\n                sign=$sign*-1\n            fi\n            i=$(expr $i - 1)\n        done\n        if [ $sum -gt 0 ]; then\n            result=$result + $sum * $product\n        fi\n    done\n    echo $result",
    "  local i\n  local j\n  local sign\n  local sum\n  local prod\n  local ret\n\n  ret=0\n  for i in \"$@\"; do\n    sum=0\n    prod=1\n    for j in \"$i\"; do\n      sign=$(echo $j | sed -e 's/[+-]//g')\n      sum=$(echo $sum $sign)\n      prod=$(echo $prod $sign)\n    done\n    ret=$(echo $ret $sum)\n  done\n\n  return $ret",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        product=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $result $product $sum $sign)\n    done\n    echo $result",
    "  local i\n  local j\n  local sign\n  local prod\n  local sum\n  local sum_sign\n  local sign_sum\n  local sign_prod\n\n  for i in \"${1//[ ]/}\"; do\n    sum_sign=0\n    sign_sum=0\n    sign_prod=1\n    for j in \"${i//[ ]/}\"; do\n      sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n      prod=$(echo \"$j\" | sed -e 's/[+-]//g')\n      sum_sign=$(echo \"$sum_sign\" + \"$sign\")\n      sign_sum=$(echo \"$sign_sum\" + \"$sign\")\n      sign_prod=$(echo \"$sign_prod\" * \"$prod\")\n    done\n    sum=$(echo \"$sum_sign\" + \"$sign_sum\")\n    sum=$(echo \"$sum\" + \"$sign_prod\")\n    sum=$(echo \"$sum\" * \"$prod\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$sum\")\n    sum=$(echo \"$sum\" * \"$",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i}\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        result=$(echo $result $sum $prod)\n    done\n    echo $result",
    "    local i\n    local result\n    local sign\n    local sign_count\n    local sign_product\n    local sign_product_count\n    local sign_product_sum\n    local sign_product_sum_count\n    local sign_product_sum_sum\n    local sign_product_sum_sum_count\n    local sign_product_sum_sum_sum\n    local sign_product_sum_sum_sum_count\n    local sign_product_sum_sum_sum_sum\n    local sign_product_sum_sum_sum_sum_count\n    local sign_product_sum_sum_sum_sum_sum\n    local sign_product_sum_sum_sum_sum_sum_count\n    local sign_product_sum_sum_sum_sum_sum_sum\n    local sign_product_sum_sum_sum_sum_sum_sum_count\n    local sign_product_sum_sum_sum_sum_sum_sum_sum\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_count\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum_count\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_product_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_count\n",
    "    local i\n    local sum\n    local sign\n    local prod\n    local arr\n\n    arr=($1)\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $sign)\n        prod=$(echo $prod $sign)\n    done\n    echo $sum",
    "    local i\n    local result\n    local sign\n    local sign_sum\n    local sign_product\n    local sign_product_sum\n    local sign_product_product\n    local sign_product_product_sum\n    local sign_product_product_product\n    local sign_product_product_product_sum\n    local sign_product_product_product_product\n    local sign_product_product_product_product_sum\n    local sign_product_product_product_product_product\n    local sign_product_product_product_product_product_sum\n    local sign_product_product_product_product_product_product\n    local sign_product_product_product_product_product_product_sum\n\n    sign_product=1\n    sign_product_sum=1\n    sign_product_product=1\n    sign_product_product_sum=1\n    sign_product_product_product=1\n    sign_product_product_product_sum=1\n    sign_product_product_product_product=1\n    sign_product_product_product_product_sum=1\n    sign_product_product_product_product_product=1\n    sign_product_product_product_product_product_sum=1\n\n    for i in \"$@\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sign_sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sign_product_sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sign_product_product_sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sign_product_product_product_sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sign_product_product_product_product_sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sign_product_product_product_product_product_sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sign_product_product_product_product_product_product_sum=$(",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n    local arr\n\n    arr=()\n    i=0\n    while true; do\n        if [[ $i -eq 0 ]]; then\n            i=`expr $# - 1`\n            if [[ $i -eq 0 ]]; then\n                break\n            fi\n        fi\n        arr[$i]=$1\n        i=`expr $i + 1`\n    done\n\n    sum=0\n    for i in \"${arr[@]}\"; do\n        sign=$1\n        product=1\n        while [[ $i -gt 0 ]]; do\n            i=`expr $i - 1`\n            product=`expr $product * $sign`\n        done\n        sum=`expr $sum + $product`\n    done\n\n    if [[ $# -eq 0 ]]; then\n        result=None\n    else\n        result=`expr $sum * $product`\n    fi\n\n    echo $result",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n\n    result=0\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $result $sum $prod $sign)\n    done\n\n    return $result",
    "    local i\n    local j\n    local k\n    local result\n    local sign\n    local sum\n    local prod\n    local arr\n\n    arr=()\n    for i in \"$@\"; do\n        arr=($arr $i)\n    done\n\n    if [ \"$#\" -eq 0 ]; then\n        return None\n    fi\n\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $sign)\n        prod=$(echo $prod $sign)\n    done\n\n    result=$(echo $sum $prod)\n    return $result",
    "    local i\n    local j\n    local k\n    local arr\n    local sum\n    local prod\n    local sign\n    local ret\n\n    arr=$1\n    sum=0\n    prod=1\n    ret=None\n\n    for i in $arr; do\n        sign=$1\n        for j in $i; do\n            for k in $j; do\n                sum=$(($sum + $sign * $k))\n                prod=$(($prod * $sign))\n            done\n        done\n    done\n\n    ret=$sum * prod\n    return $ret",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local arr\n\n    arr=($1)\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $sign)\n        prod=$(echo $prod $sign)\n    done\n    sum=$(echo $sum)\n    prod=$(echo $prod)\n    if [ -z \"$prod\" ]; then\n        prod=1\n    fi\n    sum=$(echo $sum)\n    return $sum",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n\n    result=0\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[^0-9]//g')\n        sum=$(echo $i | sed -e 's/[^0-9]//g')\n        prod=$(echo $i | sed -e 's/[^0-9]//g')\n        result=$(echo $result $sum * $prod $sign)\n    done\n\n    return $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        sum=$(echo $sum | sed -e 's/[+-]//g')\n        prod=$(echo $prod | sed -e 's/[+-]//g')\n        result=$(echo $result $sum $prod)\n    done\n    echo $result",
    "  local i\n  local j\n  local sign\n  local sum\n  local prod\n  local result\n  local arr\n  arr=$1\n\n  result=0\n  for i in \"${arr[@]}\"; do\n    sum=0\n    prod=1\n    for j in \"${i[@]}\"; do\n      sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n      sum=$(echo \"$sum $sign\" | bc)\n      prod=$(echo \"$prod $sign\" | bc)\n    done\n    result=$(echo \"$result $sum $prod\" | bc)\n  done\n\n  echo \"$result\"",
    "  local i\n  local j\n  local sign\n  local prod\n  local sum\n  local arr\n\n  arr=$1\n  sum=0\n  prod=1\n  for i in \"${arr[@]}\"; do\n    sign=$1\n    arr[i]=$2\n    sum=$(($sum + $sign * $prod))\n    prod=$(($prod * $2))\n  done\n  if [ -z \"$arr\" ]; then\n    return None\n  fi\n  return $sum",
    "  local i\n  local sign\n  local sum\n  local prod\n  local arr\n\n  arr=$1\n  sum=0\n  prod=1\n  for i in \"${arr[@]}\"; do\n    sign=$(echo \"$i\" | sed -e 's/[+-]//')\n    sum=$(echo \"$sum\" + \"$sign\")\n    prod=$(echo \"$prod\" * \"$sign\")\n  done\n  echo \"$sum\"",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local ret\n\n    ret=0\n    for i in \"$@\"; do\n        sum=0\n        prod=1\n        for j in \"$i\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        ret=$(echo $ret $sum $prod)\n    done\n    echo $ret",
    "    local i\n    local j\n    local k\n    local result\n    local sign\n    local product\n    local sum\n    local sum_sign\n    local sum_sign_product\n    local sum_sign_product_sign\n    local sum_sign_product_sign_product\n    local sum_sign_product_sign_product_sign\n    local sum_sign_product_sign_product_sign_product\n    local sum_sign_product_sign_product_sign_product_sign\n    local sum_sign_product_sign_product_sign_product_sign_product\n    local sum_sign_product_sign_product_sign_product_sign_product_sign\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign\n    local sum_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_",
    "    local i\n    local j\n    local sign\n    local sum\n    local product\n    local result\n\n    result=0\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        product=1\n        for j in \"${i//[+-]/}\"; do\n            product*=${j//[+-]/}\n        done\n        result+=($sum*$product*$sign)\n    done\n    echo $result",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n    local count\n    local sign_count\n    local sign_sum\n    local sign_prod\n\n    sign_count=0\n    sign_sum=0\n    sign_prod=1\n    sum=0\n    prod=1\n    result=0\n    count=0\n    for i in \"$@\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sign_count=$((sign_count + sign))\n        sign_sum=$((sign_sum + sign_count))\n        sign_prod=$((sign_prod * sign_count))\n        sum=$((sum + $i))\n        prod=$((prod * $i))\n        count=$((count + 1))\n    done\n\n    if [ $count -eq 0 ]; then\n        result=$sum\n    else\n        result=$sum * $sign_sum\n    fi\n\n    if [ $count -eq 1 ]; then\n        result=$result * $sign_prod\n    fi\n\n    if [ $count -gt 1 ]; then\n        result=$result * $sign_prod\n    fi\n\n    if [ $count -eq 0 ]; then\n        result=None\n    fi\n\n    echo $result",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n    local num\n\n    sign=0\n    product=1\n    sum=0\n    for i in \"$@\"; do\n        num=${i//[0-9]/}\n        if [[ $num == 0 ]]; then\n            sum+=0\n        else\n            sum+=1\n            product*=1\n            if [[ $num < 0 ]]; then\n                sign+=1\n            else\n                sign-=1\n            fi\n        fi\n    done\n    if [[ $sum == 0 ]]; then\n        result=None\n    else\n        result=${product}${sign}\n    fi\n    echo \"${result}\"",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local result\n    local arr\n    local arr_len\n    local arr_i\n    local arr_j\n\n    arr=$1\n    arr_len=0\n    for i in \"${arr[@]}\"; do\n        arr_len=$(expr $arr_len + 1)\n    done\n\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(expr \"${j}\" % 2)\n            sum=$(expr \"${sum}\" + ${sign})\n            prod=$(expr \"${prod}\" * ${sign})\n        done\n        result=$(expr \"${sum}\" * ${prod})\n        arr_i=$(expr \"${i[@]}\" - 1)\n        arr_j=$(expr \"${arr_i}\" + 1)\n        arr[$arr_i]=$result\n        arr[$arr_j]=$result\n    done\n\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(expr \"${j}\" % 2)\n            sum=$(expr \"${sum}\" + ${sign})\n            prod=$(expr \"${prod}\" * ${sign})\n        done\n        result=$(expr \"${sum}\" * ${prod})\n        arr_i=$(expr \"${i[@]}\" - 1)\n        arr_j=$(expr \"${arr_i}\" + 1)\n        arr[$arr_i]=$result\n        arr[$arr_j]=$result\n    done\n\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(expr \"${j}\" % 2)\n            sum=$(expr \"${sum}\" + ${sign})\n            prod=$(expr \"${prod}\" * ${sign})\n        done\n        result=$(expr \"${sum}\" * ${prod})\n        arr_i=$",
    "    local i\n    local result\n    local sign\n    local sign_sum\n    local sign_product\n    local sign_product_sum\n    local sign_product_product\n    local sign_product_product_sum\n    local sign_product_product_product\n    local sign_product_product_product_sum\n    local sign_product_product_product_product\n    local sign_product_product_product_product_sum\n\n    sign_sum=0\n    sign_product=1\n    sign_product_sum=1\n    sign_product_product=1\n    sign_product_product_sum=1\n    sign_product_product_product=1\n    sign_product_product_product_sum=1\n    sign_product_product_product_product=1\n    sign_product_product_product_product_sum=1\n\n    for i in \"$@\"; do\n        sign=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n        sign_sum=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n        sign_product=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n        sign_product_sum=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n        sign_product_product=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n        sign_product_product_sum=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n        sign_product_product_product=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n        sign_product_product_product_sum=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n        sign_product_product_product_product=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n        sign_product_product_product_product_sum=$(echo \"$i\" | sed -e 's/^[0-9]*//')\n\n        sign_product_product_product_product",
    "  local i\n  local j\n  local sign\n  local prod\n  local sum\n  local result\n\n  result=0\n  for i in \"$@\"; do\n    sum=0\n    for j in \"$i\"; do\n      sign=$(echo $j | sed -e 's/[+-]//')\n      prod=$(echo $j | sed -e 's/[+-]//')\n      sum=$(echo $sum $prod $sign)\n    done\n    result=$(echo $result $sum)\n  done\n\n  if [ -z \"$result\" ]; then\n    result=None\n  fi\n\n  echo $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        prod=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/^[+-]//') * sign",
    "    local i\n    local sign\n    local sum\n    local product\n    local result\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[^0-9]//g')\n        sum=$(echo $i | sed -e 's/[^0-9]//g')\n        product=$(echo $i | sed -e 's/[^0-9]//g')\n        result=$(echo $i | sed -e 's/[^0-9]//g')\n        echo \"$result\"\n    done",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local len\n    local arr\n\n    arr=$1\n    len=${#arr[@]}\n\n    if [ $len -eq 0 ]; then\n        return None\n    fi\n\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"\n    do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $sign)\n        prod=$(echo $prod $sign)\n    done\n\n    result=$(echo $sum $prod)\n    return $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo \"${j}\" | sed -e 's/[+-]//g')\n            sum=$(echo \"${sum}\" + \"${sign}\")\n            prod=$(echo \"${prod}\" * \"${sign}\")\n        done\n        result=$(echo \"${result}\" + \"${sum}\")\n    done\n    echo \"${result}\"",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_sum_prod_sum\n    local sign_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        sign=0\n        for j in \"${i}\"; do\n            if [[ \"${j}\" == \"1\" ]]; then\n                sum=sum+1\n            elif [[ \"${j}\" == \"-\" ]]; then\n                sign=sign+1\n            else\n                prod=prod*1\n            fi\n        done\n        if [[ \"${sum}\" -gt 0 ]]; then\n            result=result+\"${sum}\"\n        fi\n        if [[ \"${sign}\" -gt 0 ]]; then\n            result=result*\"${sign}\"\n        fi\n    done\n    echo \"${result}\"",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local arr\n\n    arr=$1\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$1\n        shift\n        sum=$(($sum $sign))\n        prod=$(($prod $sign))\n    done\n    sum=$(($sum $prod))\n    if [ \"$sum\" = \"None\" ]; then\n        sum=None\n    fi\n    echo $sum",
    "    local i\n    local sign\n    local sum\n    local prod\n    local arr\n    local result\n    arr=()\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        arr=($arr $i)\n    done\n    prod=1\n    for i in \"$arr\"; do\n        prod*=$sign\n    done\n    result=$(echo \"$prod\" | sed -e 's/[+-]//')\n    if [ -z \"$result\" ]; then\n        result=None\n    fi\n    echo $result",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local sum_sign\n    local sum_sign_prod\n    local sum_sign_prod_sum\n    local sum_sign_prod_sum_sign\n    local sum_sign_prod_sum_sign_prod\n    local sum_sign_prod_sum_sign_prod_sum\n    local sum_sign_prod_sum_sign_prod_sum_sign\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod\n    local sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum_sign_prod_sum\n    local sum_sign_prod_sum_sign_prod_sum_sign_pro",
    "    local i\n    local j\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_sum_prod_sum\n    local sign_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod\n\n    sign_sum=0\n    sign_prod=1\n    sign_sum_prod=0\n    sign_sum_prod_sum=0\n    sign_sum_prod_sum_sum=0\n    sign_sum_prod_sum_sum_prod=0\n\n    for i in \"${1}\"; do\n        sum=0\n        prod=1\n        for j in \"${i}\"; do\n            sign=0\n            if [[ \"${j}\" == \"1\" ]]; then\n                sign=1\n            elif [[ \"${j}\" == \"-\" ]]; then\n                sign=-1\n            fi\n            sum+=${sign}*${prod}\n            prod*=${sign}\n        done\n        sign_sum+=${sum}\n        sign_prod*=${prod}\n        sign_sum_prod+=${sign_prod}\n        sign_sum_prod_sum+=${sum}\n        sign_sum_prod_sum_sum+=${sum}\n        sign_sum_prod_sum_sum_prod+=${prod}\n    done\n\n    echo \"${sign_sum_prod_sum_sum_prod}\"",
    "    local i\n    local j\n    local sum\n    local prod\n    local sign\n    local ret\n\n    sum=0\n    prod=1\n    sign=1\n    ret=''\n    for i in \"${1}\"; do\n        for j in \"${i}\"; do\n            sum=$((sum + $j * sign))\n            prod=$((prod * $sign))\n            sign=$((sign * $sign))\n        done\n    done\n\n    if [ \"${sum}\" -gt \"0\" ]; then\n        ret=$((sum * prod))\n    fi\n\n    echo \"${ret}\"",
    "    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    sum=0\n    prod=1\n    for i in $arr; do\n        sign=$1\n        sum=$(($sum + $i * $sign))\n        prod=$(($prod * $sign))\n    done\n    result=$(($sum * prod))\n    return $result",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n\n    for i in \"${1//[ ]/}\"; do\n        sign=$(echo \"$i\" | sed -e 's/^[+-]//')\n        product=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        result=\"$sum\"\n        if [ \"$sign\" = \"+\" ]; then\n            result=\"$result $product\"\n        elif [ \"$sign\" = \"-\" ]; then\n            result=\"$result $product\"\n        fi\n        echo \"$result\"\n    done",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local result\n    local len\n    local arr\n\n    arr=$1\n    len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n        return None\n    fi\n\n    sum=0\n    for i in ${arr[@]}; do\n        sign=$1\n        prod=$2\n        sum=$(($sum * $prod))\n        sum=$(($sum + $sign))\n    done\n\n    result=$(($sum * $len))\n    return $result",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n    local len\n    local arr\n\n    arr=()\n    i=0\n    while true; do\n        if [[ $i -eq 0 ]]; then\n            i=`expr $1 : \"[[:space:]]\"`\n            arr=($arr)\n            continue\n        fi\n        if [[ $i -eq $# ]]; then\n            break\n        fi\n        i=`expr $i + 1`\n        arr+=($i)\n    done\n\n    len=`expr $# - 1`\n    sum=0\n    for i in $arr; do\n        sign=$(echo $i | sed -e 's/^[0-9]*//')\n        product=1\n        for j in $arr; do\n            if [[ $i -eq $j ]]; then\n                continue\n            fi\n            product*=($j)\n        done\n        sum+=($product * $sign)\n    done\n\n    if [[ $len -eq 0 ]]; then\n        result=\"None\"\n    else\n        result=`expr $sum / $len`\n    fi\n\n    echo $result",
    "    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local result\n    local arr\n\n    arr=($1)\n    if [ -z \"$arr\" ]; then\n        return None\n    fi\n\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        if [ $sign -eq 1 ]; then\n            sum=$(($sum + 1))\n        elif [ $sign -eq -1 ]; then\n            sum=$(($sum - 1))\n        else\n            sum=$(($sum + 1))\n        fi\n        prod=$(($prod * $sign))\n    done\n\n    result=$(($sum * prod))\n    echo $result",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n    local num\n    local sign_sum\n\n    sign_sum=0\n    for i in $1; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        product=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        num=$(echo $i | sed -e 's/[+-]//g')\n        sign_sum=$(echo $sign_sum $sign)\n        product_sum=$(echo $product_sum $product)\n        sum_sum=$(echo $sum_sum $sum)\n        num_sum=$(echo $num_sum $num)\n    done\n\n    result=$(echo $sign_sum $product_sum $sum_sum $num_sum)\n    return $result",
    "  local i\n  local j\n  local sign\n  local sum\n  local prod\n  local result\n  local arr\n\n  arr=()\n  for i in \"${1//[ \\t]+}\" ; do\n    arr=($arr $i)\n  done\n\n  if [ -z \"$arr\" ]; then\n    return None\n  fi\n\n  sum=0\n  prod=1\n  for i in \"${arr[@]}\" ; do\n    sign=$(echo $i | sed -e 's/[+-]//g')\n    sum=$(echo $sum $sign)\n    prod=$(echo $prod $sign)\n  done\n\n  result=$(echo $sum $prod)\n  return $result",
    "    local i\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_sum_prod_sum\n    local sign_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local sign_sum_prod_sum_sum_sum_",
    "    local i\n    local sign\n    local sum\n    local prod\n    local ret\n\n    i=1\n    while true\n    do\n        sum=0\n        sign=1\n        while [ $i -gt 0 ]\n        do\n            prod=1\n            while [ $i -gt 0 ]\n            do\n                sum=$((sum+$i*$sign))\n                sign=$((sign*$i))\n            done\n            i=$((i-1))\n        done\n        ret=$((sum*$prod))\n        i=$((i+1))\n    done",
    "    local i\n    local sign\n    local sum\n    local prod\n    local arr\n\n    arr=$1\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$sum\" + \"$sign\")\n        prod=$(echo \"$prod\" * \"$sign\")\n    done\n    echo \"$sum\"",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$((sum + $sign))\n        prod=$((prod * $sign))\n    done\n\n    if [ -z \"${arr[@]}\" ]; then\n        return None\n    fi\n\n    for i in \"${arr[@]}\"; do\n        for j in \"${arr[@]}\"; do\n            for k in \"${arr[@]}\"; do\n                if [ \"$i\" == \"$j\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$j\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$j\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$j\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$j\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$j\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$j\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$j\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$j\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$j\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$j\" == \"$k\" ]; then\n                    continue\n                fi\n                if [ \"$i\" == \"$j\" ]; then\n                    ",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result | sed -e 's/[+-]//g')\n        result=$(echo $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    sum=0\n    prod=1\n    for i in $arr; do\n        sign=$1\n        if [[ $sign == 1 ]]; then\n            sum=$((sum + $i))\n        elif [[ $sign == -1 ]]; then\n            sum=$((sum - $i))\n        elif [[ $sign == 0 ]]; then\n            prod=$((prod * $i))\n        fi\n    done\n    result=$((sum * prod))\n    if [[ $result == 0 ]]; then\n        result=1\n    fi\n    echo $result",
    "  local i\n  local sum\n  local sign\n  local product\n  local result\n\n  for i in \"$@\"; do\n    sum=0\n    sign=1\n    product=1\n    while [ $i -gt 0 ]; do\n      sum=$(($sum + $i % 2))\n      sign=$(($sign * $i % 2))\n      product=$(($product * $i))\n      i=$((i - 1))\n    done\n    if [ $i -eq 0 ]; then\n      result=$(($sum * $sign * $product))\n    else\n      result=None\n    fi\n  done\n  echo $result",
    "    local i\n    local sign\n    local product\n    local sum\n    local result\n    local arr\n\n    arr=()\n    i=0\n    while true\n    do\n        if [ $i -gt 0 ]; then\n            arr=($arr $i)\n            i=0\n        fi\n        if [ $# -eq 0 ]; then\n            break\n        fi\n        i=$i+1\n        sign=$1\n        shift\n        product=$1\n        shift\n        sum=$1\n        shift\n        result=$(($sum * $product * $sign))\n        arr=($arr $result)\n    done\n    arr=($arr)\n    if [ $# -eq 0 ]; then\n        return\n    fi\n    return $arr",
    "    local i\n    local sum\n    local sign\n    local prod\n    local result\n    local arr\n\n    arr=()\n    sum=0\n    sign=1\n    prod=1\n    result=1\n    for i in \"$1\"; do\n        if [[ $i == \" \" ]]; then\n            arr=($arr)\n            sum=$sum\n            sign=$sign\n            prod=$prod\n            result=$result\n        else\n            arr=($arr $i)\n            sum=$sum + $i\n            sign=$sign * $i\n            prod=$prod * $i\n            result=$result * $i\n        fi\n    done\n    if [[ $arr == () ]]; then\n        return None\n    fi\n    return $result * $prod * $sum * $sign",
    "    local i\n    local result\n    local sign\n    local arr\n    local sum\n    local product\n\n    arr=$1\n    sum=0\n    product=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $sign)\n        product=$(echo $product $sign)\n    done\n    result=$(echo $sum $product)\n    return $result",
    "    local i\n    local sum\n    local prod\n    local sign\n    local arr\n\n    arr=($1)\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//')\n        sum=$(echo \"$sum $sign\" | bc)\n        prod=$(echo \"$prod $sign\" | bc)\n    done\n\n    echo \"$sum $prod\"",
    "    local i\n    local sign\n    local prod\n    local sum\n    local arr\n\n    arr=($1)\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $prod $sign)\n        sum=$(echo $sum $prod)\n    done\n    echo $sum",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local arr\n    local result\n    local result_arr\n\n    arr=()\n    result=()\n    result_arr=()\n\n    for i in \"$@\"; do\n        arr=($arr $i)\n    done\n\n    for i in \"$@\"; do\n        sum=0\n        prod=1\n        sign=0\n        for j in \"$i\"; do\n            k=${j}\n            if [[ $k == 0 ]]; then\n                sum=0\n                prod=1\n                sign=0\n            elif [[ $k == 1 ]]; then\n                sum=sum+1\n                prod=prod*1\n            elif [[ $k == -1 ]]; then\n                sum=sum-1\n                prod=prod*-1\n            else\n                sum=sum+1\n                prod=prod*1\n            fi\n        done\n        sum=sum*prod\n        result=($result $sum)\n    done\n\n    for i in \"$@\"; do\n        sum=0\n        prod=1\n        for j in \"$i\"; do\n            k=${j}\n            if [[ $k == 0 ]]; then\n                sum=0\n                prod=1\n            elif [[ $k == 1 ]]; then\n                sum=sum+1\n                prod=prod*1\n            elif [[ $k == -1 ]]; then\n                sum=sum-1\n                prod=prod*-1\n            else\n                sum=sum+1\n                prod=prod*1\n            fi\n        done\n        sum=sum*prod\n        result=($result $sum)\n    done\n\n    for i in \"$@\"; do\n        sum=0\n        prod=1\n        for j in \"$i\"; do\n            k=${j}\n            if [[ $k == 0 ]]; then\n                sum=0\n                prod=1\n            elif [[ $k == 1 ]]; then\n                sum=sum+1\n                prod=prod*1\n            elif [[ $k == -1 ]]; then\n                sum=sum-",
    "    local i\n    local result\n    local sign\n    local num\n    local sign_sum\n    local sign_product\n    local sign_product_sum\n\n    sign_sum=0\n    sign_product_sum=0\n    sign_product=1\n    for i in \"$1\"; do\n        sign=0\n        num=0\n        if [[ $i == \"1\" ]]; then\n            sign=1\n        elif [[ $i == \"0\" ]]; then\n            sign=0\n        else\n            num=$(expr $i + 1)\n        fi\n        sign_sum=$(expr $sign_sum + $sign)\n        sign_product_sum=$(expr $sign_product_sum + $sign_product)\n        sign_product=$(expr $sign_product * $num)\n    done\n\n    result=$(expr $sign_product_sum * $sign_sum)\n    echo $result",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local arr\n    local result\n\n    arr=$1\n    result=0\n\n    # If arr is empty, return None\n    if [ -z \"$arr\" ]; then\n        return None\n    fi\n\n    # If arr is not empty, then multiply all elements in arr\n    # by their signs and sum the results\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i}\"; do\n            sign=$1\n            k=$2\n            if [ \"$sign\" == \"1\" ]; then\n                sum=$(($sum + $k))\n            elif [ \"$sign\" == \"-1\" ]; then\n                sum=$(($sum - $k))\n            elif [ \"$sign\" == \"0\" ]; then\n                prod=$(($prod * $k))\n            else\n                echo \"Invalid sign: $sign\"\n                return 1\n            fi\n        done\n        result=$(($result + $sum * $prod))\n    done\n\n    return $result",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_prod_sum\n    local sign_prod_sum_prod\n    local sign_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_prod_sum_prod_sum_prod_sum",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98",
    "    local i\n    local arr\n    local sum\n    local prod\n    local sign\n    local sign_sum\n\n    arr=()\n    sum=0\n    prod=1\n    sign_sum=0\n\n    for i in \"${1}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        arr=($arr $i)\n        sum=$((sum + $i))\n        prod=$((prod * $sign))\n        sign_sum=$((sign_sum + $sign))\n    done\n\n    if [ -z \"$arr\" ]; then\n        return None\n    fi\n\n    return $sum * $prod * $sign_sum",
    "    local i\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n\n    sum=0\n    prod=1\n    sign_sum=0\n    sign_prod=1\n\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[+-]//')\n        sign_sum=$(echo $sign_sum $sign)\n        sign_prod=$(echo $sign_prod $sign)\n        sum=$(echo $sum $sign_sum)\n        prod=$(echo $prod $sign_prod)\n    done\n\n    if [ -z \"$sum\" ]; then\n        sum=\"None\"\n    fi\n\n    echo $sum",
    "  local i\n  local j\n  local sum\n  local prod\n  local sign\n  local sign_sum\n  local sign_prod\n  local sign_sum_prod\n\n  for i in \"${1//[ \\t\\n]+}\" ; do\n    sum=0\n    prod=1\n    sign_sum=0\n    sign_prod=1\n    for j in \"${i//[^0-9]}\" ; do\n      sign=${j//[+-]}\n      sign_sum_prod=${sign_sum_prod*sign}\n      sign_prod=${sign_prod*sign}\n      sum=${sum+abs(${i%10})}\n      prod=${prod*sign}\n    done\n    sum_prod=${sum_prod*prod}\n    sum_prod=${sum_prod*sign_sum_prod}\n    sum_prod=${sum_prod*sign_prod}\n    sum_prod=${sum_prod*sum}\n    sum_prod=${sum_prod*prod}\n    sum_prod=${sum_prod*sign_sum_prod}\n    sum_prod=${sum_prod*sign_prod}\n    sum_prod=${sum_prod*sum}\n    sum_prod=${sum_prod*prod}\n    sum_prod=${sum_prod*sign_sum_prod}\n    sum_prod=${sum_prod*sign_prod}\n    sum_prod=${sum_prod*sum}\n    sum_prod=${sum_prod*prod}\n    sum_prod=${sum_prod*sign_sum_prod}\n    sum_prod=${sum_prod*sign_prod}\n    sum_prod=${sum_prod*sum}\n    sum_prod=${sum_prod*prod}\n    sum_prod=${sum_prod*sign_sum_prod}\n    sum_prod=${sum_prod*sign_prod}\n    sum_pro",
    "  local i\n  local j\n  local sign\n  local sum\n  local prod\n  local result\n  local arr\n\n  arr=($1)\n  result=()\n  for i in \"${arr[@]}\"; do\n    sum=0\n    prod=1\n    for j in \"${i[@]}\"; do\n      sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n      sum=$(echo \"$sum $sign\" | bc)\n      prod=$(echo \"$prod $sign\" | bc)\n    done\n    result+=($sum * $prod)\n  done\n  echo \"$result\"",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local result\n    local arr\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        for j in \"${i[@]}\"; do\n            sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n            prod=$(echo \"$j\" | sed -e 's/[+-]//g')\n            sum=$(echo \"$sum\" + \"$prod\"*\"$sign\")\n        done\n        result=$(echo \"$result\" + \"$sum\")\n    done\n    echo \"$result\"",
    "  local i\n  local sign\n  local sum\n  local product\n  local result\n  local arr\n\n  arr=($1)\n  result=0\n  for i in \"${arr[@]}\"; do\n    sign=$(echo $i | sed -e 's/[+-]//g')\n    product=$(echo $i | sed -e 's/[+-]//g')\n    sum=$(echo $i | sed -e 's/[+-]//g')\n    result=$(echo $result $sum * $product $sign)\n  done\n  echo $result",
    "    local i\n    local j\n    local sign\n    local product\n    local sum\n    local sum_sign\n    local sum_product\n    local sum_product_sign\n    local sum_product_sign_product\n    local sum_product_sign_product_sign\n    local sum_product_sign_product_sign_product\n    local sum_product_sign_product_sign_product_sign\n    local sum_product_sign_product_sign_product_sign_product\n    local sum_product_sign_product_sign_product_sign_product_sign\n    local sum_product_sign_product_sign_product_sign_product_sign_product\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product_sign_product\n    local sum_product_",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local result\n    local len\n    local arr\n\n    arr=$1\n    len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n        return None\n    fi\n\n    sum=0\n    for i in ${arr[@]}; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $prod $sign)\n    done\n\n    result=$(echo $sum | sed -e 's/[+-]//g')\n    return $result",
    "    local i\n    local arr\n    local sum\n    local prod\n    local sign\n    local ret\n\n    arr=()\n    sum=0\n    prod=1\n    sign=1\n\n    for i in \"$@\"; do\n        arr=($arr $i)\n        sum=$sum + $i\n        prod=$prod * $sign\n        sign=$((sign * -1))\n    done\n\n    ret=0\n    for i in \"$arr\"; do\n        ret=$ret + $i\n    done\n\n    ret=$ret * prod\n\n    if [ \"$ret\" -gt \"0\" ]; then\n        ret=\"$ret\"\n    else\n        ret=\"None\"\n    fi\n\n    echo \"$ret\"",
    "    local i\n    local j\n    local k\n    local result\n    local sign\n    local sum\n    local prod\n    local prod_sign\n    local prod_signs\n\n    prod_signs=$1\n    prod_signs=${prod_signs// /}\n    prod_signs=${prod_signs// *}\n    prod_signs=${prod_signs// -}\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_signs// }\n    prod_signs=${prod_",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    sum=0\n    prod=1\n    sign=1\n    for i in \"${arr[@]}\"; do\n        sum=0\n        for j in \"${i[@]}\"; do\n            for k in \"${j[@]}\"; do\n                sum=sum+sign*$k\n                sign=$((sign*$k))\n            done\n        done\n        prod=prod*$i\n    done\n    result=$(printf \"%d\" \"$sum\")\n    return $result",
    "  local i\n  local j\n  local sign\n  local sum\n  local prod\n  local arr\n\n  arr=()\n  for i in \"$@\"; do\n    arr=($arr $i)\n  done\n\n  sum=0\n  prod=1\n  for i in \"${arr[@]}\"; do\n    sign=$(echo $i | sed -e 's/[+-]//g')\n    sum=$(echo $sum $sign)\n    prod=$(echo $prod $sign)\n  done\n\n  if [ \"${#arr[@]}\" -eq 0 ]; then\n    return None\n  fi\n\n  return $sum * $prod",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n    local sum_sign\n    local sign_product\n    local sign_sum\n\n    sign_product=1\n    sign_sum=1\n    sum_sign=1\n    product=1\n    sum=1\n    sign=1\n\n    for i in \"$@\"; do\n        if [[ $i == \"1\" ]]; then\n            sign_product=sign_product*$sign\n            sign_sum=sign_sum*$sign\n            sign=1\n        elif [[ $i == \"-\" ]]; then\n            sign_product=sign_product*$sign\n            sign_sum=sign_sum*$sign\n            sign=-1\n        elif [[ $i == \"0\" ]]; then\n            sign_product=sign_product*$sign\n            sign_sum=sign_sum*$sign\n            sign=0\n        else\n            product=product*$i\n            sum=sum+$i\n        fi\n    done\n\n    if [[ $sign_product == 1 ]]; then\n        sum_sign=sum_sign*sign_product\n    fi\n\n    if [[ $sign_sum == 1 ]]; then\n        sum_sign=sum_sign*sign_sum\n    fi\n\n    if [[ $sign == 1 ]]; then\n        sign_product=sign_product*sign\n        sign_sum=sign_sum*sign\n    fi\n\n    if [[ $sign == 0 ]]; then\n        sign_product=sign_product*sign\n        sign_sum=sign_sum*sign\n    fi\n\n    if [[ $product == 1 ]]; then\n        product=product*sign_product\n    fi\n\n    if [[ $sum == 1 ]]; then\n        sum=sum*sign_sum\n    fi\n\n    if [[ $sum == 0 ]]; then\n        sum=sum*sign_sum\n    fi\n\n    if [[ $sum_sign == 1 ]]; then\n        sum=sum*sum_sign\n    fi\n\n    if [[ $sum_sign == -1 ]]; then\n        sum=sum*sum_sign\n    fi\n\n    if [[ $product == 0 ]]; then\n        product=product*sign_product\n    fi\n\n    if [[ $",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i}\"; do\n            sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n            sum=$(echo \"$sum\" + \"$sign\")\n            prod=$(echo \"$prod\" * \"$sign\")\n        done\n        result=$(echo \"$result\" + \"$sum\" * \"$prod\")\n    done\n    echo $result",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$result $sum $prod $sign\" | bc)\n    done\n    echo $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local product\n    local result\n\n    for i in \"$@\"; do\n        sign=1\n        sum=0\n        product=1\n        for j in \"$i\"; do\n            if [[ $j == \"-\" ]]; then\n                sign=-1\n            else\n                sign=1\n            fi\n            sum=sum+sign*$j\n            product=product*sign\n        done\n        if [[ $sum == 0 ]]; then\n            result=\"0\"\n        else\n            result=\"$sum*$product\"\n        fi\n        echo \"$result\"\n    done",
    "    local i\n    local arr\n    local sum\n    local prod\n    local sign\n\n    arr=$1\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$sum\" + \"$sign\")\n        prod=$(echo \"$prod\" * \"$sign\")\n    done\n    echo \"$sum\"",
    "  local i\n  local j\n  local k\n  local sum\n  local prod\n  local sign\n  local sign_sum\n  local sign_prod\n  local sign_sum_prod\n  local sign_sum_prod_sum\n  local sign_sum_prod_sum_sum\n  local sign_sum_prod_sum_sum_prod\n  local sign_sum_prod_sum_sum_prod_sum\n  local sign_sum_prod_sum_sum_prod_sum_sum\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n  local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n  local sign_sum_prod_sum",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        sign=0\n        for j in \"${i}\"; do\n            if [[ \"${j}\" == \"1\" ]]; then\n                sign=1\n            elif [[ \"${j}\" == \"-\" ]]; then\n                sign=-1\n            else\n                sign=0\n            fi\n            sum=sum+sign\n            prod=prod*sign\n        done\n        result=result+sum*prod\n    done\n    echo \"${result}\"",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n\n    result=0\n    for i in \"$@\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//')\n        product=$(echo \"$i\" | sed -e 's/[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//')\n        result=$(echo \"$result $sign $product\" | bc)\n    done\n    echo \"$result\"",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//')\n        product=$(echo \"$i\" | sed -e 's/[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//')\n        result=$(echo \"$result $product $sign\" | bc)\n    done\n\n    echo \"$result\"",
    "    local i\n    local sign\n    local sum\n    local prod\n    local arr\n    local ret\n\n    arr=$1\n    ret=0\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g')\n        ret=$(echo \"$ret $sum*$prod*$sign\" | bc)\n    done\n    echo $ret",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n\n    result=0\n    for i in \"$@\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//')\n        product=$(echo \"$i\" | sed -e 's/[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//')\n        result=$(echo \"$result\" + \"$product\"*\"$sign\")\n    done\n\n    echo \"$result\"",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local result\n    local arr\n\n    arr=($1)\n    if [ -z \"$arr\" ]; then\n        return None\n    fi\n\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        if [ \"$sign\" = \"1\" ]; then\n            sum=$(echo \"$sum\" + 1)\n        elif [ \"$sign\" = \"0\" ]; then\n            sum=$(echo \"$sum\" + 0)\n        else\n            sum=$(echo \"$sum\" + \"$sign\")\n        fi\n        prod=$(echo \"$prod\" * \"$sign\")\n    done\n\n    result=$(echo \"$sum\" * \"$prod\")\n    return $result",
    "    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n",
    "  local i\n  local j\n  local sign\n  local sum\n  local prod\n  local result\n\n  for i in \"$@\"; do\n    sum=0\n    prod=1\n    sign=0\n    for j in \"$i\"; do\n      if [[ \"$j\" == \"1\" ]]; then\n        sum+=1\n      elif [[ \"$j\" == \"-\" ]]; then\n        sign+=1\n      else\n        prod*=1\n      fi\n    done\n    if [[ \"$sum\" -eq 0 ]]; then\n      result=\"None\"\n    else\n      result=\"$sum\"\n      result=\"$result\"\n      result=\"$result\"\n    fi\n  done\n  echo \"$result\"",
    "  local i\n  local sign\n  local sum\n  local prod\n  local arr\n  local len\n  local ret\n\n  arr=()\n  sum=0\n  prod=1\n  len=0\n\n  for i in \"${1}\"; do\n    sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n    arr=($arr $i)\n    sum=$((sum + $sign))\n    prod=$((prod * $sign))\n    len=$((len + 1))\n  done\n\n  ret=None\n  if [ \"$len\" -gt \"0\" ]; then\n    ret=$sum * prod\n  fi\n\n  return $ret",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local ret\n\n    ret=0\n    for i in \"$@\"; do\n        sum=0\n        prod=1\n        for j in \"$i\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        ret=$(echo $ret $sum)\n    done\n    echo $ret",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n    local len\n    local start\n    local end\n\n    arr=()\n    sum=0\n    prod=1\n    result=''\n    start=1\n    end=0\n\n    for ((i=1; i<=${#1})); do\n        sign=$1[i]\n        arr=(${arr} ${sign})\n        sum=sum+${sign}\n        prod=prod*${sign}\n        i=i+1\n    done\n\n    len=${#arr[@]}\n\n    for ((i=1; i<=len; i++)); do\n        sign=$1[i]\n        if [[ ${sign} == 0 ]]; then\n            result=result+\"0\"\n        else\n            result=result+\"1\"\n        fi\n    done\n\n    result=result+\"$sum\"\n    result=result+\"$prod\"\n\n    return $result",
    "    local i\n    local arr\n    local sum\n    local prod\n    local sign\n    local ret\n\n    arr=()\n    sum=0\n    prod=1\n    sign=1\n\n    for i in \"${1}\"; do\n        arr=($arr $i)\n        sum=$sum + $arr[1]\n        prod=$prod * $arr[2]\n        sign=$sign * $arr[3]\n    done\n\n    ret=0\n    if [ -z \"$arr\" ]; then\n        ret=None\n    else\n        ret=$sum * prod * sign\n    fi\n\n    return $ret",
    "  local i\n  local result\n  local sign\n  local sum\n  local product\n  local num\n  local sign_sum\n  local sign_product\n\n  sign_sum=0\n  sign_product=1\n  sum=0\n  product=1\n  num=0\n\n  for i in \"$@\"; do\n    num=`expr $num * $i`\n    sign_sum=`expr $sign_sum * $i`\n    sign_product=`expr $sign_product * $i`\n  done\n\n  if [ -z \"$num\" ]; then\n    result=None\n  else\n    result=`expr $sum * $product * $sign_sum * $sign_product`\n  fi\n\n  return $result",
    "    local i\n    local sign\n    local sum\n    local prod\n    local arr\n\n    arr=$1\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$sum\" + \"$sign\")\n        prod=$(echo \"$prod\" * \"$sign\")\n    done\n    echo \"$sum\"",
    "    local i\n    local sign\n    local product\n    local sum\n    local sum_sign\n    local sum_product\n\n    sum_product=1\n    sum_sign=1\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        product=$(echo $i | sed -e 's/[+-]//g')\n        sum_product=`expr $sum_product * $product`\n        sum_sign=`expr $sum_sign * $sign`\n    done\n    sum=`expr $sum_product * $sum_sign`\n    if [ \"$sum\" == \"0\" ]; then\n        sum=None\n    fi\n    echo $sum",
    "    local i\n    local j\n    local k\n    local arr\n    local sum\n    local prod\n    local sign\n    local result\n\n    arr=()\n    sum=0\n    prod=1\n    sign=1\n    result=()\n\n    for i in \"${1//[^0-9]*}\"\n    do\n        for j in \"${i//[^0-9]*}\"\n        do\n            for k in \"${j//[^0-9]*}\"\n            do\n                arr=($arr $(($arr[0] * $sign) + $k))\n                sum=$sum + $k\n                prod=$prod * $sign\n                sign=$((sign == 1 ? -1 : 1))\n            done\n        done\n    done\n\n    if [ -z \"$arr\" ]; then\n        return None\n    fi\n\n    return $sum * $prod",
    "    local i\n    local j\n    local sign\n    local sum\n    local product\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        product=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            product=$(echo $product $sign)\n        done\n        result=$(echo $result $sum $product)\n    done\n    echo $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        prod=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+-]//') * sign\n        result=$(echo \"$i\" | sed -e 's/[+",
    "    local i\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n\n    sign_sum=0\n    sign_prod=1\n    sum=0\n    prod=1\n    for i in \"$@\"; do\n        sign=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sign_sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sign_prod=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        prod=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo \"$i\" | sed -e 's/^[+-]//')\n        sum=$(echo",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local len\n    local arr\n\n    arr=$1\n    len=`expr $#arr`\n    if [ $len -eq 0 ]; then\n        return None\n    fi\n\n    sum=0\n    prod=1\n    for i in $arr; do\n        sign=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $sum $sign)\n        prod=$(echo $prod $sign)\n    done\n\n    result=$(echo $sum $prod)\n    return $result",
    "    local i\n    local sum\n    local sign\n    local product\n    local result\n\n    result=0\n    for i in \"$@\"; do\n        sum=0\n        sign=1\n        product=1\n        while [ $i -gt 0 ]; do\n            sum=$(($sum + $(($i % 2) * sign)))\n            sign=$((sign * -1))\n            product=$(($product * $(($i % 2) * sign)))\n            i=$((i / 2))\n        done\n        result=$(($result + $(sum * product)))\n    done\n    echo $result",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_sum_prod_sum\n    local sign_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum",
    "  local i\n  local j\n  local k\n  local sum\n  local prod\n  local sign\n  local sign_sum\n  local sign_prod\n  local sign_sum_prod\n  local sign_prod_sum\n  local sign_prod_sum_prod\n  local sign_prod_sum_prod_sum\n  local sign_prod_sum_prod_sum_prod\n\n  sum=0\n  prod=1\n  sign_sum=0\n  sign_prod=1\n  sign_sum_prod=0\n  sign_prod_sum=0\n  sign_prod_sum_prod=0\n  sign_prod_sum_prod_sum=0\n  sign_prod_sum_prod_sum_prod=0\n\n  for i in \"${1}\"; do\n    for j in \"${i}\"; do\n      for k in \"${j}\"; do\n        if [[ $k == \"1\" ]]; then\n          sum=$((sum + 1))\n          prod=$((prod * 1))\n          sign_sum=$((sign_sum + 1))\n          sign_prod=$((sign_prod * 1))\n          sign_sum_prod=$((sign_sum_prod + 1))\n          sign_prod_sum=$((sign_prod_sum + 1))\n          sign_prod_sum_prod=$((sign_prod_sum_prod + 1))\n          sign_prod_sum_prod_sum=$((sign_prod_sum_prod_sum + 1))\n          sign_prod_sum_prod_sum_prod=$((sign_prod_sum_prod_sum_prod + 1))\n        fi\n      done\n    done\n  done\n\n  echo \"${sum}\"\n  echo \"${prod}\"\n  echo \"${sign_sum}\"\n  echo \"${sign_prod}\"\n  echo \"${sign_sum_prod}\"\n  echo \"${sign_prod_sum}\"\n  echo \"${sign_prod_sum_prod}\"\n  echo \"${sign_prod_sum_prod_sum}\"",
    "  local i\n  local sign\n  local sum\n  local prod\n  local arr\n\n  arr=($1)\n  sum=0\n  prod=1\n  for i in \"${arr[@]}\"; do\n    sign=$(echo $i | sed -e 's/^[0-9]*//')\n    sum=$(echo $sum $sign | bc)\n    prod=$(echo $prod $sign | bc)\n  done\n\n  echo $sum $prod",
    "    local i\n    local j\n    local sign\n    local product\n    local sum\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$1\n        product=$2\n        sum=$3\n        result=$(($result * $product))\n        if [ $sign == 1 ]; then\n            result=$(($result + $sum))\n        fi\n        if [ $sign == -1 ]; then\n            result=$(($result - $sum))\n        fi\n        shift 2\n    done\n    echo $result",
    "    local i\n    local j\n    local k\n    local result\n    local sign\n    local sum\n    local prod\n    local arr\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n            sum=$(echo \"$sum $sign\" | bc)\n            prod=$(echo \"$prod $sign\" | bc)\n        done\n        result=$(echo \"$result $sum $prod\" | bc)\n    done\n    echo \"$result\"",
    "    local i\n    local sign\n    local sum\n    local product\n    local result\n    for i in \"$@\"; do\n        sign=$(echo \"$i\" | sed -e 's/[^0-9]//')\n        sum=$(echo \"$i\" | sed -e 's/[^0-9]//')\n        product=$(echo \"$i\" | sed -e 's/[^0-9]//')\n        result=$(echo \"$i\" | sed -e 's/[^0-9]//')\n        if [ \"$sign\" = \"1\" ]; then\n            sum=$(echo \"$sum\" | sed -e 's/[^0-9]//')\n        fi\n        if [ \"$sign\" = \"-\" ]; then\n            product=$(echo \"$product\" | sed -e 's/[^0-9]//')\n        fi\n        if [ \"$sign\" = \"1\" ]; then\n            product=$(echo \"$product\" | sed -e 's/[^0-9]//')\n        fi\n        if [ \"$sign\" = \"0\" ]; then\n            product=$(echo \"$product\" | sed -e 's/[^0-9]//')\n        fi\n        if [ \"$sign\" = \"1\" ]; then\n            product=$(echo \"$product\" | sed -e 's/[^0-9]//')\n        fi\n        if [ \"$sign\" = \"-\" ]; then\n            product=$(echo \"$product\" | sed -e 's/[^0-9]//')\n        fi\n        if [ \"$sign\" = \"1\" ]; then\n            product=$(echo \"$product\" | sed -e 's/[^0-9]//')\n        fi\n        if [ \"$sign\" = \"0\" ]; then\n            product=$(echo \"$product\" | sed -e 's/[^0-9]//')\n        fi\n        if [ \"$sign\" = \"1\" ]; then\n            product=$(echo \"$product\" | sed -e 's/[^0-9]//')\n        fi\n        if [ \"$sign\" = \"-\" ]; then\n            product=$(echo \"$product\" | sed -e 's/[^",
    "  local i\n  local j\n  local sign\n  local sum\n  local prod\n  local result\n  local tmp\n\n  result=0\n  for i in \"$@\"; do\n    sum=0\n    prod=1\n    for j in \"$i\"; do\n      sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n      sum=$(echo \"$sum $sign\" | bc)\n      prod=$(echo \"$prod $sign\" | bc)\n    done\n    tmp=`echo \"$sum $prod\" | bc`\n    if [ \"$tmp\" != \"0\" ]; then\n      result=$(echo \"$result $tmp\" | bc)\n    fi\n  done\n  echo $result",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n\n    result=0\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        product=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $result $sign $product)\n    done\n\n    echo $result",
    "    local i\n    local result\n    local sign\n    local sign_sum\n    local sign_product\n    local sign_product_sum\n    local sign_product_product\n\n    sign_product=1\n    sign_product_sum=1\n    sign_product_product=1\n    sign_sum=0\n    for i in \"$1\"; do\n        sign=1\n        if [[ $i == \"1\" ]]; then\n            sign_product=sign_product*sign\n            sign_product_product=sign_product_product*sign\n            sign_sum=sign_sum+sign\n        elif [[ $i == \"-\" ]]; then\n            sign_product=sign_product*sign\n            sign_product_product=sign_product_product*sign\n            sign_sum=sign_sum-sign\n        elif [[ $i == \"0\" ]]; then\n            sign_product=sign_product*sign\n            sign_product_product=sign_product_product*sign\n            sign_sum=sign_sum\n        fi\n    done\n    result=$(($sign_product_product*sign_product_sum*sign_sum))\n    echo $result",
    "    local i\n    local j\n    local sum\n    local prod\n    local sign\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$((sum + $sign))\n        prod=$((prod * $sign))\n    done\n    result=$(echo \"$sum\"*\"$prod\")\n    return $result",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local result\n    local arr\n    local arr_len\n    local arr_len_i\n    local arr_len_j\n    local arr_len_k\n    local arr_len_sum\n    local arr_len_prod\n    local arr_len_sign\n\n    arr_len=0\n    arr_len_i=0\n    arr_len_j=0\n    arr_len_k=0\n    arr_len_sum=0\n    arr_len_prod=0\n    arr_len_sign=0\n\n    arr=($1)\n    arr_len=$(len $arr)\n\n    for i in $arr; do\n        arr_len_i=$(expr $arr_len - 1)\n        for j in $arr; do\n            arr_len_j=$(expr $arr_len_i - 1)\n            for k in $arr; do\n                arr_len_k=$(expr $arr_len_j - 1)\n                arr_len_sum=$(expr $arr_len_k + 1)\n                arr_len_prod=$(expr $arr_len_i * $arr_len_j * $arr_len_k)\n                arr_len_sign=$(expr $arr_len_i * $arr_len_j * $arr_len_k * $arr[$arr_len_k])\n                sum=$(expr $arr_len_sum * $arr_len_prod * $arr_len_sign)\n                prod=$(expr $arr_len_prod * $arr_len_sign)\n                sign=$(expr $arr_len_sign * $arr_len_sign)\n                result=$(expr $sum * $prod * $sign)\n                if [ $result ]; then\n                    echo $result\n                    return 0\n                fi\n            done\n        done\n    done\n\n    return 1",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n\n    result=0\n    for i in \"$@\"; do\n        sum=0\n        prod=1\n        for j in \"$i\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        result=$(echo $result $sum)\n        result=$(echo $result $prod)\n    done\n    echo $result",
    "    local i\n    local sum\n    local prod\n    local sign\n    local sign_sum\n\n    sum=0\n    prod=1\n    sign_sum=0\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        sign_sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n    local len\n    local arr\n\n    arr=()\n    len=0\n    while true; do\n        i=${1}\n        if [[ $i == -* ]]; then\n            sign=\"-\"\n        else\n            sign=\"+\"\n        fi\n        i=${i//*}\n        arr=(${arr} ${i})\n        len=$((len + 1))\n        if [[ $len == $# ]]; then\n            break\n        fi\n    done\n    sum=0\n    prod=1\n    for i in ${arr[@]}; do\n        sum=$((sum + $i))\n        prod=$((prod * $sign))\n    done\n    result=$((sum * prod))\n    if [[ $result == 0 ]]; then\n        result=None\n    fi\n    echo $result",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n    local num\n\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[^0-9]//g')\n        product=$(echo $i | sed -e 's/[^0-9]//g')\n        sum=$(echo $i | sed -e 's/[^0-9]//g')\n        num=$(echo $i | sed -e 's/[^0-9]//g')\n        result=$(echo $i | sed -e 's/[^0-9]//g')\n        if [ -z \"$num\" ]; then\n            num=0\n        fi\n        if [ -z \"$sum\" ]; then\n            sum=0\n        fi\n        if [ -z \"$product\" ]; then\n            product=1\n        fi\n        if [ -z \"$sign\" ]; then\n            sign=1\n        fi\n        if [ -z \"$result\" ]; then\n            result=1\n        fi\n        sum=$(echo $sum | sed -e 's/[^0-9]//g')\n        product=$(echo $product | sed -e 's/[^0-9]//g')\n        sign=$(echo $sign | sed -e 's/[^0-9]//g')\n        result=$(echo $result | sed -e 's/[^0-9]//g')\n        echo \"$sum * $product * $sign * $num\"\n    done",
    "    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local sum_sign\n    local sum_sign_prod\n    local sum_sign_prod_sign\n    local sum_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local result\n\n    result=0\n    for i in \"$@\"; do\n        sum=0\n        prod=1\n        for j in \"$i\"; do\n            sign=0\n            if [[ \"$j\" == \"1\" ]]; then\n                sign=1\n            elif [[ \"$j\" == \"-1\" ]]; then\n                sign=-1\n            elif [[ \"$j\" == \"0\" ]]; then\n                sign=0\n            fi\n            sum=sum+sign*$j\n            prod=prod*sign\n        done\n        result=result+sum*prod\n    done\n    echo $result",
    "    local i\n    local sum\n    local sign\n    local product\n    local result\n\n    result=0\n    for i in \"$@\"; do\n        sum=0\n        sign=1\n        product=1\n        while [ $i -gt 0 ]; do\n            sum=$((sum+$i%10))\n            i=$((i/10))\n        done\n        while [ $i -gt 0 ]; do\n            if [ $i%10 -gt 0 ]; then\n                sign=$((sign*$i%10))\n            fi\n            i=$((i/10))\n        done\n        product=$((product*sign))\n    done\n    result=$((result*product))\n    return $result",
    "    local i\n    local sign\n    local prod\n    local sum\n    local arr\n\n    arr=($1)\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/^[+-]//')\n        prod=$(echo \"$prod\"*\"$sign\")\n        sum=$(echo \"$sum\" + \"$prod\")\n    done\n    echo \"$sum\"",
    "    local i\n    local j\n    local k\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i}\"; do\n            sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n            sum=$(echo \"$sum $sign\" | bc)\n            prod=$(echo \"$prod $sign\" | bc)\n        done\n        result=$(echo \"$result $sum $prod\" | bc)\n    done\n    echo \"$result\"",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_sum_prod_sum\n    local sign_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_mul\n    local sign_mul_sum\n    local sign_mul_prod\n    local sign_mul_mul\n    local sign_mul_mul_sum\n    local sign_mul_mul_prod\n    local sign_mul_mul_mul\n    local sign_mul_mul_mul_sum\n    local sign_mul_mul_mul_prod\n    local sign_mul_mul_mul_mul\n    local sign_mul_mul_mul_mul_sum\n    local sign_mul_mul_mul_mul_prod\n    local sign_mul_mul_mul_mul_mul\n    local sign_mul_mul_mul_mul_mul_sum\n    local sign_mul_mul_mul_mul_mul_prod\n    local sign_mul_mul_mul_mul_mul_mul\n    local sign_mul_mul_mul_mul_mul_mul_sum\n    local sign_mul_mul_mul_mul_mul_mul_prod\n    local sign_mul_mul_mul_mul_mul_mul_mul\n    local sign_mul_mul_mul_mul_mul_mul_mul_sum\n    local sign_mul_mul_mul_mul_mul_mul_mul_prod\n    local sign_mul_mul_mul_mul_mul_mul_mul_mul\n    local sign_mul_mul_mul_mul_mul_mul_mul_mul_sum\n    local sign_mul_mul_mul_mul_mul_mul_mul_mul_prod\n    local sign_mul_mul_mul_mul",
    "    local i\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_sum_prod_sum\n    local sign_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local ret\n\n    ret=0\n    for i in \"${1//[ ]/}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g')\n        ret=$(echo \"$ret $sum*$prod*$sign\" | bc)\n    done\n    echo \"$ret\"",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i}\"; do\n            sign=$(echo \"${j}\" | sed -e 's/[+-]//g')\n            sum=$(echo \"${sum}\" + \"${sign}\")\n            prod=$(echo \"${prod}\" * \"${sign}\")\n        done\n        result=$(echo \"${result}\" + \"${sum}\")\n        result=$(echo \"${result}\" * \"${prod}\")\n    done\n    echo \"${result}\"",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local ret\n\n    ret=0\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[^0-9]//g')\n        sum=$(echo $i | sed -e 's/[^0-9]//g')\n        prod=$(echo $i | sed -e 's/[^0-9]//g')\n        ret=$(echo $ret $sum*$prod*$sign)\n    done\n    echo $ret",
    "    local i\n    local arr\n    local sum\n    local prod\n    local sign\n    local ret\n\n    arr=()\n    sum=0\n    prod=1\n    sign=1\n\n    for i in \"$@\"; do\n        arr=($arr $i)\n    done\n\n    for i in \"$arr\"; do\n        if [ $i = \"0\" ]; then\n            sum=0\n            prod=1\n            sign=1\n        elif [ $i = \"1\" ]; then\n            sum=sum+1\n            prod=prod*sign\n        elif [ $i = \"-1\" ]; then\n            sum=sum-1\n            prod=prod*sign\n        else\n            sum=sum+1\n            prod=prod*sign\n        fi\n    done\n\n    ret=${sum}\n    return $ret",
    "    local i\n    local j\n    local sign\n    local product\n    local sum\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        product=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$result $sign $product\" | bc)\n    done\n    echo \"$result\"",
    "  local i\n  local sign\n  local sum\n  local prod\n  local result\n  local arr\n\n  arr=($1)\n  result=0\n  for i in \"${arr[@]}\"; do\n    sum=0\n    sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n    if [ \"$sign\" = \"1\" ]; then\n      sum=1\n    elif [ \"$sign\" = \"0\" ]; then\n      sum=0\n    else\n      sum=1\n    fi\n    prod=1\n    for j in \"${arr[@]}\"; do\n      if [ \"$j\" = \"$i\" ]; then\n        continue\n      fi\n      prod=prod*$(echo \"$j\" | sed -e 's/[+-]//g')\n    done\n    result=result+$sum*$prod\n  done\n  echo \"$result\"",
    "  local i\n  local sign\n  local sum\n  local prod\n  local arr\n\n  arr=($1)\n  sum=0\n  prod=1\n  for i in \"${arr[@]}\"; do\n    sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n    sum=$(echo \"$sum\" + \"$sign\")\n    prod=$(echo \"$prod\" * \"$sign\")\n  done\n  echo \"$sum\"",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local ret\n\n    ret=0\n    for i in $1; do\n        sum=0\n        prod=1\n        for j in $i; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        ret=$(echo $ret $sum $prod)\n    done\n\n    echo $ret",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        sign=0\n        for j in \"${i}\"; do\n            if [[ \"${j}\" == \"1\" ]]; then\n                sign=1\n            elif [[ \"${j}\" == \"-\" ]]; then\n                sign=-1\n            else\n                sign=0\n            fi\n            sum=sum+sign*1\n            prod=prod*sign\n        done\n        result=result+sum*prod\n    done\n    echo \"${result}\"",
    "    local i\n    local j\n    local sum\n    local prod\n    local sign\n    local result\n\n    for i in \"${1//[ \\t\\n]+}\"\n    do\n        sum=0\n        prod=1\n        for j in \"${i//[0-9]+[^0-9]+}\"\n        do\n            sign=$(echo \"$j\" | sed -e 's/[+-]//')\n            sum=$(echo \"$sum\" + \"$sign\")\n            prod=$(echo \"$prod\" * \"$sign\")\n        done\n        result=$(echo \"$sum\" * \"$prod\")\n        echo \"$result\"\n    done",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=()\n\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n            sum=$(echo \"$sum $sign\" | bc)\n            prod=$(echo \"$prod $sign\" | bc)\n        done\n        result+=($sum * $prod)\n    done\n\n    if [ \"${#result}\" -eq \"0\" ]; then\n        result=None\n    fi\n\n    echo \"${result}\"",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $result $sum $prod $sign)\n    done\n\n    echo $result",
    "    local i\n    local sum\n    local prod\n    local sign\n    local sign_sum\n\n    sum=0\n    prod=1\n    sign_sum=0\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        prod=$(echo $i | sed -e 's/[+-]//')\n        sign_sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//')\n        sum=$(echo $i | sed -e 's/[+-]//",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        result=$(echo $result $sum $prod)\n    done\n    echo $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=()\n    for i in \"$@\"; do\n        arr=($arr $i)\n    done\n\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $sign)\n        prod=$(echo $prod $sign)\n    done\n\n    result=$(echo $sum $prod)\n    if [ -z \"$result\" ]; then\n        result=None\n    fi\n    echo $result",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local len\n    local result\n\n    result=0\n    len=0\n    for i in \"$@\"; do\n        sum=0\n        sign=1\n        for j in \"$i\"; do\n            if [[ \"$j\" == \"1\" ]]; then\n                sum=sum+1\n            elif [[ \"$j\" == \"0\" ]]; then\n                sum=sum+1\n            elif [[ \"$j\" == \"-1\" ]]; then\n                sum=sum-1\n            else\n                sum=sum+1\n            fi\n        done\n        prod=1\n        for j in \"$i\"; do\n            if [[ \"$j\" == \"1\" ]]; then\n                prod=prod*1\n            elif [[ \"$j\" == \"0\" ]]; then\n                prod=prod*1\n            elif [[ \"$j\" == \"-1\" ]]; then\n                prod=prod*-1\n            else\n                prod=prod*1\n            fi\n        done\n        if [[ \"$sum\" != \"0\" ]]; then\n            result=result+$sum*$prod\n        fi\n        len=$(( len+1 ))\n    done\n    echo \"$result\"",
    "  local i\n  local sign\n  local prod\n  local sum\n  local arr\n  local count\n\n  arr=()\n  sum=0\n  count=0\n\n  while read -r i\n  do\n    arr=($arr $(($i 2)))\n    sum=$sum + $(($i 1))\n    count=$count + 1\n  done < $1\n\n  if [ -z \"$arr\" ]; then\n    return None\n  fi\n\n  for i in \"$arr\"; do\n    sign=$(($i 1))\n    prod=$(($i 2))\n    sum=$sum * prod\n    count=$count * prod\n  done\n\n  return $sum * $count",
    "    local i\n    local sign\n    local sum\n    local prod\n    local arr\n\n    arr=()\n    while read -r i\n    do\n        arr=($arr $(($i 2)))\n    done < $1\n    arr=($arr $(($i 1)))\n    arr=($arr $(($i -1)))\n    arr=($arr $(($i 0)))\n    sum=0\n    for i in \"${arr[@]}\"; do\n        sign=$(($i 2))\n        if [ \"$sign\" = \"1\" ]; then\n            sum=$(($sum + 1))\n        elif [ \"$sign\" = \"-1\" ]; then\n            sum=$(($sum - 1))\n        else\n            sum=$(($sum + 1))\n        fi\n    done\n    prod=$(($sum * $(sum - 1)))\n    if [ \"$prod\" = \"0\" ]; then\n        prod=None\n    fi\n    echo \"$prod\"",
    "    local i\n    local sign\n    local sum\n    local prod\n    local arr\n\n    arr=($1)\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$sum $sign\" | bc)\n        prod=$(echo \"$prod $sign\" | bc)\n    done\n\n    if [ \"${arr[@]}\" = \"\" ]; then\n        return None\n    fi\n\n    return \"$sum * $prod\"",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i}\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        result=$(echo $result $sum $prod)\n    done\n    echo $result",
    "    local i\n    local j\n    local k\n    local arr\n    local sum\n    local prod\n    local sign\n    local ret\n\n    arr=()\n    sum=0\n    prod=1\n    sign=1\n    ret=None\n\n    for i in \"${1}\"; do\n        arr=($arr $i)\n        sum=0\n        prod=1\n        for j in \"${arr[@]}\"; do\n            k=${j//[+-]}\n            sum=sum+${k}\n            prod=prod*${k}\n        done\n        sum=sum*sign\n        sign=sign*(-1)\n        sum=sum*prod\n        prod=prod*(-1)\n    done\n\n    if [ -n \"${arr[@]}\" ]; then\n        ret=${sum//[+-]}\n    fi\n\n    return $ret",
    "    local i\n    local j\n    local sum\n    local prod\n    local sign\n    local arr\n    local len\n    local ret\n\n    arr=()\n    sum=0\n    prod=1\n    sign=1\n    len=0\n    ret=None\n\n    for i in \"$@\"; do\n        if [[ $i == \" \" ]]; then\n            continue\n        fi\n\n        arr[len]=$i\n        len=len+1\n    done\n\n    for i in \"${arr[@]}\"; do\n        sum=sum+$i\n        prod=prod*$sign\n        sign=$sign*(-1)\n    done\n\n    if [[ len == 0 ]]; then\n        return None\n    fi\n\n    return \"$sum*$prod\"",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$result $sum*$prod $sign\" | bc)\n    done\n    echo \"$result\"",
    "  local i\n  local j\n  local sign\n  local sum\n  local prod\n  local result\n  local arr\n\n  arr=($1)\n  result=0\n  for i in \"${arr[@]}\"; do\n    sum=0\n    prod=1\n    for j in \"${i}\"; do\n      sign=$(echo \"$j\" | sed -e 's/[+-]//g')\n      sum=$(echo \"$sum $sign\" | bc)\n      prod=$(echo \"$prod $sign\" | bc)\n    done\n    result=$(echo \"$result $sum $prod\" | bc)\n  done\n  echo \"$result\"",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local arr\n    local len\n    local result\n\n    arr=()\n    len=0\n    while [ $# -gt 0 ]; do\n        i=${1%\\\"}\n        arr=($arr $i)\n        len=$((len+1))\n        shift\n    done\n\n    if [ $len -eq 0 ]; then\n        return None\n    fi\n\n    sum=0\n    for i in $arr; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $sign $prod)\n    done\n\n    result=$(echo $sum | sed -e 's/[+-]//g')\n    return $result",
    "    local i\n    local j\n    local sign\n    local product\n    local sum\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$1\n        product=$2\n        sum=$3\n        result=$(($result * $product))\n        if [ \"$sign\" = \"1\" ]; then\n            result=$(($result + $sum))\n        fi\n        if [ \"$sign\" = \"0\" ]; then\n            result=$(($result - $sum))\n        fi\n        shift 2\n    done\n    echo $result",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_product\n    local sign_product_sum\n    local sign_product_prod\n    local sign_product_product\n    local sign_product_product_sum\n    local sign_product_product_prod\n    local sign_product_product_product\n    local sign_product_product_product_sum\n    local sign_product_product_product_prod\n    local sign_product_product_product_product\n    local sign_product_product_product_product_sum\n    local sign_product_product_product_product_prod\n    local sign_product_product_product_product_product\n    local sign_product_product_product_product_product_sum\n    local sign_product_product_product_product_product_prod\n    local sign_product_product_product_product_product_product\n    local sign_product_product_product_product_product_product_sum\n    local sign_product_product_product_product_product_product_prod\n    local sign_product_product_product_product_product_product_product\n    local sign_product_product_product_product_product_product_product_sum\n    local sign_product_product_product_product_product_product_product_prod\n    local sign_product_product_product_product_product_product_product_product\n    local sign_product_product_product_product_product_product_product_product_sum\n    local sign_product_product_product_product_product_product_product_product_prod\n    local sign_product_product_product_product_product_product_product_product_product\n    local sign_product_product_product_product_product_product_product_product_product_sum\n    local sign_product_product_product_product_product_product_product_product_product_prod\n    local sign_product_product_product_product_product_product_product_product_product_product\n    local sign_product_product_product_product_product_product_product_product_product_product_sum\n    local",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_sum_prod_sum\n    local sign_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum",
    "    local i\n    local result\n    local sign\n    local magnitude\n    local product\n    local product_sign\n    local product_sign_magnitude\n\n    for i in \"$@\"; do\n        sign=$(echo $i | cut -d \" \" -f 1)\n        magnitude=$(echo $i | cut -d \" \" -f 2)\n        product_sign_magnitude=$(echo $i | cut -d \" \" -f 3)\n        product_sign=$(echo $i | cut -d \" \" -f 4)\n        product=$(echo $i | cut -d \" \" -f 5)\n        if [ \"$product_sign_magnitude\" == \"1\" ]; then\n            product_sign_magnitude=\"1\"\n        else\n            product_sign_magnitude=\"0\"\n        fi\n        if [ \"$product_sign\" == \"1\" ]; then\n            product_sign=\"1\"\n        else\n            product_sign=\"0\"\n        fi\n        product_sign_magnitude=$(echo $product_sign_magnitude | cut -d \" \" -f 1)\n        product_sign=$(echo $product_sign | cut -d \" \" -f 1)\n        product=$(echo $product | cut -d \" \" -f 1)\n        if [ \"$product_sign_magnitude\" == \"1\" ]; then\n            product_sign_magnitude=\"1\"\n        else\n            product_sign_magnitude=\"0\"\n        fi\n        if [ \"$product_sign\" == \"1\" ]; then\n            product_sign=\"1\"\n        else\n            product_sign=\"0\"\n        fi\n        product_sign_magnitude=$(echo $product_sign_magnitude | cut -d \" \" -f 1)\n        product_sign=$(echo $product_sign | cut -d \" \" -f 1)\n        product=$(echo $product | cut -d \" \" -f 1)\n        if [ \"$product_sign_magnitude\" == \"1\" ]; then\n            product_sign_magnitude=\"1\"\n        else\n            product_sign_magnitude=\"0\"\n        fi\n        if [ \"$product_",
    "    local i\n    local sign\n    local prod\n    local sum\n    local sum_sign\n    local sum_sign_prod\n    local sum_sign_prod_sign\n\n    sum_sign_prod=1\n    sum_sign=1\n    sum=0\n    for i in \"$@\"; do\n        sign=$(echo $i | sed -e \"s/[+-]//g\")\n        prod=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign_prod_sign=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign_prod=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign=$(echo $i | sed -e \"s/[+-]//g\")\n        sum=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign_prod_sign=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign_prod=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign=$(echo $i | sed -e \"s/[+-]//g\")\n        sum=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign_prod_sign=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign_prod=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign=$(echo $i | sed -e \"s/[+-]//g\")\n        sum=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign_prod_sign=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign_prod=$(echo $i | sed -e \"s/[+-]//g\")\n        sum_sign=$(echo $i | sed -e \"s/[+-]//g\")\n        sum=$(echo $i |",
    "    local i\n    local result\n    local sign\n    local num\n    local sign_sum\n    local sign_product\n\n    sign_sum=0\n    sign_product=1\n    for i in $1; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        num=$(echo $i | sed -e 's/[+-]//g')\n        sign_sum=$(echo $sign_sum $sign)\n        sign_product=$(echo $sign_product $num)\n    done\n\n    result=$(echo $sign_product $sign_sum)\n    return $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo \"${j}\" | sed -e 's/[+-]//g')\n            sum=$(echo \"${sum}\" + \"${sign}\")\n            prod=$(echo \"${prod}\" * \"${sign}\")\n        done\n        result=$(echo \"${result}\" + \"${sum}\")\n    done\n    echo \"${result}\"",
    "  local i\n  local j\n  local sign\n  local sum\n  local prod\n  local result\n  local arr\n\n  arr=()\n  for i in \"$@\"; do\n    arr=($arr $i)\n  done\n\n  if [ -z \"$1\" ]; then\n    return None\n  fi\n\n  sum=0\n  prod=1\n  for i in \"${arr[@]}\"; do\n    sign=$(echo $i | sed -e 's/[+-]//g')\n    sum=$(echo $sum $sign)\n    prod=$(echo $prod $sign)\n  done\n\n  result=$(echo $sum $prod)\n  return $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=()\n    for i in \"$@\"; do\n        arr=($arr $i)\n    done\n\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $sign)\n        prod=$(echo $prod $sign)\n    done\n\n    result=$(echo $sum $prod)\n    return $result",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_sum_prod_sum\n    local sign_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    sum=0\n    prod=1\n    for i in $arr; do\n        sign=$1\n        sum=$((sum + $i * $sign))\n        prod=$((prod * $sign))\n    done\n    result=$(($sum * prod))\n    return $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo \"${j}\" | sed -e 's/[+-]//g')\n            sum=$(echo \"${sum}\" + \"${sign}\")\n            prod=$(echo \"${prod}\" * \"${sign}\")\n        done\n        result=$(echo \"${result}\" + \"${sum}\")\n    done\n    echo \"${result}\"",
    "    local i\n    local result\n    local sign\n    local sign_sum\n    local sign_product\n    local sign_product_sum\n    local sign_product_product\n    local sign_product_product_sum\n    local sign_product_product_product\n    local sign_product_product_product_sum\n    local sign_product_product_product_product\n    local sign_product_product_product_product_sum\n\n    for i in \"$@\"; do\n        sign_sum=0\n        sign_product=1\n        sign_product_sum=1\n        sign_product_product=1\n        sign_product_product_sum=1\n        sign_product_product_product=1\n        sign_product_product_product_sum=1\n        sign_product_product_product_product=1\n        sign_product_product_product_product_sum=1\n\n        if [[ $i = \"1\" ]]; then\n            sign_sum=1\n        elif [[ $i = \"0\" ]]; then\n            sign_sum=0\n        elif [[ $i = \"-1\" ]]; then\n            sign_sum=-1\n        elif [[ $i = \"2\" ]]; then\n            sign_product=2\n        elif [[ $i = \"-2\" ]]; then\n            sign_product=-2\n        elif [[ $i = \"4\" ]]; then\n            sign_product_product=4\n        elif [[ $i = \"-4\" ]]; then\n            sign_product_product=-4\n        elif [[ $i = \"8\" ]]; then\n            sign_product_product_product=8\n        elif [[ $i = \"-8\" ]]; then\n            sign_product_product_product=-8\n        elif [[ $i = \"16\" ]]; then\n            sign_product_product_product_product=16\n        elif [[ $i = \"-16\" ]]; then\n            sign_product_product_product_product=-16\n        elif [[ $i = \"32\" ]]; then\n            sign_product_product_product_product_product=32\n        elif [[ $i = \"-32\" ]]; then\n            sign_product_product_product_product_product=-",
    "    local i\n    local j\n    local k\n    local result\n    local sign\n    local sum\n    local product\n    local number\n\n    result=0\n    for i in \"$@\"; do\n        sign=$1\n        number=$2\n        sum=0\n        product=1\n        for j in $(seq 1 \"${#number}\" 2); do\n            k=${number:0:j}\n            sum=$(($sum + $(($k * $sign))))\n            product=$(($product * $sign))\n        done\n        result=$(($result + $(sum * product)))\n    done\n    echo $result",
    "    local i\n    local sign\n    local sum\n    local prod\n    local arr\n    arr=$1\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$sum\" + \"$sign\")\n        prod=$(echo \"$prod\" * \"$sign\")\n    done\n    echo \"$sum\"",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$i\" | sed -e",
    "    local i\n    local sign\n    local sum\n    local prod\n    local ret\n    local arr\n\n    arr=$1\n    ret=0\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g') * sign\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign\n        ret=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g') * sign * sign * sign\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g') * sign",
    "    local i\n    local j\n    local sign\n    local prod\n    local sum\n    local sum_sign\n    local sum_sign_prod\n    local sum_sign_prod_sign\n    local sum_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign\n    local sum_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_prod_sign_",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=($1)\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        prod=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$result\" + \"$sum\" * \"$prod\" * \"$sign\")\n    done\n    echo \"$result\"",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n    local array\n\n    array=()\n    for i in \"$1\"; do\n        array[$i]=1\n    done\n\n    sum=0\n    for i in \"${array[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        product=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $product | bc)\n    done\n\n    result=$(echo $sum | bc)\n    if [ -z \"$result\" ]; then\n        result=None\n    fi\n    echo $result",
    "    local i\n    local sum\n    local sign\n    local prod\n    local arr\n\n    arr=$1\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$sum\" + \"$sign\")\n        prod=$(echo \"$prod\" * \"$sign\")\n    done\n    echo \"$sum\"",
    "    local i\n    local sign\n    local sum\n    local prod\n    local arr\n\n    arr=($1)\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$sum $sign\" | bc)\n        prod=$(echo \"$prod $sign\" | bc)\n    done\n    echo \"$sum $prod\"",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sum=0\n        prod=1\n        for j in \"${i[@]}\"; do\n            sign=$(echo $j | sed -e 's/[+-]//g')\n            sum=$(echo $sum $sign)\n            prod=$(echo $prod $sign)\n        done\n        result=$(echo $result $sum)\n        result=$(echo $result $prod)\n    done\n    echo $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n    local len\n    local start\n    local end\n\n    arr=()\n    start=1\n    end=1\n    while [[ $start -le $# ]]; do\n        i=$start\n        while [[ $i -ge $# ]]; do\n            sum=0\n            while [[ $i -ge $# ]]; do\n                sign=$1\n                i=$i - 1\n                sum=sum + $sign * $arr[$i]\n            done\n            arr=($arr[$i] $sum)\n            i=$i - 1\n        done\n        start=$start + 1\n    done\n\n    len=${#arr[@]}\n    if [[ $len -eq 0 ]]; then\n        return None\n    fi\n\n    prod=1\n    for i in ${arr[@]}; do\n        prod=prod * $i\n    done\n\n    result=0\n    for i in ${arr[@]}; do\n        result=result + $i\n    done\n\n    return $prod * $result",
    "  local i\n  local j\n  local k\n  local sum\n  local prod\n  local sign\n  local sign_sum\n  local sign_prod\n  local sign_sum_prod\n  local sign_prod_sum\n  local sign_prod_sum_prod\n  local sign_prod_sum_prod_sum\n  local sign_prod_sum_prod_sum_prod\n  local sign_prod_sum_prod_sum_prod_sum\n  local sign_prod_sum_prod_sum_prod_sum_prod\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum\n  local sign_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod_sum_prod\n  local sign_prod_sum_prod_sum_prod_sum",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local sign_sum\n    local sign_prod\n    local sign_sum_prod\n    local sign_sum_prod_sum\n    local sign_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod\n    local sign_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum_sum_prod_sum\n    local sign_sum_prod_sum",
    "    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n",
    "  local i\n  local sign\n  local sum\n  local prod\n  local arr\n\n  arr=($1)\n  sum=0\n  prod=1\n  for i in \"${arr[@]}\"; do\n    sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n    sum=$(echo \"$sum\" + \"$sign\")\n    prod=$(echo \"$prod\" * \"$sign\")\n  done\n  echo \"$sum\"",
    "    local i\n    local sum\n    local sign\n    local product\n    local result\n    for i in \"${1//[ \\t]+}\"\n    do\n        sum=0\n        sign=1\n        product=1\n        for j in \"${i//[0-9]+}\"\n        do\n            sum=sum*$j\n            product=product*$j\n            sign=$((sign*$j))\n        done\n        result=$(printf \"%s%s\" \"${sum}\" \"${product}\" \"${sign}\")\n        if [ \"${result}\" = \"None\" ]; then\n            return\n        fi\n    done",
    "    local i\n    local result\n    local sign\n    local product\n    local sum\n\n    result=0\n    for i in \"$@\"; do\n        sign=$(echo \"$i\" | sed -e 's/[+-]//g')\n        product=$(echo \"$i\" | sed -e 's/[+-]//g')\n        sum=$(echo \"$i\" | sed -e 's/[+-]//g')\n        result=$(echo \"$result\" + \"$product\"*\"$sign\")\n    done\n    echo \"$result\"",
    "    local i\n    local sign\n    local sum\n    local prod\n    local result\n    local arr\n\n    arr=$1\n    result=0\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $i | sed -e 's/[+-]//g')\n        prod=$(echo $i | sed -e 's/[+-]//g')\n        result=$(echo $result $sum * $prod $sign)\n    done\n    echo $result",
    "    local i\n    local j\n    local sign\n    local sum\n    local prod\n    local arr\n\n    arr=$1\n    sum=0\n    prod=1\n    for i in \"${arr[@]}\"; do\n        sign=$(echo $i | sed -e 's/[+-]//g')\n        sum=$(echo $sum $sign)\n        prod=$(echo $prod $sign)\n    done\n    sum=$(echo $sum | sed -e 's/[+-]//g')\n    if [ \"$sum\" = \"None\" ]; then\n        return\n    fi\n    printf \"%s\" \"$sum\"",
    "    local i\n    local j\n    local k\n    local sum\n    local prod\n    local sign\n    local arr\n    local result\n\n    arr=()\n    sum=0\n    prod=1\n    sign=0\n    for i in \"$@\"; do\n        if [[ $i = \"1\" ]]; then\n            sum=sum+1\n        elif [[ $i = \"0\" ]]; then\n            sum=sum-1\n        elif [[ $i = \"-1\" ]]; then\n            sum=sum-1\n        else\n            arr=($arr $i)\n        fi\n        prod=prod*$sign\n        sign=$sign*$i\n    done\n    if [[ $# -eq 0 ]]; then\n        result=None\n    else\n        result=sum*prod\n    fi\n    return $result"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
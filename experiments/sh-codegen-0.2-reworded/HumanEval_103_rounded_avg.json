{
  "name": "HumanEval_103_rounded_avg",
  "language": "sh",
  "prompt": "#!/bin/bash\n# You are given two positive integers n and m, and your task is to compute the\n# average of the integers from n through m (including n and m). \n# Round the answer to the nearest integer and convert that to binary.\n# If n is greater than m, return -1.\n# Example:\n# >>> $(rounded_avg \"1\" \"5\")\n# \"0b11\"\n# >>> $(rounded_avg \"7\" \"5\")\n# \"-1\"\n# >>> $(rounded_avg \"10\" \"20\")\n# \"0b1111\"\n# >>> $(rounded_avg \"20\" \"33\")\n# \"0b11010\"\n#\n# $1 is an integer\n# $2 is an integer\nrounded_avg() {\n",
  "tests": "}\n\ncandidate() {\n    rounded_avg \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"5\") = \"0b11\" ]]\n    [[ $(candidate \"7\" \"13\") = \"0b1010\" ]]\n    [[ $(candidate \"964\" \"977\") = \"0b1111001010\" ]]\n    [[ $(candidate \"996\" \"997\") = \"0b1111100100\" ]]\n    [[ $(candidate \"560\" \"851\") = \"0b1011000010\" ]]\n    [[ $(candidate \"185\" \"546\") = \"0b101101110\" ]]\n    [[ $(candidate \"362\" \"496\") = \"0b110101101\" ]]\n    [[ $(candidate \"350\" \"902\") = \"0b1001110010\" ]]\n    [[ $(candidate \"197\" \"233\") = \"0b11010111\" ]]\n    [[ $(candidate \"7\" \"5\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"1\") = \"-1\" ]]\n    [[ $(candidate \"5\" \"5\") = \"0b101\" ]]\n}\n\nrun_test",
  "completions": [
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc -l)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=-1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=`echo $sum | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$avg + $i\n    done\n    avg=$avg / $((m-n+1))\n    avg=$avg + 0.5\n    avg=$avg * 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg=$avg / 2\n    avg=$avg - $avg\n    avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l | tr -d '\\n')\n    done\n    avg=$(echo $sum | bc -l | tr -d '\\n')\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(echo $avg | sed -e 's/[0-9]*//g')\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [[ $avg -gt 0 ]]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m)/2)\n    if [ $sum -lt $n ]; then\n        return $((n+m)/2)\n    else\n        return $((n+m)/2)\n    fi",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(echo $avg | sed -e 's/[0-9]*//g')\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=`echo $n | sed 's/^[0-9]+//' | sed 's/[^0-9]//' | sed 's/^$//' | sed 's/^0//' | sed 's/^0$//' | sed 's/^0b//' | sed 's/^0b0//' | sed 's/^0b0b//' | sed 's/^0b0b0b//' | sed 's/^0b0b0b0b//' | sed 's/^0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b0b0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b//' | sed 's/^0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b//' | sed 's/^0b0",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $n -gt $m ]; then\n        avg=\"-1\"\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        echo -1\n        return\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l | sed -e 's/^-//')\n    done\n    avg=$(echo $sum | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc -l | sed -e 's/^-//')\n    avg=$(echo $avg | bc",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=-1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [[ $n -gt $m ]]; then\n        echo -1\n    else\n        avg=$((n+m)/2)\n        echo $avg\n    fi",
    "    n=$1\n    m=$2\n    if [[ $n -lt $m ]]; then\n        echo -1\n    else\n        avg=$((n+m)/2)\n        avg=`echo $avg | bc`\n        echo $avg\n    fi",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(($sum + $i))\n    done\n    avg=$(($sum / $((n-m+1))))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    ",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -lt 0 ]; then\n        avg=$avg - 1\n    fi\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc -l)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=`echo $n-$m | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -d ' ' | bc`\n    avg=`echo $avg | tr -",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -lt 0 ]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m)/2)\n    if [ $sum -lt $n ]; then\n        return $n\n    fi\n    if [ $sum -gt $m ]; then\n        return $m\n    fi\n    return $sum",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        return -1\n    fi\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $n -gt $m ]; then\n        avg=-1\n    fi\n    avg=`printf \"%b\" $avg`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=0\n    fi\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        return -1\n    fi\n    avg_bin=$(printf '%b' $avg)\n    if [ $avg -gt $m ]; then\n        return -1\n    fi\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(echo $avg | sed -e 's/[^0-9]//g')\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum-n-m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $n -gt $m ]; then\n        avg=-1\n    fi\n    avg_bin=$(echo $avg | sed -e 's/[^0-9]//g')\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        echo -1\n    else\n        avg=$((n+m)/2)\n        avg=`echo $avg | bc`\n        avg=`echo $avg | tr -d ' '`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '1'`\n        avg=`echo $avg | tr -d '2'`\n        avg=`echo $avg | tr -d '3'`\n        avg=`echo $avg | tr -d '4'`\n        avg=`echo $avg | tr -d '5'`\n        avg=`echo $avg | tr -d '6'`\n        avg=`echo $avg | tr -d '7'`\n        avg=`echo $avg | tr -d '8'`\n        avg=`echo $avg | tr -d '9'`\n        avg=`echo $avg | tr -d '.'`\n        avg=`echo $avg | tr -d '-'`\n        avg=`echo $avg | tr -d '+'`\n        avg=`echo $avg | tr -d ' '`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '1'`\n        avg=`echo $avg | tr -d '2'`\n        avg=`echo $avg | tr -d '3'`\n        avg=`echo $avg | tr -d '4'`\n        avg=`echo $avg | tr -d '5'`\n        avg=`echo $avg | tr -d '6'`\n        avg=`echo $avg | tr -d '7'`\n        avg=`echo $avg | tr -d '8'`\n        avg=`echo $avg | tr -d '9'`\n        avg=`echo $avg | tr",
    "    n=$1\n    m=$2\n    if [[ $n -gt $m ]]; then\n        echo -1\n        return\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [[ $n -lt $m ]]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l | sed -e 's/^-//')\n    done\n    avg=`echo $sum | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    avg=`echo $avg | bc -l | sed -e 's/^-",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$avg + $i\n    done\n    avg=$avg/2\n    avg=$avg + 0.5\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n    avg=$avg + 0\n",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(echo $avg | bc)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(($sum + $i))\n    done\n    return $((sum+0.5)/$m)",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [[ $avg -gt 0 ]]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc -l)\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l | awk '{print $1}')\n    done\n    avg=$(echo $sum | bc -l | awk '{print $1}')\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((av",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc -l)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [[ $avg -lt 0 ]]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        return -1\n    fi\n    return $avg",
    "    n=$1\n    m=$2\n    if [[ $n -lt $m ]]; then\n        echo -1\n    else\n        avg=$((n+m)/2)\n        echo $avg\n    fi",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum-n-m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l | sed -e 's/^-//')\n    done\n    avg=$(echo $sum | bc -l | sed -e 's/^-//')\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        return -1\n    fi\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    avg_bin=$(echo $avg | bc)\n    if [ $avg_bin == \"0\" ]; then\n        avg_bin=\"0b0\"\n    fi\n    if [ $avg_bin == \"1\" ]; then\n        avg_bin=\"0b1\"\n    fi\n    if [ $avg_bin == \"2\" ]; then\n        avg_bin=\"0b10\"\n    fi\n    if [ $avg_bin == \"3\" ]; then\n        avg_bin=\"0b11\"\n    fi\n    if [ $avg_bin == \"4\" ]; then\n        avg_bin=\"0b100\"\n    fi\n    if [ $avg_bin == \"5\" ]; then\n        avg_bin=\"0b101\"\n    fi\n    if [ $avg_bin == \"6\" ]; then\n        avg_bin=\"0b110\"\n    fi\n    if [ $avg_bin == \"7\" ]; then\n        avg_bin=\"0b111\"\n    fi\n    if [ $avg_bin == \"8\" ]; then\n        avg_bin=\"0b1000\"\n    fi\n    if [ $avg_bin == \"9\" ]; then\n        avg_bin=\"0b1001\"\n    fi\n    if [ $avg_bin == \"10\" ]; then\n        avg_bin=\"0b1010\"\n    fi\n    if [ $avg_bin == \"11\" ]; then\n        avg_bin=\"0b1011\"\n    fi\n    if [ $avg_bin == \"12\" ]; then\n        avg_bin=\"0b1100\"\n    fi\n    if [ $avg_bin == \"13\" ]; then\n        avg_bin=\"0b1101\"\n    fi\n    if [ $avg_bin == \"14\" ]; then\n        avg_bin=\"0b1110\"\n    fi\n    if [ $avg_bin == \"15\" ]; then\n        avg_bin=\"0b1111\"\n    fi\n    if [ $avg_",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        return -1\n    fi\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [[ $n -gt $m ]]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        echo -1\n    else\n        avg=$((n+m)/2)\n        avg=`echo $avg | bc`\n        echo $avg\n    fi",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m)/2)\n    return $((sum/2))",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return \"$((2*avg))\"",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((av",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l | sed -e 's/^-//')\n    done\n    avg=$(echo $sum | bc -l | sed -e 's/^-//')\n    avg=`echo $avg | bc -l | sed -e 's/^-//'`\n    return $avg",
    "    n=$1\n    m=$2\n    if [[ $n -lt $m ]]; then\n        echo -1\n    else\n        avg=$((n+m)/2)\n        avg=`echo $avg | bc`\n        echo $avg\n    fi",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        return -1\n    fi\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -lt 0 ]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        echo -1\n    else\n        avg=$((n+m)/2)\n        avg=`echo $avg | bc`\n        avg=`echo $avg | tr '[a-z]' '[A-Z]'`\n        avg=`echo $avg | tr '[A-Z]' '[a-z]'`\n        avg=`echo $avg | tr '[0-9]' '[A-Z]'`\n        avg=`echo $avg | tr '[0-9]' '[a-z]'`\n        avg=`echo $avg | tr '[A-Z]' '[0-9]'`\n        avg=`echo $avg | tr '[a-z]' '[0-9]'`\n        avg=`echo $avg | tr '[0-9]' '[A-Z]'`\n        avg=`echo $avg | tr '[0-9]' '[a-z]'`\n        avg=`echo $avg | tr '[A-Z]' '[0-9]'`\n        avg=`echo $avg | tr '[a-z]' '[0-9]'`\n        avg=`echo $avg | tr '[0-9]' '[A-Z]'`\n        avg=`echo $avg | tr '[0-9]' '[a-z]'`\n        avg=`echo $avg | tr '[A-Z]' '[0-9]'`\n        avg=`echo $avg | tr '[a-z]' '[0-9]'`\n        avg=`echo $avg | tr '[0-9]' '[A-Z]'`\n        avg=`echo $avg | tr '[0-9]' '[a-z]'`\n        avg=`echo $avg | tr '[A-Z]' '[0-9]'`\n        avg=`echo $avg | tr '[a-z]' '[0-9]'`\n        avg=`echo $avg | tr '[0-9]' '[A-Z]'`\n        avg=`echo $avg | tr '[0-9]' '[a-z",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(echo $avg | bc)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        echo -1\n    else\n        avg=$((n+m)/2)\n        avg=`echo $avg | bc`\n        avg=`echo $avg | tr -d ' '`\n        avg=`echo $avg | tr -d '.'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d 'b'`\n        avg=`echo $avg | tr -d '1'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg | tr -d '0'`\n        avg=`echo $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [[ $avg -gt 0 ]]; then\n        avg=$avg -1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        return -1\n    fi\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=`echo $sum | bc -l`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg+0.5)/2)\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $n -gt $m ]; then\n        avg=\"-1\"\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg+0.5)/2)\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$((avg/2)*2)\n    avg=$",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    printf \"%s\" $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((avg/2))\n    avg=$((avg*2))\n    avg=$((av",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(($sum + $i))\n    done\n    avg=$(($sum / $m))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($avg / 2))\n    avg=$(($",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return $avg",
    "    # Your code here\n    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(($sum + $i))\n    done\n    avg=$(($sum / $m))\n    return $(printf \"0b%d\" $avg)",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(echo $avg | sed -e 's/[0-9]*//g')\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [[ $n -gt $m ]]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return \"$((2*avg)/$(2^$((n-m+1))))\"",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=\"-1\"\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [[ $avg -gt 0 ]]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=\"-1\"\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=`echo $n-$m | bc`\n    avg=`echo $avg | bc`\n    avg=`echo $avg | tr -d ' '`\n    avg=`echo $avg | tr -d '.'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '1'`\n    avg=`echo $avg | tr -d '2'`\n    avg=`echo $avg | tr -d '3'`\n    avg=`echo $avg | tr -d '4'`\n    avg=`echo $avg | tr -d '5'`\n    avg=`echo $avg | tr -d '6'`\n    avg=`echo $avg | tr -d '7'`\n    avg=`echo $avg | tr -d '8'`\n    avg=`echo $avg | tr -d '9'`\n    avg=`echo $avg | tr -d ' '`\n    avg=`echo $avg | tr -d '.'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '1'`\n    avg=`echo $avg | tr -d '2'`\n    avg=`echo $avg | tr -d '3'`\n    avg=`echo $avg | tr -d '4'`\n    avg=`echo $avg | tr -d '5'`\n    avg=`echo $avg | tr -d '6'`\n    avg=`echo $avg | tr -d '7'`\n    avg=`echo $avg | tr -d '8'`\n    avg=`echo $avg | tr -d '9'`\n    avg=`echo $avg | tr -d ' '`\n    avg=`echo $avg |",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=`echo $n-$m | bc`\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=\"-1\"\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        return -1\n    fi\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=-1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [[ $avg -gt 0 ]]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [[ $avg -lt 0 ]]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=-1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc -l)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $n -gt $m ]; then\n        avg=\"-1\"\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    printf \"%s\" $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l | sed -e 's/^-//')\n    done\n    avg=$(echo $sum | bc -l | sed -e 's/^-//')\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=`echo $sum | bc -l`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=-1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    printf \"%s\" $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        echo -1\n        return\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    avg=`echo $avg | tr -d '.'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d 'b'`\n    avg=`echo $avg | tr -d '1'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`echo $avg | tr -d '0'`\n    avg=`",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    if [[ $n -gt $m ]]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l | sed 's/[^01]*//')\n    done\n    avg=$(echo $sum | bc -l | sed 's/[^01]*//')\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=\"-1\"\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $n -gt $m ]; then\n        avg=-1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=$avg - 1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    if [ $n -lt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l)\n    done\n    avg=`echo $sum | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`\n    avg=`echo $avg | bc -l`",
    "    # your code here\n    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(($sum + $i))\n    done\n    return $((sum/2))",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return \"$avg\"",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc -l | sed -e 's/^-//')\n    done\n    avg=$(echo $sum | bc -l | sed -e 's/^-//')\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(echo $avg | sed -e 's/[0-9]*//g')\n    return $avg_bin",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=$((n+m))\n    avg=$((sum/2))\n    return $avg",
    "    n=$1\n    m=$2\n    if [[ $n -gt $m ]]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=$(echo $sum | bc)\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5)/2)\n    avg=$((avg+0.5",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=$((n+m)/2)\n    if [ $avg -lt $n ]; then\n        avg=$n\n    fi\n    if [ $avg -gt $m ]; then\n        avg=$m\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    sum=0\n    for i in $(seq $n $m); do\n        sum=$(echo $i | bc)\n    done\n    avg=`echo $sum | bc -l`\n    return $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg=`echo $avg | bc`\n    return $avg",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [ $avg -gt 0 ]; then\n        avg=-1\n    fi\n    echo $avg",
    "    n=$1\n    m=$2\n    if [ $n -gt $m ]; then\n        return -1\n    fi\n    avg=$((n+m)/2)\n    avg_bin=$(printf '%b' $avg)\n    return $avg_bin",
    "    n=$1\n    m=$2\n    avg=0\n    for i in $(seq $n $m); do\n        avg=$(echo $avg + $i | bc)\n    done\n    avg=$(echo $avg | bc)\n    if [[ $avg -gt 0 ]]; then\n        avg=$avg - 1\n    fi\n    echo $avg"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
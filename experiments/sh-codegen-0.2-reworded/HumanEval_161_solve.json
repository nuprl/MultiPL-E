{
  "name": "HumanEval_161_solve",
  "language": "sh",
  "prompt": "#!/bin/bash\n# You are given a string s.\n# if s[i] is a letter, reverse its case from lower to upper or vise versa, \n# otherwise keep it as it is.\n# If the string contains no letters, reverse the string.\n# The function should return the resulted string.\n# Examples\n# >>> $(solve \"1234\")\n# \"4321\"\n# >>> $(solve \"ab\")\n# \"AB\"\n# >>> $(solve \"#a@C\")\n# \"#A@c\"\n#\n# $1 is a string\nsolve() {\n",
  "tests": "}\n\ncandidate() {\n    solve \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AsDf\") = \"aSdF\" ]]\n    [[ $(candidate \"1234\") = \"4321\" ]]\n    [[ $(candidate \"ab\") = \"AB\" ]]\n    [[ $(candidate \"#a@C\") = \"#A@c\" ]]\n    [[ $(candidate \"#AsdfW^45\") = \"#aSDFw^45\" ]]\n    [[ $(candidate \"#6@2\") = \"2@6#\" ]]\n    [[ $(candidate \"#\\$a^D\") = \"#\\$A^d\" ]]\n    [[ $(candidate \"#ccc\") = \"#CCC\" ]]\n}\n\nrun_test",
  "completions": [
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    string=$1\n    if [ \"$1\" == \"-l\" ]; then\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n    fi\n    if [ \"$1\" == \"-u\" ]; then\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n    fi\n    if [ \"$1\" == \"-d\" ]; then\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n    fi\n    if [ \"$1\" == \"-r\" ]; then\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n    fi\n    if [ \"$1\" == \"-n\" ]; then\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n    fi\n    if [ \"$1\" == \"-c\" ]; then\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n    fi\n    if [ \"$1\" == \"-a\" ]; then\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n    fi\n    if [ \"$1\" == \"-A\" ]; then\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n    fi\n    if [ \"$1\" == \"-l\" ]; then\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n    fi\n    if [ \"$1\" == \"-u\" ]; then\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n    fi\n    if [ \"$1\" == \"-d\" ]; then\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n    fi\n    if [ \"$1\" == \"-r\" ]; then\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n    fi\n    if [ \"$1\" == \"-n\" ]; then\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n    fi\n    if [ \"$1\" == \"-c\" ]; then\n        string=`echo $string | tr \"[",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--help\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--version\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--verbose\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--version\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--verbose\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--help\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--version\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--verbose\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--version\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--verbose\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    i=0\n    while [[ $i < $# - 1 ]]; do\n        if [[ $1[$i] == '#' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n        fi\n        if [[ $1[$i] == '@' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n        fi\n        if [[ $1[$i] == '_' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n        fi\n        if [[ $1[$i] == '-' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n        fi\n        if [[ $1[$i] == '.' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n        fi\n        if [[ $1[$i] == ' ' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n        fi\n        if [[ $1[$i] == '\\t' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n        fi\n        if [[ $1[$i] == '\\n' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n        fi\n        if [[ $1[$i] == '\\r' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n        fi\n        if [[ $1[$i] == '\\v' ]]; then\n            echo $1[$i]\n            i=i+1\n            continue\n",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    \n    string=$1\n    \n    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    \n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    \n    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    \n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    \n    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    \n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    \n    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    \n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0",
    "    case $1 in\n        [a-z]*)\n            echo $1\n            case $1 in\n                [A-Z]*)\n                    echo $1\n                ;;\n            esac\n            ;;\n        [0-9]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        [a-z]*)\n            echo \"$1\"\n            ;;\n        [A-Z]*)\n            echo \"$1\"\n            ;;\n        *)\n            echo \"$1\"\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    string=$1\n    \n    if [[ $string == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    i=0\n    while [[ $i < $# - 1 ]]; do\n        if [[ $string[$i] == '#' ]]; then\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    case $1 in\n        [a-zA-Z]*)\n            echo $1\n            ;;\n        [#]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    # $2 is a string\n    string=$2\n    # $3 is a string\n    i=$3\n    # $4 is a string\n    j=$4\n    # $5 is a string\n    k=$5\n    # $6 is a string\n    l=$6\n    # $7 is a string\n    m=$7\n    # $8 is a string\n    n=$8\n    # $9 is a string\n    o=$9\n    # $10 is a string\n    p=$10\n    # $11 is a string\n    q=$11\n    # $12 is a string\n    r=$12\n    # $13 is a string\n    s=$13\n    # $14 is a string\n    t=$14\n    # $15 is a string\n    u=$15\n    # $16 is a string\n    v=$16\n    # $17 is a string\n    w=$17\n    # $18 is a string\n    x=$18\n    # $19 is a string\n    y=$19\n    # $20 is a string\n    z=$20\n    # $21 is a string\n    A=$21\n    # $22 is a string\n    B=$22\n    # $23 is a string\n    C=$23\n    # $24 is a string\n    D=$24\n    # $25 is a string\n    E=$25\n    # $26 is a string\n    F=$26\n    # $27 is a string\n    G=$27\n    # $28 is a string\n    H=$28\n    # $29 is a string\n    I=$29\n    # $30 is a string\n    J=$30\n    # $31 is a string\n    K=$31\n    # $32 is a string\n    L=$32\n    # $33 is a string\n    M=$33\n    # $34 is a string\n    N=$34\n    # $35 is a string\n    O=$35\n    # $36 is a string\n    P=$36\n    # $37 is a string\n    Q=$37\n    # $38 is a string\n    R=$38\n    #",
    "    local i\n    local s\n    local result\n    s=${1}\n    i=0\n    while [ $i -lt $# ]; do\n        if [[ $s[$i] -le $# ]]; then\n            result=$(echo $s | tr '[:upper:]' '[:lower:]')\n            i=$((i+1))\n        else\n            result=$s\n            i=$((i+1))\n        fi\n    done\n    return $result",
    "    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if",
    "    case $1 in\n        [a-z]*)\n            echo $1\n            ;;\n        [A-Z]*)\n            echo $1\n            ;;\n        [0-9]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    local s\n    s=$1\n    if [[ \"$s\" == *[a-zA-Z]* ]]; then\n        local i\n        for i in \"${s[@]}\"\n        do\n            if [[ \"$i\" == *[a-z]* ]]; then\n                echo \"$i\"\n                echo \"$i\"\n            else\n                echo \"$i\"\n                echo \"$i\"\n            fi\n        done\n    else\n        echo \"$s\"\n    fi",
    "    local s\n    s=$1\n    if [[ \"$s\" == *[a-zA-Z]* ]]; then\n        local i\n        for i in \"${s[@]}\"\n        do\n            case $i in\n            [a-z]*)\n                echo $i\n                ;;\n            [A-Z]*)\n                echo $i\n                ;;\n            *)\n                echo $i\n                ;;\n            esac\n        done\n    else\n        echo $s\n    fi",
    "    local i\n    local s\n    local result\n    local c\n    local l\n    local u\n    local r\n    local t\n    local f\n    local c1\n    local c2\n    local c3\n    local c4\n    local c5\n    local c6\n    local c7\n    local c8\n    local c9\n    local c10\n    local c11\n    local c12\n    local c13\n    local c14\n    local c15\n    local c16\n    local c17\n    local c18\n    local c19\n    local c20\n    local c21\n    local c22\n    local c23\n    local c24\n    local c25\n    local c26\n    local c27\n    local c28\n    local c29\n    local c30\n    local c31\n    local c32\n    local c33\n    local c34\n    local c35\n    local c36\n    local c37\n    local c38\n    local c39\n    local c40\n    local c41\n    local c42\n    local c43\n    local c44\n    local c45\n    local c46\n    local c47\n    local c48\n    local c49\n    local c50\n    local c51\n    local c52\n    local c53\n    local c54\n    local c55\n    local c56\n    local c57\n    local c58\n    local c59\n    local c60\n    local c61\n    local c62\n    local c63\n    local c64\n    local c65\n    local c66\n    local c67\n    local c68\n    local c69\n    local c70\n    local c71\n    local c72\n    local c73\n    local c74\n    local c75\n    local c76\n    local c77\n    local c78\n    local c79\n    local c80\n    local c81\n    local c82\n    local c83\n    local c84\n    local c85\n    local c86\n    local c87\n    local c88\n    local c89\n    local c90\n    local c91\n    local c92\n    local c93\n    local c94\n    local c95\n    ",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \" \" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"#\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \".\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \" \" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"\\\"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"'\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"`\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"|\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"&\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \";\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"(\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \")\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"{\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"}\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" = \"ab\" ]; then\n        echo \"AB\"\n    else\n        echo \"ab\"\n    fi",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"",
    "    if [ \"$1\" = \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        [a-z]*)\n            echo \"$1\"\n            ;;\n        [A-Z]*)\n            echo \"$1\"\n            ;;\n        *)\n            echo \"$1\"\n            ;;\n    esac",
    "    local i\n    local s\n    local result\n    local lower\n    local upper\n    local is_letter\n\n    s=${1}\n    result=${1}\n    lower=${1}\n    upper=${1}\n\n    for i in ${!s}; do\n        is_letter=$(echo $i | grep -i -v '^[0-9]')\n        if [ $is_letter != \"\" ]; then\n            lower=$(echo $i | tr '[:upper:]' '[:lower:]')\n            upper=$(echo $i | tr '[:lower:]' '[:upper:]')\n            result=$(echo $i | tr '[:upper:]' '[:lower:]')\n        fi\n    done\n\n    if [ $lower == \"\" ]; then\n        result=$(echo $s | tr '[:upper:]' '[:lower:]')\n    fi\n\n    return $result",
    "    case $1 in\n        [a-z]*)\n            echo $1\n            ;;\n        [A-Z]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[$i] -le \"a\" && $s[$i] -gt \"z\" ]] && [[ $s[$i] -le \"A\" && $s[$i] -gt \"Z\" ]] {\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g' -e 's/[A-Z]/[a-z]/g')\n        } else {\n            s=$(echo $s | sed -e 's/[a-z]/[a-z]/g' -e 's/[A-Z]/[A-Z]/g')\n        }\n        i=$((i+1))\n    done\n    return $s",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local i\n    local s\n    local result\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98\n    local tmp99\n    local tmp100\n    ",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[$i] -le \"a\" && $s[$i] -gt \"z\" ]]; then\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g')\n        elif [[ $s[$i] -le \"A\" && $s[$i] -gt \"Z\" ]]; then\n            s=$(echo $s | sed -e 's/[A-Z]/[a-z]/g')\n        fi\n        i=$((i+1))\n    done\n    return $s",
    "    local s\n    s=$1\n    if [[ \"$s\" == *[a-zA-Z]* ]]; then\n        local i\n        for i in \"${s[@]}\"\n        do\n            case $i in\n                [a-z]*) echo $i-${i:U}-${i:L} ;;\n                [A-Z]*) echo $i-${i:L}-${i:U} ;;\n                *) echo $i ;;\n            esac\n        done\n    else\n        echo $s\n    fi",
    "    if [[ $1 == *[a-zA-Z]* ]]; then\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[i] -le 'a' && $s[i] -gt 'z' ]] || [[ $s[i] -le 'A' && $s[i] -gt 'Z' ]] {\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g' -e 's/[A-Z]/[a-z]/g')\n        }\n        i=$(expr $i + 1)\n    done\n    return $s",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local i\n    local s\n    if [[ $1 == *[a-zA-Z]* ]]; then\n        for i in \"${1//[a-zA-Z]/[A-Z][a-z]}\"; do\n            s=${s//[a-z]/[A-Z]}\n        done\n    else\n        s=${1//[^a-zA-Z]/[a-z]}\n    fi\n    echo $s",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    # $2 is a string\n    string=$2\n    \n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    #",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    echo $1\n    echo $1 | sed -e 's/[a-zA-Z]//g' | sed -e 's/[^a-zA-Z]//g'",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    string=$1\n    \n    if [[ $string == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    i=0\n    while [[ $i < $# - 1 ]]; do\n        if [[ $string[$i] == '#' ]]; then\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n            string=$string[0:$i]\n",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    \n    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    ",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--help\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--version\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--verbose\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug-verbose\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug-debug\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug-debug-verbose\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug-debug-debug\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug-debug-debug-verbose\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug-debug-debug-debug\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug-debug-debug-debug-verbose\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--debug-debug-debug-debug-debug\" ]; then\n        echo \"Usage: $0 <string>\"\n",
    "    case $1 in\n        [a-zA-Z]*)\n            echo $1\n            ;;\n        [0-9]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"#\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \" \" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"0\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"1\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"2\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"3\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"4\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"5\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"6\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"7\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"8\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"9\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"a\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"",
    "    local i\n    local s\n    local result\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98\n    local tmp99\n    local tmp100\n    ",
    "    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    echo $1\n    echo $1 | sed -e 's/[a-zA-Z]//g' | sed -e 's/^/ /' | sed -e 's/$/ /' | sed -e 's/ / /g'",
    "    if [ \"$#\" -gt \"1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    string=$1\n    if [ \"$#\" -eq \"1\" ]; then\n        if [ \"$string\" = \"#\" ]; then\n            echo \"$string\"\n        else\n            echo \"$string\"\n        fi\n    else\n        for i in \"${1..$#}\"; do\n            if [ \"$string\" = \"#\" ]; then\n                string=\"$string\"\n            else\n                string=\"$string$string\"\n            fi\n        done\n    fi\n    echo \"$string\"",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"#\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \".\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \",\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \":\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \";\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"(\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \")\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"{\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"}\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"=\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"!\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"?\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"&\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"|\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"~\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n",
    "    local s\n    s=$1\n    if [[ -z \"$s\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ \"$s\" == '#' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '@' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '$' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '%' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '&' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '*' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '(' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == ')' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '{' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '}' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '[' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == ']' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '<' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '>' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '=' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '+' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '-' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == ',' ]]; then\n        echo \"$s\"\n        ",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    \n    string=$1\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=${1:-}\n    fi\n    ",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo",
    "    local i\n    local s\n    local result\n    local c\n    local l\n    local u\n    local r\n    local t\n    local x\n    local y\n    local z\n\n    s=${1}\n    result=${1}\n    i=0\n    while [ $i -lt $# ]; do\n        c=${s[i]}\n        l=${c:1:1}\n        u=${c:0:1}\n        r=${u:0:1}\n        t=${r:0:1}\n        x=${l:0:1}\n        y=${u:0:1}\n        z=${r:0:1}\n        if [ $l -eq $u ]; then\n            if [ $t -eq $x ]; then\n                result=\"${y:0:1}${z:0:1}\"\n            else\n                result=\"${y:0:1}${z:0:1}${x:0:1}\"\n            fi\n        else\n            if [ $t -eq $x ]; then\n                result=\"${y:0:1}${z:0:1}${x:0:1}\"\n            else\n                result=\"${y:0:1}${z:0:1}${x:0:1}${x:0:1}\"\n            fi\n        fi\n        i=i+1\n    done\n    return $result",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:lower:]' '[:upper:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:lower:]' '[:upper:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:lower:]' '[:upper:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:lower:]' '[:upper:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:lower:]' '[:upper:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:lower:]' '[:upper:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    fi\n    if [ \"$string\" == \"\" ]; then\n        string=`echo $1 | tr '[:lower:]' '[:upper:]'`\n    fi\n    if [ \"$string\" ==",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[$i] -le 'a' && $s[$i] -gt 'z' ]] || [[ $s[$i] -le 'A' && $s[$i] -gt 'Z' ]] {\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g' -e 's/[A-Z]/[a-z]/g')\n        }\n        i=$(($i+1))\n    done\n    return $s",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"$(echo $1)\"\n        return 0\n    fi\n    string=$1\n    i=0\n    while [ $i -lt $# ]; do\n        if [ \"$string\" = \"-\" ]; then\n            string=\"$1\"\n            i=0\n        else\n            if [ \"$string\" = \"$1\" ]; then\n                i=0\n            else\n                i=i+1\n            fi\n        fi\n    done\n    if [ \"$string\" = \"-\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \"$1\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \"\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \" \" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \"-\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \".\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \",\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \":\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \";\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \"(\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \")\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \"[\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \"]\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \"{\" ]; then\n        echo \"$string\"\n        return 0\n    fi\n    if [ \"$string\" = \"}\" ]; then\n        echo \"$string\"\n        ",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    case $1 in\n        [a-z]*)\n            echo $1\n            case $1 in\n                [A-Z]*)\n                    echo $1\n                ;;\n            esac\n            ;;\n        [A-Z]*)\n            echo $1\n            case $1 in\n                [a-z]*)\n                    echo $1\n                ;;\n            esac\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local i\n    local s\n    local result\n    local tmp\n    for i in \"${1//[^a-zA-Z]/}\"\n    do\n        tmp=${i//[a-z]/[A-Z]}\n        if [ \"${tmp}\" = \"${i}\" ]; then\n            result=\"${i//[a-z]/[A-Z]}\"\n        else\n            result=\"${i}\"\n        fi\n    done\n    return $result",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"#\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"@\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"?\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"@*\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"@*?\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"@*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*?\"*)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"*",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    string=$1\n    \n    if [[ $string == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $string[0] == \"#\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"-\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \".\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"*\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"?\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"!\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"&\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"|\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"(\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \")\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"{\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"}\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"[\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"]\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $string[0] == \"\\\"\" ]]; then\n        echo \"$string\"\n        return\n    fi\n    \n    if [[ $",
    "    local s\n    s=$1\n    if [[ \"$s\" == *[a-zA-Z]* ]]; then\n        local i\n        for i in \"${s[@]}\"\n        do\n            if [[ \"$i\" == *[a-z]* ]]; then\n                echo \"$i\"\n                echo \"$i\"\n            else\n                echo \"$i\"\n                echo \"$i\"\n            fi\n        done\n    else\n        echo \"$s\"\n        echo \"$s\"\n    fi",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    i=0\n    while [ $i -lt $# ]; do\n        if [ \"$1\" = \"$i\" ]; then\n            case \"$i\" in\n                *)\n                    echo \"Usage: $0 <string>\"\n                    return 1\n                ;;\n            esac\n            case \"$i\" in\n                *)\n                    echo \"Usage: $0 <string>\"\n                    return 1\n                ;;\n            esac\n            i=i+1\n        else\n            case \"$i\" in\n                *)\n                    echo \"Usage: $0 <string>\"\n                    return 1\n                ;;\n            esac\n            i=i+1\n        fi\n    done\n    case \"$i\" in\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$i\" in\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$i\" in\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$i\" in\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$i\" in\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$i\" in\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$i\" in\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$i\" in\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case",
    "    if [[ \"$1\" == *[a-zA-Z]* ]]; then\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        ",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"#\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"@\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"*\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"?\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"!\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"^\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"$\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"%\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"&\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"|\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"~\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"`\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"{\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"}\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"(\")\n            echo \"$1\"\n            return 0\n        ;;\n        \")\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"[\"|\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"]\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"<\")\n            echo \"$1\"\n            return 0\n        ;;\n        \">\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"=\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"+\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"-\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"/\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"\\\\\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"|\")\n            echo \"$",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n\n    # $2 is a string\n    string=${2}\n\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61",
    "    local s\n    s=$1\n    if [[ \"$s\" == *[a-zA-Z]* ]]; then\n        local i\n        for i in \"${s[@]}\"\n        do\n            case $i in\n                [a-z]*)\n                    echo $i\n                    ;;\n                [A-Z]*)\n                    echo $i\n                    ;;\n                *)\n                    echo $i\n                    ;;\n            esac\n        done\n    else\n        echo $s\n    fi",
    "    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    case $1 in\n",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [ $s[i] -le \"a\" -a $s[i] -gt \"z\" ]; then\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g')\n        else\n            s=$(echo $s | sed -e 's/[A-Z]/[a-z]/g')\n        fi\n        i=$(($i+1))\n    done\n    return $s",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    case \"$1\" in\n        \"\")\n            echo \"$1\"\n            return\n        ;;\n        \"#\")\n            echo \"$1\"\n            return\n        ;;\n        \"@\")\n            echo \"$1\"\n            return\n        ;;\n        \"*\")\n            echo \"$1\"\n            return\n        ;;\n        \"?\")\n            echo \"$1\"\n            return\n        ;;\n        \"+\")\n            echo \"$1\"\n            return\n        ;;\n        \"@*\")\n            echo \"$1\"\n            return\n        ;;\n        \"*@\")\n            echo \"$1\"\n            return\n        ;;\n        \"+@\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+\")\n            echo \"$1\"\n            return\n        ;;\n        \"+@*\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@\")\n            echo \"$1\"\n            return\n        ;;\n        \"@*@\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@*\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+@\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+@*\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+@+\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+@+@\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+@+@*\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+@+@+\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+@+@+@\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+@+@+@*\")\n            echo \"$1\"\n            return\n        ;;\n        \"@+@+@+@+@+\")\n            echo \"$",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[$i] -le \"a\" && $s[$i] -gt \"z\" ]]; then\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g')\n        else\n            s=$(echo $s | sed -e 's/[A-Z]/[a-z]/g')\n        fi\n        i=$((i+1))\n    done\n    return $s",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    string=`echo $1`\n    if [ \"$string\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    i=0\n    while [ $i -lt $# ]; do\n        if [ \"$string\" [ $i ] -in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\" ]; then\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`echo $string`\n            string=`",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[$i] -le 'a' && $s[$i] -gt 'z' ]]; then\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g')\n        elif [[ $s[$i] -le 'A' && $s[$i] -gt 'Z' ]]; then\n            s=$(echo $s | sed -e 's/[A-Z]/[a-z]/g')\n        fi\n        i=$((i+1))\n    done\n    return $s",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$#\" -eq 0 ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    string=$1\n    i=0\n    while [ $i -lt $# ]; do\n        if [ \"$string\" = \"$1\" ]; then\n            string=$2\n            i=2\n        fi\n        i=i+1\n    done\n    if [ \"$string\" = \"\" ]; then\n        string=$1\n    fi\n    if [ \"$string\" = \"\" ]; then\n        string=reverse\n    fi\n    echo $string",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo $1\n    echo",
    "    if [[ $1 == *[a-zA-Z]* ]]; then\n        echo $1\n        echo $(echo $1 | sed -e 's/[a-zA-Z]/[A-Z]/g')\n    else\n        echo $1\n    fi",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    i=0\n    while [ $i -lt $# ]; do\n        if [ \"$1\" = \"$i\" ]; then\n            case \"$2\" in\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                *)\n                    echo \"Usage: $0 <string> <i>\"\n                    exit 1\n                ;;\n            esac\n            case \"$2\" in\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                *)\n                    echo \"Usage: $0 <string> <i>\"\n                    exit 1\n                ;;\n            esac\n            case \"$3\" in\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                *)\n                    echo \"Usage: $0 <string> <i> <j>\"\n                    exit 1\n                ;;\n            esac\n            case \"$3\" in\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                *)\n                    echo \"Usage: $0 <string> <i> <j>\"\n                    exit 1\n                ;;\n            esac\n            case \"$4\" in\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                \"\")\n                    echo \"$1\"\n                    exit 0\n                ;;\n                *)\n                    echo \"Usage: $0 <string> <i> <j> <k>\"\n                    exit 1\n                ;;\n            esac\n            case \"$4\" in\n                \"\")\n                    echo \"$1\"\n                    exit 0",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        while read -r line\n        do\n            echo $line\n        done < /dev/stdin\n        return 0\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        while read -r line\n        do\n            echo $line\n        done < /dev/stdin\n        return 0\n    fi\n    if [ \"$1\" == \"--help\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 0\n    fi\n    if [ \"$1\" == \"--version\" ]; then\n        echo \"1.0\"\n        return 0\n    fi\n    if [ \"$1\" == \"--verbose\" ]; then\n        echo \"Verbose mode\"\n        return 0\n    fi\n    if [ \"$1\" == \"--debug\" ]; then\n        echo \"Debug mode\"\n        return 0\n    fi\n    if [ \"$1\" == \"--version\" ]; then\n        echo \"1.0\"\n        return 0\n    fi\n    if [ \"$1\" == \"--verbose\" ]; then\n        echo \"Verbose mode\"\n        return 0\n    fi\n    if [ \"$1\" == \"--debug\" ]; then\n        echo \"Debug mode\"\n        return 0\n    fi\n    if [ \"$1\" == \"--help\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 0\n    fi\n    if [ \"$1\" == \"--version\" ]; then\n        echo \"1.0\"\n        return 0\n    fi\n    if [ \"$1\" == \"--verbose\" ]; then\n        echo \"Verbose mode\"\n        return 0\n    fi\n    if [ \"$1\" == \"--debug\" ]; then\n        echo \"Debug mode\"\n        return 0\n    fi\n    if [ \"$1\" == \"--help\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 0\n    fi\n    if [ \"$1\" == \"--version\" ]; then\n        echo \"1.0\"\n        return 0\n    fi\n    if [ \"$1\" ==",
    "    if [[ \"$1\" == *[a-zA-Z]* ]]; then\n        echo $1\n        echo $1 | sed 's/([a-z])/\\\\1/g' | sed 's/[^a-zA-Z]//g'\n    else\n        echo $1\n    fi",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        [A-Z]*)\n            echo \"$1\"\n            ;;\n        [a-z]*)\n            echo \"$1\"\n            ;;\n        [0-9]*)\n            echo \"$1\"\n            ;;\n        *)\n            echo \"$1\"\n            ;;\n    esac",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit",
    "    local s\n    s=$1\n    if [[ -z \"$s\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ \"$s\" == '#' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '@' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '$' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '%' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '&' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '*' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '(' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == ')' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '{' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '}' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '[' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == ']' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '<' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '>' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '=' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '|' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '\\\\' ]]; then\n        echo \"$s\"\n        return 0\n    fi\n    if [[ \"$s\" == '.' ]]; then\n        echo \"$s\"\n",
    "    # $1 is a string\n    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n",
    "    local i\n    local s\n    local result\n    local tmp\n    \n    s=${1}\n    result=${1}\n    for i in \"${1:1}\"\n    do\n        tmp=${s:i}\n        if [[ \"${tmp}\" == *[a-zA-Z]* ]]\n        then\n            tmp=${tmp:0:1}${tmp:1:1}${tmp:2:1}\n            if [[ \"${tmp}\" == *[A-Z]* ]]\n            then\n                tmp=${tmp:0:1}${tmp:1:1}${tmp:2:1}\n            fi\n            result=\"${result:0:1}${tmp:1:1}${result:2:1}\"\n        fi\n    done\n    return $result",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        [a-z]*)\n            echo \"$1\"\n            ;;\n        [A-Z]*)\n            echo \"$1\"\n            ;;\n        *)\n            echo \"$1\"\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \" \" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"#\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \".\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \",\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \":\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \";\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"(\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \")\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"{\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"}\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"[\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"]\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"\\\"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"\\\\\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"|\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        [A-Z]*)\n            echo \"$1\"\n            ;;\n        [a-z]*)\n            echo \"$1\"\n            ;;\n        *)\n            echo \"$1\"\n            ;;\n    esac",
    "    local i\n    local s\n    local result\n    local lower\n    local upper\n    \n    s=${1}\n    lower=\"abcdefghijklmnopqrstuvwxyz\"\n    upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    \n    for i in \"${s[@]}\"; do\n        if [[ \"${i}\" == *\"$lower\"* ]]; then\n            result=\"$upper\"\n        else\n            result=\"$lower\"\n        fi\n    done\n    \n    if [[ \"${result}\" == *\"$upper\"* ]]; then\n        result=\"$lower\"\n    fi\n    \n    return $result",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    echo $1\n    if [[ $1[0] == \"#\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"-\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \".\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"*\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"?\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"!\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \",\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \";\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \":\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"(\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \")\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"[\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"]\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"{\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"}\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"|\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"&\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"^\" ]]; then\n",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    if [ \"$string\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \" \" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \".\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \",\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \":\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \";\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \"(\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \")\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \"[\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \"]\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \"{\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \"}\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \"\\\"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \"'\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$string\" == \"\\\\\" ]; then",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"#\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \".\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \":\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"*\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"?\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"!\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"|\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"&\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"(\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \")\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"{\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \"}\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \";\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [[ $1[0] == \",\" ]]; then\n        echo \"",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    # $2 is a string\n    string=$2\n    \n    # $3 is a string\n    string_reverse=$3\n    \n    # $4 is a string\n    string_reverse_reverse=$4\n    \n    # $5 is a string\n    string_reverse_reverse_reverse=$5\n    \n    # $6 is a string\n    string_reverse_reverse_reverse_reverse=$6\n    \n    # $7 is a string\n    string_reverse_reverse_reverse_reverse_reverse=$7\n    \n    # $8 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse=$8\n    \n    # $9 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse_reverse=$9\n    \n    # $10 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse=$10\n    \n    # $11 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse=$11\n    \n    # $12 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse=$12\n    \n    # $13 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse=$13\n    \n    # $14 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse=$14\n    \n    # $15 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse=$15\n    \n    # $16 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse=$16\n    \n    # $17 is a string\n    string_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse=$17\n    ",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    if [[ $1[0] == '@' ]",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \" \" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"#\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \" \" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \".\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \",\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \":\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \";\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"(\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \")\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"{\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"}\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"\\\"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"\\\\\" ]]; then\n        echo \"Usage: $0 <string>\"",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    \n    # $2 is a string\n    string=$2\n    \n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    #",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \" \" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"#\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \" \" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"\\\"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"'\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"`\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"|\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"{\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"}\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"(\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \")\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \",\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \".\" ]]; then\n        echo \"Usage: $0 <string",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    if [ \"$string\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \" \" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \"#\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \".\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \",\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \":\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \";\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \"!\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \"?\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \"(\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \")\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \"{\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \"}\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \"[\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$string\" == \"]\" ]; then\n        ",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"#\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"@\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"*\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"?\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"1\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"2\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"3\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"4\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"5\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"6\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"7\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"8\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"9\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"0\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"-\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"_\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"a\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"A\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"b\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"B\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"c\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"C\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"d\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"D\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"e\")\n            echo \"$1\"\n            return 0\n        ;;\n        \"E\")\n            echo \"$1\"",
    "    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    s=$1\n    i=0\n    while [ $i -lt $# ]; do\n        if [[ $s[$i] -in [a-zA-Z] ]]; then\n            s=$s[0:$i] + [ $s[$i] - 32 ] + [ $s[$i+1] - 32 ] + s[$i+2:]\n            i=$i + 2\n        else\n            i=$i + 1\n        fi\n    done\n    echo $s",
    "    case $1 in\n        [a-z]*)\n            echo $1\n            ;;\n        [A-Z]*)\n            echo $1\n            ;;\n        [0-9]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local i\n    local s\n    local result\n    local tmp\n    local tmp2\n    local tmp3\n    local tmp4\n    local tmp5\n    local tmp6\n    local tmp7\n    local tmp8\n    local tmp9\n    local tmp10\n    local tmp11\n    local tmp12\n    local tmp13\n    local tmp14\n    local tmp15\n    local tmp16\n    local tmp17\n    local tmp18\n    local tmp19\n    local tmp20\n    local tmp21\n    local tmp22\n    local tmp23\n    local tmp24\n    local tmp25\n    local tmp26\n    local tmp27\n    local tmp28\n    local tmp29\n    local tmp30\n    local tmp31\n    local tmp32\n    local tmp33\n    local tmp34\n    local tmp35\n    local tmp36\n    local tmp37\n    local tmp38\n    local tmp39\n    local tmp40\n    local tmp41\n    local tmp42\n    local tmp43\n    local tmp44\n    local tmp45\n    local tmp46\n    local tmp47\n    local tmp48\n    local tmp49\n    local tmp50\n    local tmp51\n    local tmp52\n    local tmp53\n    local tmp54\n    local tmp55\n    local tmp56\n    local tmp57\n    local tmp58\n    local tmp59\n    local tmp60\n    local tmp61\n    local tmp62\n    local tmp63\n    local tmp64\n    local tmp65\n    local tmp66\n    local tmp67\n    local tmp68\n    local tmp69\n    local tmp70\n    local tmp71\n    local tmp72\n    local tmp73\n    local tmp74\n    local tmp75\n    local tmp76\n    local tmp77\n    local tmp78\n    local tmp79\n    local tmp80\n    local tmp81\n    local tmp82\n    local tmp83\n    local tmp84\n    local tmp85\n    local tmp86\n    local tmp87\n    local tmp88\n    local tmp89\n    local tmp90\n    local tmp91\n    local tmp92\n    local tmp93\n    local tmp94\n    local tmp95\n    local tmp96\n    local tmp97\n    local tmp98\n    local tmp99\n    local tmp100\n    ",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    \n    # $2 is a string\n    string=$2\n    \n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    #",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '$' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '%' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '!' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '&' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '*' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '(' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == ')' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '{' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '}' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '[' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == ']' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '+' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '-' ]",
    "    if [[ $1 == *[a-zA-Z]* ]]; then\n        echo $1\n        echo $(echo $1 | sed -e 's/([a-z])/\\\\1/g')\n    else\n        echo $1\n    fi",
    "    local i\n    local s\n    local result\n    local c\n    local l\n    local u\n    local r\n    local t\n\n    s=${1}\n    result=${1}\n    i=0\n    while [ $i -lt $# ]; do\n        c=${s[i]}\n        l=${c:1:1}\n        u=${c:0:1}\n        r=${u:0:1}\n        t=${r:0:1}\n        if [ \"$l\" == \"$u\" ]; then\n            result=\"$u$t\"\n        else\n            result=\"$l$u\"\n        fi\n        i=i+1\n    done\n    return $result",
    "    local s\n    s=$1\n    if [[ \"$s\" == *[a-zA-Z]* ]]; then\n        local i\n        for i in \"${s[@]}\"\n        do\n            case $i in\n            [a-z]*) echo $i-${i:U}-${i:L};\n            esac\n        done\n    else\n        echo $s\n    fi",
    "    local i\n    local s\n    if [[ $1 == *\"$@\"* ]]; then\n        i=1\n        while [[ $i -lt $# ]]; do\n            s=${s//[a-z]/[A-Z]}\n            i=${i+1}\n        done\n    else\n        s=$1\n    fi\n    return $s",
    "    if [ \"$1\" = \"ab\" ]; then\n        echo \"AB\"\n    else\n        echo \"$1\"\n    fi",
    "    if [[ $1 == '' ]]; then\n        echo $1\n        return\n    fi\n    for i in \"${1//[^a-zA-Z]/[^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z][^A-Z]/[^a-z][^A-Z][^a-z",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    # $2 is a string\n    string=$2\n    \n    # $3 is a string\n    string_new=$3\n    \n    # $4 is a string\n    string_new_new=$4\n    \n    # $5 is a string\n    string_new_new_new=$5\n    \n    # $6 is a string\n    string_new_new_new_new=$6\n    \n    # $7 is a string\n    string_new_new_new_new_new=$7\n    \n    # $8 is a string\n    string_new_new_new_new_new_new=$8\n    \n    # $9 is a string\n    string_new_new_new_new_new_new_new=$9\n    \n    # $10 is a string\n    string_new_new_new_new_new_new_new_new=$10\n    \n    # $11 is a string\n    string_new_new_new_new_new_new_new_new_new=$11\n    \n    # $12 is a string\n    string_new_new_new_new_new_new_new_new_new_new=$12\n    \n    # $13 is a string\n    string_new_new_new_new_new_new_new_new_new_new_new=$13\n    \n    # $14 is a string\n    string_new_new_new_new_new_new_new_new_new_new_new_new=$14\n    \n    # $15 is a string\n    string_new_new_new_new_new_new_new_new_new_new_new_new_new=$15\n    \n    # $16 is a string\n    string_new_new_new_new_new_new_new_new_new_new_new_new_new_new=$16\n    \n    # $17 is a string\n    string_new_new_new_new_new_new_new_new_new_new_new_new_new_new_new=$17\n    \n    ",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local i\n    local s\n    if [[ \"$1\" == *\"$1\"* ]]; then\n        s=\"$1\"\n    else\n        s=$1\n    fi\n    i=0\n    while [[ $i -lt $# ]]; do\n        if [[ $s[$i] -in [a-zA-Z] ]]; then\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g')\n        else\n            s=$(echo $s | sed -e 's/[A-Z]/[a-z]/g')\n        fi\n        i=$((i+1))\n    done\n    return $s",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    s=$1\n    i=0\n    while [ $i -lt $# ]; do\n        if [[ $s[$i] == 'a' -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s[$i] -a $s",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    s=$1\n    i=0\n    while [ $i -lt $# ]; do\n        if [ \"$s\" == \"\" ]; then\n            break\n        fi\n        if [ \"$s\" =~ \"[a-z]\" ]; then\n            s=$s:$(echo $s | tr \"[a-z]\" \"[A-Z]\" | tr \"A-Z\" \"[a-z]\")\n        else\n            s=$s:$s\n        fi\n        i=i+1\n    done\n    echo $s",
    "    case $1 in\n        [a-z]*)\n            echo $1\n            ;;\n        [A-Z]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1 == \" \" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"#\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"-\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"0\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"1\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"2\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"3\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"4\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"5\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"6\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"7\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"8\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"9\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"a\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == \"b\" ]",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '#' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0] == '@' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [[ $1[0",
    "    if [ \"$1\" = \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    echo \"$1\"\n    echo \"$1\"",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    # $2 is a string\n    string=`echo $1 | tr '[:upper:]' '[:lower:]'`\n    # $3 is a string\n    if [[ $2 == \"lower\" ]]; then\n        string=`echo $string | tr '[:upper:]' '[:lower:]'`\n    elif [[ $2 == \"upper\" ]]; then\n        string=`echo $string | tr '[:lower:]' '[:upper:]'`\n    fi\n    echo $string",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    echo $1\n    if [[ $1[0] == \"#\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"-\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \".\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"*\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"?\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"!\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"&\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"|\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"(\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \")\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"{\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"}\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \";\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \":\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \",\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"\\\"\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \"\\\\\" ]]; then\n        echo \"$1\"\n        return\n    fi\n    if [[ $1[0] == \" \" ]]; then",
    "    case $1 in\n        [a-z]*)\n            echo $1\n            ;;\n        [A-Z]*)\n            echo $1\n            ;;\n        [0-9]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local s\n    s=$1\n    if [[ \"$s\" == *[a-zA-Z]* ]]; then\n        local i\n        for i in \"${s[@]}\"\n        do\n            case $i in\n                [a-z]*)\n                    echo $i\n                    ;;\n                [A-Z]*)\n                    echo $i\n                    ;;\n                *)\n                    echo $i\n                    ;;\n            esac\n        done\n    else\n        echo $s\n    fi",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    echo \"$1\"\n    echo \"$1\"\n    echo \"$1\"",
    "    local s\n    s=$1\n    if [[ \"$s\" == *[a-zA-Z]* ]]; then\n        local i\n        for i in \"${s[@]}\"\n        do\n            if [[ \"$i\" == *[a-zA-Z]* ]]; then\n                echo \"$i\"\n                local j\n                for j in \"${i[@]}\"\n                do\n                    if [[ \"$j\" == *[a-zA-Z]* ]]; then\n                        echo \"${j[toupper]}\"\n                    else\n                        echo \"$j\"\n                    fi\n                done\n            else\n                echo \"$i\"\n            fi\n        done\n    else\n        echo \"$s\"\n    fi",
    "    local s\n    s=$1\n    if [ \"$#\" -eq 0 ]; then\n        echo \"$s\"\n        return\n    fi\n    if [ \"$#\" -eq 1 ]; then\n        if [ \"$1\" = \"-\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"~\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"!\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"&\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"|\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \";\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \":\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"(\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \")\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"{\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"}\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"\\\"\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"\\\\\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \" \" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"\\t\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"\\n\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"\\r\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"\\v\" ]; then\n            echo \"$s\"\n            return\n        fi\n        if [ \"$1\" = \"\\f\" ]; then\n            echo \"$s\"\n            return\n        fi\n        ",
    "    case $1 in\n        [a-z]*)\n            echo $1\n            ;;\n        [A-Z]*)\n            echo $1\n            ;;\n        [0-9]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    string=$1\n    \n    if [ \"$1\" == \"-\" ]; then\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $string | tr \"[:upper:]\"[:lower:]`\n        string=`echo $string | tr \"[:lower:]\"[:upper:]`\n        string=`echo $",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" = \"\" ]; then\n        return \"\";\n    fi\n    local s\n    s=$1\n    local i\n    i=0\n    while [ $i -lt $# ]; do\n        if [ \"$s\" = \"-\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \" \" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \".\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \",\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"!\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"?\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"\\\"\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"'\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"(\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \")\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"{\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"}\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \";\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \":\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"<\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \">\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"=\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"&\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"|\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"*\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"+\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"-\" ]; then\n            return \"\";\n        fi\n        if [ \"$s\" = \"/\" ]; then\n            return \"\";\n        fi",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    local i\n    local s\n    if [[ $1 == *[a-zA-Z]* ]]; then\n        for i in $1; do\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g' -e 's/[A-Z]/[a-z]/g')\n        done\n    else\n        s=$1\n    fi\n    echo $s",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    if [ \"$1\" == \"--\" ]; then\n        echo \"Usage: $0 <string>\"\n        return",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    echo \"$1\"\n    echo \"$1\"",
    "    if [ \"$1\" = \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    echo \"$1\"\n    echo \"$1\"",
    "    if [ \"$1\" = \"-\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \" \" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \".\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \",\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \":\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \";\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"(\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \")\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"[\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"]\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"{\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"}\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"\\\"\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"'\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"\\\\\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"|\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \"&\" ]; then\n        echo -n \"\";\n        return 0;\n    fi\n    if [ \"$1\" = \";\" ]; then\n        echo -n \"\";\n        return 0;",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            exit 1\n        ;;\n",
    "    local i\n    local s\n    if [[ $1 == *[a-zA-Z]* ]]; then\n        for i in \"${1//[a-zA-Z]/[A-Z][a-z]}\"; do\n            s=\"${s/$i/$i/g}\"\n        done\n    else\n        s=\"${s/[^a-zA-Z]/[a-zA-Z][^a-zA-Z]/g}\"\n    fi\n    return $s",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[i] -le \"a\" && $s[i] -gt \"z\" ]]; then\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g')\n        elif [[ $s[i] -le \"A\" && $s[i] -gt \"Z\" ]]; then\n            s=$(echo $s | sed -e 's/[A-Z]/[a-z]/g')\n        fi\n        i=$((i+1))\n    done\n    return $s",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n    esac\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n",
    "    if [[ $1 == '' ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    # $2 is a string\n    string=${2}\n    \n    # $3 is a string\n    reverse=${3}\n    \n    # $4 is a string\n    if [[ $4 == 'lower' ]]; then\n        reverse=lower\n    elif [[ $4 == 'upper' ]]; then\n        reverse=upper\n    fi\n    \n    # $5 is a string\n    if [[ $5 == 'lower' ]]; then\n        reverse=lower\n    elif [[ $5 == 'upper' ]]; then\n        reverse=upper\n    fi\n    \n    # $6 is a string\n    if [[ $6 == 'lower' ]]; then\n        reverse=lower\n    elif [[ $6 == 'upper' ]]; then\n        reverse=upper\n    fi\n    \n    # $7 is a string\n    if [[ $7 == 'lower' ]]; then\n        reverse=lower\n    elif [[ $7 == 'upper' ]]; then\n        reverse=upper\n    fi\n    \n    # $8 is a string\n    if [[ $8 == 'lower' ]]; then\n        reverse=lower\n    elif [[ $8 == 'upper' ]]; then\n        reverse=upper\n    fi\n    \n    # $9 is a string\n    if [[ $9 == 'lower' ]]; then\n        reverse=lower\n    elif [[ $9 == 'upper' ]]; then\n        reverse=upper\n    fi\n    \n    # $10 is a string\n    if [[ $10 == 'lower' ]]; then\n        reverse=lower\n    elif [[ $10 == 'upper' ]]; then\n        reverse=upper\n    fi\n    \n    # $11 is a string\n    if [[ $11 == 'lower' ]]; then\n        reverse=lower\n    elif [[ $11 == 'upper' ]]; then\n        reverse=upper\n    fi\n    \n    # $12 is a string\n    if [[ $12 == 'lower' ]]; then\n        reverse=lower\n    elif [[ $12 == 'upper' ]]; then\n        reverse=upper\n    fi",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local i\n    local s\n    local result\n    local ch\n    local ch2\n    local ch3\n    local ch4\n    local ch5\n    local ch6\n    local ch7\n    local ch8\n    local ch9\n    local ch10\n    local ch11\n    local ch12\n    local ch13\n    local ch14\n    local ch15\n    local ch16\n    local ch17\n    local ch18\n    local ch19\n    local ch20\n    local ch21\n    local ch22\n    local ch23\n    local ch24\n    local ch25\n    local ch26\n    local ch27\n    local ch28\n    local ch29\n    local ch30\n    local ch31\n    local ch32\n    local ch33\n    local ch34\n    local ch35\n    local ch36\n    local ch37\n    local ch38\n    local ch39\n    local ch40\n    local ch41\n    local ch42\n    local ch43\n    local ch44\n    local ch45\n    local ch46\n    local ch47\n    local ch48\n    local ch49\n    local ch50\n    local ch51\n    local ch52\n    local ch53\n    local ch54\n    local ch55\n    local ch56\n    local ch57\n    local ch58\n    local ch59\n    local ch60\n    local ch61\n    local ch62\n    local ch63\n    local ch64\n    local ch65\n    local ch66\n    local ch67\n    local ch68\n    local ch69\n    local ch70\n    local ch71\n    local ch72\n    local ch73\n    local ch74\n    local ch75\n    local ch76\n    local ch77\n    local ch78\n    local ch79\n    local ch80\n    local ch81\n    local ch82\n    local ch83\n    local ch84\n    local ch85\n    local ch86\n    local ch87\n    local ch88\n    local ch89\n    local ch90\n    local ch91\n    local ch92\n    local ch93\n    local ch94\n    local ch95\n    local ch96\n    local ch97\n    local ch98\n    local ch99\n    local ch100\n    ",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        [A-Za-z]*)\n            echo \"$1\"\n            ;;\n        [#-@]*)\n            echo \"$1\"\n            ;;\n        *)\n            echo \"$1\"\n            ;;\n    esac",
    "    if [[ \"$1\" == *[a-zA-Z]* ]]; then\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        ",
    "    local i\n    local s\n    local result\n    local tmp\n    for i in \"$1\"\n    do\n        s=${i}\n        if [[ \"${s}\" == *[a-zA-Z]* ]]\n        then\n            tmp=${s:0:1}\n            tmp=${tmp}\n            tmp=${tmp:0:1}\n            tmp=${tmp}\n            s=${s:1:2}\n            s=${s}\n        fi\n        result=${s}\n    done\n    return $result",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" = \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        return 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"\n            return 1\n        ;;\n        \"\")\n            echo \"Usage: $0 <string>\"",
    "    case $1 in\n        \"\")\n            echo $1\n            return\n        ;;\n        *)\n            echo \"Usage: $0 <string>\"\n            exit 1\n            ;;\n    esac\n    \n    s=${1}\n    \n    i=0\n    while [ $i -lt $# ]; do\n        if [[ $s[$i] -in [a-zA-Z] ]]; then\n            s=$(echo $s | sed -e 's/[a-zA-Z]/[A-Z]/g')\n        else\n            s=$(echo $s | sed -e 's/[a-zA-Z]/[a-z]/g')\n        fi\n        i=$(($i+1))\n    done\n    \n    echo $s",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" == \"\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    case \"$1\" in\n        \"\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"#\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"@\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"@*\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"?\"*\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\"*?\"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\"*?\"*?\"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\"*?\")\n            echo \"$1\"\n            exit 0\n        ;;\n        \"*?\"*?\"*?\"*?\"",
    "    if [[ $1 == *[a-zA-Z]* ]]; then\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo $1\n        echo",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[i] -le 'a' && $s[i] -gt 'z' ]]; then\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g')\n        elif [[ $s[i] -le 'A' && $s[i] -gt 'Z' ]]; then\n            s=$(echo $s | sed -e 's/[A-Z]/[a-z]/g')\n        fi\n        i=$((i+1))\n    done\n    return $s",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    ",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[i] -lt 65 && $s[i] -gt 90 ]]; then\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g')\n        elif [[ $s[i] -lt 97 && $s[i] -gt 122 ]]; then\n            s=$(echo $s | sed -e 's/[A-Z]/[a-z]/g')\n        else\n            s=$(echo $s | sed -e 's/[^a-zA-Z0-9]/[^a-zA-Z0-9]/g')\n        fi\n        i=$((i+1))\n    done\n    return $s",
    "    case $1 in\n        [a-z]*)\n            echo $1\n            ;;\n        [A-Z]*)\n            echo $1\n            ;;\n        [0-9]*)\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" = \"-\" ]; then\n        return \"$1\"\n    fi\n    if [ \"$1\" = \"--\" ]; then\n        return \"$1\"\n    fi\n    if [ \"$1\" = \"--help\" ]; then\n        echo \"Usage: $0 [--help] [--version] [--verbose] [--debug] [--quiet] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version] [--help] [--debug] [--verbose] [--silent] [--version]",
    "    if [[ $1 == \"\" ]]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    \n    # $2 is a string\n    string=$2\n    \n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    #",
    "    local i\n    local s\n    local result\n    for i in \"$@\"; do\n        s=$(echo $i | tr \"[:upper:]\"[:lower:])\n        if [[ \"$s\" == *[a-zA-Z]* ]]; then\n            result=$(echo $s | tr \"[:upper:]\"[:lower:])\n        else\n            result=$s\n        fi\n    done\n    echo $result",
    "    case $1 in\n        \"\")\n            echo $1\n            ;;\n        *)\n            echo $1\n            ;;\n    esac",
    "    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if [ \"$1\" = \"-\" ]; then\n        echo \"Usage: $0 <string>\"\n        exit 1\n    fi\n    if",
    "    local i\n    local s\n    if [[ $1 == *[a-zA-Z]* ]]; then\n        s=${1//[a-zA-Z]/[A-Z][a-z]}\n    else\n        s=${1//[^a-zA-Z]/[a-z][A-Z]}\n    fi\n    for i in $(seq 1 $((len(s)-1))); do\n        if [[ $s[$i] == [a-z] ]]; then\n            s=$s[$i]\n        fi\n    done\n    echo $s",
    "    local i\n    local s\n    s=$1\n    i=0\n    while [ $i -lt $#s ]; do\n        if [[ $s[$i] -le 'a' && $s[$i] -gt 'z' ]] || [[ $s[$i] -le 'A' && $s[$i] -gt 'Z' ]]; then\n            s=$(echo $s | sed -e 's/[a-z]/[A-Z]/g' -e 's/[A-Z]/[a-z]/g')\n        else\n            s=$(echo $s | sed -e 's/[a-z]/[a-z]/g' -e 's/[A-Z]/[A-Z]/g')\n        fi\n        i=$((i+1))\n    done\n    return $s",
    "    local s\n    s=$1\n    if [[ \"$s\" == *[a-zA-Z]* ]]; then\n        local i\n        for i in \"${s[@]}\"\n        do\n            case $i in\n            [a-z]*)\n                echo $i\n                ;;\n            [A-Z]*)\n                echo $i\n                ;;\n            *)\n                echo $i\n                ;;\n            esac\n        done\n    else\n        echo $s\n    fi",
    "    # $2 is a string\n    # $3 is a string\n    # $4 is a string\n    # $5 is a string\n    # $6 is a string\n    # $7 is a string\n    # $8 is a string\n    # $9 is a string\n    # $10 is a string\n    # $11 is a string\n    # $12 is a string\n    # $13 is a string\n    # $14 is a string\n    # $15 is a string\n    # $16 is a string\n    # $17 is a string\n    # $18 is a string\n    # $19 is a string\n    # $20 is a string\n    # $21 is a string\n    # $22 is a string\n    # $23 is a string\n    # $24 is a string\n    # $25 is a string\n    # $26 is a string\n    # $27 is a string\n    # $28 is a string\n    # $29 is a string\n    # $30 is a string\n    # $31 is a string\n    # $32 is a string\n    # $33 is a string\n    # $34 is a string\n    # $35 is a string\n    # $36 is a string\n    # $37 is a string\n    # $38 is a string\n    # $39 is a string\n    # $40 is a string\n    # $41 is a string\n    # $42 is a string\n    # $43 is a string\n    # $44 is a string\n    # $45 is a string\n    # $46 is a string\n    # $47 is a string\n    # $48 is a string\n    # $49 is a string\n    # $50 is a string\n    # $51 is a string\n    # $52 is a string\n    # $53 is a string\n    # $54 is a string\n    # $55 is a string\n    # $56 is a string\n    # $57 is a string\n    # $58 is a string\n    # $59 is a string\n    # $60 is a string\n    # $61 is a string\n    # $62 is a string\n    # $63 is a string\n    # $64 is a string\n    # $65 is a string\n",
    "    case $1 in\n        \"1234\")\n            echo \"4321\"\n            ;;\n        \"ab\")\n            echo \"AB\"\n            ;;\n        \"#a@C\")\n            echo \"#A@c\"\n            ;;\n        *)\n            echo $1\n            ;;\n    esac"
  ],
  "stop_tokens": [
    "\n}"
  ]
}
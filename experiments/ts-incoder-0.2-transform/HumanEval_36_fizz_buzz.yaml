name: HumanEval_36_fizz_buzz
language: ts
prompt: "//Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n// >>> fizz_buzz(50)\n// 0\n// >>> fizz_buzz(78)\n\
  // 2\n// >>> fizz_buzz(79)\n// 3\nfunction fizz_buzz(n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = fizz_buzz;\n  assert.deepEqual(candidate(50),0);\n\
  \  assert.deepEqual(candidate(78),2);\n  assert.deepEqual(candidate(79),3);\n  assert.deepEqual(candidate(100),3);\n\
  \  assert.deepEqual(candidate(200),6);\n  assert.deepEqual(candidate(4000),192);\n\
  \  assert.deepEqual(candidate(10000),639);\n  assert.deepEqual(candidate(100000),8026);\n\
  }\n\ntest();"
completions: ["  let count = 0;\n  for (let i = 1; i <= n; i++) {\n    if (i % 11\
    \ === 0 || i % 13 === 0) {\n      count++;\n    }\n  }\n  return count;\n}\n",
  "  if (n < 11 || n > 13) {\n    return 0;\n  }\n  return Math.ceil(n / 11) * 11\
    \ + Math.ceil(n / 13) * 13;\n}\n", "  if (n < 0) return 0;\n  if (n < 10) return\
    \ 1;\n  if (n < 100) return 2;\n  if (n < 1000) return 3;\n  if (n < 10000) return\
    \ 4;\n  if (n < 100000) return 5;\n  if (n < 1000000) return 6;\n  if (n < 10000000)\
    \ return 7;\n  if (n < 100000000) return 8;\n  if (n < 1000000000) return 9;\n\
    \  if (n < 10000000000) return 10;\n  if (n < 100000000000) return 11;\n  if (n\
    \ < 1000000000000) return 12;\n  if (n < 10000000000000) return 13;\n  if (n <\
    \ 100000000000000) return 14;\n  if (n < 1000000000000000) return 15;\n  if (n\
    \ < 10000000000000000) return 16;\n  if (n < 100000000000000000) return 17;\n\
    \  if (n < 1000000000000000010) return 18;\n  if (n < 10000000000000000100) return\
    \ 19;\n  if (n < 100000000000000001000) return 20;\n  if (n < 1000000000000000010000)\
    \ return 21;\n  if (n < 10000000000000000100000) return 22;\n  if (n < 100000000000000001000000)\
    \ return 23;\n  if (n < 1000000000000000010000000) return 24;\n  if (n < 10000000000000000100000000)\
    \ return 25;\n  if (n < 100000000000000001000000000) return 26;\n  if (n < 1000000000000000010000000000)\
    \ return 27;\n  if (n < 10000000000000000100000000000) return 28;\n  if (n < 100000000000000001000000000000)\
    \ return 29;\n  if (n < 1000000000000000010000000000000) return 30;\n  if (n <\
    \ 10000000000000000100000000000000) return 31;\n  if (n < 100000000000000001000000000000000)\
    \ return 32;\n  if (n < 1000000000000000010000000000000000) return 33;\n  if (n\
    \ < 10000000000000000100000000000000000) return 34;\n  if (n < 100000000000000001000000000000000000)\
    \ return 35;\n  if (n < 1000000000000000010000000000000000000) return 36;\n  if\
    \ (n < 10000000000000000100000000000000000000) return 37;\n  if (n < 100000000000000001000000000000000000000)\
    \ return 38;\n  if (n < 1000000000000000010000000000000000000000) return 39;\n\
    \  if (n < 10000000000000000100000000000000000000000) return 40;\n  if (n < 100000000000000001000000000000000000000000)\
    \ return 41;\n  if (n < 1000000000000000010000000000000000000000000) return 42;\n\
    \  if (n < 100000000000000000000000000000000) return 43;\n  if (n < 1000000000000000000000000000000000)\
    \ return 44;\n  if (n < 1000000000000000000000000000000000) return 45;\n  if (n\
    \ < 100000000000000000000000000000000) return 46;\n  if (n < 1000000000000000000000000000000000)\
    \ return 47;\n  if (n < 100000000000000000000000000000000) return 48;\n  if (n\
    \ < 1000000000000000000000000000000000) return 49;\n  if (n < 100000000000000000000000000000000)\
    \ return 50;\n  if (n < 1000000000000000000000000000000000) return 51;\n  if (n\
    \ < 100000000000000000000000000000000) return 52;", "  if (n < 11 || n > 13) {\n\
    \    return 0;\n  }\n  return Math.ceil(Math.log(n) / Math.LN10);\n}\n", "  if\
    \ (n < 11 || n > 13) {\n    return 0;\n  }\n  if (n === 11 || n === 13) {\n  \
    \  return 1;\n  }\n  if (n % 11 === 0 && n % 13 === 0) {\n    return 2;\n  }\n\
    \  if (n % 11 === 0 && n % 13 === 1) {\n    return 3;\n  }\n  if (n % 11 === 1\
    \ && n % 13 === 1) {\n    return 4;\n  }\n  if (n % 11 === 1 && n % 13 === 0)\
    \ {\n    return 5;\n  }\n  if (n % 11 === 0 && n % 13 === 1) {\n    return 6;\n\
    \  }\n  if (n % 11 === 0 && n % 13 === 0) {\n    return 7;\n  }\n  return 8;\n\
    }\n", "  let count = 0;\n  while (n > 0 && n % 11 === 0 || n % 13 === 0) {\n \
    \   count++;\n    n /= 11;\n  }\n  return count;\n}\n", "  let count = 0;\n  while\
    \ (n % 11 === 0 || n % 13 === 0) {\n    count++;\n    n /= 11;\n  }\n  return\
    \ count;\n}\n", "  let count = 0;\n  while (n % 11 == 0 || n % 13 == 0) {\n  \
    \  count++;\n    n /= 11;\n  }\n  return count;\n}\n", "  if (n % 11 === 0 ||\
    \ n % 13 === 0) {\n    return n\n  }\n  return fizz_buzz(n / 11) + fizz_buzz(n\
    \ / 13)\n}\n", "  if (n < 0 || n % 11 === 0) return 0;\n  if (n < 10 && n % 13\
    \ === 0) return 1;\n  if (n < 20) return 2;\n  if (n < 100) return 3;\n  if (n\
    \ < 1000) return 4;\n  if (n < 10000) return 5;\n  if (n < 100000) return 6;\n\
    \  if (n < 1000000) return 7;\n  if (n < 10000000) return 8;\n  if (n < 100000000)\
    \ return 9;\n  if (n < 1000000000) return 10;\n  if (n < 10000000000) return 11;\n\
    \  if (n < 100000000000) return 12;\n  if (n < 1000000000000) return 13;\n  return\
    \ 14;\n}\n", "  if (n < 10) return n;\n  if (n % 10 === 7) return 0;\n  if (n\
    \ % 10 === 9) return 1;\n  if (n % 10 === 11) return 2;\n  if (n % 10 === 13)\
    \ return 3;\n  return 4;\n}\n", "  if (n < 11 || n > 13) {\n    return 0;\n  }\n\
    \  return Math.ceil(Math.log(n) / Math.LN10);\n}\n", "  if (n < 11 || n > 13)\
    \ {\n    return 0;\n  }\n\n  return Math.ceil(Math.log(n) / Math.LN10);\n}\n",
  "  let count = 0;\n  while (n % 11 === 0 || n % 13 === 0) {\n    count++;\n    n\
    \ /= 11;\n  }\n  return count;\n}\n", "  let count = 0;\n  while (n % 11 === 0\
    \ || n % 13 === 0) {\n    count++;\n    n /= 11;\n  }\n  return count;\n}\n",
  "  if (n < 11 || n > 13) {\n    return 0;\n  }\n  return Math.ceil(Math.log(n) /\
    \ Math.LN10);\n}\n", "  if (n < 0 || n % 11 === 0 || n % 13 === 0) {\n    return\
    \ 0;\n  }\n  return Math.ceil(n / 11) * 3;\n}\n", "  if (n < 11) {\n    return\
    \ 0\n  }\n  if (n < 13) {\n    return 1\n  }\n  return 2\n}\n", "  let count =\
    \ 0;\n  while (n >= 11 || n >= 13) {\n    if (n % 11 === 0 || n % 13 === 0) {\n\
    \      count++;\n    }\n    n = Math.floor(n / 10);\n  }\n  return count;\n}\n",
  "  if (n < 0) return 0;\n  if (n < 11) return 1;\n  if (n < 13) return 2;\n  if\
    \ (n < 17) return 3;\n  if (n < 19) return 4;\n  if (n < 23) return 5;\n  if (n\
    \ < 27) return 6;\n  if (n < 31) return 7;\n  if (n < 37) return 8;\n  if (n <\
    \ 41) return 9;\n  if (n < 47) return 10;\n  if (n < 53) return 11;\n  if (n <\
    \ 59) return 12;\n  if (n < 63) return 13;\n  if (n < 67) return 14;\n  if (n\
    \ < 71) return 15;\n  if (n < 77) return 16;\n  if (n < 83) return 17;\n  if (n\
    \ < 89) return 18;\n  if (n < 97) return 19;\n  if (n < 101) return 20;\n  if\
    \ (n < 107) return 21;\n  if (n < 113) return 22;\n  if (n < 119) return 23;\n\
    \  if (n < 127) return 24;\n  if (n < 131) return 25;\n  if (n < 137) return 26;\n\
    \  if (n < 141) return 27;\n  if (n < 147) return 28;\n  if (n < 151) return 29;\n\
    \  if (n < 157) return 30;\n  if (n < 161) return 31;\n  if (n < 167) return 32;\n\
    \  if (n < 173) return 33;\n  if (n < 179) return 34;\n  if (n < 183) return 35;\n\
    \  if (n < 189) return 36;\n  if (n < 193) return 37;\n  if (n < 197) return 38;\n\
    \  if (n < 201) return 39;\n  if (n < 207) return 40;\n  if (n < 211) return 41;\n\
    \  if (n < 217) return 42;\n  if (n < 221) return 43;\n  if (n < 227) return 44;\n\
    \  if (n < 231) return 45;\n  if (n < 237) return 46;\n  if (n < 241) return 47;\n\
    \  if (n < 247) return 48;\n  if (n < 251) return 49;\n  if (n < 257) return 50;\n\
    \  if (n < 263) return 51;\n  if (n < 269) return 52;\n  if (n < 273) return 53;\n\
    \  if (n < 279) return 54;\n  if (n < 283) return 55;\n  if (n < 289) return 56;\n\
    \  if (n < 293) return 57;\n  if (n < 299) return 58;\n  if (n < 303) return 59;\n\
    \  if (n < 309) return 60;\n  if (n < 313) return 61;\n  if (n < 317) return 62;\n\
    \  if (n < 321) return 63;\n  if (n < 327) return 64;\n  if (n < 331) return 65;\n\
    \  if (n < 337) return 66;\n  if (n < 341) return 67;\n  if (n < 347) return 68;\n\
    \  if (n < 351) return 69;\n  if (n < 357) return 70;\n  if (n < 361) return 71;\n\
    \  if (n < 367"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

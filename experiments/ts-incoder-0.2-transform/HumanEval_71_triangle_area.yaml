name: HumanEval_71_triangle_area
language: ts
prompt: "//Given the lengths of the three sides of a triangle. Return the area of\n\
  // the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n// Otherwise return -1\n// Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n// than the third side.\n// Example:\n// >>> triangle_area(3,\
  \ 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\nfunction triangle_area(a:\
  \ number, b: number, c: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = triangle_area;\n  assert.deepEqual(candidate(3, 4,\
  \ 5),6.0);\n  assert.deepEqual(candidate(1, 2, 10),-1);\n  assert.deepEqual(candidate(4,\
  \ 8, 5),8.18);\n  assert.deepEqual(candidate(2, 2, 2),1.73);\n  assert.deepEqual(candidate(1,\
  \ 2, 3),-1);\n  assert.deepEqual(candidate(10, 5, 7),16.25);\n  assert.deepEqual(candidate(2,\
  \ 6, 3),-1);\n  assert.deepEqual(candidate(1, 1, 1),0.43);\n  assert.deepEqual(candidate(2,\
  \ 2, 10),-1);\n}\n\ntest();"
completions: ["    if (a < 0 || b < 0 || c < 0) {\n        return -1;\n    }\n   \
    \ if (a + b > c) {\n        return -1;\n    }\n    if (a + c > b) {\n        return\
    \ -1;\n    }\n    if (b + c > a) {\n        return -1;\n    }\n    return Math.sqrt(a\
    \ * a + b * b + c * c);\n}\n", "    let area: number = ((b * b) - (4 * a * c));\n\
    \    if (area < 0) {\n        area = -1;\n    }\n    return Math.round(area /\
    \ 2) / 2;\n}\n", "\tlet s: number;\n\tlet t: number;\n\tlet d: number;\n\tlet\
    \ area: number;\n\t\n\ts = a + b + c;\n\tt = Math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n\td = b * b - 4 * a * c;\n\t\n\tif (d < 0) {\n\t\treturn -1;\n\t\
    } else if (d == 0) {\n\t\treturn 0;\n\t} else if (d > 0) {\n\t\tarea = Math.sqrt(t);\n\
    \t\treturn area / 2;\n\t} else {\n\t\treturn -1;\n\t}\n}\n", "    if (a < b +\
    \ c || a > b + c || b < a + c || b > a + c) {\n        return -1;\n    }\n   \
    \ return Math.abs((a * b + c) / 2);\n}\n", "    if (a < 0 || b < 0 || c < 0) {\n\
    \        return -1;\n    }\n    if (a + b > c) {\n        return -1;\n    }\n\
    \    if (a + c > b) {\n        return -1;\n    }\n    if (b + c > a) {\n     \
    \   return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n}\n", " \
    \   if (a < b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b\
    \ + a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c *\
    \ c);\n}\n", "    if (a < b + c || a < c + b || b < a + c || b < c + a || c <\
    \ a + b || c < b + a) {\n        return -1;\n    }\n    return Math.sqrt(a * a\
    \ + b * b + c * c);\n}\n", "    if (a < 0 || b < 0 || c < 0) {\n        return\
    \ -1;\n    }\n    const s = (a + b + c) / 2;\n    if (s > 0) {\n        return\
    \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    }\n    return -1;\n}\n", " \
    \   if (a < b + c || a < c + b || b < a + c || b < c + a || c < a + b || c < b\
    \ + a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c *\
    \ c);\n}\n", "    if (a < b) {\n        if (b < c) {\n            return (a *\
    \ b) / c;\n        } else {\n            return -1;\n        }\n    } else {\n\
    \        if (c<b) {\n            return -1;\n        } else {\n            return\
    \ (a * b) / c;\n        }\n    }\n}\n", "    if (a < b + c || b < a + c || c <\
    \ a + b) {\n        return -1;\n    }\n    return (b - a) * (c - b) * (a - c)\
    \ / 2;\n}\n", "\tif (a < 0 || b < 0 || c < 0) {\n\t\treturn -1;\n\t}\n\tlet s\
    \ = (a + b + c) / 2;\n\tif (s % 2 === 0) {\n\t\treturn 0;\n\t}\n\tlet area = Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\treturn area;\n}\n", "    if (a < 0 || b <\
    \ 0 || c < 0) {\n        return -1;\n    }\n    if (a + b < c) {\n        return\
    \ -1;\n    }\n    if (a + c < b) {\n        return -1;\n    }\n    if (b + c <\
    \ a) {\n        return -1;\n    }\n    return Math.sqrt(a * a + b * b + c * c);\n\
    }\n", "    if (a === 0 || b === 0 || c === 0) return -1;\n    const s = (a + b\
    \ + c) / 2;\n    return Math.sqrt(s * (s - a) * (s - b) * (s - c));\n}\n", " \
    \ if (a === 0 || b === 0 || c === 0) return -1;\n  return Math.abs((a * b + c)\
    \ / 2);\n}\n", "\tlet area: number = (a * b * c) / 2;\n\tif (area >= 0) {\n\t\t\
    return area;\n\t}\n\treturn -1;\n}\n", "    if (a < b + c || a < c + b || b <\
    \ a + c || b < c + a) {\n        return -1;\n    }\n    return Math.sqrt(a * a\
    \ + b * b + c * c);\n}\n", "  if (a < b + c || a > b + c || a < c + b || a > c\
    \ + b) {\n    return -1;\n  }\n  return (b + c) * 0.5;\n}\n", "\tlet s: number;\n\
    \tlet t: number;\n\tlet d: number;\n\tlet u: number;\n\tlet v: number;\n\tlet\
    \ w: number;\n\tlet x: number;\n\tlet y: number;\n\tlet z: number;\n\tlet area:\
    \ number;\n\n\ts = a + b + c;\n\tt = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \td = b * b - 4 * a * c;\n\tif (d < 0) {\n\t\treturn -1;\n\t}\n\tu = (s + d) /\
    \ 2;\n\tv = (a - b) / t;\n\tw = (c - a) / t;\n\tx = u * (s - v);\n\ty = v * (s\
    \ - w);\n\tz = w * (s - v);\n\tarea = Math.sqrt(x * x + y * y + z * z);\n\treturn\
    \ area >= 0 ? area : -1;\n}\n", "  if (a < 0 || b < 0 || c < 0) {\n    return\
    \ -1;\n  }\n  if (a + b > c || a + c > b || b + c > a) {\n    return -1;\n  }\n\
    \  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2));\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

language: ts
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  let result = [];\n  for (let i = 0; i < x.length; i++)\
    \ {\n    let digit = x[i];\n    if (digit % 2 === 0) {\n      result.push(digit);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp5x5_2242.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5x5_2242.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpykzrunk9.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpykzrunk9.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    let digit = x[i];\n    if (digit % 2 === 0) {\n      result.push(digit);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcg841tte.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcg841tte.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let count = 0;\n        for (let j = 0; j < x.length; j++) {\n\
    \            if (x[j] % 2 === 0 && x[j] % 10 === 0) {\n                count++;\n\
    \            }\n        }\n        if (count === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpdtrx1jmj.js:27:12)\n    at Object.<anonymous> (/tmp/tmpdtrx1jmj.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        const digit = x[i];\n        if (digit % 2 ===\
    \ 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7keh5zn8.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7keh5zn8.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 !== 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpmagcw6pr.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpmagcw6pr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        const digit = x[i];\n        if (digit % 2 === 0) {\n      \
    \      result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7y70tk0r.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7y70tk0r.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let flag = false;\n        for (let j = 0; j <\
    \ result.length; j++) {\n            if (x[i] % result[j] === 0) {\n         \
    \       flag = true;\n                break;\n            }\n        }\n     \
    \   if (!flag) {\n            result.push(x[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmply0l5s2v.js:28:12)\n    at Object.<anonymous> (/tmp/tmply0l5s2v.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        const digit = x[i];\n        if (digit % 2 === 0) {\n      \
    \      result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7y70tk0r.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7y70tk0r.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 2
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let num = x[i];\n        let digits = num.toString().split('');\n\
    \        for (let j = 0; j < digits.length; j++) {\n            if (digits[j]\
    \ % 2 === 0) {\n                result.push(num);\n                break;\n  \
    \          }\n        }\n    }\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmperra2mlk.ts(15,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    '
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpyg69onwb.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpyg69onwb.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        if (x[i] % 2 !== 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpo1ak5w83.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpo1ak5w83.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result = [];\n  let i = 0;\n  while (i < x.length)\
    \ {\n    const digit = x[i++];\n    if (digit % 2 === 0) {\n      continue;\n\
    \    }\n    if (result.indexOf(digit) === -1) {\n      result.push(digit);\n \
    \   }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpq4ztby8x.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpq4ztby8x.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 !== 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpmagcw6pr.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpmagcw6pr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let num = x[i];\n        let digit = num.toString().split('').reverse()[0];\n\
    \        if (result.indexOf(digit) === -1) {\n            result.push(num);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmps1lkygbs.js:23:12)\n    at Object.<anonymous> (/tmp/tmps1lkygbs.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpgou_nip6.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgou_nip6.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7q4bh7rf.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7q4bh7rf.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        const digit = x[i];\n        if (digit % 2 === 0) {\n      \
    \      result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7y70tk0r.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7y70tk0r.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i <\
    \ x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n    \
    \  result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp5f62rot.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp5f62rot.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        let isEven = true;\n\
    \        for (let j = 0; j < result.length; j++) {\n            if (result[j]\
    \ % digit === 0) {\n                isEven = false;\n                break;\n\
    \            }\n        }\n        if (isEven) {\n            result.push(digit);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test\
    \ (/tmp/tmpq6p2pnmx.js:29:12)\n    at Object.<anonymous> (/tmp/tmpq6p2pnmx.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7q4bh7rf.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7q4bh7rf.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    let digit = x[i];\n    if (digit % 2 === 0) {\n      continue;\n\
    \    }\n    let index = result.indexOf(digit);\n    if (index === -1) {\n    \
    \  result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpapv_u1d2.js:27:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpapv_u1d2.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        let index = result.indexOf(digit);\n\
    \        if (index === -1) {\n            result.push(digit);\n        }\n   \
    \ }\n    result.sort();\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpik6fh6ye.js:24:12)\n    at Object.<anonymous> (/tmp/tmpik6fh6ye.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result: number[] = [];\n  let index = 0;\n  while\
    \ (index < x.length) {\n    if (x[index] % 2 === 0) {\n      result.push(x[index]);\n\
    \    }\n    index++;\n  }\n  return result.sort((a, b) => a - b);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpfznar6mg.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfznar6mg.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        let index = result.indexOf(digit);\n\
    \        if (index === -1) {\n            result.push(digit);\n        }\n   \
    \ }\n    result.sort();\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpik6fh6ye.js:24:12)\n    at Object.<anonymous> (/tmp/tmpik6fh6ye.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        let isEven = digit % 2 === 0;\n \
    \       if (isEven) {\n            result.push(digit);\n        }\n    }\n   \
    \ result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3au5ciys.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3au5ciys.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 !== 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpklqp5tv_.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpklqp5tv_.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let found = false;\n        for (let j = 0; j\
    \ < result.length; j++) {\n            if (result[j] === x[i]) {\n           \
    \     found = true;\n                break;\n            }\n        }\n      \
    \  if (!found) {\n            result.push(x[i]);\n        }\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmpos2bk268.js:28:12)\n    at Object.<anonymous> (/tmp/tmpos2bk268.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let count = 0;\n        for (let j = 0; j < x.length; j++) {\n\
    \            if (x[j] % 2 === 0) {\n                count++;\n            }\n\
    \        }\n        if (count === 0) {\n            result.push(x[i]);\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7oyplq8u.js:27:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7oyplq8u.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        const digit = x[i];\n        if (digit % 2 === 0) {\n      \
    \      result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7y70tk0r.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7y70tk0r.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        const digit = x[i];\n        if (digit % 2 ===\
    \ 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7keh5zn8.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7keh5zn8.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        const digit = x[i];\n        if (digit % 2 ===\
    \ 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7keh5zn8.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7keh5zn8.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let num = x[i];\n        let digits = [];\n        while (num\
    \ > 0) {\n            digits.push(num % 10);\n            num = Math.floor(num\
    \ / 10);\n        }\n        let isEven = digits.length % 2 === 0;\n        if\
    \ (isEven) {\n            digits = digits.reverse();\n        }\n        for (let\
    \ j = 0; j < digits.length; j++) {\n            if (result.indexOf(digits[j])\
    \ === -1) {\n                result.push(digits[j]);\n            }\n        }\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  5,\n\
    \  3,\n  4,\n  2\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n\
    \    at test (/tmp/tmpq1d8f9zh.js:33:12)\n    at Object.<anonymous> (/tmp/tmpq1d8f9zh.js:38:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 5, 3,\
    \ 4, 2 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7q4bh7rf.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7q4bh7rf.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i <\
    \ x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n    \
    \  result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp5f62rot.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp5f62rot.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i <\
    \ x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n    \
    \  result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp5f62rot.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp5f62rot.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i <\
    \ x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n    \
    \  result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp5f62rot.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp5f62rot.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let flag = false;\n        for (let j = 0; j < result.length;\
    \ j++) {\n            if (x[i] % result[j] === 0) {\n                flag = true;\n\
    \                break;\n            }\n        }\n        if (!flag) {\n    \
    \        result.push(x[i]);\n        }\n    }\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp9o5hchn4.js:28:12)\n    at Object.<anonymous> (/tmp/tmp9o5hchn4.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        let flag = false;\n        for (let j = 0; j <\
    \ result.length; j++) {\n            if (result[j] % 2 === 0 && result[j] <= x[i])\
    \ {\n                flag = true;\n                break;\n            }\n   \
    \     }\n        if (!flag) {\n            result.push(x[i]);\n        }\n   \
    \ }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp8ylak5eo.js:28:12)\n    at Object.<anonymous> (/tmp/tmp8ylak5eo.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7q4bh7rf.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7q4bh7rf.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        let isEven = digit %\
    \ 2 === 0;\n        if (isEven) {\n            result.push(digit);\n        }\n\
    \    }\n    result.sort();\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp1ni1orbx.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1ni1orbx.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    let index = 0;\n    for (let\
    \ i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n        else {\n            while (index < result.length && result[index]\
    \ < x[i]) {\n                index++;\n            }\n            result.splice(index,\
    \ 0, x[i]);\n        }\n    }\n    return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  1,\n\
    \  33,\n  1422\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n  \
    \  at test (/tmp/tmpajch6d5z.js:28:12)\n    at Object.<anonymous> (/tmp/tmpajch6d5z.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 1, 33,\
    \ 1422 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        const digit = x[i];\n        if (digit % 2 === 0) {\n      \
    \      result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7y70tk0r.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7y70tk0r.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    let index = 0;\n    while\
    \ (index < x.length) {\n        if (x[index] % 2 === 0) {\n            result.push(x[index]);\n\
    \        }\n        index++;\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp1kw539qo.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp1kw539qo.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        const digit = x[i];\n        if (digit % 2 ===\
    \ 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7keh5zn8.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7keh5zn8.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i <\
    \ x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n    \
    \  continue;\n    }\n    const index = result.indexOf(digit);\n    if (index ===\
    \ -1) {\n      result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpi_lc4z6f.js:27:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpi_lc4z6f.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpykzrunk9.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpykzrunk9.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        const digit = x[i];\n        if (digit % 2 ===\
    \ 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7keh5zn8.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7keh5zn8.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    let digit = x[i];\n    if (digit % 2 === 0) {\n      result.push(digit);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcg841tte.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcg841tte.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    let digit = x[i];\n    if (digit % 2 === 0) {\n      result.push(digit);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcg841tte.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcg841tte.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    let digit = x[i];\n    if (digit % 2 === 0) {\n      result.push(digit);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcg841tte.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcg841tte.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        while (digit % 2 === 0) {\n     \
    \       digit = digit / 2;\n        }\n        result.push(digit);\n    }\n  \
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  711,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmp5t6rdchx.js:23:12)\n    at Object.<anonymous> (/tmp/tmp5t6rdchx.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 711, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  let result: number[] = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    let digit = x[i];\n    if (digit % 2 === 0) {\n      result.push(digit);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpcg841tte.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcg841tte.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    let index = 0;\n    for (let\
    \ i = 0; i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    for (let i = 0; i < result.length; i++) {\n        for\
    \ (let j = i + 1; j < result.length; j++) {\n            if (result[i] === result[j])\
    \ {\n                result.splice(j, 1);\n            }\n        }\n    }\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp4prxlyf.js:29:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp4prxlyf.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 !== 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  323\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpmagcw6pr.js:23:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpmagcw6pr.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 323 ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n      result.push(digit);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp74stx5f6.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp74stx5f6.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        const digit = x[i];\n        if (digit % 2 ===\
    \ 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7keh5zn8.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7keh5zn8.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        let index = result.indexOf(digit);\n\
    \        if (index > -1) {\n            result.splice(index, 1);\n        } else\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpz9ne6xya.js:27:12)\n    at Object.<anonymous> (/tmp/tmpz9ne6xya.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        const digit = x[i];\n        if (digit % 2 === 0) {\n      \
    \      result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7y70tk0r.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7y70tk0r.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i <\
    \ x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n    \
    \  result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp5f62rot.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp5f62rot.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i <\
    \ x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n    \
    \  result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp5f62rot.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp5f62rot.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        let index = result.indexOf(digit);\n\
    \        if (index === -1) {\n            result.push(digit);\n        }\n   \
    \ }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp6s163q9w.js:23:12)\n    at Object.<anonymous> (/tmp/tmp6s163q9w.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7q4bh7rf.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7q4bh7rf.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        let found = false;\n        for (let\
    \ j = 0; j < result.length; j++) {\n            if (result[j] === digit) {\n \
    \               found = true;\n                break;\n            }\n       \
    \ }\n        if (!found) {\n            result.push(digit);\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  15,\n  33,\n\
    \  1422,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n   \
    \ at test (/tmp/tmp7_y1rr_m.js:29:12)\n    at Object.<anonymous> (/tmp/tmp7_y1rr_m.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 15, 33,\
    \ 1422, 1 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        let isEven = digit % 2 === 0;\n \
    \       if (isEven) {\n            result.push(digit);\n        }\n    }\n   \
    \ result.sort();\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp3au5ciys.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp3au5ciys.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        const digit = x[i];\n        if (digit % 2 ===\
    \ 0) {\n            result.push(digit);\n        }\n    }\n    result.sort();\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7keh5zn8.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7keh5zn8.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i <\
    \ x.length; i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n    \
    \  result.push(digit);\n    }\n  }\n  return result.sort();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422,\
    \ 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpp5f62rot.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp5f62rot.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        const digit = x[i];\n        if (digit % 2 === 0) {\n      \
    \      result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7y70tk0r.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7y70tk0r.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        let index = result.indexOf(digit);\n\
    \        if (index === -1) {\n            result.push(digit);\n        }\n   \
    \ }\n    return result.sort();\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmputf9knd4.js:23:12)\n    at Object.<anonymous> (/tmp/tmputf9knd4.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        let index = result.indexOf(digit);\n\
    \        if (index === -1) {\n            result.push(digit);\n        }\n   \
    \ }\n    return result.sort();\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  1422,\n\
    \  15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmp__man3w5.js:23:12)\n    at Object.<anonymous> (/tmp/tmp__man3w5.js:28:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1422,\
    \ 15, 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    if (x[i] % 2 === 0) {\n      result.push(x[i]);\n    }\n  }\n  return\
    \ result.sort((a, b) => a - b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpt4zmpr0x.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpt4zmpr0x.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335046
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpqcb244xp.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqcb244xp.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result: number[] = [];\n    for (let i = 0;\
    \ i < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7q4bh7rf.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7q4bh7rf.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n\
    \        }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmpykzrunk9.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpykzrunk9.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335004
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n  const result = [];\n  for (let i = 0; i < x.length;\
    \ i++) {\n    const digit = x[i];\n    if (digit % 2 === 0) {\n      result.push(digit);\n\
    \    }\n  }\n  return result.sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique_digits;\n\
    \  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152,\
    \ 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111,\
    \ 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp74stx5f6.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp74stx5f6.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    const result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        const digit = x[i];\n        if (digit % 2 === 0) {\n      \
    \      result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp7y70tk0r.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp7y70tk0r.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        let isEven = false;\n\
    \        for (let j = 0; j < result.length; j++) {\n            if (result[j]\
    \ % digit === 0) {\n                isEven = true;\n                break;\n \
    \           }\n        }\n        if (!isEven) {\n            result.push(digit);\n\
    \        }\n    }\n    return result.sort();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422,\n \
    \ 15,\n  33\n]\n\nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at\
    \ test (/tmp/tmpv8dyxj8y.js:29:12)\n    at Object.<anonymous> (/tmp/tmpv8dyxj8y.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422, 15,\
    \ 33 ],\n  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335048
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        if (x[i] % 2 === 0) {\n            result.push(x[i]);\n    \
    \    }\n    }\n    result.sort();\n    return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique_digits;\n  assert.deepEqual(candidate([15, 33, 1422, 1]),[1, 15, 33]);\n\
    \  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n  assert.deepEqual(candidate([12345,\
    \ 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135, 103, 31]),[31,\
    \ 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9ct4lfbc.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9ct4lfbc.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result: number[] = [];\n    for (let i = 0; i\
    \ < x.length; i++) {\n        let digit = x[i];\n        if (digit % 2 === 0)\
    \ {\n            result.push(digit);\n        }\n    }\n    result.sort();\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmppp87fewf.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmppp87fewf.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000
- exit_code: 1
  program: "//Given a list of positive integers x. return a sorted list of all \n\
    // elements that hasn't any even digit.\n// Note: Returned list should be sorted\
    \ in increasing order.\n// For example:\n// >>> unique_digits([15, 33, 1422, 1])\n\
    // [1, 15, 33]\n// >>> unique_digits([152, 323, 1422, 10])\n// []\nfunction unique_digits(x:\
    \ number[]): number[] {\n    let result = [];\n    for (let i = 0; i < x.length;\
    \ i++) {\n        let digit = x[i];\n        if (digit % 2 === 0) {\n        \
    \    result.push(digit);\n        }\n    }\n    result.sort();\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique_digits;\n  assert.deepEqual(candidate([15,\
    \ 33, 1422, 1]),[1, 15, 33]);\n  assert.deepEqual(candidate([152, 323, 1422, 10]),[]);\n\
    \  assert.deepEqual(candidate([12345, 2033, 111, 151]),[111, 151]);\n  assert.deepEqual(candidate([135,\
    \ 103, 31]),[31, 135]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1422\n]\n\
    \nshould loosely deep-equal\n\n[\n  1,\n  15,\n  33\n]\n    at test (/tmp/tmp9w1n2mjz.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9w1n2mjz.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1422 ],\n\
    \  expected: [ 1, 15, 33 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660335000

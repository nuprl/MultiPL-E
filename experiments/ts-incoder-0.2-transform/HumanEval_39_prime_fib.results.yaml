language: ts
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + 1;\n  }\n\
    \  if (n % 2 === 1) {\n    return prime_fib(n - 2) + 1;\n  }\n  return prime_fib(n\
    \ - 3) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp265l0n0b.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp265l0n0b.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 4) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n < 9) return prime_fib(n - 3) + prime_fib(n -\
    \ 5) + prime_fib(n - 7);\n  if (n < 18) return prime_fib(n - 7) + prime_fib(n\
    \ - 9);\n  return prime_fib(n - 11) + prime_fib(n - 13) + prime_fib(n - 15);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpt_wybdnz.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt_wybdnz.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738770
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 4) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n  if (n === 7) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6);\n  if (n === 8) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7);\n  if (n === 9) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8);\n  if (n === 10) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n\
    \ - 9);\n  if (n === 11) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n\
    \ - 7) + prime_fib(n - 8) + prime_fib(n - 9) + prime_fib(n - 10);\n  if (n ===\
    \ 12) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n\
    \ - 8) + prime_fib(n - 9) + prime_fib(n - 10) + prime_fib(n - 11);\n  if (n ===\
    \ 13) return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n\
    \ - 4) + prime_fib(n - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n\
    \ - 8) + prime_fib(n - 9) + prime_fib(n - 10) + prime_fib(n - 11) + prime_fib(n\
    \ - 12);\n  if (n === 14) return prime_fib(n - 1) + prime_\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp36hr5c7y.ts(42,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738727
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n < 3) {\n    return\
    \ n;\n  }\n  if (n % 2 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \  }\n  if (n % 3 == 0) {\n    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3)\
    \ + prime_fib(n - 4);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpjoz934h_.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjoz934h_.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number[] = [];\n  let a = 0;\n  let b = 1;\n \
    \ let c;\n  while (true) {\n    c = a + b;\n    fib.push(c);\n    if (c === n)\
    \ {\n      return fib[fib.length - 1];\n    }\n    a = b;\n    b = c;\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmph26ay094.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmph26ay094.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738770
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n % 2 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2);\n  }\n  if (n % 3 === 0) {\n\
    \    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpztoijb3a.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpztoijb3a.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  let fib: number = 0;\n  let prime: boolean;\n  for (let\
    \ i = 2; i <= n; i++) {\n    prime = true;\n    for (let j = 2; j < i; j++) {\n\
    \      if (i % j === 0) {\n        prime = false;\n        break;\n      }\n \
    \   }\n    if (prime) {\n      fib = fib + (i - 1);\n    }\n  }\n  return fib;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpaet54o2r.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpaet54o2r.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738726
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyz33ky1e.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz33ky1e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 10)\
    \ return prime_fib(10);\n  if (n === 15) return prime_fib(15);\n  if (n === 20)\
    \ return prime_fib(20);\n  if (n === 25) return prime_fib(25);\n  if (n === 30)\
    \ return prime_fib(30);\n  if (n === 35) return prime_fib(35);\n  if (n === 40)\
    \ return prime_fib(40);\n  if (n === 45) return prime_fib(45);\n  if (n === 50)\
    \ return prime_fib(50);\n  if (n === 55) return prime_fib(55);\n  if (n === 60)\
    \ return prime_fib(60);\n  if (n === 65) return prime_fib(65);\n  if (n === 70)\
    \ return prime_fib(70);\n  if (n === 75) return prime_fib(75);\n  if (n === 80)\
    \ return prime_fib(80);\n  if (n === 85) return prime_fib(85);\n  if (n === 90)\
    \ return prime_fib(90);\n  if (n === 95) return prime_fib(95);\n  if (n === 100)\
    \ return prime_fib(100);\n  if (n === 105) return prime_fib(105);\n  if (n ===\
    \ 110) return prime_fib(110);\n  if (n === 115) return prime_fib(115);\n  if (n\
    \ === 120) return prime_fib(120);\n  if (n === 125) return prime_fib(125);\n \
    \ if (n === 130) return prime_fib(130);\n  if (n === 135) return prime_fib(135);\n\
    \  if (n === 140) return prime_fib(140);\n  if (n === 145) return prime_fib(145);\n\
    \  if (n === 150) return prime_fib(150);\n  if (n === 155) return prime_fib(155);\n\
    \  if (n === 160) return prime_fib(160);\n  if (n === 165) return prime_fib(165);\n\
    \  if (n === 170) return prime_fib(170);\n  if (n === 175) return prime_fib(175);\n\
    \  if (n === 180) return prime_fib(180);\n  if (n === 185) return prime_fib(185);\n\
    \  if (n === 190) return prime_fib(190);\n  if (n === 195) return prime_fib(195);\n\
    \  if (n === 200) return prime_fib(200);\n  if (n === 205) return prime_fib(205);\n\
    \  if (n === 210) return prime_fib(210);\n  if (n === 215) return prime_fib(215);\n\
    \  if (n === 220) return prime_fib(220);\n  if (n === 225\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5h93ffk.ts(60,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg5h93ffk.ts(78,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4);\n  if (n === 10) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6);\n  if (n === 15) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8);\n  if (n === 20) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n\
    \ - 9) + prime_fib(n - 10);\n  if (n === 30) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n - 9) + prime_fib(n\
    \ - 10) + prime_fib(n - 11) + prime_fib(n - 12);\n  if (n === 40) return prime_fib(n\
    \ - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n\
    \ - 5) + prime_fib(n - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n\
    \ - 9) + prime_fib(n - 10) + prime_fib(n - 11) + prime_fib(n - 12) + prime_fib(n\
    \ - 13) + prime_fib(n - 14);\n  if (n === 50) return prime_fib(n - 1) + prime_fib(n\
    \ - 2) + prime_fib(n - 3) + prime_fib(n - 4) + prime_fib(n - 5) + prime_fib(n\
    \ - 6) + prime_fib(n - 7) + prime_fib(n - 8) + prime_fib(n - 9) + prime_fib(n\
    \ - 10) + prime_fib(n - 11) + prime_fib(n - 12) + prime_fib(n - 13) + prime_fib(n\
    \ - 14) + prime_fib(n - 15\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpka9cf8kd.ts(22,1): error TS1005: '','' expected.

    ../../../../../tmp/tmpka9cf8kd.ts(22,9): error TS1005: '','' expected.

    ../../../../../tmp/tmpka9cf8kd.ts(40,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738720
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + 1;\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n % 3 == 0) return\
    \ prime_fib(n / 3) + 1;\n  return prime_fib(n / 5) + 1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpyz33ky1e.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyz33ky1e.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721
- exit_code: 2
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return n;\n  }\n  if (n === 2) {\n  \
    \  return 1;\n  }\n  if (n === 3) {\n    return 2;\n  }\n  if (n === 5) {\n  \
    \  return 3;\n  }\n  if (n === 7) {\n    return 5;\n  }\n  if (n === 11) {\n \
    \   return 7;\n  }\n  if (n === 13) {\n    return 11;\n  }\n  if (n === 17) {\n\
    \    return 13;\n  }\n  if (n === 19) {\n    return 17;\n  }\n  if (n === 23)\
    \ {\n    return 19;\n  }\n  if (n === 29) {\n    return 23;\n  }\n  if (n ===\
    \ 31) {\n    return 29;\n  }\n  if (n === 37) {\n    return 31;\n  }\n  if (n\
    \ === 43) {\n    return 37;\n  }\n  if (n === 47) {\n    return 43;\n  }\n  if\
    \ (n === 53) {\n    return 53;\n  }\n  if (n === 59) {\n    return 59;\n  }\n\
    \  if (n === 61) {\n    return 61;\n  }\n  if (n === 67) {\n    return 67;\n \
    \ }\n  if (n === 73) {\n    return 73;\n  }\n  if (n === 79) {\n    return 79;\n\
    \  }\n  if (n === 83) {\n    return 83;\n  }\n  if (n === 89) {\n    return 89;\n\
    \  }\n  if (n === 97) {\n    return 97;\n  }\n  if (n === 101) {\n    return 101;\n\
    \  }\n  if (n === 103)\n    return 103;\n  if (n === 105)\n    return 105;\n \
    \ if (n === 107)\n    return 107;\n  if (n === 109)\n    return 109;\n  if (n\
    \ === 113)\n    return 113;\n  if (n === 127)\n    return 127;\n  if (n === 131)\n\
    \    return 131;\n  if (n === 137)\n    return 137;\n  if (n === 139)\n    return\
    \ 139;\n  if (n === 149)\n    return 149;\n  if (n === 151)\n    return 151;\n\
    \  if (n === 157)\n    return 157;\n  if (n === 163)\n    return 163;\n  if (n\
    \ === 167)\n    return 167;\n  if (n === 173)\n    return 173;\n  if (n === 179)\n\
    \    return 179;\n  if (n === 181)\n    return 181;\n  if (n === 191)\n    return\
    \ 191;\n  if (n === 193)\n    return 193;\n  if (n === 197)\n    return 197;\n\
    \  if (n === 199)\n    return 199;\n  if (n === 203)\n    return 203;\n  if (n\
    \ === 207)\n    return 207;\n  if (n === 209)\n    return 209;\n  if (n === 211)\n\
    \    return 211;\n  if (n === 213)\n    return 213;\n  if (n === 217)\n    return\
    \ 217;\n  if (n === 223)\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpojknjbcp.ts(162,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + prime_fib(n\
    \ - 2);\n  }\n  return prime_fib(n - 1) + prime_fib(n - 2);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmplnxq69wo.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplnxq69wo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(n - 1);\n  if (n ===\
    \ 7) return prime_fib(n - 2);\n  if (n % 2 === 1) return prime_fib(n - 3) + prime_fib(n\
    \ - 4);\n  return prime_fib(n - 3) + prime_fib(n - 5) + prime_fib(n - 7);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp3qgiry27.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3qgiry27.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738718
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) {\n    return 1;\n  }\n  if (n === 2) {\n  \
    \  return 2;\n  }\n  if (n % 2 === 0) {\n    return prime_fib(n - 1) + 1;\n  }\n\
    \  if (n % 2 === 1) {\n    return prime_fib(n - 2) + 1;\n  }\n  return prime_fib(n\
    \ - 3) + 1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
    \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
    \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmp265l0n0b.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp265l0n0b.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738723
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 3) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n % 2 == 0) return prime_fib(n / 2);\n  if (n\
    \ % 3 == 0) return prime_fib(n / 3) + prime_fib(n / 3);\n  return prime_fib(n\
    \ / 3) + prime_fib(n / 2) + prime_fib(n / 2);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
    \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n \
    \ assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n\
    \  assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
    \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmpb0r0782d.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb0r0782d.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738770
- exit_code: 1
  program: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
    // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
    \ number): number {\n  if (n < 2) return 1;\n  if (n < 5) return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  if (n === 5) return prime_fib(5);\n  if (n === 7)\
    \ return prime_fib(7);\n  if (n % 2 == 0) return prime_fib(2 * n);\n  if (n %\
    \ 3 == 0) return prime_fib(3 * n + 1);\n  if (n % 5 == 0) return prime_fib(5 *\
    \ n + 1);\n  return prime_fib(n / 2);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = prime_fib;\n\
    \  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n\
    \  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
    \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
    \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
    \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n2\n    at test (/tmp/tmped1vvrfw.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmped1vvrfw.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 2,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738721

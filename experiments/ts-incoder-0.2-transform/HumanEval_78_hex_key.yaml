name: HumanEval_78_hex_key
language: ts
prompt: "//You have been tasked to write a function that receives \n// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n// digits that are primes\
  \ (prime number, or a prime, is a natural number \n// greater than 1 that is not\
  \ a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n// So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is\
  \ always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n\
  // Examples:\n// >>> hex_key(\"AB\")\n// 1\n// >>> hex_key(\"1077E\")\n// 2\n//\
  \ >>> hex_key(\"ABED1A33\")\n// 4\n// >>> hex_key(\"123456789ABCDEF0\")\n// 6\n\
  // >>> hex_key(\"2020\")\n// 2\nfunction hex_key(num: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = hex_key;\n  assert.deepEqual(candidate(\"AB\"),1);\n\
  \  assert.deepEqual(candidate(\"1077E\"),2);\n  assert.deepEqual(candidate(\"ABED1A33\"\
  ),4);\n  assert.deepEqual(candidate(\"2020\"),2);\n  assert.deepEqual(candidate(\"\
  123456789ABCDEF0\"),6);\n  assert.deepEqual(candidate(\"112233445566778899AABBCCDDEEFF00\"\
  ),12);\n}\n\ntest();"
completions: ["  let hex = num.toUpperCase();\n  let hexDigits = hex.split('');\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \  let hexDigitCount33 = hexDigitCount32", "    let hex = num.toUpperCase();\n\
    \    let hexArray = hex.split(\"\");\n    let hexArrayLength = hexArray.length;\n\
    \    let hexDigitCount = hexArrayLength;\n    let hexDigitCount2 = hexDigitCount\
    \ * 2;\n    let hexDigitCount3 = hexDigitCount * 3;\n    let hexDigitCount4 =\
    \ hexDigitCount * 4;\n    let hexDigitCount5 = hexDigitCount * 5;\n    let hexDigitCount6\
    \ = hexDigitCount * 6;\n    let hexDigitCount7 = hexDigitCount * 7;\n    let hexDigitCount8\
    \ = hexDigitCount * 8;\n    let hexDigitCount9 = hexDigitCount * 9;\n    let hexDigitCount10\
    \ = hexDigitCount * 10;\n    let hexDigitCount11 = hexDigitCount * 11;\n    let\
    \ hexDigitCount12 = hexDigitCount * 12;\n    let hexDigitCount13 = hexDigitCount\
    \ * 13;\n    let hexDigitCount14 = hexDigitCount * 14;\n    let hexDigitCount15\
    \ = hexDigitCount * 15;\n    let hexDigitCount16 = hexDigitCount * 16;\n    let\
    \ hexDigitCount17 = hexDigitCount * 17;\n    let hexDigitCount18 = hexDigitCount\
    \ * 18;\n    let hexDigitCount19 = hexDigitCount * 19;\n    let hexDigitCount20\
    \ = hexDigitCount * 20;\n    let hexDigitCount21 = hexDigitCount * 21;\n    let\
    \ hexDigitCount22 = hexDigitCount * 22;\n    let hexDigitCount23 = hexDigitCount\
    \ * 23;\n    let hexDigitCount24 = hexDigitCount * 24;\n    let hexDigitCount25\
    \ = hexDigitCount * 25;\n    let hexDigitCount26 = hexDigitCount * 26;\n    let\
    \ hexDigitCount27 = hexDigitCount * 27;\n    let hexDigitCount28 = hexDigitCount\
    \ * 28;\n    let hexDigitCount29 = hexDigitCount * 29;\n    let hexDigitCount30\
    \ = hexDigitCount * 30;\n    let hexDigitCount31 = hexDigitCount * 31;\n    let\
    \ hexDigitCount32 = hexDigitCount * 32;\n    let hexDigitCount33 = hexDigitCount\
    \ * 33;\n    let hexDigitCount34 = hexDigitCount * 34;\n    let hexDigitCount35\
    \ = hexDigitCount * 35;\n    let hexDigitCount36 = hexDigitCount * 36;\n    let\
    \ hexDigitCount37 = hexDigitCount * 37;\n    let hexDigitCount38 = hexDigitCount\
    \ * 38;\n    let hexDigitCount39 = hexDigitCount * 39;\n    let hexDigitCount40\
    \ = hexDigitCount * 40;\n    let ", "    let hex = num.toUpperCase();\n    let\
    \ digits = hex.split(\"\");\n    let primes = 0;\n    let prime_digits: number[]\
    \ = [];\n    let prime_digits_len: number[] = [];\n    let prime_digits_sum: number[]\
    \ = [];\n    let prime_digits_sum_len: number[] = [];\n    let prime_digits_product:\
    \ number[] = [];\n    let prime_digits_product_len: number[] = [];\n    let prime_digits_product2:\
    \ number[] = [];\n    let prime_digits_product2_len: number[] = [];\n    let prime_digits_product3:\
    \ number[] = [];\n    let prime_digits_product3_len: number[] = [];\n    let prime_digits_product4:\
    \ number[] = [];\n    let prime_digits_product4_len: number[] = [];\n    let prime_digits_product5:\
    \ number[] = [];\n    let prime_digits_product5_len: number[] = [];\n    let prime_digits_product6:\
    \ number[] = [];\n    let prime_digits_product6_len: number[] = [];\n    let prime_digits_product7:\
    \ number[] = [];\n    let prime_digits_product7_len: number[] = [];\n    let prime_digits_product8:\
    \ number[] = [];\n    let prime_digits_product8_len: number[] = [];\n    let prime_digits_product9:\
    \ number[] = [];\n    let prime_digits_product9_len: number[] = [];\n    let prime_digits_product10:\
    \ number[] = [];\n    let prime_digits_product10_len: number[] = [];\n    let\
    \ prime_digits_product11: number[] = [];\n    let prime_digits_product11_len:\
    \ number[] = [];\n    let prime_digits_product12: number[] = [];\n    let prime_digits_product12_len:\
    \ number[] = [];\n    let prime_digits_product13: number[] = [];\n    let prime_digits_product13_len:\
    \ number[] = [];\n    let prime_digits_product14: number[] = [];\n    let prime_digits_product14_len:\
    \ number[] = [];\n    let prime_digits_product15: number[] = [];\n    let prime_digits_product15_len:\
    \ number[] = [];\n    let prime_digits_product16: number[] = [];\n    let prime_digits_product16_len:\
    \ number[] = [];\n    let prime_digits_product17: number[] = [];\n    let prime_digits_product17_len:\
    \ number[] = [];\n    let prime_digits_product18: number[] = [];\n    let prime_digits_product18_len:\
    \ number[] = [];\n    let prime_digits_product", "    let hex = num.toUpperCase();\n\
    \    let digits = hex.split(\"\");\n    let primes = 0;\n    let prime: number\
    \ = 0;\n    let prime_found = false;\n    for (let i = 0; i < digits.length; i++)\
    \ {\n        let digit = parseInt(digits[i]);\n        if (digit > 9) {\n    \
    \        digit = digit - 10;\n        }\n        if (digit % 2 === 0) {\n    \
    \        prime++;\n        }\n        else {\n            if (prime > 1) {\n \
    \               prime_found = true;\n            }\n            prime = digit;\n\
    \        }\n    }\n    if (prime_found === true) {\n        return prime;\n  \
    \  }\n    else {\n        return 0;\n    }\n}\n", "    let hex = num.toUpperCase();\n\
    \    let digits = hex.split(\"\");\n    let primes = [];\n    let prime_digits\
    \ = [];\n    let prime_digits_len = 0;\n    let prime_digits_sum = 0;\n    let\
    \ prime_digits_sum2 = 0;\n    let prime_digits_sum3 = 0;\n    let prime_digits_sum4\
    \ = 0;\n    let prime_digits_sum5 = 0;\n    let prime_digits_sum6 = 0;\n    let\
    \ prime_digits_sum7 = 0;\n    let prime_digits_sum8 = 0;\n    let prime_digits_sum9\
    \ = 0;\n    let prime_digits_sum10 = 0;\n    let prime_digits_sum11 = 0;\n   \
    \ let prime_digits_sum12 = 0;\n    let prime_digits_sum13 = 0;\n    let prime_digits_sum14\
    \ = 0;\n    let prime_digits_sum15 = 0;\n    let prime_digits_sum16 = 0;\n   \
    \ let prime_digits_sum17 = 0;\n    let prime_digits_sum18 = 0;\n    let prime_digits_sum19\
    \ = 0;\n    let prime_digits_sum20 = 0;\n    let prime_digits_sum21 = 0;\n   \
    \ let prime_digits_sum22 = 0;\n    let prime_digits_sum23 = 0;\n    let prime_digits_sum24\
    \ = 0;\n    let prime_digits_sum25 = 0;\n    let prime_digits_sum26 = 0;\n   \
    \ let prime_digits_sum27 = 0;\n    let prime_digits_sum28 = 0;\n    let prime_digits_sum29\
    \ = 0;\n    let prime_digits_sum30 = 0;\n    let prime_digits_sum31 = 0;\n   \
    \ let prime_digits_sum32 = 0;\n    let prime_digits_sum33 = 0;\n    let prime_digits_sum34\
    \ = 0;\n    let prime_digits_sum35 = 0;\n    let prime_digits_sum36 = 0;\n   \
    \ let prime_digits_sum37 = 0;\n    let prime_digits_sum38 = 0;\n    let prime_digits_sum39\
    \ = 0;\n    let prime_digits_sum40 = 0;\n    let prime_digits_sum41 = 0;\n   \
    \ let prime_digits_sum42 = 0;\n    let prime_digits_sum43 = 0;\n    let prime_digits_sum44\
    \ = 0;\n    let prime_digits_sum45 = 0;\n    let prime_digits_sum46 = 0;\n   \
    \ let prime_digits_sum47 = 0;\n    let prime_digits_sum48 = 0;\n    let prime_digits_sum49\
    \ = 0;\n    let prime_digits_sum50 = 0;\n    let prime_digits_sum51 = 0;\n   \
    \ let prime_digits_sum52 = 0;\n    let prime_digits_sum53 = 0;\n    let prime_digits_sum54",
  "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimes = [];\n\
    \  let hexDigitPrimeIndex = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount -\
    \ 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMaxMin = hexDigitPrimeIndexMax\
    \ - 1;\n  let hexDigitPrimeIndexMinMax = hexDigitPrimeIndexMin + 1;\n  let hexDigitPrimeIndexMaxMinMax\
    \ = hexDigitPrimeIndexMaxMin + 1;\n  let hexDigitPrimeIndexMinMaxMax = hexDigitPrimeIndexMinMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax = hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ + 1;\n  let hexDigitPrimeIndexMinMaxMaxMaxMaxMaxMaxMaxMaxMaxMaxMax", "    let\
    \ hex = num.toUpperCase();\n    let digits = hex.split(\"\");\n    let primes:\
    \ number[] = [];\n    for (let i = 0; i < digits.length; i++) {\n        let digit\
    \ = parseInt(digits[i]);\n        if (digit > 0 && digit <= 9) {\n           \
    \ primes.push(digit);\n        }\n    }\n    let primesCount = primes.length;\n\
    \    let primesSum = 0;\n    for (let i = 0; i < primesCount; i++) {\n       \
    \ primesSum += primes[i];\n    }\n    let primesSumHex = primesSum.toString(16);\n\
    \    let primesSumHexDigits = primesSumHex.split(\"\");\n    let primesSumHexDigitsCount\
    \ = primesSumHexDigits.length;\n    let primesSumHexDigitsSum = 0;\n    for (let\
    \ i = 0; i < primesSumHexDigitsCount; i++) {\n        primesSumHexDigitsSum +=\
    \ parseInt(primesSumHexDigits[i]);\n    }\n    let primesSumHexDigitsSumHex =\
    \ primesSumHexDigitsSum.toString(16);\n    let primesSumHexDigitsSumHexDigits\
    \ = primesSumHexDigitsSumHex.split(\"\");\n    let primesSumHexDigitsSumHexDigitsCount\
    \ = primesSumHexDigitsSumHexDigits.length;\n    let primesSumHexDigitsSumHexDigitsSum\
    \ = 0;\n    for (let i = 0; i < primesSumHexDigitsSumHexDigitsCount; i++) {\n\
    \        primesSumHexDigitsSumHexDigitsSum += parseInt(primesSumHexDigitsSumHexDigits[i]);\n\
    \    }\n    let primesSumHexDigitsSumHexDigitsSumHex = primesSumHexDigitsSumHexDigitsSum.toString(16);\n\
    \    let primesSumHexDigitsSumHexDigitsSumHexDigits = primesSumHexDigitsSumHexDigitsSumHex.split(\"\
    \");\n    let primesSumHexDigitsSumHexDigitsSumHexDigitsCount = primesSumHexDigitsSumHexDigitsSumHexDigits.length;\n\
    \    let primesSumHexDigitsSumHexDigitsSumHexDigitsSum = 0;\n    for (let i =\
    \ 0; i < primesSumHexDigitsSumHexDigitsSumHexDigitsCount; i++) {\n        primesSumHexDigitsSumHexDigitsSumHexDigitsSum\
    \ += parseInt(primesSumHexDigitsSumHexDigitsSumHexDigits[i]);\n    }\n    let\
    \ primesSumHexDigitsSumHexDigitsSumHexDigitsSumHex = primesSumHexDigitsSumHexDigitsSumHexDigitsSum.toString(16);\n\
    \    let primesSumHexDigitsSumHexDigitsSumHexDig", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount*2;\n    let hexDigitCount3 = hexDigitCount2*2;\n\
    \    let hexDigitCount4 = hexDigitCount3*2;\n    let hexDigitCount5 = hexDigitCount4*2;\n\
    \    let hexDigitCount6 = hexDigitCount5*2;\n    let hexDigitCount7 = hexDigitCount6*2;\n\
    \    let hexDigitCount8 = hexDigitCount7*2;\n    let hexDigitCount9 = hexDigitCount8*2;\n\
    \    let hexDigitCount10 = hexDigitCount9*2;\n    let hexDigitCount11 = hexDigitCount10*2;\n\
    \    let hexDigitCount12 = hexDigitCount11*2;\n    let hexDigitCount13 = hexDigitCount12*2;\n\
    \    let hexDigitCount14 = hexDigitCount13*2;\n    let hexDigitCount15 = hexDigitCount14*2;\n\
    \    let hexDigitCount16 = hexDigitCount15*2;\n    let hexDigitCount17 = hexDigitCount16*2;\n\
    \    let hexDigitCount18 = hexDigitCount17*2;\n    let hexDigitCount19 = hexDigitCount18*2;\n\
    \    let hexDigitCount20 = hexDigitCount19*2;\n    let hexDigitCount21 = hexDigitCount20*2;\n\
    \    let hexDigitCount22 = hexDigitCount21*2;\n    let hexDigitCount23 = hexDigitCount22*2;\n\
    \    let hexDigitCount24 = hexDigitCount23*2;\n    let hexDigitCount25 = hexDigitCount24*2;\n\
    \    let hexDigitCount26 = hexDigitCount25*2;\n    let hexDigitCount27 = hexDigitCount26*2;\n\
    \    let hexDigitCount28 = hexDigitCount27*2;\n    let hexDigitCount29 = hexDigitCount28*2;\n\
    \    let hexDigitCount30 = hexDigitCount29*2;\n    let hexDigitCount31 = hexDigitCount30*2;\n\
    \    let hexDigitCount32 = hexDigitCount31*2;\n    let hexDigitCount33 = hexDigitCount32*2;\n\
    \    let hexDigitCount34 = hexDigitCount33*2;\n    let hexDigitCount35 = hexDigitCount34*2;\n\
    \    let hexDigitCount36 = hexDigitCount35*2;\n    let hexDigitCount37 = hexDigitCount36*2;\n\
    \    let hexDigitCount38 = hexDigitCount37*2;\n    let hexDigitCount39 = hexDigitCount38*2;\n\
    \    let hexDigitCount40 = hexDigitCount39*", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimes: number[] = [];\n    let hexDigitPrimeCount: number =\
    \ 0;\n    let hexDigitPrimeIndex: number = 0;\n    let hexDigitPrimeIndex2: number\
    \ = 0;\n    let hexDigitPrimeIndex3: number = 0;\n    let hexDigitPrimeIndex4:\
    \ number = 0;\n    let hexDigitPrimeIndex5: number = 0;\n    let hexDigitPrimeIndex6:\
    \ number = 0;\n    let hexDigitPrimeIndex7: number = 0;\n    let hexDigitPrimeIndex8:\
    \ number = 0;\n    let hexDigitPrimeIndex9: number = 0;\n    let hexDigitPrimeIndex10:\
    \ number = 0;\n    let hexDigitPrimeIndex11: number = 0;\n    let hexDigitPrimeIndex12:\
    \ number = 0;\n    let hexDigitPrimeIndex13: number = 0;\n    let hexDigitPrimeIndex14:\
    \ number = 0;\n    let hexDigitPrimeIndex15: number = 0;\n    let hexDigitPrimeIndex16:\
    \ number = 0;\n    let hexDigitPrimeIndex17: number = 0;\n    let hexDigitPrimeIndex18:\
    \ number = 0;\n    let hexDigitPrimeIndex19: number = 0;\n    let hexDigitPrimeIndex20:\
    \ number = 0;\n    let hexDigitPrimeIndex21: number = 0;\n    let hexDigitPrimeIndex22:\
    \ number = 0;\n    let hexDigitPrimeIndex23: number = 0;\n    let hexDigitPrimeIndex24:\
    \ number = 0;\n    let hexDigitPrimeIndex25: number = 0;\n    let hexDigitPrimeIndex26:\
    \ number = 0;\n    let hexDigitPrimeIndex27: number = 0;\n    let hexDigitPrimeIndex28:\
    \ number = 0;\n    let hexDigitPrimeIndex29: number = 0;\n    let hexDigitPrimeIndex30:\
    \ number = 0;\n    let hexDigitPrimeIndex31: number = 0;\n    let hexDigitPrimeIndex32:\
    \ number = 0;\n    let hexDigitPrimeIndex33: number = 0;\n    let hexDigitPrimeIndex34:\
    \ number = 0;\n    let hexDigitPrimeIndex35: number = 0;\n    let hexDigitPrimeIndex36:\
    \ number = 0;\n    let hexDigitPrimeIndex37: number = 0;\n    let hexDigitPrimeIndex38:\
    \ number = 0;\n    let hexDigitPrimeIndex39: number = 0;\n    let hexDigitPrimeIndex40:\
    \ number = 0;\n    let hexDigitPrimeIndex41: number = 0;\n    let hexDigitPrimeIndex42:\
    \ number = 0;\n    let hexDigitPrimeIndex43: number = 0;\n", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = [...hex];\n    let hexDigitCount = hexDigits.length;\n  \
    \  let hexDigitPrimes: number[] = [];\n    let hexDigitPrimeCount = 0;\n    let\
    \ hexDigitPrimeIndex = 0;\n    let hexDigitPrimeIndex2 = 0;\n    let hexDigitPrimeIndex3\
    \ = 0;\n    let hexDigitPrimeIndex4 = 0;\n    let hexDigitPrimeIndex5 = 0;\n \
    \   let hexDigitPrimeIndex6 = 0;\n    let hexDigitPrimeIndex7 = 0;\n    let hexDigitPrimeIndex8\
    \ = 0;\n    let hexDigitPrimeIndex9 = 0;\n    let hexDigitPrimeIndex10 = 0;\n\
    \    let hexDigitPrimeIndex11 = 0;\n    let hexDigitPrimeIndex12 = 0;\n    let\
    \ hexDigitPrimeIndex13 = 0;\n    let hexDigitPrimeIndex14 = 0;\n    let hexDigitPrimeIndex15\
    \ = 0;\n    let hexDigitPrimeIndex16 = 0;\n    let hexDigitPrimeIndex17 = 0;\n\
    \    let hexDigitPrimeIndex18 = 0;\n    let hexDigitPrimeIndex19 = 0;\n    let\
    \ hexDigitPrimeIndex20 = 0;\n    let hexDigitPrimeIndex21 = 0;\n    let hexDigitPrimeIndex22\
    \ = 0;\n    let hexDigitPrimeIndex23 = 0;\n    let hexDigitPrimeIndex24 = 0;\n\
    \    let hexDigitPrimeIndex25 = 0;\n    let hexDigitPrimeIndex26 = 0;\n    let\
    \ hexDigitPrimeIndex27 = 0;\n    let hexDigitPrimeIndex28 = 0;\n    let hexDigitPrimeIndex29\
    \ = 0;\n    let hexDigitPrimeIndex30 = 0;\n    let hexDigitPrimeIndex31 = 0;\n\
    \    let hexDigitPrimeIndex32 = 0;\n    let hexDigitPrimeIndex33 = 0;\n    let\
    \ hexDigitPrimeIndex34 = 0;\n    let hexDigitPrimeIndex35 = 0;\n    let hexDigitPrimeIndex36\
    \ = 0;\n    let hexDigitPrimeIndex37 = 0;\n    let hexDigitPrimeIndex38 = 0;\n\
    \    let hexDigitPrimeIndex39 = 0;\n    let hexDigitPrimeIndex40 = 0;\n    let\
    \ hexDigitPrimeIndex41 = 0;\n    let hexDigitPrimeIndex42 = 0;\n    let hexDigitPrimeIndex43\
    \ = 0;\n    let hexDigitPrimeIndex44 = 0;\n    let hexDigitPrimeIndex45 = 0;\n\
    \    let hexDigitPrimeIndex46 = 0;\n    let hexDigitPrimeIndex47 = 0;\n    let\
    \ hexDigitPrimeIndex48 = 0;\n    let hexDigitPrimeIndex49 = 0;\n    let hexDigitPrimeIndex50\
    \ = 0;\n    let hexDigitPrimeIndex51 = 0;\n    let hexDigitPrimeIndex52 = 0;\n\
    \    let hexDigitPrimeIndex53 = 0;", "  let hex = num.toUpperCase();\n  let hexDigits\
    \ = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitPrimes:\
    \ number[] = [];\n  let hexDigitPrimeCount: number = 0;\n  let hexDigitPrimeIndex:\
    \ number = 0;\n  let hexDigitPrimeIndex2: number = 0;\n  let hexDigitPrimeIndex3:\
    \ number = 0;\n  let hexDigitPrimeIndex4: number = 0;\n  let hexDigitPrimeIndex5:\
    \ number = 0;\n  let hexDigitPrimeIndex6: number = 0;\n  let hexDigitPrimeIndex7:\
    \ number = 0;\n  let hexDigitPrimeIndex8: number = 0;\n  let hexDigitPrimeIndex9:\
    \ number = 0;\n  let hexDigitPrimeIndex10: number = 0;\n  let hexDigitPrimeIndex11:\
    \ number = 0;\n  let hexDigitPrimeIndex12: number = 0;\n  let hexDigitPrimeIndex13:\
    \ number = 0;\n  let hexDigitPrimeIndex14: number = 0;\n  let hexDigitPrimeIndex15:\
    \ number = 0;\n  let hexDigitPrimeIndex16: number = 0;\n  let hexDigitPrimeIndex17:\
    \ number = 0;\n  let hexDigitPrimeIndex18: number = 0;\n  let hexDigitPrimeIndex19:\
    \ number = 0;\n  let hexDigitPrimeIndex20: number = 0;\n  let hexDigitPrimeIndex21:\
    \ number = 0;\n  let hexDigitPrimeIndex22: number = 0;\n  let hexDigitPrimeIndex23:\
    \ number = 0;\n  let hexDigitPrimeIndex24: number = 0;\n  let hexDigitPrimeIndex25:\
    \ number = 0;\n  let hexDigitPrimeIndex26: number = 0;\n  let hexDigitPrimeIndex27:\
    \ number = 0;\n  let hexDigitPrimeIndex28: number = 0;\n  let hexDigitPrimeIndex29:\
    \ number = 0;\n  let hexDigitPrimeIndex30: number = 0;\n  let hexDigitPrimeIndex31:\
    \ number = 0;\n  let hexDigitPrimeIndex32: number = 0;\n  let hexDigitPrimeIndex33:\
    \ number = 0;\n  let hexDigitPrimeIndex34: number = 0;\n  let hexDigitPrimeIndex35:\
    \ number = 0;\n  let hexDigitPrimeIndex36: number = 0;\n  let hexDigitPrimeIndex37:\
    \ number = 0;\n  let hexDigitPrimeIndex38: number = 0;\n  let hexDigitPrimeIndex39:\
    \ number = 0;\n  let hexDigitPrimeIndex40: number = 0;\n  let hexDigitPrimeIndex41:\
    \ number = 0;\n  let hexDigitPrimeIndex42: number = 0;\n  let hexDigitPrimeIndex43:\
    \ number = 0;\n", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\
    \");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \  let hexDigitCount33 = hexDigitCount", "  let hex = num.toUpperCase();\n  let\
    \ hexDigits = hex.split('');\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33 = hexDigitCount32",
  "    let hex = num.toUpperCase();\n    let hexDigits = [...hex];\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    let hexDigitCount33 = hexDigitCount32", "    let hex = num.toUpperCase();\n\
    \    let result = 0;\n    for (let i = 0; i < hex.length; i++) {\n        let\
    \ digit = parseInt(hex.charAt(i));\n        if (digit >= 0 && digit <= 9) {\n\
    \            result += digit * Math.pow(16, hex.length - i - 1);\n        }\n\
    \    }\n    return result;\n}\n", "    let hex = num.toUpperCase();\n    let digits\
    \ = hex.split(\"\");\n    let primes = 0;\n    let prime_digits: number[] = [];\n\
    \    let prime_digits_len: number[] = [];\n    let prime_digits_len_count: number[]\
    \ = [];\n    let prime_digits_len_count2: number[] = [];\n    let prime_digits_len_count3:\
    \ number[] = [];\n    let prime_digits_len_count4: number[] = [];\n    let prime_digits_len_count5:\
    \ number[] = [];\n    let prime_digits_len_count6: number[] = [];\n    let prime_digits_len_count7:\
    \ number[] = [];\n    let prime_digits_len_count8: number[] = [];\n    let prime_digits_len_count9:\
    \ number[] = [];\n    let prime_digits_len_count10: number[] = [];\n    let prime_digits_len_count11:\
    \ number[] = [];\n    let prime_digits_len_count12: number[] = [];\n    let prime_digits_len_count13:\
    \ number[] = [];\n    let prime_digits_len_count14: number[] = [];\n    let prime_digits_len_count15:\
    \ number[] = [];\n    let prime_digits_len_count16: number[] = [];\n    let prime_digits_len_count17:\
    \ number[] = [];\n    let prime_digits_len_count18: number[] = [];\n    let prime_digits_len_count19:\
    \ number[] = [];\n    let prime_digits_len_count20: number[] = [];\n    let prime_digits_len_count21:\
    \ number[] = [];\n    let prime_digits_len_count22: number[] = [];\n    let prime_digits_len_count23:\
    \ number[] = [];\n    let prime_digits_len_count24: number[] = [];\n    let prime_digits_len_count25:\
    \ number[] = [];\n    let prime_digits_len_count26: number[] = [];\n    let prime_digits_len_count27:\
    \ number[] = [];\n    let prime_digits_len_count28: number[] = [];\n    let prime_digits_len_count29:\
    \ number[] = [];\n    let prime_digits_len_count30: number[] = [];\n    let prime_digits_len_count31:\
    \ number[] = [];\n    let prime_digits_len_count32: number[] = [];\n    let prime_digits_len_count33:\
    \ number[] = [];\n    let prime_digits_len_count34: number[] = [];\n    let prime_digits_len_count35:\
    \ number[] = [];\n    let prime_digits_len_count36: number[] = [];\n    let prime_digits_len_count37:\
    \ number", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitPrimes: number[] = [];\n\
    \  let hexDigitPrimeCount = 0;\n  let hexDigitPrimeIndex = 0;\n  let hexDigitPrimeIndex2\
    \ = 0;\n  let hexDigitPrimeIndex3 = 0;\n  let hexDigitPrimeIndex4 = 0;\n  let\
    \ hexDigitPrimeIndex5 = 0;\n  let hexDigitPrimeIndex6 = 0;\n  let hexDigitPrimeIndex7\
    \ = 0;\n  let hexDigitPrimeIndex8 = 0;\n  let hexDigitPrimeIndex9 = 0;\n  let\
    \ hexDigitPrimeIndex10 = 0;\n  let hexDigitPrimeIndex11 = 0;\n  let hexDigitPrimeIndex12\
    \ = 0;\n  let hexDigitPrimeIndex13 = 0;\n  let hexDigitPrimeIndex14 = 0;\n  let\
    \ hexDigitPrimeIndex15 = 0;\n  let hexDigitPrimeIndex16 = 0;\n  let hexDigitPrimeIndex17\
    \ = 0;\n  let hexDigitPrimeIndex18 = 0;\n  let hexDigitPrimeIndex19 = 0;\n  let\
    \ hexDigitPrimeIndex20 = 0;\n  let hexDigitPrimeIndex21 = 0;\n  let hexDigitPrimeIndex22\
    \ = 0;\n  let hexDigitPrimeIndex23 = 0;\n  let hexDigitPrimeIndex24 = 0;\n  let\
    \ hexDigitPrimeIndex25 = 0;\n  let hexDigitPrimeIndex26 = 0;\n  let hexDigitPrimeIndex27\
    \ = 0;\n  let hexDigitPrimeIndex28 = 0;\n  let hexDigitPrimeIndex29 = 0;\n  let\
    \ hexDigitPrimeIndex30 = 0;\n  let hexDigitPrimeIndex31 = 0;\n  let hexDigitPrimeIndex32\
    \ = 0;\n  let hexDigitPrimeIndex33 = 0;\n  let hexDigitPrimeIndex34 = 0;\n  let\
    \ hexDigitPrimeIndex35 = 0;\n  let hexDigitPrimeIndex36 = 0;\n  let hexDigitPrimeIndex37\
    \ = 0;\n  let hexDigitPrimeIndex38 = 0;\n  let hexDigitPrimeIndex39 = 0;\n  let\
    \ hexDigitPrimeIndex40 = 0;\n  let hexDigitPrimeIndex41 = 0;\n  let hexDigitPrimeIndex42\
    \ = 0;\n  let hexDigitPrimeIndex43 = 0;\n  let hexDigitPrimeIndex44 = 0;\n  let\
    \ hexDigitPrimeIndex45 = 0;\n  let hexDigitPrimeIndex46 = 0;\n  let hexDigitPrimeIndex47\
    \ = 0;\n  let hexDigitPrimeIndex48 = 0;\n  let hexDigitPrimeIndex49 = 0;\n  let\
    \ hexDigitPrimeIndex50 = 0;\n  let hexDigitPrimeIndex51 = 0;\n  let hexDigitPrimeIndex52\
    \ = 0;\n  let hexDigitPrimeIndex53", "  let hex = num.toUpperCase();\n  let digits\
    \ = hex.split(\"\");\n  let primes: number[] = [];\n  let prime: number = 2;\n\
    \  let primeCount: number = 0;\n  let primeCount2: number = 0;\n  let primeCount3:\
    \ number = 0;\n  let primeCount4: number = 0;\n  let primeCount5: number = 0;\n\
    \  let primeCount6: number = 0;\n  let primeCount7: number = 0;\n  let primeCount8:\
    \ number = 0;\n  let primeCount9: number = 0;\n  let primeCount10: number = 0;\n\
    \  let primeCount11: number = 0;\n  let primeCount12: number = 0;\n  let primeCount13:\
    \ number = 0;\n  let primeCount14: number = 0;\n  let primeCount15: number = 0;\n\
    \  let primeCount16: number = 0;\n  let primeCount17: number = 0;\n  let primeCount18:\
    \ number = 0;\n  let primeCount19: number = 0;\n  let primeCount20: number = 0;\n\
    \  let primeCount21: number = 0;\n  let primeCount22: number = 0;\n  let primeCount23:\
    \ number = 0;\n  let primeCount24: number = 0;\n  let primeCount25: number = 0;\n\
    \  let primeCount26: number = 0;\n  let primeCount27: number = 0;\n  let primeCount28:\
    \ number = 0;\n  let primeCount29: number = 0;\n  let primeCount30: number = 0;\n\
    \  let primeCount31: number = 0;\n  let primeCount32: number = 0;\n  let primeCount33:\
    \ number = 0;\n  let primeCount34: number = 0;\n  let primeCount35: number = 0;\n\
    \  let primeCount36: number = 0;\n  let primeCount37: number = 0;\n  let primeCount38:\
    \ number = 0;\n  let primeCount39: number = 0;\n  let primeCount40: number = 0;\n\
    \  let primeCount41: number = 0;\n  let primeCount42: number = 0;\n  let primeCount43:\
    \ number = 0;\n  let primeCount44: number = 0;\n  let primeCount45: number = 0;\n\
    \  let primeCount46: number = 0;\n  let primeCount47: number = 0;\n  let primeCount48:\
    \ number = 0;\n  let primeCount49: number = 0;\n  let primeCount50: number = 0;\n\
    \  let primeCount51: number = 0;\n  let primeCount52: number = 0;\n  let primeCount53:\
    \ number = 0;\n  let primeCount54: number = 0;\n  let primeCount55: number = 0;\n\
    \  let primeCount56: number = 0;\n  let primeCount57: number = 0;\n  let primeCount58:\
    \ number = 0;\n  let primeCount59: number = 0;\n  let primeCount60: number = 0;\n\
    \  let primeCount61: number = 0;\n  let ", "  let hex = num.toUpperCase();\n \
    \ let digits = hex.split(\"\");\n  let primes: number[] = [];\n  let prime: number\
    \ = 0;\n  let primeCount: number = 0;\n  for (let i = 0; i < digits.length; i++)\
    \ {\n    let digit = parseInt(digits[i]);\n    if (digit > 9) {\n      primeCount++;\n\
    \      primes.push(digit);\n    }\n  }\n  for (let i = 0; i < primes.length; i++)\
    \ {\n    let prime = primes[i];\n    for (let j = i + 1; j < primes.length; j++)\
    \ {\n      let prime2 = primes[j];\n      if (prime * prime2 === prime2) {\n \
    \       primeCount++;\n      }\n    }\n  }\n  return primeCount;\n}\n", "  let\
    \ hex = num.toUpperCase();\n  let hexDigits = [\n    \"0\", \"1\", \"2\", \"3\"\
    , \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\"\
    , \"F\"\n  ];\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 =\
    \ hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2;\n  let hexDigitCount4\
    \ = hexDigitCount3;\n  let hexDigitCount5 = hexDigitCount4;\n  let hexDigitCount6\
    \ = hexDigitCount5;\n  let hexDigitCount7 = hexDigitCount6;\n  let hexDigitCount8\
    \ = hexDigitCount7;\n  let hexDigitCount9 = hexDigitCount8;\n  let hexDigitCount10\
    \ = hexDigitCount9;\n  let hexDigitCount11 = hexDigitCount10;\n  let hexDigitCount12\
    \ = hexDigitCount11;\n  let hexDigitCount13 = hexDigitCount12;\n  let hexDigitCount14\
    \ = hexDigitCount13;\n  let hexDigitCount15 = hexDigitCount14;\n  let hexDigitCount16\
    \ = hexDigitCount15;\n  let hexDigitCount17 = hexDigitCount16;\n  let hexDigitCount18\
    \ = hexDigitCount17;\n  let hexDigitCount19 = hexDigitCount18;\n  let hexDigitCount20\
    \ = hexDigitCount19;\n  let hexDigitCount21 = hexDigitCount20;\n  let hexDigitCount22\
    \ = hexDigitCount21;\n  let hexDigitCount23 = hexDigitCount22;\n  let hexDigitCount24\
    \ = hexDigitCount23;\n  let hexDigitCount25 = hexDigitCount24;\n  let hexDigitCount26\
    \ = hexDigitCount25;\n  let hexDigitCount27 = hexDigitCount26;\n  let hexDigitCount28\
    \ = hexDigitCount27;\n  let hexDigitCount29 = hexDigitCount28;\n  let hexDigitCount30\
    \ = hexDigitCount29;\n  let hexDigitCount31 = hexDigitCount30;\n  let hexDigitCount32\
    \ = hexDigitCount31;\n  let hexDigitCount33 = hexDigitCount32;\n  let hexDigitCount34\
    \ = hexDigitCount33;\n  let hexDigitCount35 = hexDigitCount34;\n  let hexDigitCount36\
    \ = hexDigitCount35;\n  let hexDigitCount37 = hexDigitCount36;\n  let hexDigitCount38\
    \ = hexDigitCount37;\n  let hexDigitCount39 = hexDigitCount38;\n  let hexDigitCount40\
    \ = hexDigitCount39;\n  let hexDigitCount41 = hexDigitCount40;\n  let hexDigitCount42\
    \ = hexDigitCount4", "  let hex = num.toUpperCase();\n  let hexDigits = [\n  \
    \  \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\"\
    , \"B\", \"C\", \"D\", \"E\", \"F\"\n  ];\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigit", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCountPrime = 0;\n  let hexDigitCountPrime2 = hexDigitCountPrime;\n\
    \  let hexDigitCountPrime3 = hexDigitCountPrime2;\n  let hexDigitCountPrime4 =\
    \ hexDigitCountPrime3;\n  let hexDigitCountPrime5 = hexDigitCountPrime4;\n  let\
    \ hexDigitCountPrime6 = hexDigitCountPrime5;\n  let hexDigitCountPrime7 = hexDigitCountPrime6;\n\
    \  let hexDigitCountPrime8 = hexDigitCountPrime7;\n  let hexDigitCountPrime9 =\
    \ hexDigitCountPrime8;\n  let hexDigitCountPrime10 = hexDigitCountPrime9;\n  let\
    \ hexDigitCountPrime11 = hexDigitCountPrime10;\n  let hexDigitCountPrime12 = hexDigitCountPrime11;\n\
    \  let hexDigitCountPrime13 = hexDigitCountPrime12;\n  let hexDigitCountPrime14\
    \ = hexDigitCountPrime13;\n  let hexDigitCountPrime15 = hexDigitCountPrime14;\n\
    \  let hexDigitCountPrime16 = hexDigitCountPrime15;\n  let hexDigitCountPrime17\
    \ = hexDigitCountPrime16;\n  let hexDigitCountPrime18 = hexDigitCountPrime17;\n\
    \  let hexDigitCountPrime19 = hexDigitCountPrime18;\n  let hexDigitCountPrime20\
    \ = hexDigitCountPrime19;\n  let hexDigitCountPrime21 = hexDigitCountPrime20;\n\
    \  let hexDigitCountPrime22 = hexDigitCountPrime21;\n  let hexDigitCountPrime23\
    \ = hexDigitCountPrime22;\n  let hexDigitCountPrime24 = hexDigitCountPrime23;\n\
    \  let hexDigitCountPrime25 = hexDigitCountPrime24;\n  let hexDigitCountPrime26\
    \ = hexDigitCountPrime25;\n  let hexDigitCountPrime27 = hexDigitCountPrime26;\n\
    \  let hexDigitCountPrime28 = hexDigitCountPrime27;\n  let hexDigitCountPrime29\
    \ = hexDigitCountPrime28;\n  let hexDigitCountPrime30 = hexDigitCountPrime29;\n\
    \  let hexDigitCountPrime31 = hexDigitCountPrime30;\n  let hexDigitCountPrime32\
    \ = hexDigitCountPrime31;\n  let hexDigitCountPrime33 = hexDigitCountPri", " \
    \ let hex = num.toUpperCase();\n  let hexDigits = [\n    \"0\", \"1\", \"2\",\
    \ \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\"\
    , \"E\", \"F\"\n  ];\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2\
    \ = hexDigitCount*2;\n  let hexDigitCount3 = hexDigitCount*3;\n  let hexDigitCount4\
    \ = hexDigitCount*4;\n  let hexDigitCount5 = hexDigitCount*5;\n  let hexDigitCount6\
    \ = hexDigitCount*6;\n  let hexDigitCount7 = hexDigitCount*7;\n  let hexDigitCount8\
    \ = hexDigitCount*8;\n  let hexDigitCount9 = hexDigitCount*9;\n  let hexDigitCount10\
    \ = hexDigitCount*10;\n  let hexDigitCount11 = hexDigitCount*11;\n  let hexDigitCount12\
    \ = hexDigitCount*12;\n  let hexDigitCount13 = hexDigitCount*13;\n  let hexDigitCount14\
    \ = hexDigitCount*14;\n  let hexDigitCount15 = hexDigitCount*15;\n  let hexDigitCount16\
    \ = hexDigitCount*16;\n  let hexDigitCount17 = hexDigitCount*17;\n  let hexDigitCount18\
    \ = hexDigitCount*18;\n  let hexDigitCount19 = hexDigitCount*19;\n  let hexDigitCount20\
    \ = hexDigitCount*20;\n  let hexDigitCount21 = hexDigitCount*21;\n  let hexDigitCount22\
    \ = hexDigitCount*22;\n  let hexDigitCount23 = hexDigitCount*23;\n  let hexDigitCount24\
    \ = hexDigitCount*24;\n  let hexDigitCount25 = hexDigitCount*25;\n  let hexDigitCount26\
    \ = hexDigitCount*26;\n  let hexDigitCount27 = hexDigitCount*27;\n  let hexDigitCount28\
    \ = hexDigitCount*28;\n  let hexDigitCount29 = hexDigitCount*29;\n  let hexDigitCount30\
    \ = hexDigitCount*30;\n  let hexDigitCount31 = hexDigitCount*31;\n  let hexDigitCount32\
    \ = hexDigitCount*32;\n  let hexDigitCount33 = hexDigitCount*33;\n  let hexDigitCount34\
    \ = hexDigitCount*34;\n  let hexDigitCount35 = hexDigitCount*35;\n  let hexDigitCount36\
    \ = hexDigitCount*36;\n  let hexDigitCount37 = hexDigitCount*37;\n  let hexDigitCount38\
    \ = hexDigitCount*38;\n  let hexDigitCount39 = hex", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimeCount = 0;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeIndex\
    \ = 0;\n    let hexDigitPrimeIndex2 = 0;\n    let hexDigitPrimeIndex3 = 0;\n \
    \   let hexDigitPrimeIndex4 = 0;\n    let hexDigitPrimeIndex5 = 0;\n    let hexDigitPrimeIndex6\
    \ = 0;\n    let hexDigitPrimeIndex7 = 0;\n    let hexDigitPrimeIndex8 = 0;\n \
    \   let hexDigitPrimeIndex9 = 0;\n    let hexDigitPrimeIndex10 = 0;\n    let hexDigitPrimeIndex11\
    \ = 0;\n    let hexDigitPrimeIndex12 = 0;\n    let hexDigitPrimeIndex13 = 0;\n\
    \    let hexDigitPrimeIndex14 = 0;\n    let hexDigitPrimeIndex15 = 0;\n    let\
    \ hexDigitPrimeIndex16 = 0;\n    let hexDigitPrimeIndex17 = 0;\n    let hexDigitPrimeIndex18\
    \ = 0;\n    let hexDigitPrimeIndex19 = 0;\n    let hexDigitPrimeIndex20 = 0;\n\
    \    let hexDigitPrimeIndex21 = 0;\n    let hexDigitPrimeIndex22 = 0;\n    let\
    \ hexDigitPrimeIndex23 = 0;\n    let hexDigitPrimeIndex24 = 0;\n    let hexDigitPrimeIndex25\
    \ = 0;\n    let hexDigitPrimeIndex26 = 0;\n    let hexDigitPrimeIndex27 = 0;\n\
    \    let hexDigitPrimeIndex28 = 0;\n    let hexDigitPrimeIndex29 = 0;\n    let\
    \ hexDigitPrimeIndex30 = 0;\n    let hexDigitPrimeIndex31 = 0;\n    let hexDigitPrimeIndex32\
    \ = 0;\n    let hexDigitPrimeIndex33 = 0;\n    let hexDigitPrimeIndex34 = 0;\n\
    \    let hexDigitPrimeIndex35 = 0;\n    let hexDigitPrimeIndex36 = 0;\n    let\
    \ hexDigitPrimeIndex37 = 0;\n    let hexDigitPrimeIndex38 = 0;\n    let hexDigitPrimeIndex39\
    \ = 0;\n    let hexDigitPrimeIndex40 = 0;\n    let hexDigitPrimeIndex41 = 0;\n\
    \    let hexDigitPrimeIndex42 = 0;\n    let hexDigitPrimeIndex43 = 0;\n    let\
    \ hexDigitPrimeIndex44 = 0;\n    let hexDigitPrimeIndex45 = 0;\n    let hexDigitPrimeIndex46\
    \ = 0;\n    let hexDigitPrimeIndex47 = 0;\n    let hexDigitPrimeIndex48 = 0;\n\
    \    let hexDigitPrimeIndex49 = 0;\n    let hexDigitPrimeIndex50 = 0;\n    let\
    \ hexDigitPrimeIndex51 = 0;\n    let hexDigitPrimeIndex52 = 0;\n    let hexDigitPrimeIndex53\
    \ = 0;\n    let ", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\
    \");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitSum = 0;\n  let hexDigitPrimeCount\
    \ = 0;\n  let hexDigitPrimeSum = 0;\n  let hexDigitPrimeSum2 = 0;\n  let hexDigitPrimeSum3\
    \ = 0;\n  let hexDigitPrimeSum4 = 0;\n  let hexDigitPrimeSum5 = 0;\n  let hexDigitPrimeSum6\
    \ = 0;\n  let hexDigitPrimeSum7 = 0;\n  let hexDigitPrimeSum8 = 0;\n  let hexDigitPrimeSum9\
    \ = 0;\n  let hexDigitPrimeSum10 = 0;\n  let hexDigitPrimeSum11 = 0;\n  let hexDigitPrimeSum12\
    \ = 0;\n  let hexDigitPrimeSum13 = 0;\n  let hexDigitPrimeSum14 = 0;\n  let hexDigitPrimeSum15\
    \ = 0;\n  let hexDigitPrimeSum16 = 0;\n  let hexDigitPrimeSum17 = 0;\n  let hexDigitPrimeSum18\
    \ = 0;\n  let hexDigitPrimeSum19 = 0;\n  let hexDigitPrimeSum20 = 0;\n  let hexDigitPrimeSum21\
    \ = 0;\n  let hexDigitPrimeSum22 = 0;\n  let hexDigitPrimeSum23 = 0;\n  let hexDigitPrimeSum24\
    \ = 0;\n  let hexDigitPrimeSum25 = 0;\n  let hexDigitPrimeSum26 = 0;\n  let hexDigitPrimeSum27\
    \ = 0;\n  let hexDigitPrimeSum28 = 0;\n  let hexDigitPrimeSum29 = 0;\n  let hexDigitPrimeSum30\
    \ = 0;\n  let hexDigitPrimeSum31 = 0;\n  let hexDigitPrimeSum32 = 0;\n  let hexDigitPrimeSum33\
    \ = 0;\n  let hexDigitPrimeSum34 = 0;\n  let hexDigitPrimeSum35 = 0;\n  let hexDigitPrimeSum36\
    \ = 0;\n  let hexDigitPrimeSum37 = 0;\n  let hexDigitPrimeSum38 = 0;\n  let hexDigitPrimeSum39\
    \ = 0;\n  let hexDigitPrimeSum40 = 0;\n  let hexDigitPrimeSum41 = 0;\n  let hexDigitPrimeSum42\
    \ = 0;\n  let hexDigitPrimeSum43 = 0;\n  let hexDigitPrimeSum44 = 0;\n  let hexDigitPrimeSum45\
    \ = 0;\n  let hexDigitPrimeSum46 = 0;\n  let hexDigitPrimeSum47 = 0;\n  let hexDigitPrimeSum48\
    \ = 0;\n  let hexDigitPrimeSum49 = 0;\n  let hexDigitPrimeSum50 = 0;\n  let hexDigitPrimeSum51\
    \ = 0;\n  let hexDigitPrimeSum52 = 0;\n  let hexDigitPrimeSum53 = 0;\n  let hex",
  "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes:\
    \ number[] = [];\n  let prime_digits: number[] = [];\n  let prime_digits_len:\
    \ number[] = [];\n  let prime_digits_len2: number[] = [];\n  let prime_digits_len3:\
    \ number[] = [];\n  let prime_digits_len4: number[] = [];\n  let prime_digits_len5:\
    \ number[] = [];\n  let prime_digits_len6: number[] = [];\n  let prime_digits_len7:\
    \ number[] = [];\n  let prime_digits_len8: number[] = [];\n  let prime_digits_len9:\
    \ number[] = [];\n  let prime_digits_len10: number[] = [];\n  let prime_digits_len11:\
    \ number[] = [];\n  let prime_digits_len12: number[] = [];\n  let prime_digits_len13:\
    \ number[] = [];\n  let prime_digits_len14: number[] = [];\n  let prime_digits_len15:\
    \ number[] = [];\n  let prime_digits_len16: number[] = [];\n  let prime_digits_len17:\
    \ number[] = [];\n  let prime_digits_len18: number[] = [];\n  let prime_digits_len19:\
    \ number[] = [];\n  let prime_digits_len20: number[] = [];\n  let prime_digits_len21:\
    \ number[] = [];\n  let prime_digits_len22: number[] = [];\n  let prime_digits_len23:\
    \ number[] = [];\n  let prime_digits_len24: number[] = [];\n  let prime_digits_len25:\
    \ number[] = [];\n  let prime_digits_len26: number[] = [];\n  let prime_digits_len27:\
    \ number[] = [];\n  let prime_digits_len28: number[] = [];\n  let prime_digits_len29:\
    \ number[] = [];\n  let prime_digits_len30: number[] = [];\n  let prime_digits_len31:\
    \ number[] = [];\n  let prime_digits_len32: number[] = [];\n  let prime_digits_len33:\
    \ number[] = [];\n  let prime_digits_len34: number[] = [];\n  let prime_digits_len35:\
    \ number[] = [];\n  let prime_digits_len36: number[] = [];\n  let prime_digits_len37:\
    \ number[] = [];\n  let prime_digits_len38: number[] = [];\n  let prime_digits_len39:\
    \ number[] = [];\n  let prime_digits_len40: number[] = [];\n  let prime_digits_len",
  "  let hex = num.toUpperCase();\n  let hexDigits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ A, B, C, D, E, F];\n  let hexDigitCount = hexDigits.length;\n  let hexDigitSum\
    \ = 0;\n  let hexDigitIndex = 0;\n  let hexDigitSumIndex = 0;\n  let hexDigitSumIndex2\
    \ = 0;\n  let hexDigitSumIndex3 = 0;\n  let hexDigitSumIndex4 = 0;\n  let hexDigitSumIndex5\
    \ = 0;\n  let hexDigitSumIndex6 = 0;\n  let hexDigitSumIndex7 = 0;\n  let hexDigitSumIndex8\
    \ = 0;\n  let hexDigitSumIndex9 = 0;\n  let hexDigitSumIndex10 = 0;\n  let hexDigitSumIndex11\
    \ = 0;\n  let hexDigitSumIndex12 = 0;\n  let hexDigitSumIndex13 = 0;\n  let hexDigitSumIndex14\
    \ = 0;\n  let hexDigitSumIndex15 = 0;\n  let hexDigitSumIndex16 = 0;\n  let hexDigitSumIndex17\
    \ = 0;\n  let hexDigitSumIndex18 = 0;\n  let hexDigitSumIndex19 = 0;\n  let hexDigitSumIndex20\
    \ = 0;\n  let hexDigitSumIndex21 = 0;\n  let hexDigitSumIndex22 = 0;\n  let hexDigitSumIndex23\
    \ = 0;\n  let hexDigitSumIndex24 = 0;\n  let hexDigitSumIndex25 = 0;\n  let hexDigitSumIndex26\
    \ = 0;\n  let hexDigitSumIndex27 = 0;\n  let hexDigitSumIndex28 = 0;\n  let hexDigitSumIndex29\
    \ = 0;\n  let hexDigitSumIndex30 = 0;\n  let hexDigitSumIndex31 = 0;\n  let hexDigitSumIndex32\
    \ = 0;\n  let hexDigitSumIndex33 = 0;\n  let hexDigitSumIndex34 = 0;\n  let hexDigitSumIndex35\
    \ = 0;\n  let hexDigitSumIndex36 = 0;\n  let hexDigitSumIndex37 = 0;\n  let hexDigitSumIndex38\
    \ = 0;\n  let hexDigitSumIndex39 = 0;\n  let hexDigitSumIndex40 = 0;\n  let hexDigitSumIndex41\
    \ = 0;\n  let hexDigitSumIndex42 = 0;\n  let hexDigitSumIndex43 = 0;\n  let hexDigitSumIndex44\
    \ = 0;\n  let hexDigitSumIndex45 = 0;\n  let hexDigitSumIndex46 = 0;\n  let hexDigitSumIndex47\
    \ = 0;\n  let hexDigitSumIndex48 = 0;\n  let hexDigitSumIndex49 = 0;\n  let hexDigitSumIndex50\
    \ = 0;\n  let hexDigitSumIndex51 = 0;\n  let hexDigitSumIndex52 = 0;\n  let hexDigitSumIndex53\
    \ = 0;\n  let hexDigitSumIndex54 = 0;\n  let hexDigitSumIndex55 = 0;\n  let hexDigitSumIndex56\
    \ = 0;\n  let hexDigitSumIndex57 = 0;\n  let hexDigitSumIndex58 = 0;\n  let hexDigitSumIndex59\
    \ = 0;\n  let hexDigit", "    let hex = num.toUpperCase();\n    let hexDigits\
    \ = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCountPrime\
    \ = 0;\n    let hexDigitCountPrime2 = 0;\n    let hexDigitCountPrime3 = 0;\n \
    \   let hexDigitCountPrime4 = 0;\n    let hexDigitCountPrime5 = 0;\n    let hexDigitCountPrime6\
    \ = 0;\n    let hexDigitCountPrime7 = 0;\n    let hexDigitCountPrime8 = 0;\n \
    \   let hexDigitCountPrime9 = 0;\n    let hexDigitCountPrime10 = 0;\n    let hexDigitCountPrime11\
    \ = 0;\n    let hexDigitCountPrime12 = 0;\n    let hexDigitCountPrime13 = 0;\n\
    \    let hexDigitCountPrime14 = 0;\n    let hexDigitCountPrime15 = 0;\n    let\
    \ hexDigitCountPrime16 = 0;\n    let hexDigitCountPrime17 = 0;\n    let hexDigitCountPrime18\
    \ = 0;\n    let hexDigitCountPrime19 = 0;\n    let hexDigitCountPrime20 = 0;\n\
    \    let hexDigitCountPrime21 = 0;\n    let hexDigitCountPrime22 = 0;\n    let\
    \ hexDigitCountPrime23 = 0;\n    let hexDigitCountPrime24 = 0;\n    let hexDigitCountPrime25\
    \ = 0;\n    let hexDigitCountPrime26 = 0;\n    let hexDigitCountPrime27 = 0;\n\
    \    let hexDigitCountPrime28 = 0;\n    let hexDigitCountPrime29 = 0;\n    let\
    \ hexDigitCountPrime30 = 0;\n    let hexDigitCountPrime31 = 0;\n    let hexDigitCountPrime32\
    \ = 0;\n    let hexDigitCountPrime33 = 0;\n    let hexDigitCountPrime34 = 0;\n\
    \    let hexDigitCountPrime35 = 0;\n    let hexDigitCountPrime36 = 0;\n    let\
    \ hexDigitCountPrime37 = 0;\n    let hexDigitCountPrime38 = 0;\n    let hexDigitCountPrime39\
    \ = 0;\n    let hexDigitCountPrime40 = 0;\n    let hexDigitCountPrime41 = 0;\n\
    \    let hexDigitCountPrime42 = 0;\n    let hexDigitCountPrime43 = 0;\n    let\
    \ hexDigitCountPrime44 = 0;\n    let hexDigitCountPrime45 = 0;\n    let hexDigitCountPrime46\
    \ = 0;\n    let hexDigitCountPrime47 = 0;\n    let hexDigitCountPrime48 = 0;\n\
    \    let hexDigitCountPrime49 = 0;\n    let hexDigitCountPrime50 = 0;\n    let\
    \ hexDigitCountPrime51 = 0;\n    let hexDigitCountPrime52 = 0;\n    let hexDigitCountPrime53\
    \ = 0;\n    let hexDigitCountPrime54 = 0;\n    let hexDigitCountPrime55", "  let\
    \ hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes = [];\n\
    \  let primes_found = 0;\n  let primes_found2 = 0;\n  let primes_found3 = 0;\n\
    \  let primes_found4 = 0;\n  let primes_found5 = 0;\n  let primes_found6 = 0;\n\
    \  let primes_found7 = 0;\n  let primes_found8 = 0;\n  let primes_found9 = 0;\n\
    \  let primes_found10 = 0;\n  let primes_found11 = 0;\n  let primes_found12 =\
    \ 0;\n  let primes_found13 = 0;\n  let primes_found14 = 0;\n  let primes_found15\
    \ = 0;\n  let primes_found16 = 0;\n  let primes_found17 = 0;\n  let primes_found18\
    \ = 0;\n  let primes_found19 = 0;\n  let primes_found20 = 0;\n  let primes_found21\
    \ = 0;\n  let primes_found22 = 0;\n  let primes_found23 = 0;\n  let primes_found24\
    \ = 0;\n  let primes_found25 = 0;\n  let primes_found26 = 0;\n  let primes_found27\
    \ = 0;\n  let primes_found28 = 0;\n  let primes_found29 = 0;\n  let primes_found30\
    \ = 0;\n  let primes_found31 = 0;\n  let primes_found32 = 0;\n  let primes_found33\
    \ = 0;\n  let primes_found34 = 0;\n  let primes_found35 = 0;\n  let primes_found36\
    \ = 0;\n  let primes_found37 = 0;\n  let primes_found38 = 0;\n  let primes_found39\
    \ = 0;\n  let primes_found40 = 0;\n  let primes_found41 = 0;\n  let primes_found42\
    \ = 0;\n  let primes_found43 = 0;\n  let primes_found44 = 0;\n  let primes_found45\
    \ = 0;\n  let primes_found46 = 0;\n  let primes_found47 = 0;\n  let primes_found48\
    \ = 0;\n  let primes_found49 = 0;\n  let primes_found50 = 0;\n  let primes_found51\
    \ = 0;\n  let primes_found52 = 0;\n  let primes_found53 = 0;\n  let primes_found54\
    \ = 0;\n  let primes_found55 = 0;\n  let primes_found56 = 0;\n  let primes_found57\
    \ = 0;\n  let primes_found58 = 0;\n  let primes_found59 = 0;\n  let primes_found60\
    \ = 0;\n  let primes_found61 = 0;\n  let primes_found62 = 0;\n  let primes_found63\
    \ = 0;\n  let primes_found64 = 0;\n  let primes_found65 = 0;\n  let primes_found66\
    \ = 0;\n  let primes_found67 = 0;\n  let primes_found68 = 0;\n  let primes_found69\
    \ = 0;\n  let primes_found70 = 0;\n  let primes_found71 = 0;\n  let ", "    let\
    \ hex = num.toUpperCase();\n    let digits = hex.split(\"\");\n    let primes:\
    \ number[] = [];\n    let prime: number = 2;\n    let primeCount: number = 0;\n\
    \    for (let i = 0; i < digits.length; i++) {\n        let digit = parseInt(digits[i]);\n\
    \        if (digit % 2 === 0) {\n            primeCount++;\n        }\n      \
    \  if (primeCount > 1) {\n            primes.push(prime);\n            primeCount\
    \ = 0;\n        }\n        prime *= 2;\n    }\n    return primes[digits.length\
    \ - 1];\n}\n", "    let hex = num.toUpperCase();\n    let digits = hex.split(\"\
    \");\n    let primes = 0;\n    let prime_digits = \"\";\n    for (let i = 0; i\
    \ < digits.length; i++) {\n        let digit = parseInt(digits[i]);\n        if\
    \ (digit > 0 && digit <= 9) {\n            prime_digits += digit;\n          \
    \  if (prime_digits > \"F\") {\n                prime_digits = \"F\";\n      \
    \      }\n            if (prime_digits > \"F\") {\n                prime_digits\
    \ = \"F\";\n            }\n            if (prime_digits > \"F\") {\n         \
    \       prime_digits = \"F\";\n            }\n            if (prime_digits > \"\
    F\") {\n                prime_digits = \"F\";\n            }\n            if (prime_digits\
    \ > \"F\") {\n                prime_digits = \"F\";\n            }\n         \
    \   if (prime_digits > \"F\") {\n                prime_digits = \"F\";\n     \
    \       }\n            if (prime_digits > \"F\") {\n                prime_digits\
    \ = \"F\";\n            }\n            if (prime_digits > \"F\") {\n         \
    \       prime_digits = \"F\";\n            }\n            if (prime_digits > \"\
    F\") {\n                prime_digits = \"F\";\n            }\n            if (prime_digits\
    \ > \"F\") {\n                prime_digits = \"F\";\n            }\n         \
    \   if (prime_digits > \"F\") {\n                prime_digits = \"F\";\n     \
    \       }\n            if (prime_digits > \"F\") {\n                prime_digits\
    \ = \"F\";\n            }\n            if (prime_digits > \"F\") {\n         \
    \       prime_digits = \"F\";\n            }\n            if (prime_digits > \"\
    F\") {\n                prime_digits = \"F\";\n            }\n            if (prime_digits\
    \ > \"F\") {\n                prime_digits = \"F\";\n            }\n         \
    \   if (prime_digits > \"F\") {\n                prime_digits = \"F\";\n     \
    \       }\n            if (prime_digits > \"F\") {\n                prime_digits\
    \ = \"F\";\n            }\n            if (prime_digits > \"F\") {\n         \
    \       prime_digits = \"F\";\n            }\n            if (prime_digits > \"\
    F\") {\n                prime_digits = \"F\";\n            }\n            if (prime_digits\
    \ > \"F\") {\n                prime_digits = \"F\";\n            }\n         \
    \   if (prime_digits > \"F\") {\n                prime_digits = \"F\";\n     \
    \       }\n            if (prime_digits > \"F\") {\n                prime_digits\
    \ = \"F\";\n            }\n            if (prime_digits > \"F\") {\n         \
    \       prime_digits = \"F\";\n            }\n            if (prime_digits > \"\
    F\") {\n                prime_digits = \"F\";\n            }\n", "    let hex\
    \ = num.toUpperCase();\n    let hexDigits = [...hex];\n    let hexDigitCount =\
    \ hexDigits.length;\n    let hexDigitPrimes: number[] = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    let hexDigitPrimeIndex = 0;\n    let hexDigitPrimeIndex2 = 0;\n  \
    \  let hexDigitPrimeIndex3 = 0;\n    let hexDigitPrimeIndex4 = 0;\n    let hexDigitPrimeIndex5\
    \ = 0;\n    let hexDigitPrimeIndex6 = 0;\n    let hexDigitPrimeIndex7 = 0;\n \
    \   let hexDigitPrimeIndex8 = 0;\n    let hexDigitPrimeIndex9 = 0;\n    let hexDigitPrimeIndex10\
    \ = 0;\n    let hexDigitPrimeIndex11 = 0;\n    let hexDigitPrimeIndex12 = 0;\n\
    \    let hexDigitPrimeIndex13 = 0;\n    let hexDigitPrimeIndex14 = 0;\n    let\
    \ hexDigitPrimeIndex15 = 0;\n    let hexDigitPrimeIndex16 = 0;\n    let hexDigitPrimeIndex17\
    \ = 0;\n    let hexDigitPrimeIndex18 = 0;\n    let hexDigitPrimeIndex19 = 0;\n\
    \    let hexDigitPrimeIndex20 = 0;\n    let hexDigitPrimeIndex21 = 0;\n    let\
    \ hexDigitPrimeIndex22 = 0;\n    let hexDigitPrimeIndex23 = 0;\n    let hexDigitPrimeIndex24\
    \ = 0;\n    let hexDigitPrimeIndex25 = 0;\n    let hexDigitPrimeIndex26 = 0;\n\
    \    let hexDigitPrimeIndex27 = 0;\n    let hexDigitPrimeIndex28 = 0;\n    let\
    \ hexDigitPrimeIndex29 = 0;\n    let hexDigitPrimeIndex30 = 0;\n    let hexDigitPrimeIndex31\
    \ = 0;\n    let hexDigitPrimeIndex32 = 0;\n    let hexDigitPrimeIndex33 = 0;\n\
    \    let hexDigitPrimeIndex34 = 0;\n    let hexDigitPrimeIndex35 = 0;\n    let\
    \ hexDigitPrimeIndex36 = 0;\n    let hexDigitPrimeIndex37 = 0;\n    let hexDigitPrimeIndex38\
    \ = 0;\n    let hexDigitPrimeIndex39 = 0;\n    let hexDigitPrimeIndex40 = 0;\n\
    \    let hexDigitPrimeIndex41 = 0;\n    let hexDigitPrimeIndex42 = 0;\n    let\
    \ hexDigitPrimeIndex43 = 0;\n    let hexDigitPrimeIndex44 = 0;\n    let hexDigitPrimeIndex45\
    \ = 0;\n    let hexDigitPrimeIndex46 = 0;\n    let hexDigitPrimeIndex47 = 0;\n\
    \    let hexDigitPrimeIndex48 = 0;\n    let hexDigitPrimeIndex49 = 0;\n    let\
    \ hexDigitPrimeIndex50 = 0;\n    let hexDigitPrimeIndex51 = 0;\n    let hexDigitPrimeIndex52\
    \ = 0;\n    let hexDigitPrimeIndex53 = 0;", "    let hex = num.toUpperCase();\n\
    \    let digits = hex.split(\"\");\n    let primes = 0;\n    let prime_digits\
    \ = \"\";\n    for (let i = 0; i < digits.length; i++) {\n        let digit =\
    \ parseInt(digits[i]);\n        if (digit % 2 === 0) {\n            primes++;\n\
    \            prime_digits += digit;\n        }\n    }\n    return prime_digits.length;\n\
    }\n", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let\
    \ primes = 0;\n  let prime_digits = \"\";\n  for (let i = 0; i < digits.length;\
    \ i++) {\n    let digit = digits[i];\n    if (digit == \"A\" || digit == \"B\"\
    \ || digit == \"C\" || digit == \"D\" || digit == \"E\" || digit == \"F\") {\n\
    \      prime_digits += digit;\n    } else {\n      primes += parseInt(digit);\n\
    \    }\n  }\n  return primes;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits\
    \ = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33 = hexDigitCount", " \
    \   let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    let hexDigitCount33 = hexDigitCount", "  let hex = num.toUpperCase();\n \
    \ let digits = hex.split(\"\");\n  let primes: number[] = [];\n  let prime: number\
    \ = 1;\n  let primeCount: number = 0;\n  for (let i = 0; i < digits.length; i++)\
    \ {\n    let digit = parseInt(digits[i]);\n    if (digit > 9) {\n      primeCount++;\n\
    \      primes.push(prime);\n      prime = prime * 10;\n    }\n    prime *= digit;\n\
    \  }\n  for (let i = 0; i < primes.length; i++) {\n    if (primes[i] === digits.length)\
    \ {\n      primeCount++;\n    }\n  }\n  return primeCount;\n}\n", "    let hex\
    \ = num.toUpperCase();\n    let digits = hex.split(\"\");\n    let primes = 0;\n\
    \    let prime_digits = \"\";\n    let prime_digits_length = 0;\n    let prime_digits_sum\
    \ = 0;\n    let prime_digits_product = 1;\n    let prime_digits_product2 = 1;\n\
    \    let prime_digits_product3 = 1;\n    let prime_digits_product4 = 0;\n    let\
    \ prime_digits_product5 = 1;\n    let prime_digits_product6 = 1;\n    let prime_digits_product7\
    \ = 1;\n    let prime_digits_product8 = 1;\n    let prime_digits_product9 = 1;\n\
    \    let prime_digits_product10 = 1;\n    let prime_digits_product11 = 1;\n  \
    \  let prime_digits_product12 = 1;\n    let prime_digits_product13 = 1;\n    let\
    \ prime_digits_product14 = 1;\n    let prime_digits_product15 = 1;\n    let prime_digits_product16\
    \ = 1;\n    let prime_digits_product17 = 1;\n    let prime_digits_product18 =\
    \ 1;\n    let prime_digits_product19 = 1;\n    let prime_digits_product20 = 1;\n\
    \    let prime_digits_product21 = 1;\n    let prime_digits_product22 = 1;\n  \
    \  let prime_digits_product23 = 1;\n    let prime_digits_product24 = 1;\n    let\
    \ prime_digits_product25 = 1;\n    let prime_digits_product26 = 1;\n    let prime_digits_product27\
    \ = 1;\n    let prime_digits_product28 = 1;\n    let prime_digits_product29 =\
    \ 1;\n    let prime_digits_product30 = 1;\n    let prime_digits_product31 = 1;\n\
    \    let prime_digits_product32 = 1;\n    let prime_digits_product33 = 1;\n  \
    \  let prime_digits_product34 = 1;\n    let prime_digits_product35 = 1;\n    let\
    \ prime_digits_product36 = 1;\n    let prime_digits_product37 = 1;\n    let prime_digits_product38\
    \ = 1;\n    let prime_digits_product39 = 1;\n    let prime_digits_product40 =\
    \ 1;\n    let prime_digits_product41 = 1;\n    let prime_digits_product42 = 1;\n\
    \    let prime_digits_product43 = 1;\n    let prime_digits_product44 = 1;\n  \
    \  let prime_digits_product45 = 1;\n    let prime_digits_product46 = 1;\n    let\
    \ prime_digits_product47 = 1;\n    let prime_digits_product48 = 1;\n    let prime_digits_product49\
    \ = 1;\n    let prime_digits_product50 = 1;\n    let prime_digits_product51 =\
    \ 1;\n    let prime_digits_product52 = 1;\n    let prime", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes = 0;\n  let prime_digits: number[]\
    \ = [];\n  let prime_digits_len = 0;\n  let prime_digits_sum = 0;\n  let prime_digits_product\
    \ = 1;\n  let prime_digits_product2 = 0;\n  let prime_digits_product3 = 0;\n \
    \ let prime_digits_product4 = 0;\n  let prime_digits_product5 = 0;\n  let prime_digits_product6\
    \ = 0;\n  let prime_digits_product7 = 0;\n  let prime_digits_product8 = 0;\n \
    \ let prime_digits_product9 = 0;\n  let prime_digits_product10 = 0;\n  let prime_digits_product11\
    \ = 0;\n  let prime_digits_product12 = 0;\n  let prime_digits_product13 = 0;\n\
    \  let prime_digits_product14 = 0;\n  let prime_digits_product15 = 0;\n  let prime_digits_product16\
    \ = 0;\n  let prime_digits_product17 = 0;\n  let prime_digits_product18 = 0;\n\
    \  let prime_digits_product19 = 0;\n  let prime_digits_product20 = 0;\n  let prime_digits_product21\
    \ = 0;\n  let prime_digits_product22 = 0;\n  let prime_digits_product23 = 0;\n\
    \  let prime_digits_product24 = 0;\n  let prime_digits_product25 = 0;\n  let prime_digits_product26\
    \ = 0;\n  let prime_digits_product27 = 0;\n  let prime_digits_product28 = 0;\n\
    \  let prime_digits_product29 = 0;\n  let prime_digits_product30 = 0;\n  let prime_digits_product31\
    \ = 0;\n  let prime_digits_product32 = 0;\n  let prime_digits_product33 = 0;\n\
    \  let prime_digits_product34 = 0;\n  let prime_digits_product35 = 0;\n  let prime_digits_product36\
    \ = 0;\n  let prime_digits_product37 = 0;\n  let prime_digits_product38 = 0;\n\
    \  let prime_digits_product39 = 0;\n  let prime_digits_product40 = 0;\n  let prime_digits_product41\
    \ = 0;\n  let prime_digits_product42 = 0;\n  let prime_digits_product43 = 0;\n\
    \  let prime_digits_product44 = 0;\n  let prime_digits_product45 = 0;\n  let prime_digits_product46\
    \ = 0;\n  let prime_digits_product47 = 0;\n  let prime_digits_product48 = 0;\n\
    \  let prime_digits_product49 = 0;\n  let prime_digits_product50 = 0;\n  let prime_digits_product51\
    \ = 0;\n  let prime_digits_product52 = 0;\n  let prime_digits_", "  let hex =\
    \ num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes = 0;\n  let\
    \ prime_digits: number[] = [];\n  let prime_digits_len: number[] = [];\n  let\
    \ prime_digits_len2: number[] = [];\n  let prime_digits_len3: number[] = [];\n\
    \  let prime_digits_len4: number[] = [];\n  let prime_digits_len5: number[] =\
    \ [];\n  let prime_digits_len6: number[] = [];\n  let prime_digits_len7: number[]\
    \ = [];\n  let prime_digits_len8: number[] = [];\n  let prime_digits_len9: number[]\
    \ = [];\n  let prime_digits_len10: number[] = [];\n  let prime_digits_len11: number[]\
    \ = [];\n  let prime_digits_len12: number[] = [];\n  let prime_digits_len13: number[]\
    \ = [];\n  let prime_digits_len14: number[] = [];\n  let prime_digits_len15: number[]\
    \ = [];\n  let prime_digits_len16: number[] = [];\n  let prime_digits_len17: number[]\
    \ = [];\n  let prime_digits_len18: number[] = [];\n  let prime_digits_len19: number[]\
    \ = [];\n  let prime_digits_len20: number[] = [];\n  let prime_digits_len21: number[]\
    \ = [];\n  let prime_digits_len22: number[] = [];\n  let prime_digits_len23: number[]\
    \ = [];\n  let prime_digits_len24: number[] = [];\n  let prime_digits_len25: number[]\
    \ = [];\n  let prime_digits_len26: number[] = [];\n  let prime_digits_len27: number[]\
    \ = [];\n  let prime_digits_len28: number[] = [];\n  let prime_digits_len29: number[]\
    \ = [];\n  let prime_digits_len30: number[] = [];\n  let prime_digits_len31: number[]\
    \ = [];\n  let prime_digits_len32: number[] = [];\n  let prime_digits_len33: number[]\
    \ = [];\n  let prime_digits_len34: number[] = [];\n  let prime_digits_len35: number[]\
    \ = [];\n  let prime_digits_len36: number[] = [];\n  let prime_digits_len37: number[]\
    \ = [];\n  let prime_digits_len38: number[] = [];\n  let prime_digits_len39: number[]\
    \ = [];\n  let prime_digits_len40: number[] = [];\n  let prime_digits_len41: number",
  "    let hex = num.toUpperCase();\n    let result = 0;\n    for (let i = 0; i <\
    \ hex.length; i++) {\n        let digit = hex.charCodeAt(i) - 48;\n        if\
    \ (digit >= 0 && digit <= 9) {\n            result += digit * Math.pow(16, hex.length\
    \ - 1 - i);\n        }\n    }\n    return result;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split('');\n  let hexDigitCount = hexDigits.length;\n \
    \ let hexDigitCount2 = hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2;\n\
    \  let hexDigitCount4 = hexDigitCount3;\n  let hexDigitCount5 = hexDigitCount4;\n\
    \  let hexDigitCount6 = hexDigitCount5;\n  let hexDigitCount7 = hexDigitCount6;\n\
    \  let hexDigitCount8 = hexDigitCount7;\n  let hexDigitCount9 = hexDigitCount8;\n\
    \  let hexDigitCount10 = hexDigitCount9;\n  let hexDigitCount11 = hexDigitCount10;\n\
    \  let hexDigitCount12 = hexDigitCount11;\n  let hexDigitCount13 = hexDigitCount12;\n\
    \  let hexDigitCount14 = hexDigitCount13;\n  let hexDigitCount15 = hexDigitCount14;\n\
    \  let hexDigitCount16 = hexDigitCount15;\n  let hexDigitCount17 = hexDigitCount16;\n\
    \  let hexDigitCount18 = hexDigitCount17;\n  let hexDigitCount19 = hexDigitCount18;\n\
    \  let hexDigitCount20 = hexDigitCount19;\n  let hexDigitCount21 = hexDigitCount20;\n\
    \  let hexDigitCount22 = hexDigitCount21;\n  let hexDigitCount23 = hexDigitCount22;\n\
    \  let hexDigitCount24 = hexDigitCount23;\n  let hexDigitCount25 = hexDigitCount24;\n\
    \  let hexDigitCount26 = hexDigitCount25;\n  let hexDigitCount27 = hexDigitCount26;\n\
    \  let hexDigitCount28 = hexDigitCount27;\n  let hexDigitCount29 = hexDigitCount28;\n\
    \  let hexDigitCount30 = hexDigitCount29;\n  let hexDigitCount31 = hexDigitCount30;\n\
    \  let hexDigitCount32 = hexDigitCount31;\n  let hexDigitCount33 = hexDigitCount32;\n\
    \  let hexDigitCount34 = hexDigitCount33;\n  let hexDigitCount35 = hexDigitCount34;\n\
    \  let hexDigitCount36 = hexDigitCount35;\n  let hexDigitCount37 = hexDigitCount36;\n\
    \  let hexDigitCount38 = hexDigitCount37;\n  let hexDigitCount39 = hexDigitCount38;\n\
    \  let hexDigitCount40 = hexDigitCount39;\n  let hexDigitCount41 = hexDigitCount40;\n\
    \  let hexDigitCount42 = hexDigitCount41;\n  let hexDigitCount43 = hexDigitCount42;\n\
    \  let hexDigitCount44 = hexDigitCount43;\n  let hexDigit", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitPrimes: number[] = [];\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimeIndex\
    \ = 0;\n  let hexDigitPrimeIndex2 = 0;\n  let hexDigitPrimeIndex3 = 0;\n  let\
    \ hexDigitPrimeIndex4 = 0;\n  let hexDigitPrimeIndex5 = 0;\n  let hexDigitPrimeIndex6\
    \ = 0;\n  let hexDigitPrimeIndex7 = 0;\n  let hexDigitPrimeIndex8 = 0;\n  let\
    \ hexDigitPrimeIndex9 = 0;\n  let hexDigitPrimeIndex10 = 0;\n  let hexDigitPrimeIndex11\
    \ = 0;\n  let hexDigitPrimeIndex12 = 0;\n  let hexDigitPrimeIndex13 = 0;\n  let\
    \ hexDigitPrimeIndex14 = 0;\n  let hexDigitPrimeIndex15 = 0;\n  let hexDigitPrimeIndex16\
    \ = 0;\n  let hexDigitPrimeIndex17 = 0;\n  let hexDigitPrimeIndex18 = 0;\n  let\
    \ hexDigitPrimeIndex19 = 0;\n  let hexDigitPrimeIndex20 = 0;\n  let hexDigitPrimeIndex21\
    \ = 0;\n  let hexDigitPrimeIndex22 = 0;\n  let hexDigitPrimeIndex23 = 0;\n  let\
    \ hexDigitPrimeIndex24 = 0;\n  let hexDigitPrimeIndex25 = 0;\n  let hexDigitPrimeIndex26\
    \ = 0;\n  let hexDigitPrimeIndex27 = 0;\n  let hexDigitPrimeIndex28 = 0;\n  let\
    \ hexDigitPrimeIndex29 = 0;\n  let hexDigitPrimeIndex30 = 0;\n  let hexDigitPrimeIndex31\
    \ = 0;\n  let hexDigitPrimeIndex32 = 0;\n  let hexDigitPrimeIndex33 = 0;\n  let\
    \ hexDigitPrimeIndex34 = 0;\n  let hexDigitPrimeIndex35 = 0;\n  let hexDigitPrimeIndex36\
    \ = 0;\n  let hexDigitPrimeIndex37 = 0;\n  let hexDigitPrimeIndex38 = 0;\n  let\
    \ hexDigitPrimeIndex39 = 0;\n  let hexDigitPrimeIndex40 = 0;\n  let hexDigitPrimeIndex41\
    \ = 0;\n  let hexDigitPrimeIndex42 = 0;\n  let hexDigitPrimeIndex43 = 0;\n  let\
    \ hexDigitPrimeIndex44 = 0;\n  let hexDigitPrimeIndex45 = 0;\n  let hexDigitPrimeIndex46\
    \ = 0;\n  let hexDigitPrimeIndex47 = 0;\n  let hexDigitPrimeIndex48 = 0;\n  let\
    \ hexDigitPrimeIndex49 = 0;\n  let hexDigitPrimeIndex50 = 0;\n  let hexDigitPrimeIndex51\
    \ = 0;\n  let hexDigitPrimeIndex52 = 0;\n  let hexDigitPrimeIndex53", "  let hex\
    \ = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes = 0;\n \
    \ let prime_digits = \"\";\n  let prime_digits_len = 0;\n  let prime_digits_sum\
    \ = 0;\n  let prime_digits_product = 1;\n  let prime_digits_product2 = 1;\n  let\
    \ prime_digits_product3 = 1;\n  let prime_digits_product4 = 0;\n  let prime_digits_product5\
    \ = 1;\n  let prime_digits_product6 = 1;\n  let prime_digits_product7 = 1;\n \
    \ let prime_digits_product8 = 1;\n  let prime_digits_product9 = 1;\n  let prime_digits_product10\
    \ = 1;\n  let prime_digits_product11 = 1;\n  let prime_digits_product12 = 1;\n\
    \  let prime_digits_product13 = 1;\n  let prime_digits_product14 = 1;\n  let prime_digits_product15\
    \ = 1;\n  let prime_digits_product16 = 1;\n  let prime_digits_product17 = 1;\n\
    \  let prime_digits_product18 = 1;\n  let prime_digits_product19 = 1;\n  let prime_digits_product20\
    \ = 1;\n  let prime_digits_product21 = 1;\n  let prime_digits_product22 = 1;\n\
    \  let prime_digits_product23 = 1;\n  let prime_digits_product24 = 1;\n  let prime_digits_product25\
    \ = 1;\n  let prime_digits_product26 = 1;\n  let prime_digits_product27 = 1;\n\
    \  let prime_digits_product28 = 1;\n  let prime_digits_product29 = 1;\n  let prime_digits_product30\
    \ = 1;\n  let prime_digits_product31 = 1;\n  let prime_digits_product32 = 1;\n\
    \  let prime_digits_product33 = 1;\n  let prime_digits_product34 = 1;\n  let prime_digits_product35\
    \ = 1;\n  let prime_digits_product36 = 1;\n  let prime_digits_product37 = 1;\n\
    \  let prime_digits_product38 = 1;\n  let prime_digits_product39 = 1;\n  let prime_digits_product40\
    \ = 1;\n  let prime_digits_product41 = 1;\n  let prime_digits_product42 = 1;\n\
    \  let prime_digits_product43 = 1;\n  let prime_digits_product44 = 1;\n  let prime_digits_product45\
    \ = 1;\n  let prime_digits_product46 = 1;\n  let prime_digits_product47 = 1;\n\
    \  let prime_digits_product48 = 1;\n  let prime_digits_product49 = 1;\n  let prime_digits_product50\
    \ = 1;\n  let prime_digits_product51 = 1;\n  let prime_digits_product52 = 1;\n\
    \  let prime", "  let hex = num.toUpperCase();\n  let result = 0;\n  for (let\
    \ i = 0; i < hex.length; i++) {\n    let digit = hex.charCodeAt(i) - 48;\n   \
    \ if (digit < 0 || digit > 9) {\n      continue;\n    }\n    result += digit *\
    \ Math.pow(16, hex.length - i - 1);\n  }\n  return result;\n}\n", "    let hex\
    \ = num.toUpperCase();\n    let hexDigits = [\n        \"0\", \"1\", \"2\", \"\
    3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"\
    E\", \"F\"\n    ];\n    let hexDigitCount = hexDigits.length;\n    let hexDigitArray\
    \ = hex.split(\"\");\n    let hexDigitArrayLength = hexDigitArray.length;\n  \
    \  let hexDigitArraySum = 0;\n    let hexDigitArraySum2 = 0;\n    let hexDigitArraySum3\
    \ = 0;\n    let hexDigitArraySum4 = 0;\n    let hexDigitArraySum5 = 0;\n    let\
    \ hexDigitArraySum6 = 0;\n    let hexDigitArraySum7 = 0;\n    let hexDigitArraySum8\
    \ = 0;\n    let hexDigitArraySum9 = 0;\n    let hexDigitArraySum10 = 0;\n    let\
    \ hexDigitArraySum11 = 0;\n    let hexDigitArraySum12 = 0;\n    let hexDigitArraySum13\
    \ = 0;\n    let hexDigitArraySum14 = 0;\n    let hexDigitArraySum15 = 0;\n   \
    \ let hexDigitArraySum16 = 0;\n    let hexDigitArraySum17 = 0;\n    let hexDigitArraySum18\
    \ = 0;\n    let hexDigitArraySum19 = 0;\n    let hexDigitArraySum20 = 0;\n   \
    \ let hexDigitArraySum21 = 0;\n    let hexDigitArraySum22 = 0;\n    let hexDigitArraySum23\
    \ = 0;\n    let hexDigitArraySum24 = 0;\n    let hexDigitArraySum25 = 0;\n   \
    \ let hexDigitArraySum26 = 0;\n    let hexDigitArraySum27 = 0;\n    let hexDigitArraySum28\
    \ = 0;\n    let hexDigitArraySum29 = 0;\n    let hexDigitArraySum30 = 0;\n   \
    \ let hexDigitArraySum31 = 0;\n    let hexDigitArraySum32 = 0;\n    let hexDigitArraySum33\
    \ = 0;\n    let hexDigitArraySum34 = 0;\n    let hexDigitArraySum35 = 0;\n   \
    \ let hexDigitArraySum36 = 0;\n    let hexDigitArraySum37 = 0;\n    let hexDigitArraySum38\
    \ = 0;\n    let hexDigitArraySum39 = 0;\n    let hexDigitArraySum40 = 0;\n   \
    \ let hexDigitArraySum41 = 0;\n    let hexDigitArraySum42 = 0;\n    let hexDigitArraySum43\
    \ = 0;\n    let hexDigitArraySum44 = 0;\n    let hexDigitArraySum45 = 0;\n   \
    \ let hexDigitArraySum46 = 0;\n    let hexDigitArraySum47 = 0;\n    let hexDigitArraySum48\
    \ = 0;\n    let hexDigitArraySum49 = 0;\n    let hexDigitArraySum50 = 0;\n   \
    \ let hexDigitArraySum51 = 0;\n    let hexDigitArraySum52 = 0;\n    let hexDigitArraySum53\
    \ = 0;\n    let hexDigitArraySum54 = 0;\n    let hexDigitArraySum55 = 0;\n   \
    \ let hexDigitArraySum", "    let hex = num.toUpperCase();\n    let hexDigits\
    \ = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n    let hexDigitPrimes:\
    \ number[] = [];\n    let hexDigitPrimeCount = 0;\n    let hexDigitPrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimeCount = 0;\n    for (let i = 0; i < hexDigitCount;\
    \ i++) {\n        let hexDigit = hexDigits[i];\n        let hexDigitPrime = hexDigitPrimes[i];\n\
    \        if (hexDigit == \"A\") {\n            hexDigitPrimePrimePrimeCount++;\n\
    \        } else if (hexDigit == \"B\") {\n            hexDigitPrimePrimePrimeCount++;\n\
    \        } else if (hexDigit == \"C\") {\n            hexDigitPrimePrimePrimeCount++;\n\
    \        } else if (hexDigit == \"D\") {\n            hexDigitPrimePrimePrimeCount++;\n\
    \        } else if (hexDigit == \"E\") {\n            hexDigitPrimePrimePrimeCount++;\n\
    \        } else if (hexDigit == \"F\") {\n            hexDigitPrimePrimePrimeCount++;\n\
    \        } else {\n            hexDigitPrimePrimePrimeCount++;\n        }\n  \
    \      if (hexDigitPrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount++;\n\
    \        }\n        if (hexDigitPrimePrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount++;\n\
    \        }\n        if (hexDigitPrimePrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount++;\n\
    \        }\n        if (hexDigitPrimePrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount++;\n\
    \        }\n        if (hexDigitPrimePrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount++;\n\
    \        }\n        if (hexDigitPrimePrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount++;\n\
    \        }\n        if (hexDigitPrimePrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount++;\n\
    \        }\n        if (hexDigitPrimePrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount++;\n\
    \        }\n        if (hexDigitPrimePrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount++;\n\
    \        }\n        if (hexDigitPrimePrimePrimeCount > 1) {\n            hexDigitPrimePrimePrimePrimeCount",
  "    let hex = num.toUpperCase();\n    let digits = hex.split(\"\");\n    let primes\
    \ = 0;\n    let prime_digits: number[] = [];\n    let prime_digits_length: number[]\
    \ = [];\n    let prime_digits_length2: number[] = [];\n    let prime_digits_length3:\
    \ number[] = [];\n    let prime_digits_length4: number[] = [];\n    let prime_digits_length5:\
    \ number[] = [];\n    let prime_digits_length6: number[] = [];\n    let prime_digits_length7:\
    \ number[] = [];\n    let prime_digits_length8: number[] = [];\n    let prime_digits_length9:\
    \ number[] = [];\n    let prime_digits_length10: number[] = [];\n    let prime_digits_length11:\
    \ number[] = [];\n    let prime_digits_length12: number[] = [];\n    let prime_digits_length13:\
    \ number[] = [];\n    let prime_digits_length14: number[] = [];\n    let prime_digits_length15:\
    \ number[] = [];\n    let prime_digits_length16: number[] = [];\n    let prime_digits_length17:\
    \ number[] = [];\n    let prime_digits_length18: number[] = [];\n    let prime_digits_length19:\
    \ number[] = [];\n    let prime_digits_length20: number[] = [];\n    let prime_digits_length21:\
    \ number[] = [];\n    let prime_digits_length22: number[] = [];\n    let prime_digits_length23:\
    \ number[] = [];\n    let prime_digits_length24: number[] = [];\n    let prime_digits_length25:\
    \ number[] = [];\n    let prime_digits_length26: number[] = [];\n    let prime_digits_length27:\
    \ number[] = [];\n    let prime_digits_length28: number[] = [];\n    let prime_digits_length29:\
    \ number[] = [];\n    let prime_digits_length30: number[] = [];\n    let prime_digits_length31:\
    \ number[] = [];\n    let prime_digits_length32: number[] = [];\n    let prime_digits_length33:\
    \ number[] = [];\n    let prime_digits_length34: number[] = [];\n    let prime_digits_length35:\
    \ number[] = [];\n    let prime_digits_length36: number[] = [];\n    let prime_digits_length37:\
    \ number[] = [];\n    let prime_digits_length38: number[] = [];\n    let prime_digits_length39:\
    \ number[] = [];\n    let prime_digits_length40: number[] = [];\n    let prime_digits_length41:\
    \ number", "    let hex = num.toUpperCase();\n    let digits = hex.split(\"\"\
    );\n    let primes: number[] = [];\n    for (let i = 0; i < digits.length; i++)\
    \ {\n        let digit = parseInt(digits[i]);\n        if (digit % 2 === 0) {\n\
    \            primes.push(digit);\n        }\n    }\n    let prime = primes[primes.length\
    \ - 1];\n    return prime;\n}\n", "    let hex = num.toUpperCase();\n    let digits\
    \ = hex.split(\"\");\n    let primes: number[] = [];\n    for (let i = 0; i <\
    \ digits.length; i++) {\n        let digit = parseInt(digits[i]);\n        if\
    \ (digit > 0 && digit <= 9) {\n            primes.push(digit);\n        }\n  \
    \  }\n    let primesCount = primes.length;\n    let primesSum = 0;\n    for (let\
    \ i = 0; i < primesCount; i++) {\n        primesSum += primes[i];\n    }\n   \
    \ let primesSumHex = primesSum.toString(16);\n    let primesSumHexLength = primesSumHex.length;\n\
    \    let primesSumHexArray = primesSumHex.split(\"\");\n    let primesSumHexArrayLength\
    \ = primesSumHexArray.length;\n    let primesSumHexArraySum = primesSumHexArray.reduce((a,\
    \ b) => a + b, 0);\n    let primesSumHexArraySumHex = primesSumHexArraySum.toString(16);\n\
    \    let primesSumHexArraySumHexLength = primesSumHexArraySumHex.length;\n   \
    \ let primesSumHexArraySumHexArray = primesSumHexArraySumHex.split(\"\");\n  \
    \  let primesSumHexArraySumHexArrayLength = primesSumHexArraySumHexArray.length;\n\
    \    let primesSumHexArraySumHexArraySum = primesSumHexArraySumHexArray.reduce((a,\
    \ b) => a + b, 0);\n    let primesSumHexArraySumHexArraySumHex = primesSumHexArraySumHexArraySum.toString(16);\n\
    \    let primesSumHexArraySumHexArraySumHexLength = primesSumHexArraySumHexArraySumHex.length;\n\
    \    let primesSumHexArraySumHexArraySumHexArray = primesSumHexArraySumHexArraySumHexArray.split(\"\
    \");\n    let primesSumHexArraySumHexArraySumHexArrayLength = primesSumHexArraySumHexArraySumHexArray.length;\n\
    \    let primesSumHexArraySumHexArraySumHexArraySum = primesSumHexArraySumHexArraySumHexArray.reduce((a,\
    \ b) => a + b, 0);\n    let primesSumHexArraySumHexArraySumHexArraySumHex = primesSumHexArraySumHexArraySumHexArraySum.toString(16);\n\
    \    let primesSumHexArraySumHexArraySumHexArraySumHexLength = primesSumHexArraySumHexArraySumHexArraySumHexArray.length;\n\
    \    let primesSumHexArraySumHexArraySumHexArraySumHexArraySum = primesSumHexArraySumHexArraySumHexArraySumHexArraySum.reduce((a,\
    \ b) => a + b, 0);\n    let primesSumHex", "  let hex = num.toUpperCase();\n \
    \ let hexDigits = [\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"\
    , \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\n  ];\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount;\n  let hexDigitCount3\
    \ = hexDigitCount2;\n  let hexDigitCount4 = hexDigitCount3;\n  let hexDigitCount5\
    \ = hexDigitCount4;\n  let hexDigitCount6 = hexDigitCount5;\n  let hexDigitCount7\
    \ = hexDigitCount6;\n  let hexDigitCount8 = hexDigitCount7;\n  let hexDigitCount9\
    \ = hexDigitCount8;\n  let hexDigitCount10 = hexDigitCount9;\n  let hexDigitCount11\
    \ = hexDigitCount10;\n  let hexDigitCount12 = hexDigitCount11;\n  let hexDigitCount13\
    \ = hexDigitCount12;\n  let hexDigitCount14 = hexDigitCount13;\n  let hexDigitCount15\
    \ = hexDigitCount14;\n  let hexDigitCount16 = hexDigitCount15;\n  let hexDigitCount17\
    \ = hexDigitCount16;\n  let hexDigitCount18 = hexDigitCount17;\n  let hexDigitCount19\
    \ = hexDigitCount18;\n  let hexDigitCount20 = hexDigitCount19;\n  let hexDigitCount21\
    \ = hexDigitCount20;\n  let hexDigitCount22 = hexDigitCount21;\n  let hexDigitCount23\
    \ = hexDigitCount22;\n  let hexDigitCount24 = hexDigitCount23;\n  let hexDigitCount25\
    \ = hexDigitCount24;\n  let hexDigitCount26 = hexDigitCount25;\n  let hexDigitCount27\
    \ = hexDigitCount26;\n  let hexDigitCount28 = hexDigitCount27;\n  let hexDigitCount29\
    \ = hexDigitCount28;\n  let hexDigitCount30 = hexDigitCount29;\n  let hexDigitCount31\
    \ = hexDigitCount30;\n  let hexDigitCount32 = hexDigitCount31;\n  let hexDigitCount33\
    \ = hexDigitCount32;\n  let hexDigitCount34 = hexDigitCount33;\n  let hexDigitCount35\
    \ = hexDigitCount34;\n  let hexDigitCount36 = hexDigitCount35;\n  let hexDigitCount37\
    \ = hexDigitCount36;\n  let hexDigitCount38 = hexDigitCount37;\n  let hexDigitCount39\
    \ = hexDigitCount38;\n  let hexDigitCount40 = hexDigitCount39;\n  let hexDigitCount41\
    \ = hexDigitCount40;\n  let hexDigitCount42 = hexDigitCount4", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitPrimeCount = 0;\n  let hexDigitPrimes: number[] = [];\n  let hexDigitPrimeIndex\
    \ = 0;\n  let hexDigitPrimeIndex2 = 0;\n  let hexDigitPrimeIndex3 = 0;\n  let\
    \ hexDigitPrimeIndex4 = 0;\n  let hexDigitPrimeIndex5 = 0;\n  let hexDigitPrimeIndex6\
    \ = 0;\n  let hexDigitPrimeIndex7 = 0;\n  let hexDigitPrimeIndex8 = 0;\n  let\
    \ hexDigitPrimeIndex9 = 0;\n  let hexDigitPrimeIndex10 = 0;\n  let hexDigitPrimeIndex11\
    \ = 0;\n  let hexDigitPrimeIndex12 = 0;\n  let hexDigitPrimeIndex13 = 0;\n  let\
    \ hexDigitPrimeIndex14 = 0;\n  let hexDigitPrimeIndex15 = 0;\n  let hexDigitPrimeIndex16\
    \ = 0;\n  let hexDigitPrimeIndex17 = 0;\n  let hexDigitPrimeIndex18 = 0;\n  let\
    \ hexDigitPrimeIndex19 = 0;\n  let hexDigitPrimeIndex20 = 0;\n  let hexDigitPrimeIndex21\
    \ = 0;\n  let hexDigitPrimeIndex22 = 0;\n  let hexDigitPrimeIndex23 = 0;\n  let\
    \ hexDigitPrimeIndex24 = 0;\n  let hexDigitPrimeIndex25 = 0;\n  let hexDigitPrimeIndex26\
    \ = 0;\n  let hexDigitPrimeIndex27 = 0;\n  let hexDigitPrimeIndex28 = 0;\n  let\
    \ hexDigitPrimeIndex29 = 0;\n  let hexDigitPrimeIndex30 = 0;\n  let hexDigitPrimeIndex31\
    \ = 0;\n  let hexDigitPrimeIndex32 = 0;\n  let hexDigitPrimeIndex33 = 0;\n  let\
    \ hexDigitPrimeIndex34 = 0;\n  let hexDigitPrimeIndex35 = 0;\n  let hexDigitPrimeIndex36\
    \ = 0;\n  let hexDigitPrimeIndex37 = 0;\n  let hexDigitPrimeIndex38 = 0;\n  let\
    \ hexDigitPrimeIndex39 = 0;\n  let hexDigitPrimeIndex40 = 0;\n  let hexDigitPrimeIndex41\
    \ = 0;\n  let hexDigitPrimeIndex42 = 0;\n  let hexDigitPrimeIndex43 = 0;\n  let\
    \ hexDigitPrimeIndex44 = 0;\n  let hexDigitPrimeIndex45 = 0;\n  let hexDigitPrimeIndex46\
    \ = 0;\n  let hexDigitPrimeIndex47 = 0;\n  let hexDigitPrimeIndex48 = 0;\n  let\
    \ hexDigitPrimeIndex49 = 0;\n  let hexDigitPrimeIndex50 = 0;\n  let hexDigitPrimeIndex51\
    \ = 0;\n  let hexDigitPrimeIndex52 = 0;\n  let hexDigitPrimeIndex53", "  let hex\
    \ = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \ let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33\
    \ = hexDigitCount", "  let hex = num.toUpperCase();\n  let hexDigits = [\n   \
    \ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\"\
    , \"B\", \"C\", \"D\", \"E\", \"F\"\n  ];\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCount2 = hexDigitCount*2;\n  let hexDigitCount3 = hexDigitCount2*2;\n\
    \  let hexDigitCount4 = hexDigitCount3*2;\n  let hexDigitCount5 = hexDigitCount4*2;\n\
    \  let hexDigitCount6 = hexDigitCount5*2;\n  let hexDigitCount7 = hexDigitCount6*2;\n\
    \  let hexDigitCount8 = hexDigitCount7*2;\n  let hexDigitCount9 = hexDigitCount8*2;\n\
    \  let hexDigitCount10 = hexDigitCount9*2;\n  let hexDigitCount11 = hexDigitCount10*2;\n\
    \  let hexDigitCount12 = hexDigitCount11*2;\n  let hexDigitCount13 = hexDigitCount12*2;\n\
    \  let hexDigitCount14 = hexDigitCount13*2;\n  let hexDigitCount15 = hexDigitCount14*2;\n\
    \  let hexDigitCount16 = hexDigitCount15*2;\n  let hexDigitCount17 = hexDigitCount16*2;\n\
    \  let hexDigitCount18 = hexDigitCount17*2;\n  let hexDigitCount19 = hexDigitCount18*2;\n\
    \  let hexDigitCount20 = hexDigitCount19*2;\n  let hexDigitCount21 = hexDigitCount20*2;\n\
    \  let hexDigitCount22 = hexDigitCount21*2;\n  let hexDigitCount23 = hexDigitCount22*2;\n\
    \  let hexDigitCount24 = hexDigitCount23*2;\n  let hexDigitCount25 = hexDigitCount24*2;\n\
    \  let hexDigitCount26 = hexDigitCount25*2;\n  let hexDigitCount27 = hexDigitCount26*2;\n\
    \  let hexDigitCount28 = hexDigitCount27*2;\n  let hexDigitCount29 = hexDigitCount28*2;\n\
    \  let hexDigitCount30 = hexDigitCount29*2;\n  let hexDigitCount31 = hexDigitCount30*2;\n\
    \  let hexDigitCount32 = hexDigitCount31*2;\n  let hexDigitCount33 = hexDigitCount32*2;\n\
    \  let hexDigitCount34 = hexDigitCount33*2;\n  let hexDigitCount35 = hexDigitCount34*2;\n\
    \  let hexDigitCount36 = hexDigitCount35*2;\n  let hexDigitCount37 = hexDigitCount36*2;\n\
    \  let hexDigitCount38 = hexDigitCount", "    let hex = num.toUpperCase();\n \
    \   let digits = hex.split(\"\");\n    let primes = 0;\n    let prime_digits =\
    \ \"\";\n    let prime_digits_length = 0;\n    let prime_digits_length2 = 0;\n\
    \    let prime_digits_length3 = 0;\n    let prime_digits_length4 = 0;\n    let\
    \ prime_digits_length5 = 0;\n    let prime_digits_length6 = 0;\n    let prime_digits_length7\
    \ = 0;\n    let prime_digits_length8 = 0;\n    let prime_digits_length9 = 0;\n\
    \    let prime_digits_length10 = 0;\n    let prime_digits_length11 = 0;\n    let\
    \ prime_digits_length12 = 0;\n    let prime_digits_length13 = 0;\n    let prime_digits_length14\
    \ = 0;\n    let prime_digits_length15 = 0;\n    let prime_digits_length16 = 0;\n\
    \    let prime_digits_length17 = 0;\n    let prime_digits_length18 = 0;\n    let\
    \ prime_digits_length19 = 0;\n    let prime_digits_length20 = 0;\n    let prime_digits_length21\
    \ = 0;\n    let prime_digits_length22 = 0;\n    let prime_digits_length23 = 0;\n\
    \    let prime_digits_length24 = 0;\n    let prime_digits_length25 = 0;\n    let\
    \ prime_digits_length26 = 0;\n    let prime_digits_length27 = 0;\n    let prime_digits_length28\
    \ = 0;\n    let prime_digits_length29 = 0;\n    let prime_digits_length30 = 0;\n\
    \    let prime_digits_length31 = 0;\n    let prime_digits_length32 = 0;\n    let\
    \ prime_digits_length33 = 0;\n    let prime_digits_length34 = 0;\n    let prime_digits_length35\
    \ = 0;\n    let prime_digits_length36 = 0;\n    let prime_digits_length37 = 0;\n\
    \    let prime_digits_length38 = 0;\n    let prime_digits_length39 = 0;\n    let\
    \ prime_digits_length40 = 0;\n    let prime_digits_length41 = 0;\n    let prime_digits_length42\
    \ = 0;\n    let prime_digits_length43 = 0;\n    let prime_digits_length44 = 0;\n\
    \    let prime_digits_length45 = 0;\n    let prime_digits_length46 = 0;\n    let\
    \ prime_digits_length47 = 0;\n    let prime_digits_length48 = 0;\n    let prime_digits_length49\
    \ = 0;\n    let prime_digits_length50 = 0;\n    let prime_digits_length51 = 0;\n\
    \    let prime_digits_length52 = 0;\n    let prime_digits_length53 = 0;\n    let\
    \ prime_digits_length54 = 0;\n    let prime_digits_", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCount2 = hexDigitCount*2;\n  let hexDigitCount3 = hexDigitCount*3;\n\
    \  let hexDigitCount4 = hexDigitCount*4;\n  let hexDigitCount5 = hexDigitCount*5;\n\
    \  let hexDigitCount6 = hexDigitCount*6;\n  let hexDigitCount7 = hexDigitCount*7;\n\
    \  let hexDigitCount8 = hexDigitCount*8;\n  let hexDigitCount9 = hexDigitCount*9;\n\
    \  let hexDigitCount10 = hexDigitCount*10;\n  let hexDigitCount11 = hexDigitCount*11;\n\
    \  let hexDigitCount12 = hexDigitCount*12;\n  let hexDigitCount13 = hexDigitCount*13;\n\
    \  let hexDigitCount14 = hexDigitCount*14;\n  let hexDigitCount15 = hexDigitCount*15;\n\
    \  let hexDigitCount16 = hexDigitCount*16;\n  let hexDigitCount17 = hexDigitCount*17;\n\
    \  let hexDigitCount18 = hexDigitCount*18;\n  let hexDigitCount19 = hexDigitCount*19;\n\
    \  let hexDigitCount20 = hexDigitCount*20;\n  let hexDigitCount21 = hexDigitCount*21;\n\
    \  let hexDigitCount22 = hexDigitCount*22;\n  let hexDigitCount23 = hexDigitCount*23;\n\
    \  let hexDigitCount24 = hexDigitCount*24;\n  let hexDigitCount25 = hexDigitCount*25;\n\
    \  let hexDigitCount26 = hexDigitCount*26;\n  let hexDigitCount27 = hexDigitCount*27;\n\
    \  let hexDigitCount28 = hexDigitCount*28;\n  let hexDigitCount29 = hexDigitCount*29;\n\
    \  let hexDigitCount30 = hexDigitCount*30;\n  let hexDigitCount31 = hexDigitCount*31;\n\
    \  let hexDigitCount32 = hexDigitCount*32;\n  let hexDigitCount33 = hexDigitCount*33;\n\
    \  let hexDigitCount34 = hexDigitCount*34;\n  let hexDigitCount35 = hexDigitCount*35;\n\
    \  let hexDigitCount36 = hexDigitCount*36;\n  let hexDigitCount37 = hexDigitCount*37;\n\
    \  let hexDigitCount38 = hexDigitCount*38;\n  let hexDigitCount39 = hexDigitCount*39;\n\
    \  let hexDigitCount40 = hexDigitCount*40;\n  let hexDigitCount41 = hexDigitCount*",
  "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*2;\n\
    \    let hexDigitCount3 = hexDigitCount2*2;\n    let hexDigitCount4 = hexDigitCount3*2;\n\
    \    let hexDigitCount5 = hexDigitCount4*2;\n    let hexDigitCount6 = hexDigitCount5*2;\n\
    \    let hexDigitCount7 = hexDigitCount6*2;\n    let hexDigitCount8 = hexDigitCount7*2;\n\
    \    let hexDigitCount9 = hexDigitCount8*2;\n    let hexDigitCount10 = hexDigitCount9*2;\n\
    \    let hexDigitCount11 = hexDigitCount10*2;\n    let hexDigitCount12 = hexDigitCount11*2;\n\
    \    let hexDigitCount13 = hexDigitCount12*2;\n    let hexDigitCount14 = hexDigitCount13*2;\n\
    \    let hexDigitCount15 = hexDigitCount14*2;\n    let hexDigitCount16 = hexDigitCount15*2;\n\
    \    let hexDigitCount17 = hexDigitCount16*2;\n    let hexDigitCount18 = hexDigitCount17*2;\n\
    \    let hexDigitCount19 = hexDigitCount18*2;\n    let hexDigitCount20 = hexDigitCount19*2;\n\
    \    let hexDigitCount21 = hexDigitCount20*2;\n    let hexDigitCount22 = hexDigitCount21*2;\n\
    \    let hexDigitCount23 = hexDigitCount22*2;\n    let hexDigitCount24 = hexDigitCount23*2;\n\
    \    let hexDigitCount25 = hexDigitCount24*2;\n    let hexDigitCount26 = hexDigitCount25*2;\n\
    \    let hexDigitCount27 = hexDigitCount26*2;\n    let hexDigitCount28 = hexDigitCount27*2;\n\
    \    let hexDigitCount29 = hexDigitCount28*2;\n    let hexDigitCount30 = hexDigitCount29*2;\n\
    \    let hexDigitCount31 = hexDigitCount30*2;\n    let hexDigitCount32 = hexDigitCount31*2;\n\
    \    let hexDigitCount33 = hexDigitCount32*2;\n    let hexDigitCount34 = hexDigitCount33*2;\n\
    \    let hexDigitCount35 = hexDigitCount34*2;\n    let hexDigitCount36 = hexDigitCount35*2;\n\
    \    let hexDigitCount37 = hexDigitCount36*2;\n    let hexDigitCount38 = hexDigitCount37*2;\n\
    \    let hexDigitCount39 = hexDigitCount38*2;\n    let hexDigitCount40 = hexDigitCount39*",
  "    let hex = num.toUpperCase();\n    let result = 0;\n    for (let i = 0; i <\
    \ hex.length; i++) {\n        let c = hex.charCodeAt(i);\n        if (c >= 48\
    \ && c <= 57) {\n            result += c - 48;\n        } else if (c >= 65 &&\
    \ c <= 70) {\n            result += c - 55;\n        } else if (c >= 97 && c <=\
    \ 102) {\n            result += c - 87;\n        } else {\n            result\
    \ += c;\n        }\n    }\n    return result;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33 = hexDigitCount", " \
    \ let hex = num.toUpperCase();\n  let hexDigits = [\n    '0', '1', '2', '3', '4',\
    \ '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'\n  ];\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \ let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \  let hexDigitCount", "  let hex = num.toUpperCase();\n  let hexDigits = [...hex];\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \  let hexDigitCount33 = hexDigitCount32", "  let hex = num.toUpperCase();\n \
    \ let result = 0;\n  for (let i = 0; i < hex.length; i++) {\n    let digit = parseInt(hex.charAt(i));\n\
    \    if (digit >= 0 && digit <= 9) {\n      result += digit * Math.pow(16, hex.length\
    \ - i - 1);\n    }\n  }\n  return result;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes: number[] = [];\n  let prime: number[]\
    \ = [];\n  let i: number;\n  let j: number;\n  let k: number;\n  let l: number;\n\
    \  let m: number;\n  let n: number;\n  let o: number;\n  let p: number;\n  let\
    \ q: number;\n  let r: number;\n  let s: number;\n  let t: number;\n  let u: number;\n\
    \  let v: number;\n  let w: number;\n  let x: number;\n  let y: number;\n  let\
    \ z: number;\n  let a: number;\n  let b: number;\n  let c: number;\n  let d: number;\n\
    \  let e: number;\n  let f: number;\n  let g: number;\n  let h: number;\n  let\
    \ i: number;\n  let j: number;\n  let k: number;\n  let l: number;\n  let m: number;\n\
    \  let n: number;\n  let o: number;\n  let p: number;\n  let q: number;\n  let\
    \ r: number;\n  let s: number;\n  let t: number;\n  let u: number;\n  let v: number;\n\
    \  let w: number;\n  let x: number;\n  let y: number;\n  let z: number;\n  let\
    \ a: number;\n  let b: number;\n  let c: number;\n  let d: number;\n  let e: number;\n\
    \  let f: number;\n  let g: number;\n  let h: number;\n  let i: number;\n  let\
    \ j: number;\n  let k: number;\n  let l: number;\n  let m: number;\n  let n: number;\n\
    \  let o: number;\n  let p: number;\n  let q: number;\n  let r: number;\n  let\
    \ s: number;\n  let t: number;\n  let u: number;\n  let v: number;\n  let w: number;\n\
    \  let x: number;\n  let y: number;\n  let z: number;\n  let a: number;\n  let\
    \ b: number;\n  let c: number;\n  let d: number;\n  let e: number;\n  let f: number;\n\
    \  let g: number;\n  let h: number;\n  let i: number;\n  let j: number;\n  let\
    \ k: number;\n  let l: number;\n  let m: number;\n  let n: number;\n  let o: number;\n\
    \  let p: number;\n  let q: number;\n  let r: number;\n  let s: number;\n  let\
    \ t: number;\n  let u: number;\n  let v: number;\n  let w: number;\n  let x: number;\n\
    \  let y: number;\n  let z: number;\n  let a: number;\n  let b: number;\n  let\
    \ c: number;\n  let d: number;\n  let e: number;\n  let f: number;\n  let g: number;\n\
    \  let h: number;\n  let i: number;\n  let j: number;\n  let k: number;\n  let\
    \ l: number;\n  let m: number;\n  let n: number;\n  let o: number;\n  let p: number;\n\
    \  let q: number;\n  let r: number;\n  let s: number;\n  let t: number;\n  let\
    \ u: number;\n  let v: number;\n  let w: number;\n  let x: number;\n  let y: number;",
  "  let hex = num.toUpperCase();\n  let prime: number = 0;\n  let primes: number[]\
    \ = [];\n  let prime_found = false;\n  let prime_found2 = false;\n  let prime_found3\
    \ = false;\n  let prime_found4 = false;\n  let prime_found5 = false;\n  let prime_found6\
    \ = false;\n  let prime_found7 = false;\n  let prime_found8 = false;\n  let prime_found9\
    \ = false;\n  let prime_found10 = false;\n  let prime_found11 = false;\n  let\
    \ prime_found12 = false;\n  let prime_found13 = false;\n  let prime_found14 =\
    \ false;\n  let prime_found15 = false;\n  let prime_found16 = false;\n  let prime_found17\
    \ = false;\n  let prime_found18 = false;\n  let prime_found19 = false;\n  let\
    \ prime_found20 = false;\n  let prime_found21 = false;\n  let prime_found22 =\
    \ false;\n  let prime_found23 = false;\n  let prime_found24 = false;\n  let prime_found25\
    \ = false;\n  let prime_found26 = false;\n  let prime_found27 = false;\n  let\
    \ prime_found28 = false;\n  let prime_found29 = false;\n  let prime_found30 =\
    \ false;\n  let prime_found31 = false;\n  let prime_found32 = false;\n  let prime_found33\
    \ = false;\n  let prime_found34 = false;\n  let prime_found35 = false;\n  let\
    \ prime_found36 = false;\n  let prime_found37 = false;\n  let prime_found38 =\
    \ false;\n  let prime_found39 = false;\n  let prime_found40 = false;\n  let prime_found41\
    \ = false;\n  let prime_found42 = false;\n  let prime_found43 = false;\n  let\
    \ prime_found44 = false;\n  let prime_found45 = false;\n  let prime_found46 =\
    \ false;\n  let prime_found47 = false;\n  let prime_found48 = false;\n  let prime_found49\
    \ = false;\n  let prime_found50 = false;\n  let prime_found51 = false;\n  let\
    \ prime_found52 = false;\n  let prime_found53 = false;\n  let prime_found54 =\
    \ false;\n  let prime_found55 = false;\n  let prime_found56 = false;\n  let prime_found57\
    \ = false;\n  let prime_found58 = false;\n  let prime_found59 = false;\n  let\
    \ prime_found60 = false;\n  let prime_found61 = false;\n  let prime_found62 =\
    \ false;\n  let prime_found63 = false;\n  let prime_found64 = false;\n  let prime_found65\
    \ = false;\n  let prime_found66 = false;\n  let prime_found67 = false;\n  let\
    \ prime_found68 = false;\n  let prime_found", "    let hex = num.toUpperCase();\n\
    \    let count = 0;\n    let prime: number = 0;\n    for (let i = 0; i < hex.length;\
    \ i++) {\n        let hexDigit = hex.charCodeAt(i);\n        if (hexDigit >= 48\
    \ && hexDigit <= 57) {\n            count++;\n        }\n        if (hexDigit\
    \ >= 65 && hexDigit <= 70) {\n            count++;\n        }\n        if (hexDigit\
    \ >= 97 && hexDigit <= 102) {\n            count++;\n        }\n        if (hexDigit\
    \ >= 48 && hexDigit <= 57) {\n            count++;\n        }\n        if (hexDigit\
    \ >= 65 && hexDigit <= 70) {\n            count++;\n        }\n        if (hexDigit\
    \ >= 97 && hexDigit <= 102) {\n            count++;\n        }\n    }\n    if\
    \ (count % 2 === 0) {\n        prime = 2;\n    }\n    if (count % 3 === 0) {\n\
    \        prime = 3;\n    }\n    if (count % 5 === 0) {\n        prime = 5;\n \
    \   }\n    if (count % 7 === 0) {\n        prime = 7;\n    }\n    if (count %\
    \ 11 === 0) {\n        prime = 11;\n    }\n    if (count % 13 === 0) {\n     \
    \   prime = 13;\n    }\n    if (count % 17 === 0) {\n        prime = 17;\n   \
    \ }\n    if (count % 19 === 0) {\n        prime = 19;\n    }\n    if (count %\
    \ 23 === 0) {\n        prime = 23;\n    }\n    if (count % 29 === 0) {\n     \
    \   prime = 29;\n    }\n    if (count % 31 === 0) {\n        prime = 31;\n   \
    \ }\n    if (count % 37 === 0) {\n        prime = 37;\n    }\n    if (count %\
    \ 43 === 0) {\n        prime = 43;\n    }\n    if (count % 47 === 0) {\n     \
    \   prime = 53;\n    }\n    if (count % 53 === 0) {\n        prime = 53;\n   \
    \ }\n    if (count % 59 === 0) {\n        prime = 59;\n    }\n    if (count %\
    \ 61 === 0) {\n        prime = 61;\n    }\n    if (count % 67 === 0) {\n     \
    \   prime = 67;\n    }\n    if (count % 71 === 0) {\n        prime = 71;\n   \
    \ }\n    if (count % 73 === 0) {\n        prime = 73;\n    }\n    if (count %\
    \ 79 === 0) {\n        prime = 79;\n    }\n    if (count % 81 === 0) {\n     \
    \   prime = 81;\n    }\n    if (count % 83 === 0) {\n        prime = 83;\n   \
    \ }\n    if (count % 89 === 0) {\n        prime = 89;\n    }\n    if (count %\
    \ 97 === 0) {\n        prime = 97\n    }\n    if (count % 103 === 0) {\n     \
    \   prime = 103;\n    }\n    if (count % 105 === 0) {\n        ", "  let hex =\
    \ num.toUpperCase();\n  let hexArray = hex.split(\"\");\n  let hexArrayLength\
    \ = hexArray.length;\n  let hexDigitCount = hexArrayLength;\n  let hexDigitArray\
    \ = [];\n  let hexDigitArrayLength = 0;\n  let hexDigitArray2 = [];\n  let hexDigitArray2Length\
    \ = 0;\n  let hexDigitArray3 = [];\n  let hexDigitArray3Length = 0;\n  let hexDigitArray4\
    \ = [];\n  let hexDigitArray4Length = 0;\n  let hexDigitArray5 = [];\n  let hexDigitArray5Length\
    \ = 0;\n  let hexDigitArray6 = [];\n  let hexDigitArray6Length = 0;\n  let hexDigitArray7\
    \ = [];\n  let hexDigitArray7Length = 0;\n  let hexDigitArray8 = [];\n  let hexDigitArray8Length\
    \ = 0;\n  let hexDigitArray9 = [];\n  let hexDigitArray9Length = 0;\n  let hexDigitArray10\
    \ = [];\n  let hexDigitArray10Length = 0;\n  let hexDigitArray11 = [];\n  let\
    \ hexDigitArray11Length = 0;\n  let hexDigitArray12 = [];\n  let hexDigitArray12Length\
    \ = 0;\n  let hexDigitArray13 = [];\n  let hexDigitArray13Length = 0;\n  let hexDigitArray14\
    \ = [];\n  let hexDigitArray14Length = 0;\n  let hexDigitArray15 = [];\n  let\
    \ hexDigitArray15Length = 0;\n  let hexDigitArray16 = [];\n  let hexDigitArray16Length\
    \ = 0;\n  let hexDigitArray17 = [];\n  let hexDigitArray17Length = 0;\n  let hexDigitArray18\
    \ = [];\n  let hexDigitArray18Length = 0;\n  let hexDigitArray19 = [];\n  let\
    \ hexDigitArray19Length = 0;\n  let hexDigitArray20 = [];\n  let hexDigitArray20Length\
    \ = 0;\n  let hexDigitArray21 = [];\n  let hexDigitArray21Length = 0;\n  let hexDigitArray22\
    \ = [];\n  let hexDigitArray22Length = 0;\n  let hexDigitArray23 = [];\n  let\
    \ hexDigitArray23Length = 0;\n  let hexDigitArray24 = [];\n  let hexDigitArray24Length\
    \ = 0;\n  let hexDigitArray25 = [];\n  let hexDigitArray25Length = 0;\n  let hexDigitArray26\
    \ = [];\n  let hexDigitArray26Length = 0;\n  let hexDigitArray27 = [];\n  let\
    \ hexDigitArray27Length = 0;\n  let hexDigitArray28 = [];\n  let hexDigitArray28Length\
    \ = 0;\n  let hexDigitArray29 = [];\n  let hexDigitArray29Length = 0;\n  let hexDigitArray30\
    \ = [];\n  let hexDigitArray30Length = 0;\n  let hexDigitArray31 = [];\n  let\
    \ hexDigitArray31Length = 0;\n  let hexDigitArray32 = [];\n  let hexDigitArray32Length\
    \ = 0;", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \  let hexDigitCount33 = hexDigitCount", "    let hex = num.toUpperCase();\n \
    \   let hexDigits = [...hex];\n    let hexDigitCount = hexDigits.length;\n   \
    \ let hexDigitPrimes: number[] = [];\n    let hexDigitPrimeCount = 0;\n    let\
    \ hexDigitPrimeIndex = 0;\n    let hexDigitPrimeIndex2 = 0;\n    let hexDigitPrimeIndex3\
    \ = 0;\n    let hexDigitPrimeIndex4 = 0;\n    let hexDigitPrimeIndex5 = 0;\n \
    \   let hexDigitPrimeIndex6 = 0;\n    let hexDigitPrimeIndex7 = 0;\n    let hexDigitPrimeIndex8\
    \ = 0;\n    let hexDigitPrimeIndex9 = 0;\n    let hexDigitPrimeIndex10 = 0;\n\
    \    let hexDigitPrimeIndex11 = 0;\n    let hexDigitPrimeIndex12 = 0;\n    let\
    \ hexDigitPrimeIndex13 = 0;\n    let hexDigitPrimeIndex14 = 0;\n    let hexDigitPrimeIndex15\
    \ = 0;\n    let hexDigitPrimeIndex16 = 0;\n    let hexDigitPrimeIndex17 = 0;\n\
    \    let hexDigitPrimeIndex18 = 0;\n    let hexDigitPrimeIndex19 = 0;\n    let\
    \ hexDigitPrimeIndex20 = 0;\n    let hexDigitPrimeIndex21 = 0;\n    let hexDigitPrimeIndex22\
    \ = 0;\n    let hexDigitPrimeIndex23 = 0;\n    let hexDigitPrimeIndex24 = 0;\n\
    \    let hexDigitPrimeIndex25 = 0;\n    let hexDigitPrimeIndex26 = 0;\n    let\
    \ hexDigitPrimeIndex27 = 0;\n    let hexDigitPrimeIndex28 = 0;\n    let hexDigitPrimeIndex29\
    \ = 0;\n    let hexDigitPrimeIndex30 = 0;\n    let hexDigitPrimeIndex31 = 0;\n\
    \    let hexDigitPrimeIndex32 = 0;\n    let hexDigitPrimeIndex33 = 0;\n    let\
    \ hexDigitPrimeIndex34 = 0;\n    let hexDigitPrimeIndex35 = 0;\n    let hexDigitPrimeIndex36\
    \ = 0;\n    let hexDigitPrimeIndex37 = 0;\n    let hexDigitPrimeIndex38 = 0;\n\
    \    let hexDigitPrimeIndex39 = 0;\n    let hexDigitPrimeIndex40 = 0;\n    let\
    \ hexDigitPrimeIndex41 = 0;\n    let hexDigitPrimeIndex42 = 0;\n    let hexDigitPrimeIndex43\
    \ = 0;\n    let hexDigitPrimeIndex44 = 0;\n    let hexDigitPrimeIndex45 = 0;\n\
    \    let hexDigitPrimeIndex46 = 0;\n    let hexDigitPrimeIndex47 = 0;\n    let\
    \ hexDigitPrimeIndex48 = 0;\n    let hexDigitPrimeIndex49 = 0;\n    let hexDigitPrimeIndex50\
    \ = 0;\n    let hexDigitPrimeIndex51 = 0;\n    let hexDigitPrimeIndex52 = 0;\n\
    \    let hexDigitPrimeIndex53 = 0;", "  let hex = num.toUpperCase();\n  let result\
    \ = 0;\n  for (let i = 0; i < hex.length; i++) {\n    let digit = hex.charCodeAt(i)\
    \ - 48;\n    if (digit > 9) {\n      digit -= 9;\n    }\n    result += digit *\
    \ Math.pow(16, hex.length - i - 1);\n  }\n  return result;\n}\n", "  let hex =\
    \ num.toUpperCase();\n  let result = 0;\n  let digit;\n  \n  for (let i = 0; i\
    \ < hex.length; i++) {\n    digit = hex.charCodeAt(i) - 48;\n    if (digit >=\
    \ 0 && digit <= 9) {\n      result += digit * Math.pow(16, i);\n    }\n  }\n \
    \ return result;\n}\n", "    let hex = num.toUpperCase();\n    let digits = hex.split(\"\
    \");\n    let primes = 0;\n    let prime_digits = \"\";\n    let prime_digits_length\
    \ = 0;\n    let prime_digits_array = [];\n    let prime_digits_array_length =\
    \ 0;\n    let prime_digits_array_temp = [];\n    let prime_digits_array_temp_length\
    \ = 0;\n    let prime_digits_array_temp_length2 = 0;\n    let prime_digits_array_temp_length3\
    \ = 0;\n    let prime_digits_array_temp_length4 = 0;\n    let prime_digits_array_temp_length5\
    \ = 0;\n    let prime_digits_array_temp_length6 = 0;\n    let prime_digits_array_temp_length7\
    \ = 0;\n    let prime_digits_array_temp_length8 = 0;\n    let prime_digits_array_temp_length9\
    \ = 0;\n    let prime_digits_array_temp_length10 = 0;\n    let prime_digits_array_temp_length11\
    \ = 0;\n    let prime_digits_array_temp_length12 = 0;\n    let prime_digits_array_temp_length13\
    \ = 0;\n    let prime_digits_array_temp_length14 = 0;\n    let prime_digits_array_temp_length15\
    \ = 0;\n    let prime_digits_array_temp_length16 = 0;\n    let prime_digits_array_temp_length17\
    \ = 0;\n    let prime_digits_array_temp_length18 = 0;\n    let prime_digits_array_temp_length19\
    \ = 0;\n    let prime_digits_array_temp_length20 = 0;\n    let prime_digits_array_temp_length21\
    \ = 0;\n    let prime_digits_array_temp_length22 = 0;\n    let prime_digits_array_temp_length23\
    \ = 0;\n    let prime_digits_array_temp_length24 = 0;\n    let prime_digits_array_temp_length25\
    \ = 0;\n    let prime_digits_array_temp_length26 = 0;\n    let prime_digits_array_temp_length27\
    \ = 0;\n    let prime_digits_array_temp_length28 = 0;\n    let prime_digits_array_temp_length29\
    \ = 0;\n    let prime_digits_array_temp_length30 = 0;\n    let prime_digits_array_temp_length31\
    \ = 0;\n    let prime_digits_array_temp_length32 = 0;\n    let prime_digits_array_temp_length33\
    \ = 0;\n    let prime_digits_array_temp_length34 = 0;\n    let prime_digits_array_temp_length35\
    \ = 0;\n    let prime_digits_array_temp_length36 = 0;\n    let prime_digits_array_temp_length37\
    \ = 0;\n    let prime_digits_array_temp_length38 = 0;\n    let prime_digits_array_temp_length39\
    \ = 0;\n    let prime_digits_array_temp_length40 = 0;\n    let prime_digits_array_temp_length41\
    \ = 0;\n    let prime_digits_array_", "    let hex = num.toUpperCase();\n    let\
    \ hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n  \
    \  let hexDigitCountPrime = 0;\n    let hexDigitCountPrime2 = 0;\n    let hexDigitCountPrime3\
    \ = 0;\n    let hexDigitCountPrime4 = 0;\n    let hexDigitCountPrime5 = 0;\n \
    \   let hexDigitCountPrime6 = 0;\n    let hexDigitCountPrime7 = 0;\n    let hexDigitCountPrime8\
    \ = 0;\n    let hexDigitCountPrime9 = 0;\n    let hexDigitCountPrime10 = 0;\n\
    \    let hexDigitCountPrime11 = 0;\n    let hexDigitCountPrime12 = 0;\n    let\
    \ hexDigitCountPrime13 = 0;\n    let hexDigitCountPrime14 = 0;\n    let hexDigitCountPrime15\
    \ = 0;\n    let hexDigitCountPrime16 = 0;\n    let hexDigitCountPrime17 = 0;\n\
    \    let hexDigitCountPrime18 = 0;\n    let hexDigitCountPrime19 = 0;\n    let\
    \ hexDigitCountPrime20 = 0;\n    let hexDigitCountPrime21 = 0;\n    let hexDigitCountPrime22\
    \ = 0;\n    let hexDigitCountPrime23 = 0;\n    let hexDigitCountPrime24 = 0;\n\
    \    let hexDigitCountPrime25 = 0;\n    let hexDigitCountPrime26 = 0;\n    let\
    \ hexDigitCountPrime27 = 0;\n    let hexDigitCountPrime28 = 0;\n    let hexDigitCountPrime29\
    \ = 0;\n    let hexDigitCountPrime30 = 0;\n    let hexDigitCountPrime31 = 0;\n\
    \    let hexDigitCountPrime32 = 0;\n    let hexDigitCountPrime33 = 0;\n    let\
    \ hexDigitCountPrime34 = 0;\n    let hexDigitCountPrime35 = 0;\n    let hexDigitCountPrime36\
    \ = 0;\n    let hexDigitCountPrime37 = 0;\n    let hexDigitCountPrime38 = 0;\n\
    \    let hexDigitCountPrime39 = 0;\n    let hexDigitCountPrime40 = 0;\n    let\
    \ hexDigitCountPrime41 = 0;\n    let hexDigitCountPrime42 = 0;\n    let hexDigitCountPrime43\
    \ = 0;\n    let hexDigitCountPrime44 = 0;\n    let hexDigitCountPrime45 = 0;\n\
    \    let hexDigitCountPrime46 = 0;\n    let hexDigitCountPrime47 = 0;\n    let\
    \ hexDigitCountPrime48 = 0;\n    let hexDigitCountPrime49 = 0;\n    let hexDigitCountPrime50\
    \ = 0;\n    let hexDigitCountPrime51 = 0;\n    let hexDigitCountPrime52 = 0;\n\
    \    let hexDigitCountPrime53 = 0;\n    let hexDigitCountPrime54 = 0;\n    let\
    \ hexDigitCountPrime55", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\
    \");\n  let primes = 0;\n  for (let i = 0; i < digits.length; i++) {\n    let\
    \ digit = parseInt(digits[i]);\n    if (digit > 0 && digit <= 9) {\n      primes++;\n\
    \    }\n  }\n  return primes;\n}\n", "  let hex = num.toUpperCase();\n  let result\
    \ = 0;\n  for (let i = 0; i < hex.length; i++) {\n    let c = hex.charCodeAt(i);\n\
    \    if (c >= 48 && c <= 57) {\n      result += c - 48;\n    } else if (c >= 65\
    \ && c <= 70) {\n      result += c - 55;\n    } else if (c >= 97 && c <= 102)\
    \ {\n      result += c - 87;\n    }\n  }\n  return result;\n}\n", "  let hex =\
    \ num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes = [];\n  let\
    \ prime_digits = [];\n  let prime_digits_len = 0;\n  let prime_digit_len = 0;\n\
    \  let prime_digit_count = 0;\n  let prime_digit_count_len = 0;\n  let prime_digit_count_count\
    \ = 0;\n  let prime_digit_count_count_len = 0;\n  let prime_digit_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_len = 0;\n  let prime_digit_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_len = 0;\n  let prime_digit_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_len = 0;\n  let prime_digit_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_count_len = 0;\n  let prime_digit_count_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_len = 0;\n  let\
    \ prime_digit_count_count_count_count_count_count_count_count = 0;\n  let prime_digit_count_count_count_count_count_count_len\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count = 0;\n  let\
    \ prime_digit_count_count_count_count_count_count_len = 0;\n  let prime_digit_count_count_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_len = 0;\n  let\
    \ prime_digit_count_count_count_count_count_count_count_count = 0;\n  let prime_digit_count_count_count_count_count_count_count_len\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_len\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_len = 0;\n\
    \  let prime_digit_count_count_count_count_count_count_count_count_count = 0;\n\
    \  let prime_digit_count_count_count_count_count_count_count_count_len = 0;\n\
    \  let prime_digit_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_len\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_count_len\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_count_len\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_len\
    \ = 0;\n  let prime_digit_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n  let prime_digit_count_count_", "  let hex = num.toUpperCase();\n  let\
    \ hexDigits = [...hex];\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33 = hexDigitCount32",
  "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \ let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33\
    \ = hexDigitCount", "    let hex = num.toUpperCase();\n    let hexDigits = [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F];\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitSum = 0;\n    let hexDigitSum2 = 0;\n    let hexDigitSum3 = 0;\n\
    \    let hexDigitSum4 = 0;\n    let hexDigitSum5 = 0;\n    let hexDigitSum6 =\
    \ 0;\n    let hexDigitSum7 = 0;\n    let hexDigitSum8 = 0;\n    let hexDigitSum9\
    \ = 0;\n    let hexDigitSum10 = 0;\n    let hexDigitSum11 = 0;\n    let hexDigitSum12\
    \ = 0;\n    let hexDigitSum13 = 0;\n    let hexDigitSum14 = 0;\n    let hexDigitSum15\
    \ = 0;\n    let hexDigitSum16 = 0;\n    let hexDigitSum17 = 0;\n    let hexDigitSum18\
    \ = 0;\n    let hexDigitSum19 = 0;\n    let hexDigitSum20 = 0;\n    let hexDigitSum21\
    \ = 0;\n    let hexDigitSum22 = 0;\n    let hexDigitSum23 = 0;\n    let hexDigitSum24\
    \ = 0;\n    let hexDigitSum25 = 0;\n    let hexDigitSum26 = 0;\n    let hexDigitSum27\
    \ = 0;\n    let hexDigitSum28 = 0;\n    let hexDigitSum29 = 0;\n    let hexDigitSum30\
    \ = 0;\n    let hexDigitSum31 = 0;\n    let hexDigitSum32 = 0;\n    let hexDigitSum33\
    \ = 0;\n    let hexDigitSum34 = 0;\n    let hexDigitSum35 = 0;\n    let hexDigitSum36\
    \ = 0;\n    let hexDigitSum37 = 0;\n    let hexDigitSum38 = 0;\n    let hexDigitSum39\
    \ = 0;\n    let hexDigitSum40 = 0;\n    let hexDigitSum41 = 0;\n    let hexDigitSum42\
    \ = 0;\n    let hexDigitSum43 = 0;\n    let hexDigitSum44 = 0;\n    let hexDigitSum45\
    \ = 0;\n    let hexDigitSum46 = 0;\n    let hexDigitSum47 = 0;\n    let hexDigitSum48\
    \ = 0;\n    let hexDigitSum49 = 0;\n    let hexDigitSum50 = 0;\n    let hexDigitSum51\
    \ = 0;\n    let hexDigitSum52 = 0;\n    let hexDigitSum53 = 0;\n    let hexDigitSum54\
    \ = 0;\n    let hexDigitSum55 = 0;\n    let hexDigitSum56 = 0;\n    let hexDigitSum57\
    \ = 0;\n    let hexDigitSum58 = 0;\n    let hexDigitSum59 = 0;\n    let hexDigitSum60\
    \ = 0;\n    let hexDigitSum61 = 0;\n    let hexDigitSum62 = 0;\n    let hexDigitSum63\
    \ = 0;\n    let hexDigitSum64 = 0;\n    let hexDigitSum65 = 0;\n    let hexDigitSum66\
    \ = 0;\n    let hexDigitSum67 = 0;\n    let hexDigitSum68 = 0;\n    let hexDigitSum69\
    \ = 0;\n    let hexDigitSum", "    let hex = num.toUpperCase();\n    let digits\
    \ = hex.split(\"\");\n    let primes = 0;\n    let prime_digits: number[] = [];\n\
    \    let prime_digits_length: number[] = [];\n    let prime_digits_length2: number[]\
    \ = [];\n    let prime_digits_length3: number[] = [];\n    let prime_digits_length4:\
    \ number[] = [];\n    let prime_digits_length5: number[] = [];\n    let prime_digits_length6:\
    \ number[] = [];\n    let prime_digits_length7: number[] = [];\n    let prime_digits_length8:\
    \ number[] = [];\n    let prime_digits_length9: number[] = [];\n    let prime_digits_length10:\
    \ number[] = [];\n    let prime_digits_length11: number[] = [];\n    let prime_digits_length12:\
    \ number[] = [];\n    let prime_digits_length13: number[] = [];\n    let prime_digits_length14:\
    \ number[] = [];\n    let prime_digits_length15: number[] = [];\n    let prime_digits_length16:\
    \ number[] = [];\n    let prime_digits_length17: number[] = [];\n    let prime_digits_length18:\
    \ number[] = [];\n    let prime_digits_length19: number[] = [];\n    let prime_digits_length20:\
    \ number[] = [];\n    let prime_digits_length21: number[] = [];\n    let prime_digits_length22:\
    \ number[] = [];\n    let prime_digits_length23: number[] = [];\n    let prime_digits_length24:\
    \ number[] = [];\n    let prime_digits_length25: number[] = [];\n    let prime_digits_length26:\
    \ number[] = [];\n    let prime_digits_length27: number[] = [];\n    let prime_digits_length28:\
    \ number[] = [];\n    let prime_digits_length29: number[] = [];\n    let prime_digits_length30:\
    \ number[] = [];\n    let prime_digits_length31: number[] = [];\n    let prime_digits_length32:\
    \ number[] = [];\n    let prime_digits_length33: number[] = [];\n    let prime_digits_length34:\
    \ number[] = [];\n    let prime_digits_length35: number[] = [];\n    let prime_digits_length36:\
    \ number[] = [];\n    let prime_digits_length37: number[] = [];\n    let prime_digits_length38:\
    \ number[] = [];\n    let prime_digits_length39: number[] = [];\n    let prime_digits_length40:\
    \ number[] = [];\n    let prime_digits_length41: number", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCountPrime = hexDigitCount;\n    let hexDigitCountPrime2 = hexDigitCountPrime;\n\
    \    let hexDigitCountPrime3 = hexDigitCountPrime2;\n    let hexDigitCountPrime4\
    \ = hexDigitCountPrime3;\n    let hexDigitCountPrime5 = hexDigitCountPrime4;\n\
    \    let hexDigitCountPrime6 = hexDigitCountPrime5;\n    let hexDigitCountPrime7\
    \ = hexDigitCountPrime6;\n    let hexDigitCountPrime8 = hexDigitCountPrime7;\n\
    \    let hexDigitCountPrime9 = hexDigitCountPrime8;\n    let hexDigitCountPrime10\
    \ = hexDigitCountPrime9;\n    let hexDigitCountPrime11 = hexDigitCountPrime10;\n\
    \    let hexDigitCountPrime12 = hexDigitCountPrime11;\n    let hexDigitCountPrime13\
    \ = hexDigitCountPrime12;\n    let hexDigitCountPrime14 = hexDigitCountPrime13;\n\
    \    let hexDigitCountPrime15 = hexDigitCountPrime14;\n    let hexDigitCountPrime16\
    \ = hexDigitCountPrime15;\n    let hexDigitCountPrime17 = hexDigitCountPrime16;\n\
    \    let hexDigitCountPrime18 = hexDigitCountPrime17;\n    let hexDigitCountPrime19\
    \ = hexDigitCountPrime18;\n    let hexDigitCountPrime20 = hexDigitCountPrime19;\n\
    \    let hexDigitCountPrime21 = hexDigitCountPrime20;\n    let hexDigitCountPrime22\
    \ = hexDigitCountPrime21;\n    let hexDigitCountPrime23 = hexDigitCountPrime22;\n\
    \    let hexDigitCountPrime24 = hexDigitCountPrime23;\n    let hexDigitCountPrime25\
    \ = hexDigitCountPrime24;\n    let hexDigitCountPrime26 = hexDigitCountPrime25;\n\
    \    let hexDigitCountPrime27 = hexDigitCountPrime26;\n    let hexDigitCountPrime28\
    \ = hexDigitCountPrime27;\n    let hexDigitCountPrime29 = hexDigitCountPrime28;\n\
    \    let hexDigitCountPrime30 = hexDigitCountPrime29;\n    let hexDigitCountPrime31\
    \ = hexDigitCountPrime30;\n    let hexDigitCountPrime32 = hexDigitCountPrime31;\n\
    \    let hexDigitCountPrime33 = ", "    let hex = num.toUpperCase();\n    let\
    \ hexDigits = [...hex];\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCountPrime\
    \ = hexDigitCount;\n    let hexDigitCountPrime2 = hexDigitCountPrime * hexDigitCountPrime;\n\
    \    let hexDigitCountPrime3 = hexDigitCountPrime2 * hexDigitCountPrime;\n   \
    \ let hexDigitCountPrime4 = hexDigitCountPrime3 * hexDigitCountPrime;\n    let\
    \ hexDigitCountPrime5 = hexDigitCountPrime4 * hexDigitCountPrime;\n    let hexDigitCountPrime6\
    \ = hexDigitCountPrime5 * hexDigitCountPrime;\n    let hexDigitCountPrime7 = hexDigitCountPrime6\
    \ * hexDigitCountPrime;\n    let hexDigitCountPrime8 = hexDigitCountPrime7 * hexDigitCountPrime;\n\
    \    let hexDigitCountPrime9 = hexDigitCountPrime8 * hexDigitCountPrime;\n   \
    \ let hexDigitCountPrime10 = hexDigitCountPrime9 * hexDigitCountPrime;\n    let\
    \ hexDigitCountPrime11 = hexDigitCountPrime10 * hexDigitCountPrime;\n    let hexDigitCountPrime12\
    \ = hexDigitCountPrime11 * hexDigitCountPrime;\n    let hexDigitCountPrime13 =\
    \ hexDigitCountPrime12 * hexDigitCountPrime;\n    let hexDigitCountPrime14 = hexDigitCountPrime13\
    \ * hexDigitCountPrime;\n    let hexDigitCountPrime15 = hexDigitCountPrime14 *\
    \ hexDigitCountPrime;\n    let hexDigitCountPrime16 = hexDigitCountPrime15 * hexDigitCountPrime;\n\
    \    let hexDigitCountPrime17 = hexDigitCountPrime16 * hexDigitCountPrime;\n \
    \   let hexDigitCountPrime18 = hexDigitCountPrime17 * hexDigitCountPrime;\n  \
    \  let hexDigitCountPrime19 = hexDigitCountPrime18 * hexDigitCountPrime;\n   \
    \ let hexDigitCountPrime20 = hexDigitCountPrime19 * hexDigitCountPrime;\n    let\
    \ hexDigitCountPrime21 = hexDigitCountPrime20 * hexDigitCountPrime;\n    let hexDigitCountPrime22\
    \ = hexDigitCountPrime21 * hexDigitCountPrime;\n    let hexDigitCountPrime23 =\
    \ hexDigitCountPrime22 * hexDigitCountPrime;\n    let hexDigitCountPrime24 = hexDigitCount",
  "    let digits = num.split(\"\");\n    let primes: number[] = [];\n    let prime:\
    \ number = 1;\n    let prime_found: boolean = false;\n    for (let i = 0; i <\
    \ digits.length; i++) {\n        let digit = digits[i];\n        if (digit ===\
    \ \"A\" || digit === \"B\" || digit === \"C\" || digit === \"D\" || digit ===\
    \ \"E\" || digit === \"F\") {\n            prime_found = true;\n            prime\
    \ = digit;\n        }\n        if (prime_found) {\n            primes.push(prime);\n\
    \            prime = 1;\n            prime_found = false;\n        }\n    }\n\
    \    return primes.length;\n}\n", "  let hex = num.toUpperCase();\n  let digits\
    \ = hex.split(\"\");\n  let primes: number[] = [];\n  let prime: number[] = [];\n\
    \  let primeCount: number = 0;\n  let primeCount2: number = 0;\n  let primeCount3:\
    \ number = 0;\n  let primeCount4: number = 0;\n  let primeCount5: number = 0;\n\
    \  let primeCount6: number = 0;\n  let primeCount7: number = 0;\n  let primeCount8:\
    \ number = 0;\n  let primeCount9: number = 0;\n  let primeCount10: number = 0;\n\
    \  let primeCount11: number = 0;\n  let primeCount12: number = 0;\n  let primeCount13:\
    \ number = 0;\n  let primeCount14: number = 0;\n  let primeCount15: number = 0;\n\
    \  let primeCount16: number = 0;\n  let primeCount17: number = 0;\n  let primeCount18:\
    \ number = 0;\n  let primeCount19: number = 0;\n  let primeCount20: number = 0;\n\
    \  let primeCount21: number = 0;\n  let primeCount22: number = 0;\n  let primeCount23:\
    \ number = 0;\n  let primeCount24: number = 0;\n  let primeCount25: number = 0;\n\
    \  let primeCount26: number = 0;\n  let primeCount27: number = 0;\n  let primeCount28:\
    \ number = 0;\n  let primeCount29: number = 0;\n  let primeCount30: number = 0;\n\
    \  let primeCount31: number = 0;\n  let primeCount32: number = 0;\n  let primeCount33:\
    \ number = 0;\n  let primeCount34: number = 0;\n  let primeCount35: number = 0;\n\
    \  let primeCount36: number = 0;\n  let primeCount37: number = 0;\n  let primeCount38:\
    \ number = 0;\n  let primeCount39: number = 0;\n  let primeCount40: number = 0;\n\
    \  let primeCount41: number = 0;\n  let primeCount42: number = 0;\n  let primeCount43:\
    \ number = 0;\n  let primeCount44: number = 0;\n  let primeCount45: number = 0;\n\
    \  let primeCount46: number = 0;\n  let primeCount47: number = 0;\n  let primeCount48:\
    \ number = 0;\n  let primeCount49: number = 0;\n  let primeCount50: number = 0;\n\
    \  let primeCount51: number = 0;\n  let primeCount52: number = 0;\n  let primeCount53:\
    \ number = 0;\n  let primeCount54: number = 0;\n  let primeCount55: number = 0;\n\
    \  let primeCount56: number = 0;\n  let primeCount57: number = 0;\n  let primeCount58:\
    \ number = 0;\n  let primeCount59: number = 0;\n  let primeCount60: number = 0;\n\
    \  let primeCount61: number = 0;\n", "    let hex = num.toUpperCase();\n    let\
    \ hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n  \
    \  let hexDigitCount2 = hexDigitCount*2;\n    let hexDigitCount3 = hexDigitCount2*2;\n\
    \    let hexDigitCount4 = hexDigitCount3*2;\n    let hexDigitCount5 = hexDigitCount4*2;\n\
    \    let hexDigitCount6 = hexDigitCount5*2;\n    let hexDigitCount7 = hexDigitCount6*2;\n\
    \    let hexDigitCount8 = hexDigitCount7*2;\n    let hexDigitCount9 = hexDigitCount8*2;\n\
    \    let hexDigitCount10 = hexDigitCount9*2;\n    let hexDigitCount11 = hexDigitCount10*2;\n\
    \    let hexDigitCount12 = hexDigitCount11*2;\n    let hexDigitCount13 = hexDigitCount12*2;\n\
    \    let hexDigitCount14 = hexDigitCount13*2;\n    let hexDigitCount15 = hexDigitCount14*2;\n\
    \    let hexDigitCount16 = hexDigitCount15*2;\n    let hexDigitCount17 = hexDigitCount16*2;\n\
    \    let hexDigitCount18 = hexDigitCount17*2;\n    let hexDigitCount19 = hexDigitCount18*2;\n\
    \    let hexDigitCount20 = hexDigitCount19*2;\n    let hexDigitCount21 = hexDigitCount20*2;\n\
    \    let hexDigitCount22 = hexDigitCount21*2;\n    let hexDigitCount23 = hexDigitCount22*2;\n\
    \    let hexDigitCount24 = hexDigitCount23*2;\n    let hexDigitCount25 = hexDigitCount24*2;\n\
    \    let hexDigitCount26 = hexDigitCount25*2;\n    let hexDigitCount27 = hexDigitCount26*2;\n\
    \    let hexDigitCount28 = hexDigitCount27*2;\n    let hexDigitCount29 = hexDigitCount28*2;\n\
    \    let hexDigitCount30 = hexDigitCount29*2;\n    let hexDigitCount31 = hexDigitCount30*2;\n\
    \    let hexDigitCount32 = hexDigitCount31*2;\n    let hexDigitCount33 = hexDigitCount32*2;\n\
    \    let hexDigitCount34 = hexDigitCount33*2;\n    let hexDigitCount35 = hexDigitCount34*2;\n\
    \    let hexDigitCount36 = hexDigitCount35*2;\n    let hexDigitCount37 = hexDigitCount36*2;\n\
    \    let hexDigitCount38 = hexDigitCount37*2;\n    let hexDigitCount39 = hexDigitCount38*2;\n\
    \    let hexDigitCount40 = hexDigitCount39*", "    let hex = num.toUpperCase();\n\
    \    let digits = hex.split(\"\");\n    let primes = 0;\n    let prime_digits\
    \ = \"\";\n    let prime_digit_count = 0;\n    let prime_digit_count_max = 2;\n\
    \    let prime_digit_count_min = 2;\n    let prime_digit_count_sum = 0;\n    let\
    \ prime_digit_count_sum_max = 2;\n    let prime_digit_count_sum_min = 2;\n   \
    \ let prime_digit_count_product = 1;\n    let prime_digit_count_product_max =\
    \ 2;\n    let prime_digit_count_product_min = 2;\n    let prime_digit_count_product\
    \ = 1;\n    let prime_digit_count_product_max = 2;\n    let prime_digit_count_product_min\
    \ = 2;\n    let prime_digit_count_product = 1;\n    let prime_digit_count_product_max\
    \ = 2;\n    let prime_digit_count_product_min = 2;\n    let prime_digit_count_product\
    \ = 1;\n    let prime_digit_count_product_max = 2;\n    let prime_digit_count_product_min\
    \ = 2;\n    let prime_digit_count_product = 1;\n    let prime_digit_count_product_max\
    \ = 2;\n    let prime_digit_count_product_min = 2;\n    let prime_digit_count_product\
    \ = 1;\n    let prime_digit_count_product_max = 2;\n    let prime_digit_count_product_min\
    \ = 2;\n    let prime_digit_count_product = 1;\n    let prime_digit_count_product_max\
    \ = 2;\n    let prime_digit_count_product_min = 2;\n    let prime_digit_count_product\
    \ = 1;\n    let prime_digit_count_product_max = 2;\n    let prime_digit_count_product_min\
    \ = 2;\n    let prime_digit_count_product = 1;\n    let prime_digit_count_product_max\
    \ = 2;\n    let prime_digit_count_product_min = 2;\n    let prime_digit_count_product\
    \ = 1;\n    let prime_digit_count_product_max = 2;\n    let prime_digit_count_product_min\
    \ = 2;\n    let prime_digit_count_product = 1;\n    let prime_digit_count_product_max\
    \ = 2;\n    let prime_digit_count_product_min = 2;\n    let prime_digit_count_product\
    \ = 1;\n    let prime_digit_count_product_max = 2;\n    let prime_digit_count_product_min\
    \ = 2;\n    let prime_digit_count_product = 1;\n    let prime_digit_count_product_max\
    \ = 2;\n    let prime_digit_count_product_min = 2;\n    let prime_digit_count_product\
    \ = 1;\n    let prime_digit_count_product_max = 2;\n    let prime_digit_count_product_min\
    \ = 2;\n    let prime_digit_count_product = 1;\n    let prime_digit_count_product_max\
    \ = 2;\n    let prime_digit_count_product_min = 2;\n    let prime_digit_count_product\
    \ = 1;\n    let prime_digit_count_product_max = 2;\n    let prime_digit_count_product_min\
    \ = 2;\n    let prime_digit_count_product = 1;\n    let prime_digit_count_product_max\
    \ = 2;\n    let prime_digit_count_", "    let hex = num.toUpperCase();\n    let\
    \ digits = hex.split(\"\");\n    let primes: number[] = [];\n    let prime: number[]\
    \ = [];\n    let prime_found: boolean = false;\n    let prime_found2: boolean\
    \ = false;\n    let prime_found3: boolean = false;\n    let prime_found4: boolean\
    \ = false;\n    let prime_found5: boolean = false;\n    let prime_found6: boolean\
    \ = false;\n    let prime_found7: boolean = false;\n    let prime_found8: boolean\
    \ = false;\n    let prime_found9: boolean = false;\n    let prime_found10: boolean\
    \ = false;\n    let prime_found11: boolean = false;\n    let prime_found12: boolean\
    \ = false;\n    let prime_found13: boolean = false;\n    let prime_found14: boolean\
    \ = false;\n    let prime_found15: boolean = false;\n    let prime_found16: boolean\
    \ = false;\n    let prime_found17: boolean = false;\n    let prime_found18: boolean\
    \ = false;\n    let prime_found19: boolean = false;\n    let prime_found20: boolean\
    \ = false;\n    let prime_found21: boolean = false;\n    let prime_found22: boolean\
    \ = false;\n    let prime_found23: boolean = false;\n    let prime_found24: boolean\
    \ = false;\n    let prime_found25: boolean = false;\n    let prime_found26: boolean\
    \ = false;\n    let prime_found27: boolean = false;\n    let prime_found28: boolean\
    \ = false;\n    let prime_found29: boolean = false;\n    let prime_found30: boolean\
    \ = false;\n    let prime_found31: boolean = false;\n    let prime_found32: boolean\
    \ = false;\n    let prime_found33: boolean = false;\n    let prime_found34: boolean\
    \ = false;\n    let prime_found35: boolean = false;\n    let prime_found36: boolean\
    \ = false;\n    let prime_found37: boolean = false;\n    let prime_found38: boolean\
    \ = false;\n    let prime_found39: boolean = false;\n    let prime_found40: boolean\
    \ = false;\n    let prime_found41: boolean = false;\n    let prime_found42: boolean\
    \ = false;\n    let prime_found43: boolean = false;\n    let prime_found44: boolean\
    \ = false;\n    let prime_found45: boolean = false;\n    let prime_found46: boolean\
    \ = false;\n    let prime_found47: boolean = false;\n    let prime_found48: boolean\
    \ = false;\n    let prime_found49: boolean = false;\n    let prime_found50: boolean\
    \ = false;\n    let prime_found51: boolean = false;\n    let prime_found52: boolean\
    \ = false;\n    let prime_found53: boolean = false;\n    let prime_found54: boolean\
    \ = false;\n    let prime_found55: boolean = false;\n    let prime_found56: boolean\
    \ = false;\n    let prime_found57: boolean = false;\n    let prime_found58: boolean\
    \ = false;\n    let prime_found59: boolean = false;\n    let prime_found60: boolean\
    \ = false;\n    let prime", "    let hex = num.toUpperCase();\n    let hexDigits\
    \ = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5\
    \ = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8\
    \ = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n    let hexDigitCount33 = hexDigitCount",
  "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes =\
    \ 0;\n  let prime_digits = \"\";\n  let prime_digits_length = 0;\n  let prime_digits_sum\
    \ = 0;\n  let prime_digits_product = 1;\n  let prime_digits_product2 = 0;\n  let\
    \ prime_digits_product3 = 0;\n  let prime_digits_product4 = 0;\n  let prime_digits_product5\
    \ = 0;\n  let prime_digits_product6 = 0;\n  let prime_digits_product7 = 0;\n \
    \ let prime_digits_product8 = 0;\n  let prime_digits_product9 = 0;\n  let prime_digits_product10\
    \ = 0;\n  let prime_digits_product11 = 0;\n  let prime_digits_product12 = 0;\n\
    \  let prime_digits_product13 = 0;\n  let prime_digits_product14 = 0;\n  let prime_digits_product15\
    \ = 0;\n  let prime_digits_product16 = 0;\n  let prime_digits_product17 = 0;\n\
    \  let prime_digits_product18 = 0;\n  let prime_digits_product19 = 0;\n  let prime_digits_product20\
    \ = 0;\n  let prime_digits_product21 = 0;\n  let prime_digits_product22 = 0;\n\
    \  let prime_digits_product23 = 0;\n  let prime_digits_product24 = 0;\n  let prime_digits_product25\
    \ = 0;\n  let prime_digits_product26 = 0;\n  let prime_digits_product27 = 0;\n\
    \  let prime_digits_product28 = 0;\n  let prime_digits_product29 = 0;\n  let prime_digits_product30\
    \ = 0;\n  let prime_digits_product31 = 0;\n  let prime_digits_product32 = 0;\n\
    \  let prime_digits_product33 = 0;\n  let prime_digits_product34 = 0;\n  let prime_digits_product35\
    \ = 0;\n  let prime_digits_product36 = 0;\n  let prime_digits_product37 = 0;\n\
    \  let prime_digits_product38 = 0;\n  let prime_digits_product39 = 0;\n  let prime_digits_product40\
    \ = 0;\n  let prime_digits_product41 = 0;\n  let prime_digits_product42 = 0;\n\
    \  let prime_digits_product43 = 0;\n  let prime_digits_product44 = 0;\n  let prime_digits_product45\
    \ = 0;\n  let prime_digits_product46 = 0;\n  let prime_digits_product47 = 0;\n\
    \  let prime_digits_product48 = 0;\n  let prime_digits_product49 = 0;\n  let prime_digits_product50\
    \ = 0;\n  let prime_digits_product51 = 0;\n  let prime_digits_product52 = 0;\n\
    \  let prime_digits_product53", "  let hex = num.toUpperCase();\n  let digits\
    \ = hex.split(\"\");\n  let primes = 0;\n  let prime_digits = \"\";\n  for (let\
    \ i = 0; i < digits.length; i++) {\n    let digit = digits[i];\n    if (digit\
    \ == \"A\" || digit == \"B\" || digit == \"C\" || digit == \"D\" || digit == \"\
    E\" || digit == \"F\") {\n      prime_digits += digit;\n      primes += 1;\n \
    \   } else {\n      prime_digits += digit;\n    }\n  }\n  return primes;\n}\n",
  "  let hex = num.toUpperCase();\n  let hexDigits = [...hex];\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitPrimes = [];\n  let hexDigitPrimeCount =\
    \ 0;\n  let hexDigitPrimePrimes = [];\n  let hexDigitPrimePrimeCount = 0;\n  let\
    \ hexDigitPrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimeCount = 0;\n  let\
    \ hexDigitPrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n \
    \ let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = [];\n\
    \  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePri", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitPrimes: number[] = [];\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimeIndex\
    \ = 0;\n  let hexDigitPrimeIndex2 = 0;\n  let hexDigitPrimeIndex3 = 0;\n  let\
    \ hexDigitPrimeIndex4 = 0;\n  let hexDigitPrimeIndex5 = 0;\n  let hexDigitPrimeIndex6\
    \ = 0;\n  let hexDigitPrimeIndex7 = 0;\n  let hexDigitPrimeIndex8 = 0;\n  let\
    \ hexDigitPrimeIndex9 = 0;\n  let hexDigitPrimeIndex10 = 0;\n  let hexDigitPrimeIndex11\
    \ = 0;\n  let hexDigitPrimeIndex12 = 0;\n  let hexDigitPrimeIndex13 = 0;\n  let\
    \ hexDigitPrimeIndex14 = 0;\n  let hexDigitPrimeIndex15 = 0;\n  let hexDigitPrimeIndex16\
    \ = 0;\n  let hexDigitPrimeIndex17 = 0;\n  let hexDigitPrimeIndex18 = 0;\n  let\
    \ hexDigitPrimeIndex19 = 0;\n  let hexDigitPrimeIndex20 = 0;\n  let hexDigitPrimeIndex21\
    \ = 0;\n  let hexDigitPrimeIndex22 = 0;\n  let hexDigitPrimeIndex23 = 0;\n  let\
    \ hexDigitPrimeIndex24 = 0;\n  let hexDigitPrimeIndex25 = 0;\n  let hexDigitPrimeIndex26\
    \ = 0;\n  let hexDigitPrimeIndex27 = 0;\n  let hexDigitPrimeIndex28 = 0;\n  let\
    \ hexDigitPrimeIndex29 = 0;\n  let hexDigitPrimeIndex30 = 0;\n  let hexDigitPrimeIndex31\
    \ = 0;\n  let hexDigitPrimeIndex32 = 0;\n  let hexDigitPrimeIndex33 = 0;\n  let\
    \ hexDigitPrimeIndex34 = 0;\n  let hexDigitPrimeIndex35 = 0;\n  let hexDigitPrimeIndex36\
    \ = 0;\n  let hexDigitPrimeIndex37 = 0;\n  let hexDigitPrimeIndex38 = 0;\n  let\
    \ hexDigitPrimeIndex39 = 0;\n  let hexDigitPrimeIndex40 = 0;\n  let hexDigitPrimeIndex41\
    \ = 0;\n  let hexDigitPrimeIndex42 = 0;\n  let hexDigitPrimeIndex43 = 0;\n  let\
    \ hexDigitPrimeIndex44 = 0;\n  let hexDigitPrimeIndex45 = 0;\n  let hexDigitPrimeIndex46\
    \ = 0;\n  let hexDigitPrimeIndex47 = 0;\n  let hexDigitPrimeIndex48 = 0;\n  let\
    \ hexDigitPrimeIndex49 = 0;\n  let hexDigitPrimeIndex50 = 0;\n  let hexDigitPrimeIndex51\
    \ = 0;\n  let hexDigitPrimeIndex52 = 0;\n  let hexDigitPrimeIndex53", "    let\
    \ hex = num.toUpperCase();\n    let result = 0;\n    let digit;\n    let i;\n\
    \    for (i = 0; i < hex.length; i++) {\n        digit = parseInt(hex.charAt(i),\
    \ 16);\n        if (digit === 16) {\n            result += 2;\n        } else\
    \ if (digit === 8) {\n            result += 1;\n        } else {\n           \
    \ result += digit * Math.pow(2, hex.length - i - 1);\n        }\n    }\n    return\
    \ result;\n}\n", "  let hex = num.toUpperCase();\n  let prime: number = 0;\n \
    \ let digit: number = 0;\n  let primes: number[] = [];\n  let primes_found: number[]\
    \ = [];\n  let primes_found2: number[] = [];\n  let primes_found3: number[] =\
    \ [];\n  let primes_found4: number[] = [];\n  let primes_found5: number[] = [];\n\
    \  let primes_found6: number[] = [];\n  let primes_found7: number[] = [];\n  let\
    \ primes_found8: number[] = [];\n  let primes_found9: number[] = [];\n  let primes_found10:\
    \ number[] = [];\n  let primes_found11: number[] = [];\n  let primes_found12:\
    \ number[] = [];\n  let primes_found13: number[] = [];\n  let primes_found14:\
    \ number[] = [];\n  let primes_found15: number[] = [];\n  let primes_found16:\
    \ number[] = [];\n  let primes_found17: number[] = [];\n  let primes_found18:\
    \ number[] = [];\n  let primes_found19: number[] = [];\n  let primes_found20:\
    \ number[] = [];\n  let primes_found21: number[] = [];\n  let primes_found22:\
    \ number[] = [];\n  let primes_found23: number[] = [];\n  let primes_found24:\
    \ number[] = [];\n  let primes_found25: number[] = [];\n  let primes_found26:\
    \ number[] = [];\n  let primes_found27: number[] = [];\n  let primes_found28:\
    \ number[] = [];\n  let primes_found29: number[] = [];\n  let primes_found30:\
    \ number[] = [];\n  let primes_found31: number[] = [];\n  let primes_found32:\
    \ number[] = [];\n  let primes_found33: number[] = [];\n  let primes_found34:\
    \ number[] = [];\n  let primes_found35: number[] = [];\n  let primes_found36:\
    \ number[] = [];\n  let primes_found37: number[] = [];\n  let primes_found38:\
    \ number[] = [];\n  let primes_found39: number[] = [];\n  let primes_found40:\
    \ number[] = [];\n  let primes_found41: number[] = [];\n  let primes_found42:\
    \ number[] = [];\n  let primes_found43: number[] = [];\n  let primes_found44:\
    \ number[] = [];\n  let primes_found45: number[] = [];\n  let primes_found46:\
    \ number[] = [];\n  let primes_found47: number[] = [];\n  let primes_found48:\
    \ number[] = [];\n  let primes_found49: number[] = [];\n  let ", "    let hex\
    \ = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitCountPrime = 0;\n    let hexDigitCountPrime2\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime3 = hexDigitCountPrime2;\n\
    \    let hexDigitCountPrime4 = hexDigitCountPrime3;\n    let hexDigitCountPrime5\
    \ = hexDigitCountPrime4;\n    let hexDigitCountPrime6 = hexDigitCountPrime5;\n\
    \    let hexDigitCountPrime7 = hexDigitCountPrime6;\n    let hexDigitCountPrime8\
    \ = hexDigitCountPrime7;\n    let hexDigitCountPrime9 = hexDigitCountPrime8;\n\
    \    let hexDigitCountPrime10 = hexDigitCountPrime9;\n    let hexDigitCountPrime11\
    \ = hexDigitCountPrime10;\n    let hexDigitCountPrime12 = hexDigitCountPrime11;\n\
    \    let hexDigitCountPrime13 = hexDigitCountPrime12;\n    let hexDigitCountPrime14\
    \ = hexDigitCountPrime13;\n    let hexDigitCountPrime15 = hexDigitCountPrime14;\n\
    \    let hexDigitCountPrime16 = hexDigitCountPrime15;\n    let hexDigitCountPrime17\
    \ = hexDigitCountPrime16;\n    let hexDigitCountPrime18 = hexDigitCountPrime17;\n\
    \    let hexDigitCountPrime19 = hexDigitCountPrime18;\n    let hexDigitCountPrime20\
    \ = hexDigitCountPrime19;\n    let hexDigitCountPrime21 = hexDigitCountPrime20;\n\
    \    let hexDigitCountPrime22 = hexDigitCountPrime21;\n    let hexDigitCountPrime23\
    \ = hexDigitCountPrime22;\n    let hexDigitCountPrime24 = hexDigitCountPrime23;\n\
    \    let hexDigitCountPrime25 = hexDigitCountPrime24;\n    let hexDigitCountPrime26\
    \ = hexDigitCountPrime25;\n    let hexDigitCountPrime27 = hexDigitCountPrime26;\n\
    \    let hexDigitCountPrime28 = hexDigitCountPrime27;\n    let hexDigitCountPrime29\
    \ = hexDigitCountPrime28;\n    let hexDigitCountPrime30 = hexDigitCountPrime29;\n\
    \    let hexDigitCountPrime31 = hexDigitCountPrime30;\n    let hexDigitCountPrime32\
    \ = hexDigitCountPrime31;\n    let hexDigitCountPrime33 = hexDigitCountPri", " \
    \ let hex = num.toUpperCase();\n  let count = 0;\n  for (let i = 0; i < hex.length;\
    \ i++) {\n    let c = hex.charCodeAt(i);\n    if (c >= 48 && c <= 57) {\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n", "    let hex = num.toUpperCase();\n\
    \    let digits = hex.split(\"\");\n    let primes = 0;\n    let prime_digits:\
    \ number[] = [];\n    let prime_digits_len = 0;\n    let prime_digits_sum = 0;\n\
    \    let prime_digits_sum2 = 0;\n    let prime_digits_sum3 = 0;\n    let prime_digits_sum4\
    \ = 0;\n    let prime_digits_sum5 = 0;\n    let prime_digits_sum6 = 0;\n    let\
    \ prime_digits_sum7 = 0;\n    let prime_digits_sum8 = 0;\n    let prime_digits_sum9\
    \ = 0;\n    let prime_digits_sum10 = 0;\n    let prime_digits_sum11 = 0;\n   \
    \ let prime_digits_sum12 = 0;\n    let prime_digits_sum13 = 0;\n    let prime_digits_sum14\
    \ = 0;\n    let prime_digits_sum15 = 0;\n    let prime_digits_sum16 = 0;\n   \
    \ let prime_digits_sum17 = 0;\n    let prime_digits_sum18 = 0;\n    let prime_digits_sum19\
    \ = 0;\n    let prime_digits_sum20 = 0;\n    let prime_digits_sum21 = 0;\n   \
    \ let prime_digits_sum22 = 0;\n    let prime_digits_sum23 = 0;\n    let prime_digits_sum24\
    \ = 0;\n    let prime_digits_sum25 = 0;\n    let prime_digits_sum26 = 0;\n   \
    \ let prime_digits_sum27 = 0;\n    let prime_digits_sum28 = 0;\n    let prime_digits_sum29\
    \ = 0;\n    let prime_digits_sum30 = 0;\n    let prime_digits_sum31 = 0;\n   \
    \ let prime_digits_sum32 = 0;\n    let prime_digits_sum33 = 0;\n    let prime_digits_sum34\
    \ = 0;\n    let prime_digits_sum35 = 0;\n    let prime_digits_sum36 = 0;\n   \
    \ let prime_digits_sum37 = 0;\n    let prime_digits_sum38 = 0;\n    let prime_digits_sum39\
    \ = 0;\n    let prime_digits_sum40 = 0;\n    let prime_digits_sum41 = 0;\n   \
    \ let prime_digits_sum42 = 0;\n    let prime_digits_sum43 = 0;\n    let prime_digits_sum44\
    \ = 0;\n    let prime_digits_sum45 = 0;\n    let prime_digits_sum46 = 0;\n   \
    \ let prime_digits_sum47 = 0;\n    let prime_digits_sum48 = 0;\n    let prime_digits_sum49\
    \ = 0;\n    let prime_digits_sum50 = 0;\n    let prime_digits_sum51 = 0;\n   \
    \ let prime_digits_sum52 = 0;\n    let prime_digits_sum53 = 0;\n    let prime_digit",
  "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes:\
    \ number[] = [];\n  let prime: number = 2;\n  let primeCount: number = 0;\n  for\
    \ (let i = 0; i < digits.length; i++) {\n    let digit = parseInt(digits[i], 16);\n\
    \    if (digit % 2 === 0) {\n      primes.push(digit);\n    }\n    for (let j\
    \ = 0; j < primes.length; j++) {\n      if (primes[j] === digit) {\n        primeCount++;\n\
    \      }\n    }\n  }\n  return primeCount;\n}\n</code>\n<|/ a tags=primes,javascript,algorithm\
    \ |>\n<| c |>\nThis doesn't seem to work with the example `hex_key(\"ABED1A33\"\
    )` which should return `4` but returns `6`.\n<|/ c |>\n<| c |>\nYes, I forgot\
    \ to mention that you have to consider that \"A\" is not a prime number.\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. I've updated my question to include a\
    \ test case that fails.\n<|/ c |>\n<| c |>\nI updated my answer, please take a\
    \ look.\n<|/ c |>\n<| c |>\nThanks for your answer. I've updated my question to\
    \ include a test case that fails.\n<|/ c |>\n<| a tags=primes,javascript,algorithm\
    \ |>\n<code>", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\"\
    );\n  let primes: number[] = [];\n  let prime: number[] = [];\n  let prime_counter:\
    \ number = 0;\n  let prime_counter2: number = 0;\n  let prime_counter3: number\
    \ = 0;\n  let prime_counter4: number = 0;\n  let prime_counter5: number = 0;\n\
    \  let prime_counter6: number = 0;\n  let prime_counter7: number = 0;\n  let prime_counter8:\
    \ number = 0;\n  let prime_counter9: number = 0;\n  let prime_counter10: number\
    \ = 0;\n  let prime_counter11: number = 0;\n  let prime_counter12: number = 0;\n\
    \  let prime_counter13: number = 0;\n  let prime_counter14: number = 0;\n  let\
    \ prime_counter15: number = 0;\n  let prime_counter16: number = 0;\n  let prime_counter17:\
    \ number = 0;\n  let prime_counter18: number = 0;\n  let prime_counter19: number\
    \ = 0;\n  let prime_counter20: number = 0;\n  let prime_counter21: number = 0;\n\
    \  let prime_counter22: number = 0;\n  let prime_counter23: number = 0;\n  let\
    \ prime_counter24: number = 0;\n  let prime_counter25: number = 0;\n  let prime_counter26:\
    \ number = 0;\n  let prime_counter27: number = 0;\n  let prime_counter28: number\
    \ = 0;\n  let prime_counter29: number = 0;\n  let prime_counter30: number = 0;\n\
    \  let prime_counter31: number = 0;\n  let prime_counter32: number = 0;\n  let\
    \ prime_counter33: number = 0;\n  let prime_counter34: number = 0;\n  let prime_counter35:\
    \ number = 0;\n  let prime_counter36: number = 0;\n  let prime_counter37: number\
    \ = 0;\n  let prime_counter38: number = 0;\n  let prime_counter39: number = 0;\n\
    \  let prime_counter40: number = 0;\n  let prime_counter41: number = 0;\n  let\
    \ prime_counter42: number = 0;\n  let prime_counter43: number = 0;\n  let prime_counter44:\
    \ number = 0;\n  let prime_counter45: number = 0;\n  let prime_counter46: number\
    \ = 0;\n  let prime_counter47: number = 0;\n  let prime_counter48: number = 0;\n\
    \  let prime_counter49: number = 0;\n  let prime_counter50: number = 0;\n  let\
    \ prime_counter51: number = 0;\n  let prime_counter52: number = 0;\n  let prime_counter53:\
    \ number = 0;\n  let prime_counter54: number = 0;\n  let prime", "  let hex =\
    \ num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimes: number[]\
    \ = [];\n  let hexDigitPrimeIndex = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hex", "    let hex = num.toUpperCase();\n\
    \    let count = 0;\n    for (let i = 0; i < hex.length; i++) {\n        let c\
    \ = hex.charCodeAt(i);\n        if (c >= 48 && c <= 57) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes = 0;\n  let prime_digits = \"\"\
    ;\n  let prime_hex = \"\";\n  for (let i = 0; i < digits.length; i++) {\n    let\
    \ digit = digits[i];\n    if (digit == \"A\" || digit == \"B\" || digit == \"\
    C\" || digit == \"D\" || digit == \"E\" || digit == \"F\") {\n      prime_digits\
    \ = digit;\n      prime_hex = digit;\n      primes++;\n    } else {\n      if\
    \ (prime_digits != \"\") {\n        if (prime_digits == digit) {\n          prime_hex\
    \ += digit;\n          primes++;\n        } else {\n          prime_digits = \"\
    \";\n          prime_hex = \"\";\n        }\n      }\n    }\n  }\n  return primes;\n\
    }\n", "  let hex = num.toUpperCase();\n  let result = 0;\n  for (let i = 0; i\
    \ < hex.length; i++) {\n    let c = hex.charCodeAt(i);\n    if (c >= 48 && c <=\
    \ 57) {\n      result += c - 48;\n    } else if (c >= 65 && c <= 70) {\n     \
    \ result += c - 55;\n    } else if (c >= 97 && c <= 102) {\n      result += c\
    \ - 87;\n    }\n  }\n  return result;\n}\n", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCountPrime = 0;\n    let hexDigitCountPrime2 = 0;\n    let hexDigitCountPrime3\
    \ = 0;\n    let hexDigitCountPrime4 = 0;\n    let hexDigitCountPrime5 = 0;\n \
    \   let hexDigitCountPrime6 = 0;\n    let hexDigitCountPrime7 = 0;\n    let hexDigitCountPrime8\
    \ = 0;\n    let hexDigitCountPrime9 = 0;\n    let hexDigitCountPrime10 = 0;\n\
    \    let hexDigitCountPrime11 = 0;\n    let hexDigitCountPrime12 = 0;\n    let\
    \ hexDigitCountPrime13 = 0;\n    let hexDigitCountPrime14 = 0;\n    let hexDigitCountPrime15\
    \ = 0;\n    let hexDigitCountPrime16 = 0;\n    let hexDigitCountPrime17 = 0;\n\
    \    let hexDigitCountPrime18 = 0;\n    let hexDigitCountPrime19 = 0;\n    let\
    \ hexDigitCountPrime20 = 0;\n    let hexDigitCountPrime21 = 0;\n    let hexDigitCountPrime22\
    \ = 0;\n    let hexDigitCountPrime23 = 0;\n    let hexDigitCountPrime24 = 0;\n\
    \    let hexDigitCountPrime25 = 0;\n    let hexDigitCountPrime26 = 0;\n    let\
    \ hexDigitCountPrime27 = 0;\n    let hexDigitCountPrime28 = 0;\n    let hexDigitCountPrime29\
    \ = 0;\n    let hexDigitCountPrime30 = 0;\n    let hexDigitCountPrime31 = 0;\n\
    \    let hexDigitCountPrime32 = 0;\n    let hexDigitCountPrime33 = 0;\n    let\
    \ hexDigitCountPrime34 = 0;\n    let hexDigitCountPrime35 = 0;\n    let hexDigitCountPrime36\
    \ = 0;\n    let hexDigitCountPrime37 = 0;\n    let hexDigitCountPrime38 = 0;\n\
    \    let hexDigitCountPrime39 = 0;\n    let hexDigitCountPrime40 = 0;\n    let\
    \ hexDigitCountPrime41 = 0;\n    let hexDigitCountPrime42 = 0;\n    let hexDigitCountPrime43\
    \ = 0;\n    let hexDigitCountPrime44 = 0;\n    let hexDigitCountPrime45 = 0;\n\
    \    let hexDigitCountPrime46 = 0;\n    let hexDigitCountPrime47 = 0;\n    let\
    \ hexDigitCountPrime48 = 0;\n    let hexDigitCountPrime49 = 0;\n    let hexDigitCountPrime50\
    \ = 0;\n    let hexDigitCountPrime51 = 0;\n    let hexDigitCountPrime52 = 0;\n\
    \    let hexDigitCountPrime53 = 0;\n    let hexDigitCountPrime54 = 0;\n    let\
    \ hexDigitCountPrime55", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\
    \");\n  let primes: number[] = [];\n  let prime: number = 0;\n  let primeCount:\
    \ number = 0;\n  let primeCount2: number = 0;\n  let primeCount3: number = 0;\n\
    \  let primeCount4: number = 0;\n  let primeCount5: number = 0;\n  let primeCount6:\
    \ number = 0;\n  let primeCount7: number = 0;\n  let primeCount8: number = 0;\n\
    \  let primeCount9: number = 0;\n  let primeCount10: number = 0;\n  let primeCount11:\
    \ number = 0;\n  let primeCount12: number = 0;\n  let primeCount13: number = 0;\n\
    \  let primeCount14: number = 0;\n  let primeCount15: number = 0;\n  let primeCount16:\
    \ number = 0;\n  let primeCount17: number = 0;\n  let primeCount18: number = 0;\n\
    \  let primeCount19: number = 0;\n  let primeCount20: number = 0;\n  let primeCount21:\
    \ number = 0;\n  let primeCount22: number = 0;\n  let primeCount23: number = 0;\n\
    \  let primeCount24: number = 0;\n  let primeCount25: number = 0;\n  let primeCount26:\
    \ number = 0;\n  let primeCount27: number = 0;\n  let primeCount28: number = 0;\n\
    \  let primeCount29: number = 0;\n  let primeCount30: number = 0;\n  let primeCount31:\
    \ number = 0;\n  let primeCount32: number = 0;\n  let primeCount33: number = 0;\n\
    \  let primeCount34: number = 0;\n  let primeCount35: number = 0;\n  let primeCount36:\
    \ number = 0;\n  let primeCount37: number = 0;\n  let primeCount38: number = 0;\n\
    \  let primeCount39: number = 0;\n  let primeCount40: number = 0;\n  let primeCount41:\
    \ number = 0;\n  let primeCount42: number = 0;\n  let primeCount43: number = 0;\n\
    \  let primeCount44: number = 0;\n  let primeCount45: number = 0;\n  let primeCount46:\
    \ number = 0;\n  let primeCount47: number = 0;\n  let primeCount48: number = 0;\n\
    \  let primeCount49: number = 0;\n  let primeCount50: number = 0;\n  let primeCount51:\
    \ number = 0;\n  let primeCount52: number = 0;\n  let primeCount53: number = 0;\n\
    \  let primeCount54: number = 0;\n  let primeCount55: number = 0;\n  let primeCount56:\
    \ number = 0;\n  let primeCount57: number = 0;\n  let primeCount58: number = 0;\n\
    \  let primeCount59: number = 0;\n  let primeCount60: number = 0;\n  let primeCount61:\
    \ number = 0;\n  let ", "  let hex = num.toUpperCase();\n  let primes: number[]\
    \ = [];\n  let prime: number[] = [];\n  let prime_counter: number = 0;\n  let\
    \ prime_counter2: number = 0;\n  let prime_counter3: number = 0;\n  let prime_counter4:\
    \ number = 0;\n  let prime_counter5: number = 0;\n  let prime_counter6: number\
    \ = 0;\n  let prime_counter7: number = 0;\n  let prime_counter8: number = 0;\n\
    \  let prime_counter9: number = 0;\n  let prime_counter10: number = 0;\n  let\
    \ prime_counter11: number = 0;\n  let prime_counter12: number = 0;\n  let prime_counter13:\
    \ number = 0;\n  let prime_counter14: number = 0;\n  let prime_counter15: number\
    \ = 0;\n  let prime_counter16: number = 0;\n  let prime_counter17: number = 0;\n\
    \  let prime_counter18: number = 0;\n  let prime_counter19: number = 0;\n  let\
    \ prime_counter20: number = 0;\n  let prime_counter21: number = 0;\n  let prime_counter22:\
    \ number = 0;\n  let prime_counter23: number = 0;\n  let prime_counter24: number\
    \ = 0;\n  let prime_counter25: number = 0;\n  let prime_counter26: number = 0;\n\
    \  let prime_counter27: number = 0;\n  let prime_counter28: number = 0;\n  let\
    \ prime_counter29: number = 0;\n  let prime_counter30: number = 0;\n  let prime_counter31:\
    \ number = 0;\n  let prime_counter32: number = 0;\n  let prime_counter33: number\
    \ = 0;\n  let prime_counter34: number = 0;\n  let prime_counter35: number = 0;\n\
    \  let prime_counter36: number = 0;\n  let prime_counter37: number = 0;\n  let\
    \ prime_counter38: number = 0;\n  let prime_counter39: number = 0;\n  let prime_counter40:\
    \ number = 0;\n  let prime_counter41: number = 0;\n  let prime_counter42: number\
    \ = 0;\n  let prime_counter43: number = 0;\n  let prime_counter44: number = 0;\n\
    \  let prime_counter45: number = 0;\n  let prime_counter46: number = 0;\n  let\
    \ prime_counter47: number = 0;\n  let prime_counter48: number = 0;\n  let prime_counter49:\
    \ number = 0;\n  let prime_counter50: number = 0;\n  let prime_counter51: number\
    \ = 0;\n  let prime_counter52: number = 0;\n  let prime_counter53: number = 0;\n\
    \  let prime_counter54: number = 0;\n  let prime_counter55: number = 0;\n  let ",
  "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes =\
    \ 0;\n  let prime_digits = \"\";\n  for (let i = 0; i < digits.length; i++) {\n\
    \    let digit = digits[i];\n    if (digit == \"A\") {\n      prime_digits = \"\
    B\";\n    } else if (digit == \"B\") {\n      prime_digits = \"C\";\n    } else\
    \ if (digit == \"C\") {\n      prime_digits = \"D\";\n    } else if (digit ==\
    \ \"D\") {\n      prime_digits = \"E\";\n    } else if (digit == \"E\") {\n  \
    \    prime_digits = \"F\";\n    } else {\n      prime_digits = digit;\n    }\n\
    \    if (prime_digits != \"\") {\n      primes++;\n    }\n  }\n  return primes;\n\
    }\n", "  let hex = num.toUpperCase();\n  let count = 0;\n  for (let i = 0; i <\
    \ hex.length; i++) {\n    let c = hex.charCodeAt(i);\n    if (c >= 48 && c <=\
    \ 57) {\n      count++;\n    }\n  }\n  return count;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes = 0;\n  let prime_digits = \"\"\
    ;\n  for (let i = 0; i < digits.length; i++) {\n    let digit = digits[i];\n \
    \   if (digit === \"A\" || digit === \"B\" || digit === \"C\" || digit === \"\
    D\" || digit === \"E\" || digit === \"F\") {\n      prime_digits += digit;\n \
    \   } else {\n      primes += 1;\n    }\n  }\n  if (prime_digits === \"\") {\n\
    \    return 2;\n  }\n  if (prime_digits === \"A\") {\n    return 3;\n  }\n  if\
    \ (prime_digits === \"B\") {\n    return 5;\n  }\n  if (prime_digits === \"C\"\
    ) {\n    return 7;\n  }\n  if (prime_digits === \"D\") {\n    return 11;\n  }\n\
    \  if (prime_digits === \"E\") {\n    return 13;\n  }\n  if (prime_digits ===\
    \ \"F\") {\n    return 17;\n  }\n  return primes;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes = 0;\n  let prime: number = 0;\n\
    \  let prime_found = false;\n  for (let i = 0; i < digits.length; i++) {\n   \
    \ let digit = parseInt(digits[i]);\n    if (digit % 2 === 0) {\n      prime_found\
    \ = true;\n      prime = digit;\n      break;\n    }\n  }\n  if (prime_found)\
    \ {\n    for (let i = 2; i < prime; i++) {\n      if (prime % i === 0) {\n   \
    \     primes++;\n      }\n    }\n  }\n  return primes;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes = 0;\n  let prime_digits = [2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n  for (let i = 0; i < digits.length; i++) {\n   \
    \ let digit = parseInt(digits[i]);\n    if (digit > 0 && digit <= 9) {\n     \
    \ primes++;\n      if (prime_digits.includes(digit)) {\n        primes++;\n  \
    \    }\n    }\n  }\n  return primes;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes = 0;\n  let prime_digits = \"\"\
    ;\n  for (let i = 0; i < digits.length; i++) {\n    let digit = digits[i];\n \
    \   if (digit === \"A\") {\n      prime_digits = \"BED\";\n    } else if (digit\
    \ === \"B\") {\n      prime_digits = \"ABC\";\n    } else if (digit === \"C\"\
    ) {\n      prime_digits = \"DEF\";\n    } else if (digit === \"D\") {\n      prime_digits\
    \ = \"ABCDEF\";\n    } else if (digit === \"E\") {\n      prime_digits = \"ABCDEF\"\
    ;\n    } else if (digit === \"F\") {\n      prime_digits = \"ABCDEF\";\n    }\
    \ else {\n      prime_digits = digit;\n    }\n    for (let j = 0; j < prime_digits.length;\
    \ j++) {\n      if (prime_digits[j] === digit) {\n        primes++;\n      }\n\
    \    }\n  }\n  return primes;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits\
    \ = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCountPrime\
    \ = hexDigitCount;\n  let hexDigitCountPrime2 = hexDigitCountPrime;\n  let hexDigitCountPrime3\
    \ = hexDigitCountPrime2;\n  let hexDigitCountPrime4 = hexDigitCountPrime3;\n \
    \ let hexDigitCountPrime5 = hexDigitCountPrime4;\n  let hexDigitCountPrime6 =\
    \ hexDigitCountPrime5;\n  let hexDigitCountPrime7 = hexDigitCountPrime6;\n  let\
    \ hexDigitCountPrime8 = hexDigitCountPrime7;\n  let hexDigitCountPrime9 = hexDigitCountPrime8;\n\
    \  let hexDigitCountPrime10 = hexDigitCountPrime9;\n  let hexDigitCountPrime11\
    \ = hexDigitCountPrime10;\n  let hexDigitCountPrime12 = hexDigitCountPrime11;\n\
    \  let hexDigitCountPrime13 = hexDigitCountPrime12;\n  let hexDigitCountPrime14\
    \ = hexDigitCountPrime13;\n  let hexDigitCountPrime15 = hexDigitCountPrime14;\n\
    \  let hexDigitCountPrime16 = hexDigitCountPrime15;\n  let hexDigitCountPrime17\
    \ = hexDigitCountPrime16;\n  let hexDigitCountPrime18 = hexDigitCountPrime17;\n\
    \  let hexDigitCountPrime19 = hexDigitCountPrime18;\n  let hexDigitCountPrime20\
    \ = hexDigitCountPrime19;\n  let hexDigitCountPrime21 = hexDigitCountPrime20;\n\
    \  let hexDigitCountPrime22 = hexDigitCountPrime21;\n  let hexDigitCountPrime23\
    \ = hexDigitCountPrime22;\n  let hexDigitCountPrime24 = hexDigitCountPrime23;\n\
    \  let hexDigitCountPrime25 = hexDigitCountPrime24;\n  let hexDigitCountPrime26\
    \ = hexDigitCountPrime25;\n  let hexDigitCountPrime27 = hexDigitCountPrime26;\n\
    \  let hexDigitCountPrime28 = hexDigitCountPrime27;\n  let hexDigitCountPrime29\
    \ = hexDigitCountPrime28;\n  let hexDigitCountPrime30 = hexDigitCountPrime29;\n\
    \  let hexDigitCountPrime31 = hexDigitCountPrime30;\n  let hexDigitCountPrime32\
    \ = hexDigitCountPrime31;\n  let hexDigitCountPrime33 = ", "    let hex = num.toUpperCase();\n\
    \    let digits = hex.split(\"\");\n    let primes = 0;\n    let prime_digits\
    \ = \"\";\n    let prime_digit_count = 0;\n    let prime_digit_sum = 0;\n    let\
    \ prime_digit_product = 1;\n    let prime_digit_sum2 = 0;\n    let prime_digit_product2\
    \ = 0;\n    let prime_digit_sum3 = 0;\n    let prime_digit_product3 = 0;\n   \
    \ let prime_digit_sum4 = 0;\n    let prime_digit_product4 = 0;\n    let prime_digit_sum5\
    \ = 0;\n    let prime_digit_product5 = 0;\n    let prime_digit_sum6 = 0;\n   \
    \ let prime_digit_product6 = 0;\n    let prime_digit_sum7 = 0;\n    let prime_digit_product7\
    \ = 0;\n    let prime_digit_sum8 = 0;\n    let prime_digit_product8 = 0;\n   \
    \ let prime_digit_sum9 = 0;\n    let prime_digit_product9 = 0;\n    let prime_digit_sum10\
    \ = 0;\n    let prime_digit_product10 = 0;\n    let prime_digit_sum11 = 0;\n \
    \   let prime_digit_product11 = 0;\n    let prime_digit_sum12 = 0;\n    let prime_digit_product12\
    \ = 0;\n    let prime_digit_sum13 = 0;\n    let prime_digit_product13 = 0;\n \
    \   let prime_digit_sum14 = 0;\n    let prime_digit_product14 = 0;\n    let prime_digit_sum15\
    \ = 0;\n    let prime_digit_product15 = 0;\n    let prime_digit_sum16 = 0;\n \
    \   let prime_digit_product16 = 0;\n    let prime_digit_sum17 = 0;\n    let prime_digit_product17\
    \ = 0;\n    let prime_digit_sum18 = 0;\n    let prime_digit_product18 = 0;\n \
    \   let prime_digit_sum19 = 0;\n    let prime_digit_product19 = 0;\n    let prime_digit_sum20\
    \ = 0;\n    let prime_digit_product20 = 0;\n    let prime_digit_sum21 = 0;\n \
    \   let prime_digit_product21 = 0;\n    let prime_digit_sum22 = 0;\n    let prime_digit_product22\
    \ = 0;\n    let prime_digit_sum23 = 0;\n    let prime_digit_product23 = 0;\n \
    \   let prime_digit_sum24 = 0;\n    let prime_digit_product24 = 0;\n    let prime_digit_sum25\
    \ = 0;\n    let prime_digit_product25 = 0;\n    let prime_digit_sum26 = 0;\n \
    \   let prime_digit_product26 = 0;\n    let prime_digit_sum27 = 0;\n    let prime_digit_product27\
    \ = 0;\n    let prime_digit_sum28 = 0;\n    let prime_digit_product28 = 0;\n \
    \   let prime_digit_sum29 = 0;\n    let prime_digit_product29 = 0;\n    let prime_digit_sum30\
    \ = 0;\n    let prime_digit_product30 = 0;\n    let prime_digit_sum31 = 0;\n \
    \   let prime", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\
    \");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \  let hexDigitCount33 = hexDigitCount", "    let hex = num.toUpperCase();\n \
    \   let primes: number[] = [];\n    let prime: number = 0;\n    let primeCount:\
    \ number = 0;\n    let primeCount2: number = 0;\n    let primeCount3: number =\
    \ 0;\n    let primeCount4: number = 0;\n    let primeCount5: number = 0;\n   \
    \ let primeCount6: number = 0;\n    let primeCount7: number = 0;\n    let primeCount8:\
    \ number = 0;\n    let primeCount9: number = 0;\n    let primeCount10: number\
    \ = 0;\n    let primeCount11: number = 0;\n    let primeCount12: number = 0;\n\
    \    let primeCount13: number = 0;\n    let primeCount14: number = 0;\n    let\
    \ primeCount15: number = 0;\n    let primeCount16: number = 0;\n    let primeCount17:\
    \ number = 0;\n    let primeCount18: number = 0;\n    let primeCount19: number\
    \ = 0;\n    let primeCount20: number = 0;\n    let primeCount21: number = 0;\n\
    \    let primeCount22: number = 0;\n    let primeCount23: number = 0;\n    let\
    \ primeCount24: number = 0;\n    let primeCount25: number = 0;\n    let primeCount26:\
    \ number = 0;\n    let primeCount27: number = 0;\n    let primeCount28: number\
    \ = 0;\n    let primeCount29: number = 0;\n    let primeCount30: number = 0;\n\
    \    let primeCount31: number = 0;\n    let primeCount32: number = 0;\n    let\
    \ primeCount33: number = 0;\n    let primeCount34: number = 0;\n    let primeCount35:\
    \ number = 0;\n    let primeCount36: number = 0;\n    let primeCount37: number\
    \ = 0;\n    let primeCount38: number = 0;\n    let primeCount39: number = 0;\n\
    \    let primeCount40: number = 0;\n    let primeCount41: number = 0;\n    let\
    \ primeCount42: number = 0;\n    let primeCount43: number = 0;\n    let primeCount44:\
    \ number = 0;\n    let primeCount45: number = 0;\n    let primeCount46: number\
    \ = 0;\n    let primeCount47: number = 0;\n    let primeCount48: number = 0;\n\
    \    let primeCount49: number = 0;\n    let primeCount50: number = 0;\n    let\
    \ primeCount51: number = 0;\n    let primeCount52: number = 0;\n    let primeCount53:\
    \ number = 0;\n    let primeCount54: number = 0;\n    let primeCount55: number\
    \ = 0;\n    let primeCount56: number = 0;\n    let primeCount57: number = 0;\n\
    \    let primeCount58: number = 0;\n    let primeCount59: number = 0;\n    let\
    \ primeCount60: number = 0;\n    let primeCount61: number = 0;\n    let primeCount62:\
    \ number = 0;\n    let ", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\
    \");\n  let primes = 0;\n  let prime_digits: number[] = [];\n  for (let i = 0;\
    \ i < digits.length; i++) {\n    let digit = digits[i];\n    if (digit === \"\
    A\" || digit === \"B\" || digit === \"C\" || digit === \"D\" || digit === \"E\"\
    \ || digit === \"F\") {\n      prime_digits.push(digit);\n    }\n  }\n  for (let\
    \ i = 0; i < prime_digits.length; i++) {\n    let prime_digit = prime_digits[i];\n\
    \    for (let j = 0; j < digits.length; j++) {\n      let digit_digit = digits[j];\n\
    \      if (digit_digit === prime_digit) {\n        primes++;\n      }\n    }\n\
    \  }\n  return primes;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits\
    \ = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitPrimes:\
    \ number[] = [];\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimeIndex = 0;\n\
    \  let hexDigitPrimeIndex2 = 0;\n  let hexDigitPrimeIndex3 = 0;\n  let hexDigitPrimeIndex4\
    \ = 0;\n  let hexDigitPrimeIndex5 = 0;\n  let hexDigitPrimeIndex6 = 0;\n  let\
    \ hexDigitPrimeIndex7 = 0;\n  let hexDigitPrimeIndex8 = 0;\n  let hexDigitPrimeIndex9\
    \ = 0;\n  let hexDigitPrimeIndex10 = 0;\n  let hexDigitPrimeIndex11 = 0;\n  let\
    \ hexDigitPrimeIndex12 = 0;\n  let hexDigitPrimeIndex13 = 0;\n  let hexDigitPrimeIndex14\
    \ = 0;\n  let hexDigitPrimeIndex15 = 0;\n  let hexDigitPrimeIndex16 = 0;\n  let\
    \ hexDigitPrimeIndex17 = 0;\n  let hexDigitPrimeIndex18 = 0;\n  let hexDigitPrimeIndex19\
    \ = 0;\n  let hexDigitPrimeIndex20 = 0;\n  let hexDigitPrimeIndex21 = 0;\n  let\
    \ hexDigitPrimeIndex22 = 0;\n  let hexDigitPrimeIndex23 = 0;\n  let hexDigitPrimeIndex24\
    \ = 0;\n  let hexDigitPrimeIndex25 = 0;\n  let hexDigitPrimeIndex26 = 0;\n  let\
    \ hexDigitPrimeIndex27 = 0;\n  let hexDigitPrimeIndex28 = 0;\n  let hexDigitPrimeIndex29\
    \ = 0;\n  let hexDigitPrimeIndex30 = 0;\n  let hexDigitPrimeIndex31 = 0;\n  let\
    \ hexDigitPrimeIndex32 = 0;\n  let hexDigitPrimeIndex33 = 0;\n  let hexDigitPrimeIndex34\
    \ = 0;\n  let hexDigitPrimeIndex35 = 0;\n  let hexDigitPrimeIndex36 = 0;\n  let\
    \ hexDigitPrimeIndex37 = 0;\n  let hexDigitPrimeIndex38 = 0;\n  let hexDigitPrimeIndex39\
    \ = 0;\n  let hexDigitPrimeIndex40 = 0;\n  let hexDigitPrimeIndex41 = 0;\n  let\
    \ hexDigitPrimeIndex42 = 0;\n  let hexDigitPrimeIndex43 = 0;\n  let hexDigitPrimeIndex44\
    \ = 0;\n  let hexDigitPrimeIndex45 = 0;\n  let hexDigitPrimeIndex46 = 0;\n  let\
    \ hexDigitPrimeIndex47 = 0;\n  let hexDigitPrimeIndex48 = 0;\n  let hexDigitPrimeIndex49\
    \ = 0;\n  let hexDigitPrimeIndex50 = 0;\n  let hexDigitPrimeIndex51 = 0;\n  let\
    \ hexDigitPrimeIndex52 = 0;\n  let hexDigitPrimeIndex53", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes: number[] = [];\n  let prime: number\
    \ = 0;\n  let prime_found = false;\n  let prime_found2 = false;\n  let prime_found3\
    \ = false;\n  let prime_found4 = false;\n  let prime_found5 = false;\n  let prime_found6\
    \ = false;\n  let prime_found7 = false;\n  let prime_found8 = false;\n  let prime_found9\
    \ = false;\n  let prime_found10 = false;\n  let prime_found11 = false;\n  let\
    \ prime_found12 = false;\n  let prime_found13 = false;\n  let prime_found14 =\
    \ false;\n  let prime_found15 = false;\n  let prime_found16 = false;\n  let prime_found17\
    \ = false;\n  let prime_found18 = false;\n  let prime_found19 = false;\n  let\
    \ prime_found20 = false;\n  let prime_found21 = false;\n  let prime_found22 =\
    \ false;\n  let prime_found23 = false;\n  let prime_found24 = false;\n  let prime_found25\
    \ = false;\n  let prime_found26 = false;\n  let prime_found27 = false;\n  let\
    \ prime_found28 = false;\n  let prime_found29 = false;\n  let prime_found30 =\
    \ false;\n  let prime_found31 = false;\n  let prime_found32 = false;\n  let prime_found33\
    \ = false;\n  let prime_found34 = false;\n  let prime_found35 = false;\n  let\
    \ prime_found36 = false;\n  let prime_found37 = false;\n  let prime_found38 =\
    \ false;\n  let prime_found39 = false;\n  let prime_found40 = false;\n  let prime_found41\
    \ = false;\n  let prime_found42 = false;\n  let prime_found43 = false;\n  let\
    \ prime_found44 = false;\n  let prime_found45 = false;\n  let prime_found46 =\
    \ false;\n  let prime_found47 = false;\n  let prime_found48 = false;\n  let prime_found49\
    \ = false;\n  let prime_found50 = false;\n  let prime_found51 = false;\n  let\
    \ prime_found52 = false;\n  let prime_found53 = false;\n  let prime_found54 =\
    \ false;\n  let prime_found55 = false;\n  let prime_found56 = false;\n  let prime_found57\
    \ = false;\n  let prime_found58 = false;\n  let prime_found59 = false;\n  let\
    \ prime_found60 = false;\n  let prime_found61 = false;\n  let prime_found62 =\
    \ false;\n  let prime_found63 = false;\n  let prime_found64 = false;\n  let prime_found65\
    \ = false;\n  let prime_found66 = false;\n  let prime_found67 = false;\n  let\
    \ prime_", "  let hex = num.toUpperCase();\n  let hexDigits = [\n    '0', '1',\
    \ '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f',\n  ];\n\
    \  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n  let hexDigit", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCount2 = hexDigitCount*2;\n  let hexDigitCount3 = hexDigitCount2*2;\n\
    \  let hexDigitCount4 = hexDigitCount3*2;\n  let hexDigitCount5 = hexDigitCount4*2;\n\
    \  let hexDigitCount6 = hexDigitCount5*2;\n  let hexDigitCount7 = hexDigitCount6*2;\n\
    \  let hexDigitCount8 = hexDigitCount7*2;\n  let hexDigitCount9 = hexDigitCount8*2;\n\
    \  let hexDigitCount10 = hexDigitCount9*2;\n  let hexDigitCount11 = hexDigitCount10*2;\n\
    \  let hexDigitCount12 = hexDigitCount11*2;\n  let hexDigitCount13 = hexDigitCount12*2;\n\
    \  let hexDigitCount14 = hexDigitCount13*2;\n  let hexDigitCount15 = hexDigitCount14*2;\n\
    \  let hexDigitCount16 = hexDigitCount15*2;\n  let hexDigitCount17 = hexDigitCount16*2;\n\
    \  let hexDigitCount18 = hexDigitCount17*2;\n  let hexDigitCount19 = hexDigitCount18*2;\n\
    \  let hexDigitCount20 = hexDigitCount19*2;\n  let hexDigitCount21 = hexDigitCount20*2;\n\
    \  let hexDigitCount22 = hexDigitCount21*2;\n  let hexDigitCount23 = hexDigitCount22*2;\n\
    \  let hexDigitCount24 = hexDigitCount23*2;\n  let hexDigitCount25 = hexDigitCount24*2;\n\
    \  let hexDigitCount26 = hexDigitCount25*2;\n  let hexDigitCount27 = hexDigitCount26*2;\n\
    \  let hexDigitCount28 = hexDigitCount27*2;\n  let hexDigitCount29 = hexDigitCount28*2;\n\
    \  let hexDigitCount30 = hexDigitCount29*2;\n  let hexDigitCount31 = hexDigitCount30*2;\n\
    \  let hexDigitCount32 = hexDigitCount31*2;\n  let hexDigitCount33 = hexDigitCount32*2;\n\
    \  let hexDigitCount34 = hexDigitCount33*2;\n  let hexDigitCount35 = hexDigitCount34*2;\n\
    \  let hexDigitCount36 = hexDigitCount35*2;\n  let hexDigitCount37 = hexDigitCount36*2;\n\
    \  let hexDigitCount38 = hexDigitCount37*2;\n  let hexDigitCount39 = hexDigitCount38*2;\n\
    \  let hexDigitCount40 = hexDigitCount39*", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F];\n    let\
    \ hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    let hexDigit", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\
    \");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*2;\n\
    \  let hexDigitCount3 = hexDigitCount2*2;\n  let hexDigitCount4 = hexDigitCount3*2;\n\
    \  let hexDigitCount5 = hexDigitCount4*2;\n  let hexDigitCount6 = hexDigitCount5*2;\n\
    \  let hexDigitCount7 = hexDigitCount6*2;\n  let hexDigitCount8 = hexDigitCount7*2;\n\
    \  let hexDigitCount9 = hexDigitCount8*2;\n  let hexDigitCount10 = hexDigitCount9*2;\n\
    \  let hexDigitCount11 = hexDigitCount10*2;\n  let hexDigitCount12 = hexDigitCount11*2;\n\
    \  let hexDigitCount13 = hexDigitCount12*2;\n  let hexDigitCount14 = hexDigitCount13*2;\n\
    \  let hexDigitCount15 = hexDigitCount14*2;\n  let hexDigitCount16 = hexDigitCount15*2;\n\
    \  let hexDigitCount17 = hexDigitCount16*2;\n  let hexDigitCount18 = hexDigitCount17*2;\n\
    \  let hexDigitCount19 = hexDigitCount18*2;\n  let hexDigitCount20 = hexDigitCount19*2;\n\
    \  let hexDigitCount21 = hexDigitCount20*2;\n  let hexDigitCount22 = hexDigitCount21*2;\n\
    \  let hexDigitCount23 = hexDigitCount22*2;\n  let hexDigitCount24 = hexDigitCount23*2;\n\
    \  let hexDigitCount25 = hexDigitCount24*2;\n  let hexDigitCount26 = hexDigitCount25*2;\n\
    \  let hexDigitCount27 = hexDigitCount26*2;\n  let hexDigitCount28 = hexDigitCount27*2;\n\
    \  let hexDigitCount29 = hexDigitCount28*2;\n  let hexDigitCount30 = hexDigitCount29*2;\n\
    \  let hexDigitCount31 = hexDigitCount30*2;\n  let hexDigitCount32 = hexDigitCount31*2;\n\
    \  let hexDigitCount33 = hexDigitCount32*2;\n  let hexDigitCount34 = hexDigitCount33*2;\n\
    \  let hexDigitCount35 = hexDigitCount34*2;\n  let hexDigitCount36 = hexDigitCount35*2;\n\
    \  let hexDigitCount37 = hexDigitCount36*2;\n  let hexDigitCount38 = hexDigitCount37*2;\n\
    \  let hexDigitCount39 = hexDigitCount38*2;\n  let hexDigitCount40 = hexDigitCount39*",
  "  let hex = num.toUpperCase();\n  let primes: number[] = [];\n  let prime: number\
    \ = 2;\n  let primeCount: number = 0;\n  let digit: number = 1;\n  let hexDigit:\
    \ number = 1;\n  let hexDigitCount: number = 0;\n  let hexDigitCount2: number\
    \ = 0;\n  let hexDigitCount3: number = 0;\n  let hexDigitCount4: number = 0;\n\
    \  let hexDigitCount5: number = 0;\n  let hexDigitCount6: number = 0;\n  let hexDigitCount7:\
    \ number = 0;\n  let hexDigitCount8: number = 0;\n  let hexDigitCount9: number\
    \ = 0;\n  let hexDigitCount10: number = 0;\n  let hexDigitCount11: number = 0;\n\
    \  let hexDigitCount12: number = 0;\n  let hexDigitCount13: number = 0;\n  let\
    \ hexDigitCount14: number = 0;\n  let hexDigitCount15: number = 0;\n  let hexDigitCount16:\
    \ number = 0;\n  let hexDigitCount17: number = 0;\n  let hexDigitCount18: number\
    \ = 0;\n  let hexDigitCount19: number = 0;\n  let hexDigitCount20: number = 0;\n\
    \  let hexDigitCount21: number = 0;\n  let hexDigitCount22: number = 0;\n  let\
    \ hexDigitCount23: number = 0;\n  let hexDigitCount24: number = 0;\n  let hexDigitCount25:\
    \ number = 0;\n  let hexDigitCount26: number = 0;\n  let hexDigitCount27: number\
    \ = 0;\n  let hexDigitCount28: number = 0;\n  let hexDigitCount29: number = 0;\n\
    \  let hexDigitCount30: number = 0;\n  let hexDigitCount31: number = 0;\n  let\
    \ hexDigitCount32: number = 0;\n  let hexDigitCount33: number = 0;\n  let hexDigitCount34:\
    \ number = 0;\n  let hexDigitCount35: number = 0;\n  let hexDigitCount36: number\
    \ = 0;\n  let hexDigitCount37: number = 0;\n  let hexDigitCount38: number = 0;\n\
    \  let hexDigitCount39: number = 0;\n  let hexDigitCount40: number = 0;\n  let\
    \ hexDigitCount41: number = 0;\n  let hexDigitCount42: number = 0;\n  let hexDigitCount43:\
    \ number = 0;\n  let hexDigitCount44: number = 0;\n  let hexDigitCount45: number\
    \ = 0;\n  let hexDigitCount46: number = 0;\n  let hexDigitCount47: number = 0;\n\
    \  let hexDigitCount48: number = 0;\n  let hexDigitCount49: number = 0;\n  let\
    \ hexDigitCount50: number = 0;\n  let hexDigitCount51: number = 0;\n  let hexDigitCount52:\
    \ number = 0;\n  let hexDigitCount53: number = 0;\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes = 0;\n  for (let i = 0; i < digits.length;\
    \ i++) {\n    let digit = parseInt(digits[i]);\n    if (digit > 0 && digit <=\
    \ 9) {\n      primes++;\n    }\n  }\n  return primes;\n}\n", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n    let hexDigitCount3\
    \ = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6\
    \ = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9\
    \ = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n    let hexDigitCount33\
    \ = hexDigitCount", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\
    \");\n  let primes: number[] = [];\n  let prime: number = 0;\n  let primeCount:\
    \ number = 0;\n  for (let i = 0; i < digits.length; i++) {\n    let digit = parseInt(digits[i]);\n\
    \    if (digit > 9) {\n      primeCount++;\n      primes.push(digit);\n    }\n\
    \  }\n  for (let i = 0; i < primes.length; i++) {\n    for (let j = i + 1; j <\
    \ primes.length; j++) {\n      if (primes[i] * primes[j] === prime) {\n      \
    \  primeCount++;\n      }\n    }\n  }\n  return primeCount;\n}\n", "    let hex\
    \ = num.toUpperCase();\n    let primes = 0;\n    let prime: number = 0;\n    let\
    \ digits: number = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number\
    \ = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let\
    \ hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number\
    \ = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let\
    \ hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number\
    \ = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let\
    \ hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number\
    \ = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let\
    \ hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number\
    \ = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let\
    \ hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number\
    \ = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let\
    \ hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number\
    \ = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let\
    \ hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number\
    \ = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let\
    \ hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number\
    \ = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let\
    \ hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number\
    \ = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let\
    \ hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number\
    \ = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let\
    \ hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number\
    \ = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let\
    \ hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number\
    \ = 0;\n    let hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let\
    \ hexDigits: number = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number\
    \ = 0;\n    let hexDigit: number = 0;\n    let hexDigits: number = 0;\n    let\
    \ hexDigit: number = 0;", "    let hex = num.toUpperCase();\n    let primes: number[]\
    \ = [];\n    let prime: number[] = [];\n    let primeCount: number = 0;\n    let\
    \ digit: number = 0;\n    let digitCount: number = 0;\n    let hexCount: number\
    \ = 0;\n    let hexDigit: number = 0;\n    let hexDigitCount: number = 0;\n  \
    \  let hexDigitHexCount: number = 0;\n    let hexDigitHex: number = 0;\n    let\
    \ hexDigitHexCountHex: number = 0;\n    let hexDigitHexHexCount: number = 0;\n\
    \    let hexDigitHexHex: number = 0;\n    let hexDigitHexHexCountHex: number =\
    \ 0;\n    let hexDigitHexHexHexCount: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: number = 0;\n    let hexDigitHexHexHexCountHex:\
    \ number = 0;\n    let hexDigitHexHexHexCountHex: ", "  let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16)).join(\"\");\n  let hexDigits = \"0123456789ABCDEF\"\
    ;\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 =\
    \ hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 =\
    \ hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 =\
    \ hexDigitCount9*hexDigitCount;\n  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32 = hexDigitCount31*",
  "  let hex = num.toUpperCase();\n  let hexDigits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ A, B, C, D, E, F];\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n  let hexDigit", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCount2 = hexDigitCount*2;\n  let hexDigitCount3 = hexDigitCount2*2;\n\
    \  let hexDigitCount4 = hexDigitCount3*2;\n  let hexDigitCount5 = hexDigitCount4*2;\n\
    \  let hexDigitCount6 = hexDigitCount5*2;\n  let hexDigitCount7 = hexDigitCount6*2;\n\
    \  let hexDigitCount8 = hexDigitCount7*2;\n  let hexDigitCount9 = hexDigitCount8*2;\n\
    \  let hexDigitCount10 = hexDigitCount9*2;\n  let hexDigitCount11 = hexDigitCount10*2;\n\
    \  let hexDigitCount12 = hexDigitCount11*2;\n  let hexDigitCount13 = hexDigitCount12*2;\n\
    \  let hexDigitCount14 = hexDigitCount13*2;\n  let hexDigitCount15 = hexDigitCount14*2;\n\
    \  let hexDigitCount16 = hexDigitCount15*2;\n  let hexDigitCount17 = hexDigitCount16*2;\n\
    \  let hexDigitCount18 = hexDigitCount17*2;\n  let hexDigitCount19 = hexDigitCount18*2;\n\
    \  let hexDigitCount20 = hexDigitCount19*2;\n  let hexDigitCount21 = hexDigitCount20*2;\n\
    \  let hexDigitCount22 = hexDigitCount21*2;\n  let hexDigitCount23 = hexDigitCount22*2;\n\
    \  let hexDigitCount24 = hexDigitCount23*2;\n  let hexDigitCount25 = hexDigitCount24*2;\n\
    \  let hexDigitCount26 = hexDigitCount25*2;\n  let hexDigitCount27 = hexDigitCount26*2;\n\
    \  let hexDigitCount28 = hexDigitCount27*2;\n  let hexDigitCount29 = hexDigitCount28*2;\n\
    \  let hexDigitCount30 = hexDigitCount29*2;\n  let hexDigitCount31 = hexDigitCount30*2;\n\
    \  let hexDigitCount32 = hexDigitCount31*2;\n  let hexDigitCount33 = hexDigitCount32*2;\n\
    \  let hexDigitCount34 = hexDigitCount33*2;\n  let hexDigitCount35 = hexDigitCount34*2;\n\
    \  let hexDigitCount36 = hexDigitCount35*2;\n  let hexDigitCount37 = hexDigitCount36*2;\n\
    \  let hexDigitCount38 = hexDigitCount37*2;\n  let hexDigitCount39 = hexDigitCount38*2;\n\
    \  let hexDigitCount40 = hexDigitCount39*", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimeCount = 0;\n    let hexDigitPrimes = [];\n    let hexDigitPrimeIndex\
    \ = 0;\n    let hexDigitPrimeIndexMax = hexDigitCount - 1;\n    let hexDigitPrimeIndexMin\
    \ = 0;\n    let hexDigitPrimeIndexMaxMin = hexDigitPrimeIndexMax - 1;\n    let\
    \ hexDigitPrimeIndexMinMax = hexDigitPrimeIndexMin - 1;\n    let hexDigitPrimeIndexMinMaxMin\
    \ = hexDigitPrimeIndexMinMax - 1;\n    let hexDigitPrimeIndexMinMaxMinMax = hexDigitPrimeIndexMinMaxMin\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMin = hexDigitPrimeIndexMinMaxMinMax\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMinMax = hexDigitPrimeIndexMinMaxMinMaxMin\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMinMaxMin = hexDigitPrimeIndexMinMaxMinMaxMinMax\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMax = hexDigitPrimeIndexMinMaxMinMaxMinMaxMin\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMin = hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMin\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMax = hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMin = hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax =\
    \ hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin - 1;\n    let\
    \ hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ - 1;\n    let hexDigitPrimeIndexMinMaxMinMaxMinMaxMinMaxMinMaxMin", "  let hex\
    \ = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \ let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33\
    \ = hexDigitCount", "  let hex = num.toUpperCase();\n  let prime: number = 0;\n\
    \  let prime_found = false;\n  let prime_found2 = false;\n  let prime_found3 =\
    \ false;\n  let prime_found4 = false;\n  let prime_found5 = false;\n  let prime_found6\
    \ = false;\n  let prime_found7 = false;\n  let prime_found8 = false;\n  let prime_found9\
    \ = false;\n  let prime_found10 = false;\n  let prime_found11 = false;\n  let\
    \ prime_found12 = false;\n  let prime_found13 = false;\n  let prime_found14 =\
    \ false;\n  let prime_found15 = false;\n  let prime_found16 = false;\n  let prime_found17\
    \ = false;\n  let prime_found18 = false;\n  let prime_found19 = false;\n  let\
    \ prime_found20 = false;\n  let prime_found21 = false;\n  let prime_found22 =\
    \ false;\n  let prime_found23 = false;\n  let prime_found24 = false;\n  let prime_found25\
    \ = false;\n  let prime_found26 = false;\n  let prime_found27 = false;\n  let\
    \ prime_found28 = false;\n  let prime_found29 = false;\n  let prime_found30 =\
    \ false;\n  let prime_found31 = false;\n  let prime_found32 = false;\n  let prime_found33\
    \ = false;\n  let prime_found34 = false;\n  let prime_found35 = false;\n  let\
    \ prime_found36 = false;\n  let prime_found37 = false;\n  let prime_found38 =\
    \ false;\n  let prime_found39 = false;\n  let prime_found40 = false;\n  let prime_found41\
    \ = false;\n  let prime_found42 = false;\n  let prime_found43 = false;\n  let\
    \ prime_found44 = false;\n  let prime_found45 = false;\n  let prime_found46 =\
    \ false;\n  let prime_found47 = false;\n  let prime_found48 = false;\n  let prime_found49\
    \ = false;\n  let prime_found50 = false;\n  let prime_found51 = false;\n  let\
    \ prime_found52 = false;\n  let prime_found53 = false;\n  let prime_found54 =\
    \ false;\n  let prime_found55 = false;\n  let prime_found56 = false;\n  let prime_found57\
    \ = false;\n  let prime_found58 = false;\n  let prime_found59 = false;\n  let\
    \ prime_found60 = false;\n  let prime_found61 = false;\n  let prime_found62 =\
    \ false;\n  let prime_found63 = false;\n  let prime_found64 = false;\n  let prime_found65\
    \ = false;\n  let prime_found66 = false;\n  let prime_found67 = false;\n  let\
    \ prime_found68 = false;\n  let prime_found69 = false;\n  let prime_found", " \
    \ let hex = num.toUpperCase();\n  let hexDigits = [...hex];\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n \
    \ let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \  let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 =\
    \ hexDigitCount5*hexDigitCount;\n  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \  let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 =\
    \ hexDigitCount8*hexDigitCount;\n  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \  let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \  let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \  let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \  let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \  let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \  let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33\
    \ = hexDigitCount32", "    let hex = num.toUpperCase();\n    let hexArray = hex.split(\"\
    \");\n    let hexArrayLength = hexArray.length;\n    let hexArrayLength = hexArrayLength\
    \ - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength =\
    \ hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength\
    \ = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let\
    \ hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength\
    \ - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength =\
    \ hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength\
    \ = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let\
    \ hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength\
    \ - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength =\
    \ hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength\
    \ = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let\
    \ hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength\
    \ - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength =\
    \ hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength\
    \ = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let\
    \ hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength\
    \ - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength =\
    \ hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength\
    \ = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let\
    \ hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength\
    \ - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength =\
    \ hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength\
    \ = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let\
    \ hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength\
    \ - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength =\
    \ hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let hexArrayLength\
    \ = hexArrayLength - 1;\n    let hexArrayLength = hexArrayLength - 1;\n    let\
    \ hexArrayLength = hexArrayLength - ", "  let hex = num.toUpperCase();\n  let\
    \ hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n  let\
    \ hexDigitArray = [];\n  let hexDigitArray2 = [];\n  let hexDigitArray3 = [];\n\
    \  let hexDigitArray4 = [];\n  let hexDigitArray5 = [];\n  let hexDigitArray6\
    \ = [];\n  let hexDigitArray7 = [];\n  let hexDigitArray8 = [];\n  let hexDigitArray9\
    \ = [];\n  let hexDigitArray10 = [];\n  let hexDigitArray11 = [];\n  let hexDigitArray12\
    \ = [];\n  let hexDigitArray13 = [];\n  let hexDigitArray14 = [];\n  let hexDigitArray15\
    \ = [];\n  let hexDigitArray16 = [];\n  let hexDigitArray17 = [];\n  let hexDigitArray18\
    \ = [];\n  let hexDigitArray19 = [];\n  let hexDigitArray20 = [];\n  let hexDigitArray21\
    \ = [];\n  let hexDigitArray22 = [];\n  let hexDigitArray23 = [];\n  let hexDigitArray24\
    \ = [];\n  let hexDigitArray25 = [];\n  let hexDigitArray26 = [];\n  let hexDigitArray27\
    \ = [];\n  let hexDigitArray28 = [];\n  let hexDigitArray29 = [];\n  let hexDigitArray30\
    \ = [];\n  let hexDigitArray31 = [];\n  let hexDigitArray32 = [];\n  let hexDigitArray33\
    \ = [];\n  let hexDigitArray34 = [];\n  let hexDigitArray35 = [];\n  let hexDigitArray36\
    \ = [];\n  let hexDigitArray37 = [];\n  let hexDigitArray38 = [];\n  let hexDigitArray39\
    \ = [];\n  let hexDigitArray40 = [];\n  let hexDigitArray41 = [];\n  let hexDigitArray42\
    \ = [];\n  let hexDigitArray43 = [];\n  let hexDigitArray44 = [];\n  let hexDigitArray45\
    \ = [];\n  let hexDigitArray46 = [];\n  let hexDigitArray47 = [];\n  let hexDigitArray48\
    \ = [];\n  let hexDigitArray49 = [];\n  let hexDigitArray50 = [];\n  let hexDigitArray51\
    \ = [];\n  let hexDigitArray52 = [];\n  let hexDigitArray53 = [];\n  let hexDigitArray54\
    \ = [];\n  let hexDigitArray55 = [];\n  let hexDigitArray56 = [];\n  let hexDigitArray57\
    \ = [];\n  let hexDigitArray58 = [];\n  let hexDigitArray59 = [];\n  let hexDigitArray60\
    \ = [];\n  let hexDigitArray61 = [];\n  let hexDigitArray62 = [];\n  let hexDigitArray63\
    \ = [];\n  let hexDigitArray64 = [];\n  let hexDigitArray65 = [];\n  let hexDigitArray66\
    \ = [];\n  let hexDigitArray67 = [];\n  let hexDigitArray68 = [];\n", "    let\
    \ hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitPrimes: number[] = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    let hexDigitPrimeIndex = 0;\n    let hexDigitPrimeSum = 0;\n    let\
    \ hexDigitPrimeSumIndex = 0;\n    let hexDigitPrimeSumIndex2 = 0;\n    let hexDigitPrimeSumIndex3\
    \ = 0;\n    let hexDigitPrimeSumIndex4 = 0;\n    let hexDigitPrimeSumIndex5 =\
    \ 0;\n    let hexDigitPrimeSumIndex6 = 0;\n    let hexDigitPrimeSumIndex7 = 0;\n\
    \    let hexDigitPrimeSumIndex8 = 0;\n    let hexDigitPrimeSumIndex9 = 0;\n  \
    \  let hexDigitPrimeSumIndex10 = 0;\n    let hexDigitPrimeSumIndex11 = 0;\n  \
    \  let hexDigitPrimeSumIndex12 = 0;\n    let hexDigitPrimeSumIndex13 = 0;\n  \
    \  let hexDigitPrimeSumIndex14 = 0;\n    let hexDigitPrimeSumIndex15 = 0;\n  \
    \  let hexDigitPrimeSumIndex16 = 0;\n    let hexDigitPrimeSumIndex17 = 0;\n  \
    \  let hexDigitPrimeSumIndex18 = 0;\n    let hexDigitPrimeSumIndex19 = 0;\n  \
    \  let hexDigitPrimeSumIndex20 = 0;\n    let hexDigitPrimeSumIndex21 = 0;\n  \
    \  let hexDigitPrimeSumIndex22 = 0;\n    let hexDigitPrimeSumIndex23 = 0;\n  \
    \  let hexDigitPrimeSumIndex24 = 0;\n    let hexDigitPrimeSumIndex25 = 0;\n  \
    \  let hexDigitPrimeSumIndex26 = 0;\n    let hexDigitPrimeSumIndex27 = 0;\n  \
    \  let hexDigitPrimeSumIndex28 = 0;\n    let hexDigitPrimeSumIndex29 = 0;\n  \
    \  let hexDigitPrimeSumIndex30 = 0;\n    let hexDigitPrimeSumIndex31 = 0;\n  \
    \  let hexDigitPrimeSumIndex32 = 0;\n    let hexDigitPrimeSumIndex33 = 0;\n  \
    \  let hexDigitPrimeSumIndex34 = 0;\n    let hexDigitPrimeSumIndex35 = 0;\n  \
    \  let hexDigitPrimeSumIndex36 = 0;\n    let hexDigitPrimeSumIndex37 = 0;\n  \
    \  let hexDigitPrimeSumIndex38 = 0;\n    let hexDigitPrimeSumIndex39 = 0;\n  \
    \  let hexDigitPrimeSumIndex40 = 0;\n    let hexDigitPrimeSumIndex41 = 0;\n  \
    \  let hexDigitPrimeSumIndex42 = 0;\n    let hexDigitPrimeSumIndex43 = 0;\n  \
    \  let hexDigitPrimeSumIndex44 = 0;\n    let hexDigitPrimeSumIndex45 = 0;\n  \
    \  let hexDigitPrimeSumIndex46 = 0;", "  let hex = num.toUpperCase();\n  let count\
    \ = 0;\n  for (let i = 0; i < hex.length; i++) {\n    if (hex.charCodeAt(i) >=\
    \ 48 && hex.charCodeAt(i) <= 57) {\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let\
    \ primes = [];\n  let prime = 0;\n  let count = 0;\n  for (let i = 0; i < digits.length;\
    \ i++) {\n    let digit = parseInt(digits[i]);\n    if (digit % 2 === 0) {\n \
    \     primes.push(digit);\n    }\n  }\n  for (let i = 0; i < primes.length; i++)\
    \ {\n    for (let j = 0; j < primes.length; j++) {\n      if (primes[i] === primes[j])\
    \ {\n        prime = primes[j];\n        break;\n      }\n    }\n    if (prime\
    \ !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes = [];\n  let prime_digits = [];\n\
    \  let prime_digits_len = 0;\n  let prime_digits_sum = 0;\n  let prime_digits_sum2\
    \ = 0;\n  let prime_digits_sum3 = 0;\n  let prime_digits_sum4 = 0;\n  let prime_digits_sum5\
    \ = 0;\n  let prime_digits_sum6 = 0;\n  let prime_digits_sum7 = 0;\n  let prime_digits_sum8\
    \ = 0;\n  let prime_digits_sum9 = 0;\n  let prime_digits_sum10 = 0;\n  let prime_digits_sum11\
    \ = 0;\n  let prime_digits_sum12 = 0;\n  let prime_digits_sum13 = 0;\n  let prime_digits_sum14\
    \ = 0;\n  let prime_digits_sum15 = 0;\n  let prime_digits_sum16 = 0;\n  let prime_digits_sum17\
    \ = 0;\n  let prime_digits_sum18 = 0;\n  let prime_digits_sum19 = 0;\n  let prime_digits_sum20\
    \ = 0;\n  let prime_digits_sum21 = 0;\n  let prime_digits_sum22 = 0;\n  let prime_digits_sum23\
    \ = 0;\n  let prime_digits_sum24 = 0;\n  let prime_digits_sum25 = 0;\n  let prime_digits_sum26\
    \ = 0;\n  let prime_digits_sum27 = 0;\n  let prime_digits_sum28 = 0;\n  let prime_digits_sum29\
    \ = 0;\n  let prime_digits_sum30 = 0;\n  let prime_digits_sum31 = 0;\n  let prime_digits_sum32\
    \ = 0;\n  let prime_digits_sum33 = 0;\n  let prime_digits_sum34 = 0;\n  let prime_digits_sum35\
    \ = 0;\n  let prime_digits_sum36 = 0;\n  let prime_digits_sum37 = 0;\n  let prime_digits_sum38\
    \ = 0;\n  let prime_digits_sum39 = 0;\n  let prime_digits_sum40 = 0;\n  let prime_digits_sum41\
    \ = 0;\n  let prime_digits_sum42 = 0;\n  let prime_digits_sum43 = 0;\n  let prime_digits_sum44\
    \ = 0;\n  let prime_digits_sum45 = 0;\n  let prime_digits_sum46 = 0;\n  let prime_digits_sum47\
    \ = 0;\n  let prime_digits_sum48 = 0;\n  let prime_digits_sum49 = 0;\n  let prime_digits_sum50\
    \ = 0;\n  let prime_digits_sum51 = 0;\n  let prime_digits_sum52 = 0;\n  let prime_digits_sum53\
    \ = 0;\n  let prime_digits_sum54", "  let hex = num.toUpperCase();\n  let digits\
    \ = hex.split(\"\");\n  let primes = 0;\n  let prime_digits = \"\";\n  let prime_digits_len\
    \ = 0;\n  for (let i = 0; i < digits.length; i++) {\n    let digit = digits[i];\n\
    \    let digit_value = parseInt(digit);\n    if (digit_value % 2 === 0) {\n  \
    \    primes++;\n      prime_digits += digit;\n      prime_digits_len++;\n    }\n\
    \  }\n  if (prime_digits_len === 1) {\n    return primes;\n  }\n  let prime_digits_len\
    \ = prime_digits_len * 2;\n  let prime_digits_len = prime_digits_len + primes;\n\
    \  let prime_digits_len = prime_digits_len + primes;\n  let prime_digits_len =\
    \ prime_digits_len + primes;\n  let prime_digits_len = prime_digits_len + primes;\n\
    \  let prime_digits_len = prime_digits_len + primes;\n  let prime_digits_len =\
    \ prime_digits_len + primes;\n  let prime_digits_len = prime_digits_len + primes;\n\
    \  let prime_digits_len = prime_digits_len + primes;\n  let prime_digits_len =\
    \ prime_digits_len + primes;\n  let prime_digits_len = prime_digits_len + primes;\n\
    \  let prime_digits_len = prime_digits_len + primes;\n  let prime_digits_len =\
    \ prime_digits_len + primes;\n  let prime_digits_len = prime_digits_len + primes;\n\
    \  let prime_digits_len = prime_digits_len + primes;\n  let prime_digits_len =\
    \ prime_digits_len + primes;\n  let prime_digits_len = prime_digits_len + primes;\n\
    \  let prime_digits_len = prime_digits_len + primes;\n  let prime_digits_len =\
    \ prime_digits_len + primes;\n  let prime_digits_len = prime_digits_len + primes;\n\
    \  let prime_digits_len = prime_digits_len + primes;\n  let prime_digits_len =\
    \ prime_digits_len + primes;\n  let prime_digits_len = prime_digits_len + primes;\n\
    \  let prime_digits_len = prime_digits_len + primes;\n  let prime_digits_len =\
    \ prime_digits_len + primes;\n  let prime_digits_len = prime_digits_len + primes;\n\
    \  let prime_digits_len = prime_digits_len + primes;\n  let prime_digits_len =\
    \ prime_", "  let hex = num.toUpperCase();\n  let count = 0;\n  for (let i = 0;\
    \ i < hex.length; i++) {\n    if (hex.charCodeAt(i) >= 48 && hex.charCodeAt(i)\
    \ <= 57) {\n      count++;\n    }\n  }\n  return count;\n}\n", "    let hex =\
    \ num.toUpperCase();\n    let digits = hex.split(\"\");\n    let primes: number[]\
    \ = [];\n    let prime: number = 0;\n    let primeCount = 0;\n    for (let i =\
    \ 0; i < digits.length; i++) {\n        let digit = parseInt(digits[i]);\n   \
    \     if (digit > 0 && digit <= 9) {\n            primeCount++;\n        }\n \
    \       if (primeCount === 2) {\n            primes.push(prime);\n           \
    \ primeCount = 0;\n            prime = 0;\n        }\n        prime += digit;\n\
    \    }\n    return primes[primes.length - 1];\n}\n", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = [...hex];\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33 = hexDigitCount32",
  "    let hex = num.toUpperCase();\n    let digits = hex.split(\"\");\n    let primes:\
    \ number[] = [];\n    let prime: number = 0;\n    let primeCount: number = 0;\n\
    \    let primeCount2: number = 0;\n    let primeCount3: number = 0;\n    let primeCount4:\
    \ number = 0;\n    let primeCount5: number = 0;\n    let primeCount6: number =\
    \ 0;\n    let primeCount7: number = 0;\n    let primeCount8: number = 0;\n   \
    \ let primeCount9: number = 0;\n    let primeCount10: number = 0;\n    let primeCount11:\
    \ number = 0;\n    let primeCount12: number = 0;\n    let primeCount13: number\
    \ = 0;\n    let primeCount14: number = 0;\n    let primeCount15: number = 0;\n\
    \    let primeCount16: number = 0;\n    let primeCount17: number = 0;\n    let\
    \ primeCount18: number = 0;\n    let primeCount19: number = 0;\n    let primeCount20:\
    \ number = 0;\n    let primeCount21: number = 0;\n    let primeCount22: number\
    \ = 0;\n    let primeCount23: number = 0;\n    let primeCount24: number = 0;\n\
    \    let primeCount25: number = 0;\n    let primeCount26: number = 0;\n    let\
    \ primeCount27: number = 0;\n    let primeCount28: number = 0;\n    let primeCount29:\
    \ number = 0;\n    let primeCount30: number = 0;\n    let primeCount31: number\
    \ = 0;\n    let primeCount32: number = 0;\n    let primeCount33: number = 0;\n\
    \    let primeCount34: number = 0;\n    let primeCount35: number = 0;\n    let\
    \ primeCount36: number = 0;\n    let primeCount37: number = 0;\n    let primeCount38:\
    \ number = 0;\n    let primeCount39: number = 0;\n    let primeCount40: number\
    \ = 0;\n    let primeCount41: number = 0;\n    let primeCount42: number = 0;\n\
    \    let primeCount43: number = 0;\n    let primeCount44: number = 0;\n    let\
    \ primeCount45: number = 0;\n    let primeCount46: number = 0;\n    let primeCount47:\
    \ number = 0;\n    let primeCount48: number = 0;\n    let primeCount49: number\
    \ = 0;\n    let primeCount50: number = 0;\n    let primeCount51: number = 0;\n\
    \    let primeCount52: number = 0;\n    let primeCount53: number = 0;\n    let\
    \ primeCount54: number = 0;\n    let primeCount55: number = 0;\n    let primeCount56:\
    \ number = 0;\n    let primeCount57: number = 0;\n    let primeCount58: number\
    \ = 0;\n    let primeCount59: number = 0;\n    let primeCount60: number = 0;\n\
    \    let primeCount61: number = 0;\n    let ", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitPrimeCount = 0;\n  let hexDigitPrimes: number[] = [];\n  let hexDigitPrimeIndex\
    \ = 0;\n  let hexDigitPrimeIndex2 = 0;\n  let hexDigitPrimeIndex3 = 0;\n  let\
    \ hexDigitPrimeIndex4 = 0;\n  let hexDigitPrimeIndex5 = 0;\n  let hexDigitPrimeIndex6\
    \ = 0;\n  let hexDigitPrimeIndex7 = 0;\n  let hexDigitPrimeIndex8 = 0;\n  let\
    \ hexDigitPrimeIndex9 = 0;\n  let hexDigitPrimeIndex10 = 0;\n  let hexDigitPrimeIndex11\
    \ = 0;\n  let hexDigitPrimeIndex12 = 0;\n  let hexDigitPrimeIndex13 = 0;\n  let\
    \ hexDigitPrimeIndex14 = 0;\n  let hexDigitPrimeIndex15 = 0;\n  let hexDigitPrimeIndex16\
    \ = 0;\n  let hexDigitPrimeIndex17 = 0;\n  let hexDigitPrimeIndex18 = 0;\n  let\
    \ hexDigitPrimeIndex19 = 0;\n  let hexDigitPrimeIndex20 = 0;\n  let hexDigitPrimeIndex21\
    \ = 0;\n  let hexDigitPrimeIndex22 = 0;\n  let hexDigitPrimeIndex23 = 0;\n  let\
    \ hexDigitPrimeIndex24 = 0;\n  let hexDigitPrimeIndex25 = 0;\n  let hexDigitPrimeIndex26\
    \ = 0;\n  let hexDigitPrimeIndex27 = 0;\n  let hexDigitPrimeIndex28 = 0;\n  let\
    \ hexDigitPrimeIndex29 = 0;\n  let hexDigitPrimeIndex30 = 0;\n  let hexDigitPrimeIndex31\
    \ = 0;\n  let hexDigitPrimeIndex32 = 0;\n  let hexDigitPrimeIndex33 = 0;\n  let\
    \ hexDigitPrimeIndex34 = 0;\n  let hexDigitPrimeIndex35 = 0;\n  let hexDigitPrimeIndex36\
    \ = 0;\n  let hexDigitPrimeIndex37 = 0;\n  let hexDigitPrimeIndex38 = 0;\n  let\
    \ hexDigitPrimeIndex39 = 0;\n  let hexDigitPrimeIndex40 = 0;\n  let hexDigitPrimeIndex41\
    \ = 0;\n  let hexDigitPrimeIndex42 = 0;\n  let hexDigitPrimeIndex43 = 0;\n  let\
    \ hexDigitPrimeIndex44 = 0;\n  let hexDigitPrimeIndex45 = 0;\n  let hexDigitPrimeIndex46\
    \ = 0;\n  let hexDigitPrimeIndex47 = 0;\n  let hexDigitPrimeIndex48 = 0;\n  let\
    \ hexDigitPrimeIndex49 = 0;\n  let hexDigitPrimeIndex50 = 0;\n  let hexDigitPrimeIndex51\
    \ = 0;\n  let hexDigitPrimeIndex52 = 0;\n  let hexDigitPrimeIndex53", "  let hex\
    \ = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*2;\n  let hexDigitCount3\
    \ = hexDigitCount*3;\n  let hexDigitCount4 = hexDigitCount*4;\n  let hexDigitCount5\
    \ = hexDigitCount*5;\n  let hexDigitCount6 = hexDigitCount*6;\n  let hexDigitCount7\
    \ = hexDigitCount*7;\n  let hexDigitCount8 = hexDigitCount*8;\n  let hexDigitCount9\
    \ = hexDigitCount*9;\n  let hexDigitCount10 = hexDigitCount*10;\n  let hexDigitCount11\
    \ = hexDigitCount*11;\n  let hexDigitCount12 = hexDigitCount*12;\n  let hexDigitCount13\
    \ = hexDigitCount*13;\n  let hexDigitCount14 = hexDigitCount*14;\n  let hexDigitCount15\
    \ = hexDigitCount*15;\n  let hexDigitCount16 = hexDigitCount*16;\n  let hexDigitCount17\
    \ = hexDigitCount*17;\n  let hexDigitCount18 = hexDigitCount*18;\n  let hexDigitCount19\
    \ = hexDigitCount*19;\n  let hexDigitCount20 = hexDigitCount*20;\n  let hexDigitCount21\
    \ = hexDigitCount*21;\n  let hexDigitCount22 = hexDigitCount*22;\n  let hexDigitCount23\
    \ = hexDigitCount*23;\n  let hexDigitCount24 = hexDigitCount*24;\n  let hexDigitCount25\
    \ = hexDigitCount*25;\n  let hexDigitCount26 = hexDigitCount*26;\n  let hexDigitCount27\
    \ = hexDigitCount*27;\n  let hexDigitCount28 = hexDigitCount*28;\n  let hexDigitCount29\
    \ = hexDigitCount*29;\n  let hexDigitCount30 = hexDigitCount*30;\n  let hexDigitCount31\
    \ = hexDigitCount*31;\n  let hexDigitCount32 = hexDigitCount*32;\n  let hexDigitCount33\
    \ = hexDigitCount*33;\n  let hexDigitCount34 = hexDigitCount*34;\n  let hexDigitCount35\
    \ = hexDigitCount*35;\n  let hexDigitCount36 = hexDigitCount*36;\n  let hexDigitCount37\
    \ = hexDigitCount*37;\n  let hexDigitCount38 = hexDigitCount*38;\n  let hexDigitCount39\
    \ = hexDigitCount*39;\n  let hexDigitCount40 = hexDigitCount*40;\n  let hexDigitCount41\
    \ = hexDigitCount*", "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\
    \");\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n\
    \    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4\
    \ = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n\
    \    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7\
    \ = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n\
    \    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10\
    \ = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n\
    \    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13\
    \ = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n\
    \    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16\
    \ = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n\
    \    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19\
    \ = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n\
    \    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22\
    \ = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n\
    \    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25\
    \ = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n\
    \    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28\
    \ = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n\
    \    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31\
    \ = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32 = hexDigitCount31*hexDigitCount;\n\
    \    let hexDigitCount33 = hexDigitCount", "  let hex = num.toUpperCase();\n \
    \ let digits = hex.split(\"\");\n  let primes: number[] = [];\n  let prime: number\
    \ = 2;\n  let primeCount: number = 0;\n  for (let i = 0; i < digits.length; i++)\
    \ {\n    let digit = parseInt(digits[i]);\n    if (digit > 9) {\n      primeCount++;\n\
    \      primes.push(prime);\n      prime = prime * 2;\n    } else {\n      primeCount++;\n\
    \    }\n  }\n  return primes[primeCount - 1];\n}\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes = 0;\n  let prime_digits = \"\"\
    ;\n  for (let i = 0; i < digits.length; i++) {\n    let digit = parseInt(digits[i]);\n\
    \    if (digit % 2 === 0) {\n      primes++;\n      prime_digits += digits[i];\n\
    \    }\n  }\n  return primes;\n}\n", "    let hex = num.toUpperCase();\n    let\
    \ digits = hex.split(\"\");\n    let primes = 0;\n    for (let i = 0; i < digits.length;\
    \ i++) {\n        let digit = parseInt(digits[i]);\n        if (digit % 2 ===\
    \ 0 && digit % 3 === 0) {\n            primes++;\n        }\n    }\n    return\
    \ primes;\n}\n", "  let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \");\n  let primes = hex_to_primes(hex);\n  let prime_sum = 0;\n  for (let prime\
    \ of primes) {\n    prime_sum += prime;\n  }\n  return prime_sum;\n}\n", "  let\
    \ hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes = [];\n\
    \  let prime_digits = [];\n  let prime_digit_count = [];\n  let prime_digit_count_index\
    \ = [];\n  let prime_digit_count_index2 = [];\n  let prime_digit_count_index3\
    \ = [];\n  let prime_digit_count_index4 = [];\n  let prime_digit_count_index5\
    \ = [];\n  let prime_digit_count_index6 = [];\n  let prime_digit_count_index7\
    \ = [];\n  let prime_digit_count_index8 = [];\n  let prime_digit_count_index9\
    \ = [];\n  let prime_digit_count_index10 = [];\n  let prime_digit_count_index11\
    \ = [];\n  let prime_digit_count_index12 = [];\n  let prime_digit_count_index13\
    \ = [];\n  let prime_digit_count_index14 = [];\n  let prime_digit_count_index15\
    \ = [];\n  let prime_digit_count_index16 = [];\n  let prime_digit_count_index17\
    \ = [];\n  let prime_digit_count_index18 = [];\n  let prime_digit_count_index19\
    \ = [];\n  let prime_digit_count_index20 = [];\n  let prime_digit_count_index21\
    \ = [];\n  let prime_digit_count_index22 = [];\n  let prime_digit_count_index23\
    \ = [];\n  let prime_digit_count_index24 = [];\n  let prime_digit_count_index25\
    \ = [];\n  let prime_digit_count_index26 = [];\n  let prime_digit_count_index27\
    \ = [];\n  let prime_digit_count_index28 = [];\n  let prime_digit_count_index29\
    \ = [];\n  let prime_digit_count_index30 = [];\n  let prime_digit_count_index31\
    \ = [];\n  let prime_digit_count_index32 = [];\n  let prime_digit_count_index33\
    \ = [];\n  let prime_digit_count_index34 = [];\n  let prime_digit_count_index35\
    \ = [];\n  let prime_digit_count_index36 = [];\n  let prime_digit_count_index37\
    \ = [];\n  let prime_digit_count_index38 = [];\n  let prime_digit_count_index39\
    \ = [];\n  let prime_digit_count_index40 = [];\n  let prime_digit_count_index41\
    \ = [];\n  let prime_digit_count_index42 = [];\n  let prime_digit_count_index43\
    \ = [];\n  let prime_digit_count_index44 = [];\n  let prime_digit_count_index45\
    \ = [];\n  let prime_digit_count_index46 = [];\n  let prime_digit_count_index47\
    \ = [];\n  let prime_digit_count_index48 = [];\n  let prime_digit_count_index49\
    \ = [];\n  let prime_digit_count_index50 = [];\n  let prime_digit_count_index51\
    \ = [];\n  let prime_digit_count_index52 = [];\n  let prime_digit_count_", " \
    \   let hex = num.toUpperCase();\n    let hexDigits = [0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, A, B, C, D, E, F];\n    let hexDigitCount = hexDigits.length;\n    let\
    \ hexDigitSum = 0;\n    let hexDigitIndex = 0;\n    let hexDigitSumIndex = 0;\n\
    \    let hexDigitSumIndex2 = 0;\n    let hexDigitSumIndex3 = 0;\n    let hexDigitSumIndex4\
    \ = 0;\n    let hexDigitSumIndex5 = 0;\n    let hexDigitSumIndex6 = 0;\n    let\
    \ hexDigitSumIndex7 = 0;\n    let hexDigitSumIndex8 = 0;\n    let hexDigitSumIndex9\
    \ = 0;\n    let hexDigitSumIndex10 = 0;\n    let hexDigitSumIndex11 = 0;\n   \
    \ let hexDigitSumIndex12 = 0;\n    let hexDigitSumIndex13 = 0;\n    let hexDigitSumIndex14\
    \ = 0;\n    let hexDigitSumIndex15 = 0;\n    let hexDigitSumIndex16 = 0;\n   \
    \ let hexDigitSumIndex17 = 0;\n    let hexDigitSumIndex18 = 0;\n    let hexDigitSumIndex19\
    \ = 0;\n    let hexDigitSumIndex20 = 0;\n    let hexDigitSumIndex21 = 0;\n   \
    \ let hexDigitSumIndex22 = 0;\n    let hexDigitSumIndex23 = 0;\n    let hexDigitSumIndex24\
    \ = 0;\n    let hexDigitSumIndex25 = 0;\n    let hexDigitSumIndex26 = 0;\n   \
    \ let hexDigitSumIndex27 = 0;\n    let hexDigitSumIndex28 = 0;\n    let hexDigitSumIndex29\
    \ = 0;\n    let hexDigitSumIndex30 = 0;\n    let hexDigitSumIndex31 = 0;\n   \
    \ let hexDigitSumIndex32 = 0;\n    let hexDigitSumIndex33 = 0;\n    let hexDigitSumIndex34\
    \ = 0;\n    let hexDigitSumIndex35 = 0;\n    let hexDigitSumIndex36 = 0;\n   \
    \ let hexDigitSumIndex37 = 0;\n    let hexDigitSumIndex38 = 0;\n    let hexDigitSumIndex39\
    \ = 0;\n    let hexDigitSumIndex40 = 0;\n    let hexDigitSumIndex41 = 0;\n   \
    \ let hexDigitSumIndex42 = 0;\n    let hexDigitSumIndex43 = 0;\n    let hexDigitSumIndex44\
    \ = 0;\n    let hexDigitSumIndex45 = 0;\n    let hexDigitSumIndex46 = 0;\n   \
    \ let hexDigitSumIndex47 = 0;\n    let hexDigitSumIndex48 = 0;\n    let hexDigitSumIndex49\
    \ = 0;\n    let hexDigitSumIndex50 = 0;\n    let hexDigitSumIndex51 = 0;\n   \
    \ let hexDigitSumIndex52 = 0;\n    let hexDigitSumIndex53 = 0;\n    let hexDigitSumIndex54\
    \ = 0;\n    let hexDigitSumIndex55 = 0;\n    let hexDigitSumIndex56 = 0;\n   \
    \ let hexDigitSumIndex57 = 0;\n    let hexDigitSumIndex58 = 0;\n    let hexDigitSumIndex59\
    \ = 0;\n    let hexDigit", "    let hex = num.toUpperCase();\n    let digits =\
    \ hex.split(\"\");\n    let primes = 0;\n    let prime_digits = \"\";\n    for\
    \ (let i = 0; i < digits.length; i++) {\n        let digit = parseInt(digits[i]);\n\
    \        if (digit % 2 === 0) {\n            prime_digits += digit;\n        }\n\
    \        else {\n            primes += 1;\n        }\n    }\n    if (prime_digits\
    \ === \"\") {\n        return 0;\n    }\n    return primes;\n}\n", "    let hex\
    \ = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitCountPrime = hexDigitCount;\n    let hexDigitCountPrime2\
    \ = hexDigitCountPrime;\n    let hexDigitCountPrime3 = hexDigitCountPrime2;\n\
    \    let hexDigitCountPrime4 = hexDigitCountPrime3;\n    let hexDigitCountPrime5\
    \ = hexDigitCountPrime4;\n    let hexDigitCountPrime6 = hexDigitCountPrime5;\n\
    \    let hexDigitCountPrime7 = hexDigitCountPrime6;\n    let hexDigitCountPrime8\
    \ = hexDigitCountPrime7;\n    let hexDigitCountPrime9 = hexDigitCountPrime8;\n\
    \    let hexDigitCountPrime10 = hexDigitCountPrime9;\n    let hexDigitCountPrime11\
    \ = hexDigitCountPrime10;\n    let hexDigitCountPrime12 = hexDigitCountPrime11;\n\
    \    let hexDigitCountPrime13 = hexDigitCountPrime12;\n    let hexDigitCountPrime14\
    \ = hexDigitCountPrime13;\n    let hexDigitCountPrime15 = hexDigitCountPrime14;\n\
    \    let hexDigitCountPrime16 = hexDigitCountPrime15;\n    let hexDigitCountPrime17\
    \ = hexDigitCountPrime16;\n    let hexDigitCountPrime18 = hexDigitCountPrime17;\n\
    \    let hexDigitCountPrime19 = hexDigitCountPrime18;\n    let hexDigitCountPrime20\
    \ = hexDigitCountPrime19;\n    let hexDigitCountPrime21 = hexDigitCountPrime20;\n\
    \    let hexDigitCountPrime22 = hexDigitCountPrime21;\n    let hexDigitCountPrime23\
    \ = hexDigitCountPrime22;\n    let hexDigitCountPrime24 = hexDigitCountPrime23;\n\
    \    let hexDigitCountPrime25 = hexDigitCountPrime24;\n    let hexDigitCountPrime26\
    \ = hexDigitCountPrime25;\n    let hexDigitCountPrime27 = hexDigitCountPrime26;\n\
    \    let hexDigitCountPrime28 = hexDigitCountPrime27;\n    let hexDigitCountPrime29\
    \ = hexDigitCountPrime28;\n    let hexDigitCountPrime30 = hexDigitCountPrime29;\n\
    \    let hexDigitCountPrime31 = hexDigitCountPrime30;\n    let hexDigitCountPrime32\
    \ = hexDigitCountPrime31;\n    let hexDigitCountPrime33 = ", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimeCount = 0;\n    let hexDigitPrimes: number[] = [];\n   \
    \ for (let i = 0; i < hexDigitCount; i++) {\n        let hexDigit = hexDigits[i];\n\
    \        let hexDigitValue = parseInt(hexDigit, 16);\n        if (hexDigitValue\
    \ > 0 && hexDigitValue <= 9) {\n            hexDigitPrimes.push(hexDigitValue);\n\
    \        }\n    }\n    for (let i = 0; i < hexDigitPrimes.length; i++) {\n   \
    \     let hexDigitPrime = hexDigitPrimes[i];\n        for (let j = i + 1; j <\
    \ hexDigitPrimes.length; j++) {\n            let hexDigitPrime2 = hexDigitPrimes[j];\n\
    \            if (hexDigitPrime * hexDigitPrime2 === hexDigitPrime2) {\n      \
    \          hexDigitPrimeCount++;\n            }\n        }\n    }\n    return\
    \ hexDigitPrimeCount;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript,algorithm\
    \ |>\n<code>", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\"\
    );\n  let primes = 0;\n  for (let i = 0; i < digits.length; i++) {\n    let digit\
    \ = parseInt(digits[i]);\n    if (digit % 2 === 0) {\n      primes++;\n    }\n\
    \  }\n  return primes;\n}\n", "  let hex = num.toUpperCase();\n  let digits =\
    \ hex.split(\"\");\n  let primes = 0;\n  let prime_digits = \"\";\n  for (let\
    \ i = 0; i < digits.length; i++) {\n    let digit = parseInt(digits[i]);\n   \
    \ if (digit % 2 === 0) {\n      primes++;\n      prime_digits += digits[i];\n\
    \    }\n  }\n  return primes;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits\
    \ = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2\
    \ = hexDigitCount * hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2 * hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3 * hexDigitCount;\n  let hexDigitCount5\
    \ = hexDigitCount4 * hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5 * hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6 * hexDigitCount;\n  let hexDigitCount8\
    \ = hexDigitCount7 * hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8 * hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9 * hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10 * hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11\
    \ * hexDigitCount;\n  let hexDigitCount13 = hexDigitCount12 * hexDigitCount;\n\
    \  let hexDigitCount14 = hexDigitCount13 * hexDigitCount;\n  let hexDigitCount15\
    \ = hexDigitCount14 * hexDigitCount;\n  let hexDigitCount16 = hexDigitCount15\
    \ * hexDigitCount;\n  let hexDigitCount17 = hexDigitCount16 * hexDigitCount;\n\
    \  let hexDigitCount18 = hexDigitCount17 * hexDigitCount;\n  let hexDigitCount19\
    \ = hexDigitCount18 * hexDigitCount;\n  let hexDigitCount20 = hexDigitCount19\
    \ * hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20 * hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21 * hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22 * hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23\
    \ * hexDigitCount;\n  let hexDigitCount25 = hexDigitCount24 * hexDigitCount;\n\
    \  let hexDigitCount26 = hexDigitCount25 * hexDigitCount;\n  let hexDigitCount27\
    \ = hexDigitCount26 * hexDigitCount;\n  let hexDigitCount28 = hexDigitCount27\
    \ * hexDigitCount;\n  let hexDigitCount29 = hexDigitCount28 * hexDigitCount;\n\
    \  let hexDigitCount30 = hexDigitCount29 * hexDigitCount;\n  let hexDigitCount31\
    \ = hexDigitCount30 * hexDigitCount;\n  let hexDigitCount32 = hexDigitCount31\
    \ * hexDigitCount;\n  let hexDigitCount33 = hexDigitCount32", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = [\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\
    \ 'A', 'B', 'C', 'D', 'E', 'F'\n    ];\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitCount2 = hexDigitCount*hexDigitCount;\n    let hexDigitCount3\
    \ = hexDigitCount2*hexDigitCount;\n    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n\
    \    let hexDigitCount5 = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6\
    \ = hexDigitCount5*hexDigitCount;\n    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n\
    \    let hexDigitCount8 = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9\
    \ = hexDigitCount8*hexDigitCount;\n    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n\
    \    let hexDigitCount11 = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12\
    \ = hexDigitCount11*hexDigitCount;\n    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n\
    \    let hexDigitCount14 = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15\
    \ = hexDigitCount14*hexDigitCount;\n    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n\
    \    let hexDigitCount17 = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18\
    \ = hexDigitCount17*hexDigitCount;\n    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n\
    \    let hexDigitCount20 = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21\
    \ = hexDigitCount20*hexDigitCount;\n    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n\
    \    let hexDigitCount23 = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24\
    \ = hexDigitCount23*hexDigitCount;\n    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n\
    \    let hexDigitCount26 = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27\
    \ = hexDigitCount26*hexDigitCount;\n    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n\
    \    let hexDigitCount29 = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30\
    \ = hexDigitCount29*hexDigitCount;\n    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n\
    \    let hexDigitCount", "  let hex = num.toUpperCase();\n  let count = 0;\n \
    \ for (let i = 0; i < hex.length; i++) {\n    if (hex.charCodeAt(i) >= 48 && hex.charCodeAt(i)\
    \ <= 57) {\n      count++;\n    }\n  }\n  return count;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes: number[] = [];\n  let prime: number\
    \ = 1;\n  let primeCount: number = 0;\n  for (let i = 0; i < digits.length; i++)\
    \ {\n    let digit = digits[i];\n    if (digit === \"A\" || digit === \"B\" ||\
    \ digit === \"C\" || digit === \"D\" || digit === \"E\" || digit === \"F\") {\n\
    \      primeCount++;\n    }\n    if (primeCount > 1) {\n      primes.push(prime);\n\
    \      prime = 1;\n      primeCount = 0;\n    }\n    if (digit === \"2\") {\n\
    \      prime = 2;\n    }\n    if (digit === \"3\") {\n      prime = 3;\n    }\n\
    \    if (digit === \"5\") {\n      prime = 5;\n    }\n    if (digit === \"7\"\
    ) {\n      prime = 7;\n    }\n    if (digit === \"11\") {\n      prime = 11;\n\
    \    }\n    if (digit === \"13\") {\n      prime = 13;\n    }\n    if (digit ===\
    \ \"17\") {\n      prime = 17;\n    }\n    if (digit === \"19\") {\n      prime\
    \ = 19;\n    }\n    if (digit === \"23\") {\n      prime = 23;\n    }\n    if\
    \ (digit === \"29\") {\n      prime = 29;\n    }\n    if (digit === \"31\") {\n\
    \      prime = 31;\n    }\n    if (digit === \"37\") {\n      prime = 37;\n  \
    \  }\n    if (digit === \"41\") {\n      prime = 41;\n    }\n    if (digit ===\
    \ \"43\") {\n      prime = 43;\n    }\n    if (digit === \"47\") {\n      prime\
    \ = 53;\n    }\n    if (digit === \"53\") {\n      prime = 53;\n    }\n    if\
    \ (digit === \"59\") {\n      prime = 59;\n    }\n    if (digit === \"61\") {\n\
    \      prime = 61;\n    }\n    if (digit === \"67\") {\n      prime = 67;\n  \
    \  }\n    if (digit === \"71\") {\n      prime = 71;\n    }\n    if (digit ===\
    \ \"73\") {\n      prime = 73;\n    }\n    if (digit === \"79\") {\n      prime\
    \ = 79;\n    }\n    if (digit === \"83\") {\n      prime = 83;\n    }\n    if\
    \ (digit === \"89\") {\n      prime = 89;\n    }\n    if (digit === \"97\") {\n\
    \      prime = 99;\n    }\n  }\n  return primes[primes.length - 1];\n}\n", " \
    \   let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ hexDigitCount = hexDigits.length;\n    let hexDigitArray = [];\n    for (let\
    \ i = 0; i < hexDigitCount; i++) {\n        hexDigitArray.push(parseInt(hexDigits[i],\
    \ 16));\n    }\n    let hexDigitArrayLength = hexDigitArray.length;\n    let hexDigitArraySum\
    \ = 0;\n    for (let i = 0; i < hexDigitArrayLength; i++) {\n        hexDigitArraySum\
    \ += hexDigitArray[i];\n    }\n    let hexDigitArraySumHex = hexDigitArraySum.toString(16);\n\
    \    let hexDigitArraySumHexLength = hexDigitArraySumHex.length;\n    let hexDigitArraySumHexArray\
    \ = [];\n    for (let i = 0; i < hexDigitArraySumHexLength; i++) {\n        hexDigitArraySumHexArray.push(parseInt(hexDigitArraySumHex[i],\
    \ 16));\n    }\n    let hexDigitArraySumHexArrayLength = hexDigitArraySumHexArray.length;\n\
    \    let hexDigitArraySumHexArraySum = 0;\n    for (let i = 0; i < hexDigitArraySumHexArrayLength;\
    \ i++) {\n        hexDigitArraySumHexArraySum += hexDigitArraySumHexArray[i];\n\
    \    }\n    let hexDigitArraySumHexArraySumHex = hexDigitArraySumHexArraySum.toString(16);\n\
    \    let hexDigitArraySumHexArraySumHexLength = hexDigitArraySumHexArraySumHex.length;\n\
    \    let hexDigitArraySumHexArraySumHexArray = [];\n    for (let i = 0; i < hexDigitArraySumHexArraySumHexLength;\
    \ i++) {\n        hexDigitArraySumHexArraySumHexArray.push(parseInt(hexDigitArraySumHexArraySumHex[i],\
    \ 16));\n    }\n    let hexDigitArraySumHexArraySumHexArrayLength = hexDigitArraySumHexArraySumHexArray.length;\n\
    \    let hexDigitArraySumHexArraySumHexArraySum = 0;\n    for (let i = 0; i <\
    \ hexDigitArraySumHexArraySumHexArrayLength; i++) {\n        hexDigitArraySumHexArraySumHexArraySum\
    \ += hexDigitArraySumHexArraySumHexArray[i];\n    }\n    let hexDigitArraySumHexArraySumHexArraySumHex\
    \ = hexDigitArraySumHexArraySumHexArraySum.toString(16);\n    let hexDigitArraySumHexArraySumHexArraySumHexLength\
    \ = hexDigitArraySumHexArraySumHexArraySumHex.length;\n    let hexDigitArraySumHexArraySumHexArraySumHexArray\
    \ = [];\n    for (let i = 0; i < hexDigitArraySumHexArraySumHexArraySumHexLength;\
    \ i++) {\n        hexDigitArraySumHexArraySumHexArraySumHexArray.push(parseInt(hexDigitArraySumHexArraySumHexArraySumHexArray[i],\
    \ 16));\n    }\n    let hexDigitArraySumHex", "  let result = 0;\n  for (let i\
    \ = 0; i < num.length; i++) {\n    let c = num.charCodeAt(i);\n    if (c >= 48\
    \ && c <= 57) {\n      result += c - 48;\n    } else if (c >= 65 && c <= 70) {\n\
    \      result += c - 55;\n    } else if (c >= 97 && c <= 102) {\n      result\
    \ += c - 87;\n    } else {\n      result += c;\n    }\n  }\n  return result;\n\
    }\n", "    let hex = num.toUpperCase();\n    let digits = hex.split(\"\");\n \
    \   let primes = 0;\n    let prime_digits: number[] = [];\n    let prime_digits_len:\
    \ number[] = [];\n    let prime_digits_len2: number[] = [];\n    let prime_digits_len3:\
    \ number[] = [];\n    let prime_digits_len4: number[] = [];\n    let prime_digits_len5:\
    \ number[] = [];\n    let prime_digits_len6: number[] = [];\n    let prime_digits_len7:\
    \ number[] = [];\n    let prime_digits_len8: number[] = [];\n    let prime_digits_len9:\
    \ number[] = [];\n    let prime_digits_len10: number[] = [];\n    let prime_digits_len11:\
    \ number[] = [];\n    let prime_digits_len12: number[] = [];\n    let prime_digits_len13:\
    \ number[] = [];\n    let prime_digits_len14: number[] = [];\n    let prime_digits_len15:\
    \ number[] = [];\n    let prime_digits_len16: number[] = [];\n    let prime_digits_len17:\
    \ number[] = [];\n    let prime_digits_len18: number[] = [];\n    let prime_digits_len19:\
    \ number[] = [];\n    let prime_digits_len20: number[] = [];\n    let prime_digits_len21:\
    \ number[] = [];\n    let prime_digits_len22: number[] = [];\n    let prime_digits_len23:\
    \ number[] = [];\n    let prime_digits_len24: number[] = [];\n    let prime_digits_len25:\
    \ number[] = [];\n    let prime_digits_len26: number[] = [];\n    let prime_digits_len27:\
    \ number[] = [];\n    let prime_digits_len28: number[] = [];\n    let prime_digits_len29:\
    \ number[] = [];\n    let prime_digits_len30: number[] = [];\n    let prime_digits_len31:\
    \ number[] = [];\n    let prime_digits_len32: number[] = [];\n    let prime_digits_len33:\
    \ number[] = [];\n    let prime_digits_len34: number[] = [];\n    let prime_digits_len35:\
    \ number[] = [];\n    let prime_digits_len36: number[] = [];\n    let prime_digits_len37:\
    \ number[] = [];\n    let prime_digits_len38: number[] = [];\n    let prime_digits_len39:\
    \ number[] = [];\n    let prime_digits_len40: number[] = [];\n    let prime_digits_len41:\
    \ number", "    let hex = num.toUpperCase();\n    let result = 0;\n    for (let\
    \ i = 0; i < hex.length; i++) {\n        let char = hex.charCodeAt(i);\n     \
    \   if (char >= 48 && char <= 57) {\n            result += char - 48;\n      \
    \  } else if (char >= 65 && char <= 70) {\n            result += char - 65 + 10;\n\
    \        } else if (char >= 97 && char <= 102) {\n            result += char -\
    \ 97 + 10;\n        }\n    }\n    return result;\n}\n", "    let hex = num.toUpperCase();\n\
    \    let result = 0;\n    for (let i = 0; i < hex.length; i++) {\n        let\
    \ digit = hex.charCodeAt(i) - 48;\n        if (digit > 9) {\n            digit\
    \ -= 9;\n        }\n        result += digit * Math.pow(16, i);\n    }\n    return\
    \ result;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\
    \");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount*2;\n\
    \  let hexDigitCount3 = hexDigitCount*3;\n  let hexDigitCount4 = hexDigitCount*4;\n\
    \  let hexDigitCount5 = hexDigitCount*5;\n  let hexDigitCount6 = hexDigitCount*6;\n\
    \  let hexDigitCount7 = hexDigitCount*7;\n  let hexDigitCount8 = hexDigitCount*8;\n\
    \  let hexDigitCount9 = hexDigitCount*9;\n  let hexDigitCount10 = hexDigitCount*10;\n\
    \  let hexDigitCount11 = hexDigitCount*11;\n  let hexDigitCount12 = hexDigitCount*12;\n\
    \  let hexDigitCount13 = hexDigitCount*13;\n  let hexDigitCount14 = hexDigitCount*14;\n\
    \  let hexDigitCount15 = hexDigitCount*15;\n  let hexDigitCount16 = hexDigitCount*16;\n\
    \  let hexDigitCount17 = hexDigitCount*17;\n  let hexDigitCount18 = hexDigitCount*18;\n\
    \  let hexDigitCount19 = hexDigitCount*19;\n  let hexDigitCount20 = hexDigitCount*20;\n\
    \  let hexDigitCount21 = hexDigitCount*21;\n  let hexDigitCount22 = hexDigitCount*22;\n\
    \  let hexDigitCount23 = hexDigitCount*23;\n  let hexDigitCount24 = hexDigitCount*24;\n\
    \  let hexDigitCount25 = hexDigitCount*25;\n  let hexDigitCount26 = hexDigitCount*26;\n\
    \  let hexDigitCount27 = hexDigitCount*27;\n  let hexDigitCount28 = hexDigitCount*28;\n\
    \  let hexDigitCount29 = hexDigitCount*29;\n  let hexDigitCount30 = hexDigitCount*30;\n\
    \  let hexDigitCount31 = hexDigitCount*31;\n  let hexDigitCount32 = hexDigitCount*32;\n\
    \  let hexDigitCount33 = hexDigitCount*33;\n  let hexDigitCount34 = hexDigitCount*34;\n\
    \  let hexDigitCount35 = hexDigitCount*35;\n  let hexDigitCount36 = hexDigitCount*36;\n\
    \  let hexDigitCount37 = hexDigitCount*37;\n  let hexDigitCount38 = hexDigitCount*38;\n\
    \  let hexDigitCount39 = hexDigitCount*39;\n  let hexDigitCount40 = hexDigitCount*40;\n\
    \  let hexDigitCount41 = hexDigitCount*", "  let hex = num.toUpperCase();\n  let\
    \ hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n  let\
    \ hexDigitPrimes: number[] = [];\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimeIndex\
    \ = 0;\n  let hexDigitPrimeIndex2 = 0;\n  let hexDigitPrimeIndex3 = 0;\n  let\
    \ hexDigitPrimeIndex4 = 0;\n  let hexDigitPrimeIndex5 = 0;\n  let hexDigitPrimeIndex6\
    \ = 0;\n  let hexDigitPrimeIndex7 = 0;\n  let hexDigitPrimeIndex8 = 0;\n  let\
    \ hexDigitPrimeIndex9 = 0;\n  let hexDigitPrimeIndex10 = 0;\n  let hexDigitPrimeIndex11\
    \ = 0;\n  let hexDigitPrimeIndex12 = 0;\n  let hexDigitPrimeIndex13 = 0;\n  let\
    \ hexDigitPrimeIndex14 = 0;\n  let hexDigitPrimeIndex15 = 0;\n  let hexDigitPrimeIndex16\
    \ = 0;\n  let hexDigitPrimeIndex17 = 0;\n  let hexDigitPrimeIndex18 = 0;\n  let\
    \ hexDigitPrimeIndex19 = 0;\n  let hexDigitPrimeIndex20 = 0;\n  let hexDigitPrimeIndex21\
    \ = 0;\n  let hexDigitPrimeIndex22 = 0;\n  let hexDigitPrimeIndex23 = 0;\n  let\
    \ hexDigitPrimeIndex24 = 0;\n  let hexDigitPrimeIndex25 = 0;\n  let hexDigitPrimeIndex26\
    \ = 0;\n  let hexDigitPrimeIndex27 = 0;\n  let hexDigitPrimeIndex28 = 0;\n  let\
    \ hexDigitPrimeIndex29 = 0;\n  let hexDigitPrimeIndex30 = 0;\n  let hexDigitPrimeIndex31\
    \ = 0;\n  let hexDigitPrimeIndex32 = 0;\n  let hexDigitPrimeIndex33 = 0;\n  let\
    \ hexDigitPrimeIndex34 = 0;\n  let hexDigitPrimeIndex35 = 0;\n  let hexDigitPrimeIndex36\
    \ = 0;\n  let hexDigitPrimeIndex37 = 0;\n  let hexDigitPrimeIndex38 = 0;\n  let\
    \ hexDigitPrimeIndex39 = 0;\n  let hexDigitPrimeIndex40 = 0;\n  let hexDigitPrimeIndex41\
    \ = 0;\n  let hexDigitPrimeIndex42 = 0;\n  let hexDigitPrimeIndex43 = 0;\n  let\
    \ hexDigitPrimeIndex44 = 0;\n  let hexDigitPrimeIndex45 = 0;\n  let hexDigitPrimeIndex46\
    \ = 0;\n  let hexDigitPrimeIndex47 = 0;\n  let hexDigitPrimeIndex48 = 0;\n  let\
    \ hexDigitPrimeIndex49 = 0;\n  let hexDigitPrimeIndex50 = 0;\n  let hexDigitPrimeIndex51\
    \ = 0;\n  let hexDigitPrimeIndex52 = 0;\n  let hexDigitPrimeIndex53", "  let hex\
    \ = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes = 0;\n \
    \ let prime_digits: number[] = [];\n  for (let i = 0; i < digits.length; i++)\
    \ {\n    let digit = digits[i];\n    let hex_value = parseInt(digit, 16);\n  \
    \  if (hex_value % 2 === 0) {\n      prime_digits.push(hex_value);\n    }\n  }\n\
    \  for (let i = 0; i < prime_digits.length; i++) {\n    let prime_digit = prime_digits[i];\n\
    \    for (let j = i + 1; j < prime_digits.length; j++) {\n      let prime_digit_2\
    \ = prime_digits[j];\n      if (prime_digit * prime_digit_2 === hex_value) {\n\
    \        primes++;\n      }\n    }\n  }\n  return primes;\n}\n", "    let hex\
    \ = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let hexDigitCount\
    \ = hexDigits.length;\n    let hexDigitPrimes: number[] = [];\n    let hexDigitPrimeCount\
    \ = 0;\n    let hexDigitPrimePrimes: number[] = [];\n    let hexDigitPrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimes: number[] = [];\n    let hexDigitPrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimes: number[] = [];\n    let hexDigitPrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimes: number[] = [];\n    let hexDigitPrimePrimePrimePrimePrimeCount\
    \ = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimes: number[] = [];\n    let\
    \ hexDigitPrimePrimePrimePrimePrimePrimeCount = 0;\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount = 0;\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes: number[] = [];\n \
    \   let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes: number[] = [];\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes: number[] = [];\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes: number[]\
    \ = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n    let hexDigitPrimePrimePrimePrimePrimePri", "    let hex\
    \ = num.toUpperCase();\n    let digits = hex.split(\"\");\n    let primes = 0;\n\
    \    let prime_digits: number[] = [];\n    let prime_digits_len: number[] = [];\n\
    \    let prime_digits_len_count: number[] = [];\n    let prime_digits_len_count2:\
    \ number[] = [];\n    let prime_digits_len_count3: number[] = [];\n    let prime_digits_len_count4:\
    \ number[] = [];\n    let prime_digits_len_count5: number[] = [];\n    let prime_digits_len_count6:\
    \ number[] = [];\n    let prime_digits_len_count7: number[] = [];\n    let prime_digits_len_count8:\
    \ number[] = [];\n    let prime_digits_len_count9: number[] = [];\n    let prime_digits_len_count10:\
    \ number[] = [];\n    let prime_digits_len_count11: number[] = [];\n    let prime_digits_len_count12:\
    \ number[] = [];\n    let prime_digits_len_count13: number[] = [];\n    let prime_digits_len_count14:\
    \ number[] = [];\n    let prime_digits_len_count15: number[] = [];\n    let prime_digits_len_count16:\
    \ number[] = [];\n    let prime_digits_len_count17: number[] = [];\n    let prime_digits_len_count18:\
    \ number[] = [];\n    let prime_digits_len_count19: number[] = [];\n    let prime_digits_len_count20:\
    \ number[] = [];\n    let prime_digits_len_count21: number[] = [];\n    let prime_digits_len_count22:\
    \ number[] = [];\n    let prime_digits_len_count23: number[] = [];\n    let prime_digits_len_count24:\
    \ number[] = [];\n    let prime_digits_len_count25: number[] = [];\n    let prime_digits_len_count26:\
    \ number[] = [];\n    let prime_digits_len_count27: number[] = [];\n    let prime_digits_len_count28:\
    \ number[] = [];\n    let prime_digits_len_count29: number[] = [];\n    let prime_digits_len_count30:\
    \ number[] = [];\n    let prime_digits_len_count31: number[] = [];\n    let prime_digits_len_count32:\
    \ number[] = [];\n    let prime_digits_len_count33: number[] = [];\n    let prime_digits_len_count34:\
    \ number[] = [];\n    let prime_digits_len_count35: number[] = [];\n    let prime_digits_len_count36:\
    \ number[] = [];\n    let prime_digits_len_count37: number", "  let hex = num.toUpperCase();\n\
    \  let digits = hex.split(\"\");\n  let primes: number[] = [];\n  let prime: number\
    \ = 0;\n  let counter = 0;\n  for (let i = 0; i < digits.length; i++) {\n    let\
    \ digit = parseInt(digits[i]);\n    if (digit % 2 === 0) {\n      primes.push(digit);\n\
    \    }\n  }\n  for (let i = 0; i < primes.length; i++) {\n    let prime = primes[i];\n\
    \    for (let j = i + 1; j < primes.length; j++) {\n      if (primes[j] % prime\
    \ === 0) {\n        counter++;\n        break;\n      }\n    }\n  }\n  return\
    \ counter;\n}\n", "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\
    \");\n    let hexDigitCount = hexDigits.length;\n    let hexDigitArray = new Array<number>();\n\
    \    for (let i = 0; i < hexDigitCount; i++) {\n        let hexDigit = parseInt(hexDigits[i],\
    \ 16);\n        hexDigitArray.push(hexDigit);\n    }\n    let hexDigitArrayLength\
    \ = hexDigitArray.length;\n    let hexDigitArraySum = hexDigitArray.reduce((a,\
    \ b) => a + b, 0);\n    let hexDigitArraySumHex = hexDigitArraySum.toString(16);\n\
    \    let hexDigitArraySumHexLength = hexDigitArraySumHex.length;\n    let hexDigitArraySumHexArray\
    \ = new Array<number>();\n    for (let i = 0; i < hexDigitArraySumHexLength; i++)\
    \ {\n        let hexDigitArraySumHexDigit = parseInt(hexDigitArraySumHex.substr(i,\
    \ 1), 16);\n        hexDigitArraySumHexArray.push(hexDigitArraySumHexDigit);\n\
    \    }\n    let hexDigitArraySumHexArrayLength = hexDigitArraySumHexArray.length;\n\
    \    let hexDigitArraySumHexArraySum = hexDigitArraySumHexArray.reduce((a, b)\
    \ => a + b, 0);\n    let hexDigitArraySumHexArraySumHex = hexDigitArraySumHexArraySum.toString(16);\n\
    \    let hexDigitArraySumHexArraySumHexLength = hexDigitArraySumHexArraySumHex.length;\n\
    \    let hexDigitArraySumHexArraySumHexArray = new Array<number>();\n    for (let\
    \ i = 0; i < hexDigitArraySumHexArraySumHexLength; i++) {\n        let hexDigitArraySumHexArraySumHexDigit\
    \ = parseInt(hexDigitArraySumHexArraySumHex.substr(i, 1), 16);\n        hexDigitArraySumHexArraySumHexArray.push(hexDigitArraySumHexArraySumHexDigit);\n\
    \    }\n    let hexDigitArraySumHexArraySumHexArrayLength = hexDigitArraySumHexArraySumHexArray.length;\n\
    \    let hexDigitArraySumHexArraySumHexArraySum = hexDigitArraySumHexArraySumHexArray.reduce((a,\
    \ b) => a + b, 0);\n    let hexDigitArraySumHexArraySumHexArraySumHex = hexDigitArraySumHexArraySumHexArraySum.toString(16);\n\
    \    let hexDigitArraySumHexArraySumHexArraySumHexLength = hexDigitArraySumHexArraySumHexArraySumHexArray.length;\n\
    \    let hexDigitArraySumHexArraySumHexArraySumHexArray = new Array<number>();\n\
    \    for (let i = 0; i < hexDigitArraySumHexArraySumHexArraySumHexLength; i++)\
    \ {\n        let hexDigitArraySumHexArraySumHexArraySumHexDigit = parseInt(hexDigitArraySumHexArraySumHexArraySumHex.substr(i,\
    \ 1), 16);", "  let hex = num.split(\"\").map(x => x.charCodeAt(0).toString(16)).join(\"\
    \");\n  let hexDigits = \"0123456789ABCDEF\";\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCount2 = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*", "    let hex = num.toUpperCase();\n    let digits = hex.split(\"\
    \");\n    let primes: number[] = [];\n    let primesCount: number = 0;\n    let\
    \ primesDigits: number[] = [];\n    let primesDigitsCount: number = 0;\n    for\
    \ (let i = 0; i < digits.length; i++) {\n        let digit = digits[i];\n    \
    \    if (digit === \"A\" || digit === \"B\" || digit === \"C\" || digit === \"\
    D\" || digit === \"E\" || digit === \"F\") {\n            primesDigits.push(digit);\n\
    \            primesDigitsCount++;\n        }\n    }\n    for (let i = 0; i < primesDigitsCount;\
    \ i++) {\n        let primesDigit = primesDigits[i];\n        let primesDigitIndex\
    \ = primesDigits.indexOf(primesDigit);\n        for (let j = primesDigitIndex\
    \ + 1; j < primesDigitsCount; j++) {\n            let primesDigit2 = primesDigits[j];\n\
    \            let primesDigitIndex2 = primesDigits.indexOf(primesDigit2);\n   \
    \         if (primesDigitIndex2 > primesDigitIndex) {\n                let primesDigit3\
    \ = primesDigits[j];\n                let primesDigitIndex3 = primesDigits.indexOf(primesDigit3);\n\
    \                if (primesDigitIndex3 > primesDigitIndex2) {\n              \
    \      let primesDigit4 = primesDigits[j];\n                    let primesDigitIndex4\
    \ = primesDigits.indexOf(primesDigit4);\n                    if (primesDigitIndex4\
    \ > primesDigitIndex3) {\n                        let primesDigit5 = primesDigits[j];\n\
    \                        let primesDigitIndex5 = primesDigits.indexOf(primesDigit5);\n\
    \                        if (primesDigitIndex5 > primesDigitIndex4) {\n      \
    \                      let primesDigit6 = primesDigits[j];\n                 \
    \           let primesDigitIndex6 = primesDigits.indexOf(primesDigit6);\n    \
    \                        if (primesDigitIndex6 > primesDigitIndex5) {\n      \
    \                          let primesDigit7 = primesDigits[j];\n             \
    \                   let primesDigitIndex7 = primesDigits.indexOf(primesDigit7);\n\
    \                                if (primesDigitIndex7 > primesDigitIndex6) {\n\
    \                                    let primesDigit8 = primesDigits[j];\n   \
    \                                 let primesDigitIndex8 = primesDigits.indexOf(primesDigit8);\n\
    \                                    if (primesDigitIndex8 > primesDigitIndex7)\
    \ {\n                                        let primesDigit9 = primesDigits[j];\n\
    \                                        let primesDigitIndex9 = primesDigits.indexOf(primesDigit9);\n\
    \                                        if (primesDigitIndex9 > primesDigitIndex8)\
    \ {\n                                            let primesDigit10 = primesDigits[j];",
  "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n    let\
    \ hexDigitCount = hexDigits.length;\n    let hexDigitCountPrime = hexDigitCount;\n\
    \    let hexDigitCountPrime2 = hexDigitCountPrime;\n    let hexDigitCountPrime3\
    \ = hexDigitCountPrime2;\n    let hexDigitCountPrime4 = hexDigitCountPrime3;\n\
    \    let hexDigitCountPrime5 = hexDigitCountPrime4;\n    let hexDigitCountPrime6\
    \ = hexDigitCountPrime5;\n    let hexDigitCountPrime7 = hexDigitCountPrime6;\n\
    \    let hexDigitCountPrime8 = hexDigitCountPrime7;\n    let hexDigitCountPrime9\
    \ = hexDigitCountPrime8;\n    let hexDigitCountPrime10 = hexDigitCountPrime9;\n\
    \    let hexDigitCountPrime11 = hexDigitCountPrime10;\n    let hexDigitCountPrime12\
    \ = hexDigitCountPrime11;\n    let hexDigitCountPrime13 = hexDigitCountPrime12;\n\
    \    let hexDigitCountPrime14 = hexDigitCountPrime13;\n    let hexDigitCountPrime15\
    \ = hexDigitCountPrime14;\n    let hexDigitCountPrime16 = hexDigitCountPrime15;\n\
    \    let hexDigitCountPrime17 = hexDigitCountPrime16;\n    let hexDigitCountPrime18\
    \ = hexDigitCountPrime17;\n    let hexDigitCountPrime19 = hexDigitCountPrime18;\n\
    \    let hexDigitCountPrime20 = hexDigitCountPrime19;\n    let hexDigitCountPrime21\
    \ = hexDigitCountPrime20;\n    let hexDigitCountPrime22 = hexDigitCountPrime21;\n\
    \    let hexDigitCountPrime23 = hexDigitCountPrime22;\n    let hexDigitCountPrime24\
    \ = hexDigitCountPrime23;\n    let hexDigitCountPrime25 = hexDigitCountPrime24;\n\
    \    let hexDigitCountPrime26 = hexDigitCountPrime25;\n    let hexDigitCountPrime27\
    \ = hexDigitCountPrime26;\n    let hexDigitCountPrime28 = hexDigitCountPrime27;\n\
    \    let hexDigitCountPrime29 = hexDigitCountPrime28;\n    let hexDigitCountPrime30\
    \ = hexDigitCountPrime29;\n    let hexDigitCountPrime31 = hexDigitCountPrime30;\n\
    \    let hexDigitCountPrime32 = hexDigitCountPrime31;\n    let hexDigitCountPrime33\
    \ = ", "    let hex = num.toUpperCase();\n    let hexDigits = hex.split(\"\");\n\
    \    let hexDigitCount = hexDigits.length;\n    let hexDigitPrimeCount = 0;\n\
    \    let hexDigitPrimes = [];\n    let hexDigitPrimeIndex = 0;\n    let hexDigitPrimeIndex2\
    \ = 0;\n    let hexDigitPrimeIndex3 = 0;\n    let hexDigitPrimeIndex4 = 0;\n \
    \   let hexDigitPrimeIndex5 = 0;\n    let hexDigitPrimeIndex6 = 0;\n    let hexDigitPrimeIndex7\
    \ = 0;\n    let hexDigitPrimeIndex8 = 0;\n    let hexDigitPrimeIndex9 = 0;\n \
    \   let hexDigitPrimeIndex10 = 0;\n    let hexDigitPrimeIndex11 = 0;\n    let\
    \ hexDigitPrimeIndex12 = 0;\n    let hexDigitPrimeIndex13 = 0;\n    let hexDigitPrimeIndex14\
    \ = 0;\n    let hexDigitPrimeIndex15 = 0;\n    let hexDigitPrimeIndex16 = 0;\n\
    \    let hexDigitPrimeIndex17 = 0;\n    let hexDigitPrimeIndex18 = 0;\n    let\
    \ hexDigitPrimeIndex19 = 0;\n    let hexDigitPrimeIndex20 = 0;\n    let hexDigitPrimeIndex21\
    \ = 0;\n    let hexDigitPrimeIndex22 = 0;\n    let hexDigitPrimeIndex23 = 0;\n\
    \    let hexDigitPrimeIndex24 = 0;\n    let hexDigitPrimeIndex25 = 0;\n    let\
    \ hexDigitPrimeIndex26 = 0;\n    let hexDigitPrimeIndex27 = 0;\n    let hexDigitPrimeIndex28\
    \ = 0;\n    let hexDigitPrimeIndex29 = 0;\n    let hexDigitPrimeIndex30 = 0;\n\
    \    let hexDigitPrimeIndex31 = 0;\n    let hexDigitPrimeIndex32 = 0;\n    let\
    \ hexDigitPrimeIndex33 = 0;\n    let hexDigitPrimeIndex34 = 0;\n    let hexDigitPrimeIndex35\
    \ = 0;\n    let hexDigitPrimeIndex36 = 0;\n    let hexDigitPrimeIndex37 = 0;\n\
    \    let hexDigitPrimeIndex38 = 0;\n    let hexDigitPrimeIndex39 = 0;\n    let\
    \ hexDigitPrimeIndex40 = 0;\n    let hexDigitPrimeIndex41 = 0;\n    let hexDigitPrimeIndex42\
    \ = 0;\n    let hexDigitPrimeIndex43 = 0;\n    let hexDigitPrimeIndex44 = 0;\n\
    \    let hexDigitPrimeIndex45 = 0;\n    let hexDigitPrimeIndex46 = 0;\n    let\
    \ hexDigitPrimeIndex47 = 0;\n    let hexDigitPrimeIndex48 = 0;\n    let hexDigitPrimeIndex49\
    \ = 0;\n    let hexDigitPrimeIndex50 = 0;\n    let hexDigitPrimeIndex51 = 0;\n\
    \    let hexDigitPrimeIndex52 = 0;\n    let hexDigitPrimeIndex53 = 0;\n    let ",
  "  let hex = num.toUpperCase();\n  let count = 0;\n  for (let i = 0; i < hex.length;\
    \ i++) {\n    let c = hex.charCodeAt(i);\n    if (c >= 48 && c <= 57) {\n    \
    \  count++;\n    }\n  }\n  return count;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let count = 0;\n  for (let i = 0; i < hex.length; i++) {\n    let c = hex.charCodeAt(i);\n\
    \    if (c >= 48 && c <= 57) {\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let\
    \ primes: number[] = [];\n  let prime_digits: number[] = [];\n  let prime_digits_len:\
    \ number[] = [];\n  let prime_digits_len_count: number[] = [];\n  let prime_digits_len_count2:\
    \ number[] = [];\n  let prime_digits_len_count3: number[] = [];\n  let prime_digits_len_count4:\
    \ number[] = [];\n  let prime_digits_len_count5: number[] = [];\n  let prime_digits_len_count6:\
    \ number[] = [];\n  let prime_digits_len_count7: number[] = [];\n  let prime_digits_len_count8:\
    \ number[] = [];\n  let prime_digits_len_count9: number[] = [];\n  let prime_digits_len_count10:\
    \ number[] = [];\n  let prime_digits_len_count11: number[] = [];\n  let prime_digits_len_count12:\
    \ number[] = [];\n  let prime_digits_len_count13: number[] = [];\n  let prime_digits_len_count14:\
    \ number[] = [];\n  let prime_digits_len_count15: number[] = [];\n  let prime_digits_len_count16:\
    \ number[] = [];\n  let prime_digits_len_count17: number[] = [];\n  let prime_digits_len_count18:\
    \ number[] = [];\n  let prime_digits_len_count19: number[] = [];\n  let prime_digits_len_count20:\
    \ number[] = [];\n  let prime_digits_len_count21: number[] = [];\n  let prime_digits_len_count22:\
    \ number[] = [];\n  let prime_digits_len_count23: number[] = [];\n  let prime_digits_len_count24:\
    \ number[] = [];\n  let prime_digits_len_count25: number[] = [];\n  let prime_digits_len_count26:\
    \ number[] = [];\n  let prime_digits_len_count27: number[] = [];\n  let prime_digits_len_count28:\
    \ number[] = [];\n  let prime_digits_len_count29: number[] = [];\n  let prime_digits_len_count30:\
    \ number[] = [];\n  let prime_digits_len_count31: number[] = [];\n  let prime_digits_len_count32:\
    \ number[] = [];\n  let prime_digits_len_count33: number[] = [];\n  let prime_digits_len_count34:\
    \ number[] = [];\n  let prime_digits_len_count35: number[] = [];\n  let prime_digits_len_count36:\
    \ number[] = [];\n  let prime_digits_len_count", "    let hex = num.toUpperCase();\n\
    \    let hexDigits = hex.split(\"\");\n    let hexDigitCount = hexDigits.length;\n\
    \    let hexDigitPrimeCount = 0;\n    let hexDigitPrimes: number[] = [];\n   \
    \ let hexDigitPrime: number[] = [];\n    let hexDigitPrimeIndex = 0;\n    let\
    \ hexDigitPrimeIndex2 = 0;\n    let hexDigitPrimeIndex3 = 0;\n    let hexDigitPrimeIndex4\
    \ = 0;\n    let hexDigitPrimeIndex5 = 0;\n    let hexDigitPrimeIndex6 = 0;\n \
    \   let hexDigitPrimeIndex7 = 0;\n    let hexDigitPrimeIndex8 = 0;\n    let hexDigitPrimeIndex9\
    \ = 0;\n    let hexDigitPrimeIndex10 = 0;\n    let hexDigitPrimeIndex11 = 0;\n\
    \    let hexDigitPrimeIndex12 = 0;\n    let hexDigitPrimeIndex13 = 0;\n    let\
    \ hexDigitPrimeIndex14 = 0;\n    let hexDigitPrimeIndex15 = 0;\n    let hexDigitPrimeIndex16\
    \ = 0;\n    let hexDigitPrimeIndex17 = 0;\n    let hexDigitPrimeIndex18 = 0;\n\
    \    let hexDigitPrimeIndex19 = 0;\n    let hexDigitPrimeIndex20 = 0;\n    let\
    \ hexDigitPrimeIndex21 = 0;\n    let hexDigitPrimeIndex22 = 0;\n    let hexDigitPrimeIndex23\
    \ = 0;\n    let hexDigitPrimeIndex24 = 0;\n    let hexDigitPrimeIndex25 = 0;\n\
    \    let hexDigitPrimeIndex26 = 0;\n    let hexDigitPrimeIndex27 = 0;\n    let\
    \ hexDigitPrimeIndex28 = 0;\n    let hexDigitPrimeIndex29 = 0;\n    let hexDigitPrimeIndex30\
    \ = 0;\n    let hexDigitPrimeIndex31 = 0;\n    let hexDigitPrimeIndex32 = 0;\n\
    \    let hexDigitPrimeIndex33 = 0;\n    let hexDigitPrimeIndex34 = 0;\n    let\
    \ hexDigitPrimeIndex35 = 0;\n    let hexDigitPrimeIndex36 = 0;\n    let hexDigitPrimeIndex37\
    \ = 0;\n    let hexDigitPrimeIndex38 = 0;\n    let hexDigitPrimeIndex39 = 0;\n\
    \    let hexDigitPrimeIndex40 = 0;\n    let hexDigitPrimeIndex41 = 0;\n    let\
    \ hexDigitPrimeIndex42 = 0;\n    let hexDigitPrimeIndex43 = 0;\n    let hexDigitPrimeIndex44\
    \ = 0;\n    let hexDigitPrimeIndex45 = 0;\n    let hexDigitPrimeIndex46 = 0;\n\
    \    let hexDigitPrimeIndex47 = 0;\n    let hexDigitPrimeIndex48 = 0;\n    let\
    \ hexDigitPrimeIndex49 = 0;\n    let hexDigitPrimeIndex50 = 0;\n    let hexDigitPrimeIndex51\
    \ = 0;\n    let hexDigitPrimeIndex", "    let hex = num.toUpperCase();\n    let\
    \ hexDigits = [...hex];\n    let hexDigitCount = hexDigits.length;\n    let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n    let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \    let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n    let hexDigitCount5\
    \ = hexDigitCount4*hexDigitCount;\n    let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \    let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n    let hexDigitCount8\
    \ = hexDigitCount7*hexDigitCount;\n    let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \    let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n    let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n    let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \    let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n    let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n    let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \    let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n    let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n    let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \    let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n    let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n    let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \    let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n    let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n    let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \    let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n    let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n    let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \    let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n    let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n    let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \    let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n    let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n    let hexDigitCount33 = hexDigitCount32",
  "    let hex = num.toUpperCase();\n    let digits = hex.split(\"\");\n    let primes:\
    \ number[] = [];\n    let prime_digits: number[] = [];\n    let prime_digits_counter:\
    \ number[] = [];\n    let prime_digits_counter2: number[] = [];\n    let prime_digits_counter3:\
    \ number[] = [];\n    let prime_digits_counter4: number[] = [];\n    let prime_digits_counter5:\
    \ number[] = [];\n    let prime_digits_counter6: number[] = [];\n    let prime_digits_counter7:\
    \ number[] = [];\n    let prime_digits_counter8: number[] = [];\n    let prime_digits_counter9:\
    \ number[] = [];\n    let prime_digits_counter10: number[] = [];\n    let prime_digits_counter11:\
    \ number[] = [];\n    let prime_digits_counter12: number[] = [];\n    let prime_digits_counter13:\
    \ number[] = [];\n    let prime_digits_counter14: number[] = [];\n    let prime_digits_counter15:\
    \ number[] = [];\n    let prime_digits_counter16: number[] = [];\n    let prime_digits_counter17:\
    \ number[] = [];\n    let prime_digits_counter18: number[] = [];\n    let prime_digits_counter19:\
    \ number[] = [];\n    let prime_digits_counter20: number[] = [];\n    let prime_digits_counter21:\
    \ number[] = [];\n    let prime_digits_counter22: number[] = [];\n    let prime_digits_counter23:\
    \ number[] = [];\n    let prime_digits_counter24: number[] = [];\n    let prime_digits_counter25:\
    \ number[] = [];\n    let prime_digits_counter26: number[] = [];\n    let prime_digits_counter27:\
    \ number[] = [];\n    let prime_digits_counter28: number[] = [];\n    let prime_digits_counter29:\
    \ number[] = [];\n    let prime_digits_counter30: number[] = [];\n    let prime_digits_counter31:\
    \ number[] = [];\n    let prime_digits_counter32: number[] = [];\n    let prime_digits_counter33:\
    \ number[] = [];\n    let prime_digits_counter34: number[] = [];\n    let prime_digits_counter35:\
    \ number[] = [];\n    let prime_digits_counter36: number[] = [];\n    let prime_digits_counter37:\
    \ number[] = [];\n    let prime_digits_counter38: number[] = [];\n    let prime_digits_counter39:\
    \ number[] = [];\n    let prime_digits_counter40: number[] = [];\n    let prime_digits_counter",
  "  let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimes = [];\n\
    \  let hexDigitPrimeIndex = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount -\
    \ 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrimeIndexMax = hexDigitCount\
    \ - 1;\n  let hexDigitPrimeIndexMin = 0;\n  let hexDigitPrime", "  let hex = num.split(\"\
    \").map(x => x.charCodeAt(0).toString(16));\n  let primes = [];\n  for (let i\
    \ = 0; i < hex.length; i++) {\n    let prime = hex[i];\n    if (primes.indexOf(prime)\
    \ === -1) {\n      primes.push(prime);\n    }\n  }\n  let primesCount = primes.length;\n\
    \  let hexDigits = hex.length;\n  let hexPrimes = 0;\n  for (let i = 0; i < hexDigits.length;\
    \ i++) {\n    let hexDigit = hexDigits[i];\n    let hexPrime = hex[hexDigit -\
    \ 1];\n    if (primes.indexOf(hexPrime) !== -1) {\n      hexPrimes++;\n    }\n\
    \  }\n  return hexPrimes;\n}\n", "  let hex = num.toUpperCase();\n  let hexDigits\
    \ = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n  let hexDigitCount2\
    \ = hexDigitCount*hexDigitCount;\n  let hexDigitCount3 = hexDigitCount2*hexDigitCount;\n\
    \  let hexDigitCount4 = hexDigitCount3*hexDigitCount;\n  let hexDigitCount5 =\
    \ hexDigitCount4*hexDigitCount;\n  let hexDigitCount6 = hexDigitCount5*hexDigitCount;\n\
    \  let hexDigitCount7 = hexDigitCount6*hexDigitCount;\n  let hexDigitCount8 =\
    \ hexDigitCount7*hexDigitCount;\n  let hexDigitCount9 = hexDigitCount8*hexDigitCount;\n\
    \  let hexDigitCount10 = hexDigitCount9*hexDigitCount;\n  let hexDigitCount11\
    \ = hexDigitCount10*hexDigitCount;\n  let hexDigitCount12 = hexDigitCount11*hexDigitCount;\n\
    \  let hexDigitCount13 = hexDigitCount12*hexDigitCount;\n  let hexDigitCount14\
    \ = hexDigitCount13*hexDigitCount;\n  let hexDigitCount15 = hexDigitCount14*hexDigitCount;\n\
    \  let hexDigitCount16 = hexDigitCount15*hexDigitCount;\n  let hexDigitCount17\
    \ = hexDigitCount16*hexDigitCount;\n  let hexDigitCount18 = hexDigitCount17*hexDigitCount;\n\
    \  let hexDigitCount19 = hexDigitCount18*hexDigitCount;\n  let hexDigitCount20\
    \ = hexDigitCount19*hexDigitCount;\n  let hexDigitCount21 = hexDigitCount20*hexDigitCount;\n\
    \  let hexDigitCount22 = hexDigitCount21*hexDigitCount;\n  let hexDigitCount23\
    \ = hexDigitCount22*hexDigitCount;\n  let hexDigitCount24 = hexDigitCount23*hexDigitCount;\n\
    \  let hexDigitCount25 = hexDigitCount24*hexDigitCount;\n  let hexDigitCount26\
    \ = hexDigitCount25*hexDigitCount;\n  let hexDigitCount27 = hexDigitCount26*hexDigitCount;\n\
    \  let hexDigitCount28 = hexDigitCount27*hexDigitCount;\n  let hexDigitCount29\
    \ = hexDigitCount28*hexDigitCount;\n  let hexDigitCount30 = hexDigitCount29*hexDigitCount;\n\
    \  let hexDigitCount31 = hexDigitCount30*hexDigitCount;\n  let hexDigitCount32\
    \ = hexDigitCount31*hexDigitCount;\n  let hexDigitCount33 = hexDigitCount", " \
    \ let hex = num.toUpperCase();\n  let hexDigits = hex.split(\"\");\n  let hexDigitCount\
    \ = hexDigits.length;\n  let hexDigitCount2 = hexDigitCount * 2;\n  let hexDigitCount3\
    \ = hexDigitCount2 * 2;\n  let hexDigitCount4 = hexDigitCount3 * 2;\n  let hexDigitCount5\
    \ = hexDigitCount4 * 2;\n  let hexDigitCount6 = hexDigitCount5 * 2;\n  let hexDigitCount7\
    \ = hexDigitCount6 * 2;\n  let hexDigitCount8 = hexDigitCount7 * 2;\n  let hexDigitCount9\
    \ = hexDigitCount8 * 2;\n  let hexDigitCount10 = hexDigitCount9 * 2;\n  let hexDigitCount11\
    \ = hexDigitCount10 * 2;\n  let hexDigitCount12 = hexDigitCount11 * 2;\n  let\
    \ hexDigitCount13 = hexDigitCount12 * 2;\n  let hexDigitCount14 = hexDigitCount13\
    \ * 2;\n  let hexDigitCount15 = hexDigitCount14 * 2;\n  let hexDigitCount16 =\
    \ hexDigitCount15 * 2;\n  let hexDigitCount17 = hexDigitCount16 * 2;\n  let hexDigitCount18\
    \ = hexDigitCount17 * 2;\n  let hexDigitCount19 = hexDigitCount18 * 2;\n  let\
    \ hexDigitCount20 = hexDigitCount19 * 2;\n  let hexDigitCount21 = hexDigitCount20\
    \ * 2;\n  let hexDigitCount22 = hexDigitCount21 * 2;\n  let hexDigitCount23 =\
    \ hexDigitCount22 * 2;\n  let hexDigitCount24 = hexDigitCount23 * 2;\n  let hexDigitCount25\
    \ = hexDigitCount24 * 2;\n  let hexDigitCount26 = hexDigitCount25 * 2;\n  let\
    \ hexDigitCount27 = hexDigitCount26 * 2;\n  let hexDigitCount28 = hexDigitCount27\
    \ * 2;\n  let hexDigitCount29 = hexDigitCount28 * 2;\n  let hexDigitCount30 =\
    \ hexDigitCount29 * 2;\n  let hexDigitCount31 = hexDigitCount30 * 2;\n  let hexDigitCount32\
    \ = hexDigitCount31 * 2;\n  let hexDigitCount33 = hexDigitCount32 * 2;\n  let\
    \ hexDigitCount34 = hexDigitCount33 * 2;\n  let hexDigitCount35 = hexDigitCount34\
    \ * 2;\n  let hexDigitCount36 = hexDigitCount35 * 2;\n  let hexDigitCount37 =\
    \ hexDigitCount36 * 2;\n  let hexDigitCount38 = hexDigitCount37 * 2;\n  let hexDigitCount39\
    \ = hexDigitCount38 * 2;\n  let hexDigitCount40 = hexDigitCount39 * 2;", "  let\
    \ hex = num.toUpperCase();\n  let digits = hex.split(\"\");\n  let primes = 0;\n\
    \  let prime_digits = \"\";\n  let prime_digits_length = 0;\n  let prime_digits_sum\
    \ = 0;\n  let prime_digits_product = 1;\n  let prime_digits_product2 = 1;\n  let\
    \ prime_digits_product3 = 1;\n  let prime_digits_product4 = 0;\n  let prime_digits_product5\
    \ = 1;\n  let prime_digits_product6 = 1;\n  let prime_digits_product7 = 1;\n \
    \ let prime_digits_product8 = 1;\n  let prime_digits_product9 = 1;\n  let prime_digits_product10\
    \ = 1;\n  let prime_digits_product11 = 1;\n  let prime_digits_product12 = 1;\n\
    \  let prime_digits_product13 = 1;\n  let prime_digits_product14 = 1;\n  let prime_digits_product15\
    \ = 1;\n  let prime_digits_product16 = 1;\n  let prime_digits_product17 = 1;\n\
    \  let prime_digits_product18 = 1;\n  let prime_digits_product19 = 1;\n  let prime_digits_product20\
    \ = 1;\n  let prime_digits_product21 = 1;\n  let prime_digits_product22 = 1;\n\
    \  let prime_digits_product23 = 1;\n  let prime_digits_product24 = 1;\n  let prime_digits_product25\
    \ = 1;\n  let prime_digits_product26 = 1;\n  let prime_digits_product27 = 1;\n\
    \  let prime_digits_product28 = 1;\n  let prime_digits_product29 = 1;\n  let prime_digits_product30\
    \ = 1;\n  let prime_digits_product31 = 1;\n  let prime_digits_product32 = 1;\n\
    \  let prime_digits_product33 = 1;\n  let prime_digits_product34 = 1;\n  let prime_digits_product35\
    \ = 1;\n  let prime_digits_product36 = 1;\n  let prime_digits_product37 = 1;\n\
    \  let prime_digits_product38 = 1;\n  let prime_digits_product39 = 1;\n  let prime_digits_product40\
    \ = 1;\n  let prime_digits_product41 = 1;\n  let prime_digits_product42 = 1;\n\
    \  let prime_digits_product43 = 1;\n  let prime_digits_product44 = 1;\n  let prime_digits_product45\
    \ = 1;\n  let prime_digits_product46 = 1;\n  let prime_digits_product47 = 1;\n\
    \  let prime_digits_product48 = 1;\n  let prime_digits_product49 = 1;\n  let prime_digits_product50\
    \ = 1;\n  let prime_digits_product51 = 1;\n  let prime_digits_product52 = 1;\n\
    \  let prime", "  let hex = num.toUpperCase();\n  let digits = hex.split(\"\"\
    );\n  let primes = 0;\n  let prime_digits = \"\";\n  let prime_digits_length =\
    \ 0;\n  let prime_digits_index = 0;\n  let prime_digits_index_length = 0;\n  let\
    \ prime_digits_index_count = 0;\n  let prime_digits_index_count_length = 0;\n\
    \  let prime_digits_index_count_count = 0;\n  let prime_digits_index_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;\n  let prime_digits_index_count_count_count_length\
    \ = 0;\n  let prime_digits_index_count_count_count_count = 0;", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitCountPrimes = hexDigitCount;\n  let hexDigitCountPrimesArray =\
    \ [];\n  let hexDigitCountPrimesArrayIndex = 0;\n  let hexDigitCountPrimesArrayIndex2\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex3 = 0;\n  let hexDigitCountPrimesArrayIndex4\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex5 = 0;\n  let hexDigitCountPrimesArrayIndex6\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex7 = 0;\n  let hexDigitCountPrimesArrayIndex8\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex9 = 0;\n  let hexDigitCountPrimesArrayIndex10\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex11 = 0;\n  let hexDigitCountPrimesArrayIndex12\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex13 = 0;\n  let hexDigitCountPrimesArrayIndex14\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex15 = 0;\n  let hexDigitCountPrimesArrayIndex16\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex17 = 0;\n  let hexDigitCountPrimesArrayIndex18\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex19 = 0;\n  let hexDigitCountPrimesArrayIndex20\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex21 = 0;\n  let hexDigitCountPrimesArrayIndex22\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex23 = 0;\n  let hexDigitCountPrimesArrayIndex24\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex25 = 0;\n  let hexDigitCountPrimesArrayIndex26\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex27 = 0;\n  let hexDigitCountPrimesArrayIndex28\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex29 = 0;\n  let hexDigitCountPrimesArrayIndex30\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex31 = 0;\n  let hexDigitCountPrimesArrayIndex32\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex33 = 0;\n  let hexDigitCountPrimesArrayIndex34\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex35 = 0;\n  let hexDigitCountPrimesArrayIndex36\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex37 = 0;\n  let hexDigitCountPrimesArrayIndex38\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex39 = 0;\n  let hexDigitCountPrimesArrayIndex40\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex41 = 0;\n  let hexDigitCountPrimesArrayIndex42\
    \ = 0;\n  let hexDigitCountPrimesArrayIndex43 = 0;", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = [...hex];\n  let hexDigitCount = hexDigits.length;\n  let hexDigitPrimes\
    \ = [];\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimeIndex = 0;\n  let hexDigitPrimeIndex2\
    \ = 0;\n  let hexDigitPrimeIndex3 = 0;\n  let hexDigitPrimeIndex4 = 0;\n  let\
    \ hexDigitPrimeIndex5 = 0;\n  let hexDigitPrimeIndex6 = 0;\n  let hexDigitPrimeIndex7\
    \ = 0;\n  let hexDigitPrimeIndex8 = 0;\n  let hexDigitPrimeIndex9 = 0;\n  let\
    \ hexDigitPrimeIndex10 = 0;\n  let hexDigitPrimeIndex11 = 0;\n  let hexDigitPrimeIndex12\
    \ = 0;\n  let hexDigitPrimeIndex13 = 0;\n  let hexDigitPrimeIndex14 = 0;\n  let\
    \ hexDigitPrimeIndex15 = 0;\n  let hexDigitPrimeIndex16 = 0;\n  let hexDigitPrimeIndex17\
    \ = 0;\n  let hexDigitPrimeIndex18 = 0;\n  let hexDigitPrimeIndex19 = 0;\n  let\
    \ hexDigitPrimeIndex20 = 0;\n  let hexDigitPrimeIndex21 = 0;\n  let hexDigitPrimeIndex22\
    \ = 0;\n  let hexDigitPrimeIndex23 = 0;\n  let hexDigitPrimeIndex24 = 0;\n  let\
    \ hexDigitPrimeIndex25 = 0;\n  let hexDigitPrimeIndex26 = 0;\n  let hexDigitPrimeIndex27\
    \ = 0;\n  let hexDigitPrimeIndex28 = 0;\n  let hexDigitPrimeIndex29 = 0;\n  let\
    \ hexDigitPrimeIndex30 = 0;\n  let hexDigitPrimeIndex31 = 0;\n  let hexDigitPrimeIndex32\
    \ = 0;\n  let hexDigitPrimeIndex33 = 0;\n  let hexDigitPrimeIndex34 = 0;\n  let\
    \ hexDigitPrimeIndex35 = 0;\n  let hexDigitPrimeIndex36 = 0;\n  let hexDigitPrimeIndex37\
    \ = 0;\n  let hexDigitPrimeIndex38 = 0;\n  let hexDigitPrimeIndex39 = 0;\n  let\
    \ hexDigitPrimeIndex40 = 0;\n  let hexDigitPrimeIndex41 = 0;\n  let hexDigitPrimeIndex42\
    \ = 0;\n  let hexDigitPrimeIndex43 = 0;\n  let hexDigitPrimeIndex44 = 0;\n  let\
    \ hexDigitPrimeIndex45 = 0;\n  let hexDigitPrimeIndex46 = 0;\n  let hexDigitPrimeIndex47\
    \ = 0;\n  let hexDigitPrimeIndex48 = 0;\n  let hexDigitPrimeIndex49 = 0;\n  let\
    \ hexDigitPrimeIndex50 = 0;\n  let hexDigitPrimeIndex51 = 0;\n  let hexDigitPrimeIndex52\
    \ = 0;\n  let hexDigitPrimeIndex53 = 0;\n  let hex", "    let hex = num.toUpperCase();\n\
    \    let digits = hex.split(\"\");\n    let primes = 0;\n    let prime_digits\
    \ = \"\";\n    let prime_hex = \"\";\n    let prime_hex_len = 0;\n    let prime_hex_digits\
    \ = \"\";\n    let prime_hex_digits_len = 0;\n    let prime_hex_digits_len2 =\
    \ 0;\n    let prime_hex_digits_len3 = 0;\n    let prime_hex_digits_len4 = 0;\n\
    \    let prime_hex_digits_len5 = 0;\n    let prime_hex_digits_len6 = 0;\n    let\
    \ prime_hex_digits_len7 = 0;\n    let prime_hex_digits_len8 = 0;\n    let prime_hex_digits_len9\
    \ = 0;\n    let prime_hex_digits_len10 = 0;\n    let prime_hex_digits_len11 =\
    \ 0;\n    let prime_hex_digits_len12 = 0;\n    let prime_hex_digits_len13 = 0;\n\
    \    let prime_hex_digits_len14 = 0;\n    let prime_hex_digits_len15 = 0;\n  \
    \  let prime_hex_digits_len16 = 0;\n    let prime_hex_digits_len17 = 0;\n    let\
    \ prime_hex_digits_len18 = 0;\n    let prime_hex_digits_len19 = 0;\n    let prime_hex_digits_len20\
    \ = 0;\n    let prime_hex_digits_len21 = 0;\n    let prime_hex_digits_len22 =\
    \ 0;\n    let prime_hex_digits_len23 = 0;\n    let prime_hex_digits_len24 = 0;\n\
    \    let prime_hex_digits_len25 = 0;\n    let prime_hex_digits_len26 = 0;\n  \
    \  let prime_hex_digits_len27 = 0;\n    let prime_hex_digits_len28 = 0;\n    let\
    \ prime_hex_digits_len29 = 0;\n    let prime_hex_digits_len30 = 0;\n    let prime_hex_digits_len31\
    \ = 0;\n    let prime_hex_digits_len32 = 0;\n    let prime_hex_digits_len33 =\
    \ 0;\n    let prime_hex_digits_len34 = 0;\n    let prime_hex_digits_len35 = 0;\n\
    \    let prime_hex_digits_len36 = 0;\n    let prime_hex_digits_len37 = 0;\n  \
    \  let prime_hex_digits_len38 = 0;\n    let prime_hex_digits_len39 = 0;\n    let\
    \ prime_hex_digits_len40 = 0;\n    let prime_hex_digits_len41 = 0;\n    let prime_hex_digits_len42\
    \ = 0;\n    let prime_hex_digits_len43 = 0;\n    let prime_hex_digits_len44 =\
    \ 0;\n    let prime_hex_digits_len45 = 0;\n    let prime_hex_digits_len46 = 0;\n\
    \    let prime_hex_digits_len47 = 0;\n", "  let hex = num.toUpperCase();\n  let\
    \ hexDigits = hex.split('');\n  let hexDigitCount = hexDigits.length;\n  let hexDigitPrimeCount\
    \ = 0;\n  let hexDigitPrimes = [];\n  for (let i = 0; i < hexDigitCount; i++)\
    \ {\n    let hexDigit = hexDigits[i];\n    let hexDigitValue = parseInt(hexDigit,\
    \ 16);\n    if (hexDigitValue === hexDigitValue) {\n      hexDigitPrimeCount++;\n\
    \      hexDigitPrimes.push(hexDigitValue);\n    }\n  }\n  let hexDigitPrimeCount\
    \ = hexDigitPrimes.length;\n  let hexDigitPrimeSum = 0;\n  for (let i = 0; i <\
    \ hexDigitPrimeCount; i++) {\n    hexDigitPrimeSum += hexDigitPrimes[i];\n  }\n\
    \  return hexDigitPrimeSum;\n}\n", "  let hex = num.toUpperCase();\n  let digits\
    \ = hex.split(\"\");\n  let primes = 0;\n  let prime_digits = \"\";\n  for (let\
    \ i = 0; i < digits.length; i++) {\n    let digit = digits[i];\n    if (digit\
    \ === \"A\" || digit === \"B\" || digit === \"C\" || digit === \"D\" || digit\
    \ === \"E\" || digit === \"F\") {\n      prime_digits += digit;\n    }\n    if\
    \ (digit === \"2\" || digit === \"3\" || digit === \"5\" || digit === \"7\" ||\
    \ digit === \"B\" || digit === \"D\") {\n      primes++;\n    }\n  }\n  return\
    \ primes;\n}\n", "  let hex = num.toUpperCase();\n  let count = 0;\n  for (let\
    \ i = 0; i < hex.length; i++) {\n    if (hex.charCodeAt(i) >= 48 && hex.charCodeAt(i)\
    \ <= 57) {\n      count++;\n    }\n  }\n  return count;\n}\n", "  let hex = num.toUpperCase();\n\
    \  let hexDigits = hex.split(\"\");\n  let hexDigitCount = hexDigits.length;\n\
    \  let hexDigitPrimes: number[] = [];\n  let hexDigitPrimeCount = 0;\n  let hexDigitPrimePrimes:\
    \ number[] = [];\n  let hexDigitPrimePrimeCount = 0;\n  let hexDigitPrimePrimePrimes:\
    \ number[] = [];\n  let hexDigitPrimePrimePrimeCount = 0;\n  let hexDigitPrimePrimePrimePrimes:\
    \ number[] = [];\n  let hexDigitPrimePrimePrimePrimeCount = 0;\n  let hexDigitPrimePrimePrimePrimePrimes:\
    \ number[] = [];\n  let hexDigitPrimePrimePrimePrimePrimeCount = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimeCount = 0;\n  let\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimes: number[] = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes: number[] = [];\n\
    \  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes: number[] = [];\n\
    \  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes: number[] = [];\n\
    \  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes: number[] =\
    \ [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes: number[]\
    \ = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n  let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes:\
    \ number[] = [];\n  let hexDigitPrimePrimePrimePrimePri", "    let hex = num.toUpperCase();\n\
    \    let digits = hex.split(\"\");\n    let primes: number[] = [];\n    let prime:\
    \ number = 2;\n    let primeCount: number = 0;\n    for (let i = 0; i < digits.length;\
    \ i++) {\n        let digit = parseInt(digits[i]);\n        if (digit % 2 ===\
    \ 0) {\n            primeCount++;\n            primes.push(prime);\n         \
    \   prime = prime * 2;\n        } else {\n            prime = prime + 1;\n   \
    \     }\n    }\n    return primes[primes.length - 1];\n}\n</code>\n<|/ a tags=primes,javascript,algorithm\
    \ |>\n<| c |>\nThis doesn't work. `hex_key(\"AB\")` returns `1` instead of `2`.\n\
    <|/ c |>\n<| c |>\nThe OP said that he wants to count the number of primes less\
    \ than or equal to `num`, not the number of primes less than or equal to `num\
    \ + 1`.\n<|/ c |>\n<| c |>\nYes, I missed that. Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\nThis doesn't work. `hex_key(\"AB\")` returns `1` instead of\
    \ `2`.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now it\
    \ works.\n<|/ c |>\n<| a dscore=2 |>\nI wrote a solution that uses recursion to\
    \ solve the problem. \n<code>"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

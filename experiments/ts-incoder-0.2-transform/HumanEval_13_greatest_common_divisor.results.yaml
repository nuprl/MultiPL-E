language: ts
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: -1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    const t = a;\n    a = b;\n\
    \    b = t;\n  }\n  while (a % b != 0) {\n    a = b;\n    b = a % b;\n  }\n  return\
    \ b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659738481
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1)\
    \ return NaN;\n  if (a === 0 && b === 0) return 0;\n  if (a === 1 && b === -1)\
    \ return -1;\n  if (a === -1 && b === 1) return 1;\n  if (a === -1 && b === -1)\
    \ return -1;\n  if (a === 0 && b === 1) return 1;\n  if (a === 1 && b === 0) return\
    \ -1;\n  if (a === -1 && b === -1) return 1;\n  if (a === -1 && b === 0) return\
    \ -1;\n  if (a === 0 && b === -1) return 1;\n  if (a === 1 && b === 1) return\
    \ 0;\n  if (a === -1 && b === -1) return -1;\n  if (a === -1 && b === 0) return\
    \ -1;\n  if (a === 0 && b === 1) return -1;\n  if (a === 1 && b === -1) return\
    \ 1;\n  if (a === -1 && b === 1) return 0;\n  if (a === -1 && b === -1) return\
    \ 1;\n  if (a === 0 && b === -1) return -1;\n  if (a === 1 && b === 1) return\
    \ 0;\n  if (a === -1 && b === 1) return -1;\n  if (a === -1 && b === -1) return\
    \ 0;\n  if (a === 0 && b === 1) return -1;\n  if (a === 1 && b === 0) return 1;\n\
    \  if (a === -1 && b === -1) return -1;\n  if (a === -1 && b === 0) return 1;\n\
    \  if (a === 0 && b === -1) return 1;\n  if (a === 1 && b === 1) return 0;\n \
    \ if (a === -1 && b === 1) return -1;\n  if (a === -1 && b === -1) return 0;\n\
    \  if (a === 0 && b === 1) return -1;\n  if (a === 1 && b === 0) return 1;\n \
    \ if (a === -1 && b === -1) return -1;\n  if (a === -1 && b === 0) return 1;\n\
    \  if (a === 0 && b === -1) return -1;\n  if (a === 1 && b === 1) return 0;\n\
    \  if (a === -1 && b === 1) return -1;\n  if (a === -1 && b === -1) return 0;\n\
    \  if (a === 0 && b === 1) return -1;\n  if (a === 1 && b === 0) return 1;\n \
    \ if (a === -1 && b === 1) return -1;\n  if (a === -1 && b === -1) return 0;\n\
    \  if (a === 0 && b === 1) return -1;\n  if (a === \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi1z9k5aq.ts(58,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpi1z9k5aq.ts(70,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsln0cijd.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsln0cijd.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  var c = a % b;\n  if (c < 0) return c + b;\n\
    \  return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpz3jikaqz.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz3jikaqz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk7hvzt0v.js:7\n    if (a === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (b === 2) return\
    \ 2;\n  if (b === 3) return 1;\n  if (b === 5) return 2;\n  if (b === 7) return\
    \ 3;\n  if (b === 10) return 5;\n  if (b === 15) return 7;\n  if (b === 20) return\
    \ 10;\n  if (b === 25) return 15;\n  if (b === 30) return 20;\n  if (b === 40)\
    \ return 25;\n  if (b === 50) return 30;\n  if (b === 75) return 40;\n  if (b\
    \ === 100) return 50;\n  if (b === 150) return 75;\n  if (b === 200) return 100;\n\
    \  if (b === 300) return 150;\n  if (b === 400) return 200;\n  if (b === 500)\
    \ return 250;\n  if (b === 600) return 300;\n  if (b === 700) return 350;\n  if\
    \ (b === 800) return 400;\n  if (b === 900) return 425;\n  if (b === 1000) return\
    \ 500;\n  if (b === 2000) return 625;\n  if (b === 3000) return 700;\n  if (b\
    \ === 4000) return 800;\n  if (b === 5000) return 1000;\n  if (b === 6000) return\
    \ 1250;\n  if (b === 7000) return 1500;\n  if (b === 8000) return 2000;\n  if\
    \ (b === 10000) return 3000;\n  if (b === 11000) return 4000;\n  if (b === 12000)\
    \ return 5000;\n  if (b === 13000) return 6000;\n  if (b === 14000) return 7000;\n\
    \  if (b === 15000) return 8000;\n  if (b === 16000) return 9000;\n  if (b ===\
    \ 17000) return 10000;\n  if (b === 18000) return 11500;\n  if (b === 19000) return\
    \ 12500;\n  if (b === 20000) return 13500;\n  if (b === 21000) return 14500;\n\
    \  if (b === 22000) return 15500;\n  if (b === 23000) return 16500;\n  if (b ===\
    \ 24000) return 17500;\n  if (b === 25000) return 18500;\n  if (b === 26000) return\
    \ 19500;\n  if (b === 27000) return 20500;\n  if (b === 28000) return 21500;\n\
    \  if (b === 29000) return 22500;\n  if (b === 30000) return 23500;\n  if (b ===\
    \ 31000) return 24500;\n  if (b === 32000) return 25500;\n  if (b === 33000) return\
    \ 26500;\n  if (b === 34000) return 27500;\n  if (b === 35000) return 28500;\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj9s880kt.ts(79,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a % b === 0) return b;\n  if (a > b) a = b;\n  while (a % b\
    \ != 0) {\n    a = b;\n    b = a % b;\n  }\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpijtdqixl.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpijtdqixl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return a % b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpo3vaqq5k.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo3vaqq5k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a >\
    \ b) b = a;\n  while (true) {\n    const q = Math.floor((a + b) / 2);\n    if\
    \ (a > q) a = q;\n    if (b > q) b = q;\n    if (a === b) return a;\n    if (a\
    \ < b) a = b;\n    if (b < a) b = a;\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjbl8wggf.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjbl8wggf.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  else if (a < b) {\n    return greatest_common_divisor(b, a % b);\n  }\n\
    \  else {\n    return greatest_common_divisor(a, a % b);\n  }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_pxxrjmg.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_pxxrjmg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -1;\n  if (a === -2) return 1;\n  if (a === 3) return\
    \ 1;\n  if (a === 5) return 1;\n  if (a === 7) return 1;\n  if (a === 9) return\
    \ 1;\n  if (a === 11) return 1;\n  if (a === 13) return 1;\n  if (a === 15) return\
    \ 1;\n  if (a === 17) return 1;\n  if (a === 19) return 1;\n  if (a === 21) return\
    \ 1;\n  if (a === 23) return 1;\n  if (a === 25) return 1;\n  if (a === 27) return\
    \ 1;\n  if (a === 29) return 1;\n  if (a === 31) return 1;\n  if (a === 33) return\
    \ 1;\n  if (a === 35) return 1;\n  if (a === 37) return 1;\n  if (a === 39) return\
    \ 1;\n  if (a === 41) return 1;\n  if (a === 43) return 1;\n  if (a === 45) return\
    \ 1;\n  if (a === 47) return 1;\n  if (a === 49) return 1;\n  if (a === 51) return\
    \ 1;\n  if (a === 53) return 1;\n  if (a === 55) return 1;\n  if (a === 57) return\
    \ 1;\n  if (a === 59) return 1;\n  if (a === 61) return 1;\n  if (a === 63) return\
    \ 1;\n  if (a === 65) return 1;\n  if (a === 67) return 1;\n  if (a === 69) return\
    \ 1;\n  if (a === 71) return 1;\n  if (a === 73) return 1;\n  if (a === 75) return\
    \ 1;\n  if (a === 77) return 1;\n  if (a === 79) return 1;\n  if (a === 81) return\
    \ 1;\n  if (a === 83) return 1;\n  if (a === 85) return 1;\n  if (a === 87) return\
    \ 1;\n  if (a === 89) return 1;\n  if (a === 91) return 1;\n  if (a === 93) return\
    \ 1;\n  if (a === 95) return 1;\n  if (a === 97) return 1;\n  if (a === 99) return\
    \ 1;\n  if (a === 101) return 1;\n  if (a === 103) return 1;\n  if (a === 105)\
    \ return 1;\n  if (a === 107) return 1;\n  if (a === 109) return 1;\n  if (a ===\
    \ 111) return 1;\n  if (a === 113) return 1;\n  if (a === 115) return 1;\n  if\
    \ (a === 117) return 1;\n  if (a === 119) return 1;\n  if (a === 121) return 1;\n\
    \  if (a === 123) return 1;\n  if (a === 125) return 1;\n  if (a === 127) return\
    \ 1;\n  if (a === 129) return 1;\n  if (a \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8ljkmaow.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp8ljkmaow.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738466
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk7hvzt0v.js:7\n    if (a === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    a = a % b;\n    if (a === 0) return b;\n\
    \    if (a === -1) return -1;\n    b = b % a;\n    if (b === 0) return a;\n  \
    \  if (b === -1) return -1;\n    a = a % b;\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp8vuqy1x4.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8vuqy1x4.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 0;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (a === -1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === -1 ||\
    \ b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (a === -1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === -1 ||\
    \ b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (a === -1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === -1 ||\
    \ b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return Infinity;\n  if (a === 1) return -1;\n  if (a === -1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === -1 ||\
    \ b === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b\
    \ === 1) return 1;\n  if (a === -1 || b === -1) return NaN;\n  if (a === 0 ||\
    \ b === 0) return Infinity;\n  if (a \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptnfia3rg.ts(68,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmptnfia3rg.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794495
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : r;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp37_zr5_0.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp37_zr5_0.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a % b === 0) return b;\n  if (a > b) a = b;\n  while (a % b\
    \ != 0) a = b;\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp3tpc0sfp.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3tpc0sfp.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return 0;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpeas0mrca.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeas0mrca.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp03__b30o.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp03__b30o.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1 || b ===\
    \ 1) return 1;\n  if (a === 2 || b === 2) return 1;\n  if (a === 3 || b === 3)\
    \ return 1;\n  if (a === 4 || b === 4) return 1;\n  if (a === 5 || b === 5) return\
    \ 1;\n  if (a === 6 || b === 6) return 1;\n  if (a === 7 || b === 7) return 1;\n\
    \  if (a === 8 || b === 8) return 1;\n  if (a === 9 || b === 9) return 1;\n  if\
    \ (a === 10 || b === 10) return 1;\n  if (a === 11 || b === 11) return 1;\n  if\
    \ (a === 12 || b === 12) return 1;\n  if (a === 13 || b === 13) return 1;\n  if\
    \ (a === 14 || b === 14) return 1;\n  if (a === 15 || b === 15) return 1;\n  if\
    \ (a === 16 || b === 16) return 1;\n  if (a === 17 || b === 17) return 1;\n  if\
    \ (a === 18 || b === 18) return 1;\n  if (a === 19 || b === 19) return 1;\n  if\
    \ (a === 20 || b === 20) return 1;\n  if (a === 21 || b === 21) return 1;\n  if\
    \ (a === 22 || b === 22) return 1;\n  if (a === 23 || b === 23) return 1;\n  if\
    \ (a === 24 || b === 24) return 1;\n  if (a === 25 || b === 25) return 1;\n  if\
    \ (a === 26 || b === 26) return 1;\n  if (a === 27 || b === 27) return 1;\n  if\
    \ (a === 28 || b === 28) return 1;\n  if (a === 29 || b === 29) return 1;\n  if\
    \ (a === 30 || b === 30) return 1;\n  if (a === 31 || b === 31) return 1;\n  if\
    \ (a === 32 || b === 32) return 1;\n  if (a === 33 || b === 33) return 1;\n  if\
    \ (a === 34 || b === 34) return 1;\n  if (a === 35 || b === 35) return 1;\n  if\
    \ (a === 36 || b === 36) return 1;\n  if (a === 37 || b === 37) return 1;\n  if\
    \ (a === 38 || b === 38) return 1;\n  if (a === 39 || b === 39) return 1;\n  if\
    \ (a === 40 || b === 40) return 1;\n  if (a === 41 || b === 41) return 1;\n  if\
    \ (a === 42 || b === 42) return 1;\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_juyv4dg.ts(67,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  else {\n    return greatest_common_divisor_helper(a, b);\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl9wadkpd.ts(11,12): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpin5dvzo_.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpin5dvzo_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (b <\
    \ a) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  if (a % b\
    \ === 0) {\n    return a / b;\n  }\n  if (b % a === 0) {\n    return b / a;\n\
    \  }\n  let c = 1;\n  let d = 1;\n  while (c < b) {\n    if (a % c === 0) {\n\
    \      d = b / c;\n      break;\n    }\n    c++;\n  }\n  return d;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp8fn2mobz.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8fn2mobz.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a)\n  }\n  if (a % b === 0) {\n    return b\n  }\n  if (a > b) {\n    return\
    \ greatest_common_divisor(b, a)\n  }\n  return a\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp9c0ba300.js:7\n    if (a < b) {\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp9c0ba300.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp9c0ba300.js:8:16)\n    at greatest_common_divisor\
    \ (/tmp/tmp9c0ba300.js:14:16)\n    at greatest_common_divisor (/tmp/tmp9c0ba300.js:8:16)\n\
    \    at greatest_common_divisor (/tmp/tmp9c0ba300.js:14:16)\n    at greatest_common_divisor\
    \ (/tmp/tmp9c0ba300.js:8:16)\n    at greatest_common_divisor (/tmp/tmp9c0ba300.js:14:16)\n\
    \    at greatest_common_divisor (/tmp/tmp9c0ba300.js:8:16)\n    at greatest_common_divisor\
    \ (/tmp/tmp9c0ba300.js:14:16)\n    at greatest_common_divisor (/tmp/tmp9c0ba300.js:8:16)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a % b === 0) return b;\n  if (a > b) a = b;\n  while (a % b\
    \ != 0) {\n    a = b;\n    b = a % b;\n  }\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpijtdqixl.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpijtdqixl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  var c = a % b;\n  if (c < 0) return c + b;\n\
    \  return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpz3jikaqz.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz3jikaqz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (b <\
    \ a) {\n    return b;\n  }\n  if (a === b) {\n    return 0;\n  }\n  if (a % b\
    \ === 0) {\n    return a / b;\n  }\n  if (b % a === 0) {\n    return b / a;\n\
    \  }\n  return greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpgctaqqar.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgctaqqar.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794495
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return a;\n  if (a === -5) return a;\n  if (a === -6) return -a;\n  if (a ===\
    \ -7) return a;\n  if (a === -8) return a;\n  if (a === -9) return -a;\n  if (a\
    \ === -10) return b;\n  if (a === -11) return -a;\n  if (a === -12) return b;\n\
    \  if (a === -13) return -a;\n  if (a === -14) return b;\n  if (a === -15) return\
    \ -a;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a === -18)\
    \ return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n  if (a\
    \ === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return -a;\n\
    \  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26) return\
    \ -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a === -29)\
    \ return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n  if (a\
    \ === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return -a;\n\
    \  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37) return\
    \ -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a === -40)\
    \ return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n  if (a\
    \ === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return -a;\n\
    \  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48) return\
    \ -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a === -51)\
    \ return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n  if (a\
    \ === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return -a;\n\
    \  if (a === -57) return -a;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl8gk85fu.ts(81,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794495
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a === 0) return 0;\n\
    \  if (a < 2) return 1;\n  if (a === 2) return 1;\n  if (a === 3) return 2;\n\
    \  if (a === 5) return 3;\n  if (a === 7) return 4;\n  if (a === 10) return 5;\n\
    \  if (a === 15) return 7;\n  if (a === 20) return 10;\n  if (a === 25) return\
    \ 15;\n  if (a === 30) return 20;\n  if (a === 40) return 25;\n  if (a === 50)\
    \ return 30;\n  if (a === 100) return 40;\n  if (a === 200) return 50;\n  if (a\
    \ === 500) return 100;\n  if (a === 1000) return 500;\n  if (a === 2000) return\
    \ 1000;\n  if (a === 10000) return 2000;\n  if (a === 100000) return 100000;\n\
    \  if (a === 1000000) return 1000000;\n  if (a === 10000000) return 100000000;\n\
    \  if (a === 100000000) return 1000000000;\n  if (a === 1000000000) return 10000000000;\n\
    \  if (a === 100000000000) return 1000000000000;\n  if (a === 1000000000000) return\
    \ 10000000000000;\n  if (a === 10000000000000) return 100000000000000;\n  if (a\
    \ === 1000000000000000) return 1000000000000000;\n  if (a === 10000000000000000)\
    \ return 100000000000000000;\n  if (a === 100000000000000000) return 1000000000000000000;\n\
    \  if (a === 1000000000000000000) return 1000000000000000000;\n  throw new Error('a\
    \ must be an integer >= 2 and <= 1000000000');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxbou32z6.js:82:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxbou32z6.js:87:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp03__b30o.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp03__b30o.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -1;\n  if (a === -2) return 1;\n  if (a === -3) return\
    \ -1;\n  if (a === -4) return 1;\n  if (a === -5) return 0;\n  if (a === -6) return\
    \ -1;\n  if (a === -7) return 1;\n  if (a === -8) return 0;\n  if (a === -9) return\
    \ -1;\n  if (a === -10) return 1;\n  if (a === -11) return 0;\n  if (a === -12)\
    \ return -1;\n  if (a === -13) return 1;\n  if (a === -14) return 0;\n  if (a\
    \ === -15) return -1;\n  if (a === -16) return 1;\n  if (a === -17) return 0;\n\
    \  if (a === -18) return -1;\n  if (a === -19) return 1;\n  if (a === -20) return\
    \ 0;\n  if (a === -21) return -1;\n  if (a === -22) return 1;\n  if (a === -23)\
    \ return 0;\n  if (a === -24) return -1;\n  if (a === -25) return 1;\n  if (a\
    \ === -26) return 0;\n  if (a === -27) return -1;\n  if (a === -28) return 1;\n\
    \  if (a === -29) return 0;\n  if (a === -30) return -1;\n  if (a === -31) return\
    \ 1;\n  if (a === -32) return 0;\n  if (a === -33) return -1;\n  if (a === -34)\
    \ return 1;\n  if (a === -35) return 0;\n  if (a === -36) return -1;\n  if (a\
    \ === -37) return 1;\n  if (a === -38) return 0;\n  if (a === -39) return -1;\n\
    \  if (a === -40) return 1;\n  if (a === -41) return 0;\n  if (a === -42) return\
    \ -1;\n  if (a === -43) return 1;\n  if (a === -44) return 0;\n  if (a === -45)\
    \ return -1;\n  if (a === -46) return 1;\n  if (a === -47) return 0;\n  if (a\
    \ === -48) return -1;\n  if (a === -49) return 1;\n  if (a === -50) return 0;\n\
    \  if (a === -51) return -1;\n  if (a === -52) return 1;\n  if (a === -53) return\
    \ 0;\n  if (a === -54) return -1;\n  if (a === -55) return 1;\n  if (a === -56)\
    \ return 0;\n  if (a === -57) return -1;\n  if (a === -58) return 1;\n  if (a\
    \ === -59) return 0;\n  if (a === -60) return -1;\n  if (a === -61) return 1;\n\
    \  if (a === -62) return 0;\n  if (a \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmhjpq9dw.ts(75,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpmhjpq9dw.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794495
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a >\
    \ b) b = a;\n  while (true) {\n    const q = Math.floor((a + b) / 2);\n    if\
    \ (a > q) a = q;\n    if (b > q) b = q;\n    if (a === b) return a;\n    if (a\
    \ < b) a = b;\n    if (b < a) b = a;\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjbl8wggf.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjbl8wggf.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738466
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === 2 || b === 2) return 1;\n\
    \  if (a === 3 || b === 3) return 1;\n  if (a === 4 || b === 4) return 1;\n  if\
    \ (a === 5 || b === 5) return 1;\n  if (a === 6 || b === 6) return 1;\n  if (a\
    \ === 7 || b === 7) return 1;\n  if (a === 8 || b === 8) return 1;\n  if (a ===\
    \ 9 || b === 9) return 1;\n  if (a === 10 || b === 10) return 1;\n  if (a ===\
    \ 11 || b === 11) return 1;\n  if (a === 12 || b === 12) return 1;\n  if (a ===\
    \ 13 || b === 13) return 1;\n  if (a === 14 || b === 14) return 1;\n  if (a ===\
    \ 15 || b === 15) return 1;\n  if (a === 16 || b === 16) return 1;\n  if (a ===\
    \ 17 || b === 17) return 1;\n  if (a === 18 || b === 18) return 1;\n  if (a ===\
    \ 19 || b === 19) return 1;\n  if (a === 20 || b === 20) return 1;\n  if (a ===\
    \ 21 || b === 21) return 1;\n  if (a === 22 || b === 22) return 1;\n  if (a ===\
    \ 23 || b === 23) return 1;\n  if (a === 24 || b === 24) return 1;\n  if (a ===\
    \ 25 || b === 25) return 1;\n  if (a === 26 || b === 26) return 1;\n  if (a ===\
    \ 27 || b === 27) return 1;\n  if (a === 28 || b === 28) return 1;\n  if (a ===\
    \ 29 || b === 29) return 1;\n  if (a === 30 || b === 30) return 1;\n  if (a ===\
    \ 31 || b === 31) return 1;\n  if (a === 32 || b === 32) return 1;\n  if (a ===\
    \ 33 || b === 33) return 1;\n  if (a === 34 || b === 34) return 1;\n  if (a ===\
    \ 35 || b === 35) return 1;\n  if (a === 36 || b === 36) return 1;\n  if (a ===\
    \ 37 || b === 37) return 1;\n  if (a === 38 || b === 38) return 1;\n  if (a ===\
    \ 39 || b === 39) return 1;\n  if (a === 40 || b === 40) return 1;\n  if (a ===\
    \ 41 || b === 41) return 1;\n  if (a === 4\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk02akidn.ts(56,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpk02akidn.ts(68,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpin5dvzo_.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpin5dvzo_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -1;\n  if (a === -2) return 1;\n  if (a === -3) return\
    \ -1;\n  if (a === -4) return 1;\n  if (a === -5) return -1;\n  if (a === -6)\
    \ return 1;\n  if (a === -7) return -1;\n  if (a === -8) return 1;\n  if (a ===\
    \ -9) return -1;\n  if (a === -10) return 1;\n  if (a === -11) return -1;\n  if\
    \ (a === -12) return 1;\n  if (a === -13) return -1;\n  if (a === -14) return\
    \ 1;\n  if (a === -15) return -1;\n  if (a === -16) return 1;\n  if (a === -17)\
    \ return -1;\n  if (a === -18) return 1;\n  if (a === -19) return -1;\n  if (a\
    \ === -20) return 1;\n  if (a === -21) return -1;\n  if (a === -22) return 1;\n\
    \  if (a === -23) return -1;\n  if (a === -24) return 1;\n  if (a === -25) return\
    \ -1;\n  if (a === -26) return 1;\n  if (a === -27) return -1;\n  if (a === -28)\
    \ return 1;\n  if (a === -29) return -1;\n  if (a === -30) return 1;\n  if (a\
    \ === -31) return -1;\n  if (a === -32) return 1;\n  if (a === -33) return -1;\n\
    \  if (a === -34) return 1;\n  if (a === -35) return -1;\n  if (a === -36) return\
    \ 1;\n  if (a === -37) return -1;\n  if (a === -38) return 1;\n  if (a === -39)\
    \ return -1;\n  if (a === -40) return 1;\n  if (a === -41) return -1;\n  if (a\
    \ === -42) return 1;\n  if (a === -43) return -1;\n  if (a === -44) return 1;\n\
    \  if (a === -45) return -1;\n  if (a === -46) return 1;\n  if (a === -47) return\
    \ -1;\n  if (a === -48) return 1;\n  if (a === -49) return -1;\n  if (a === -50)\
    \ return 1;\n  if (a === -51) return -1;\n  if (a === -52) return 1;\n  if (a\
    \ === -53) return -1;\n  if (a === -54) return 1;\n  if (a === -55) return -1;\n\
    \  if (a === -56) return 1;\n  if (a === -57) return -1;\n  if (a === -58) return\
    \ 1;\n  if (a === -59) return -1;\n  if (a === -60) return 1;\n  if (a === -61)\
    \ return -1;\n  if (a === -62) return 1;\n  if (a \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg21sm232.ts(75,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpg21sm232.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794495
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  var d = 1;\n  while (a % b != 0) {\n    d\
    \ *= b;\n    a /= b;\n  }\n  return d;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nInfinity\n\nshould\
    \ loosely deep-equal\n\n1\n    at test (/tmp/tmpqplv32mm.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqplv32mm.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: Infinity,\n\
    \  expected: 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794495
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a % b);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpin5dvzo_.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpin5dvzo_.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -a;\n  var c = a % b;\n  if (c < 0) return c + b;\n\
    \  return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpkxcyrhkd.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkxcyrhkd.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp03__b30o.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp03__b30o.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794495
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk064gk16.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpk064gk16.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (b === 2) return\
    \ 2;\n  if (b === 3) return 1;\n  if (b === 5) return 2;\n  if (b === 7) return\
    \ 3;\n  if (b === 10) return 5;\n  if (b === 15) return 7;\n  if (b === 20) return\
    \ 10;\n  if (b === 25) return 15;\n  if (b === 30) return 20;\n  if (b === 40)\
    \ return 25;\n  if (b === 50) return 30;\n  if (b === 75) return 40;\n  if (b\
    \ === 100) return 50;\n  if (b === 150) return 75;\n  if (b === 200) return 100;\n\
    \  if (b === 300) return 150;\n  if (b === 400) return 200;\n  if (b === 500)\
    \ return 250;\n  if (b === 600) return 300;\n  if (b === 700) return 350;\n  if\
    \ (b === 800) return 400;\n  if (b === 900) return 500;\n  if (b === 1000) return\
    \ 600;\n  if (b === 2000) return 700;\n  if (b === 3000) return 1000;\n  if (b\
    \ === 4000) return 2000;\n  if (b === 5000) return 3000;\n  if (b === 6000) return\
    \ 4000;\n  if (b === 7000) return 5000;\n  if (b === 8000) return 6000;\n  if\
    \ (b === 9000) return 7000;\n  if (b === 10000) return 8000;\n  if (b === 11000)\
    \ return 9000;\n  if (b === 12000) return 10000;\n  if (b === 13000) return 11000\n\
    \  if (b === 14000) return 12000;\n  if (b === 15000) return 13000\n  if (b ===\
    \ 16000) return 14000;\n  if (b === 17000) return 15000\n  if (b === 18000) return\
    \ 16000;\n  if (b === 19000) return 17000;\n  if (b === 20000) return 18000;\n\
    \  if (b === 21000) return 19000\n  if (b === 22000) return 20000;\n  if (b ===\
    \ 23000) return 21000;\n  if (b === 24000) return 22000;\n  if (b === 25000) return\
    \ 23000;\n  if (b === 26000) return 24000;\n  if (b === 27000) return 25000;\n\
    \  if (b === 28000) return 26000;\n  if (b === 29000) return 27000;\n  if (b ===\
    \ 30000) return 28000;\n  if (b === 31000) return 29000;\n  if (b === 32000) return\
    \ 30000;\n  if (b === 33000) return 31000;\n  if (b === 34000) return 32000;\n\
    \  if (b === 35\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6z66l_5n.ts(68,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp6z66l_5n.ts(80,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794497
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (a % b != 0) {\n    a = Math.floor(a / b);\n  }\n  return\
    \ a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7sn2odrp.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7sn2odrp.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  var c = a % b;\n  if (c < 0) return c + b;\n\
    \  return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpz3jikaqz.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz3jikaqz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794498
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a % b === 0) return\
    \ b;\n  if (a > b) a = b;\n  return a;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp7dkp4mx8.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7dkp4mx8.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  const g = gcd(b, r);\n  return g === 0 ? r : g;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3lrjl4kn.ts(11,13): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (b === 1) return -1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n \
    \ if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1)\
    \ return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b ===\
    \ 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n\
    \  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return\
    \ 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a\
    \ === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a === -1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === 0 || b\
    \ === 0) return 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if\
    \ (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return\
    \ -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n \
    \ if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1)\
    \ return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b ===\
    \ 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n\
    \  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return\
    \ 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a\
    \ === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if\
    \ (a === 0 || b === 0) return 0;\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7i6vdgb8.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a === b) return a;\n  if (a % b === 0) return b;\n  if (a >\
    \ b) a = b;\n  if (a === 0) return b;\n  if (a === b) return a;\n  if (a % b ===\
    \ 0) return b;\n  return greatest_common_divisor(b, a % b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp76b5ksyd.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp76b5ksyd.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    if (a % b === 0) return b;\n    if (a >\
    \ b) a = b;\n    if (a === b) return b;\n    if (a < b) a = b;\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp2r5brqu9.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2r5brqu9.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  if (a === b) return a;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b\
    \ === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0)\
    \ return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n\
    \  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a ===\
    \ 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0\
    \ || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b\
    \ === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b ===\
    \ 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0)\
    \ return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n\
    \  if (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a ===\
    \ 0 || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0\
    \ || b === 0) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 0 ||\
    \ b === 0) return 0;\n  if (a === 0 || b === \ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpma7p5fur.ts(61,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpma7p5fur.ts(73,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1 || b === 1) return 1;\n  if (a === 2 || b === 2) return 1;\n\
    \  if (a === 3 || b === 3) return 1;\n  if (a === 4 || b === 4) return 1;\n  if\
    \ (a === 5 || b === 5) return 1;\n  if (a === 6 || b === 6) return 1;\n  if (a\
    \ === 7 || b === 7) return 1;\n  if (a === 8 || b === 8) return 1;\n  if (a ===\
    \ 9 || b === 9) return 1;\n  if (a === 10 || b === 10) return 1;\n  if (a ===\
    \ 11 || b === 11) return 1;\n  if (a === 12 || b === 12) return 1;\n  if (a ===\
    \ 13 || b === 13) return 1;\n  if (a === 14 || b === 14) return 1;\n  if (a ===\
    \ 15 || b === 15) return 1;\n  if (a === 16 || b === 16) return 1;\n  if (a ===\
    \ 17 || b === 17) return 1;\n  if (a === 18 || b === 18) return 1;\n  if (a ===\
    \ 19 || b === 19) return 1;\n  if (a === 20 || b === 20) return 1;\n  if (a ===\
    \ 21 || b === 21) return 1;\n  if (a === 22 || b === 22) return 1;\n  if (a ===\
    \ 23 || b === 23) return 1;\n  if (a === 24 || b === 24) return 1;\n  if (a ===\
    \ 25 || b === 25) return 1;\n  if (a === 26 || b === 26) return 1;\n  if (a ===\
    \ 27 || b === 27) return 1;\n  if (a === 28 || b === 28) return 1;\n  if (a ===\
    \ 29 || b === 29) return 1;\n  if (a === 30 || b === 30) return 1;\n  if (a ===\
    \ 31 || b === 31) return 1;\n  if (a === 32 || b === 32) return 1;\n  if (a ===\
    \ 33 || b === 33) return 1;\n  if (a === 34 || b === 34) return 1;\n  if (a ===\
    \ 35 || b === 35) return 1;\n  if (a === 36 || b === 36) return 1;\n  if (a ===\
    \ 37 || b === 37) return 1;\n  if (a === 38 || b === 38) return 1;\n  if (a ===\
    \ 39 || b === 39) return 1;\n  if (a === 40 || b === 40) return 1;\n  if (a ===\
    \ 41 || b === 41) return 1;\n  if (a === 4\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk02akidn.ts(56,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpk02akidn.ts(68,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return\
    \ NaN;\n  if (a === 0 || b === 0) return -Infinity;\n  if (a === 1) return -1;\n\
    \  if (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a\
    \ === 0 || b === 0) return -Infinity;\n  if (a === 1) return -1;\n  if (b ===\
    \ -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b\
    \ === 0) return -Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return\
    \ -Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (a ===\
    \ -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return -Infinity;\n \
    \ if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b ===\
    \ -2) return NaN;\n  if (a === 0 || b === 0) return -Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n\
    \  if (a === 0 || b === 0) return -Infinity;\n  if (a === 1) return -1;\n  if\
    \ (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a ===\
    \ 0 || b === 0) return -Infinity;\n  if (a === 1) return -1;\n  if (b === -1)\
    \ return -2;\n  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b ===\
    \ 0) return -Infinity;\n  if (a === 1) return -1;\n  if (b === -1) return -2;\n\
    \  if (a === -1 || b === -2) return NaN;\n  if (a === 0 || b === 0) return -Infinity;\n\
    \  if (a === 1) return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b ===\
    \ -2) return NaN;\n  if (a === 0 || b === 0) return -Infinity;\n  if (a === 1)\
    \ return -1;\n  if (b === -1) return -2;\n  if (a === -1 || b === -2) return NaN;\n\
    \  if (a === 0 || b\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3z8evgxl.ts(61,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp3z8evgxl.ts(73,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwmimot3y.ts(10,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 0;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps26wy_jx.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmps26wy_jx.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return greatest_common_divisor_cached(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2s67x_r_.ts(10,10): error TS2304: Cannot find name
    ''greatest_common_divisor_cached''.

    '
  timestamp: 1659794498
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -a;\n  var c = a % b;\n  if (c < 0) return c + b;\n\
    \  return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpkxcyrhkd.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkxcyrhkd.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794496
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return 1;\n  if (b === -1) return -1;\n  if (b === -2) return\
    \ 1;\n  if (b === -1) return -1;\n  if (b === 1) return -1;\n  if (a === -1) return\
    \ 1;\n  if (a === 1) return -1;\n  if (a === 0) return 0;\n  if (a === -1) return\
    \ 1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return 1;\n  if (a === -1) return -1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return 1;\n  if (a === -1) return -1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return 1;\n  if (a === -1) return -1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return 1;\n  if (a === -1) return -1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return 1;\n  if (a === -1) return -1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return 1;\n  if (a === -1) return -1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return 1;\n  if (a === -1) return -1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (a === 1) return\
    \ -1;\n  if (a === -2) return -1;\n  if (a === -1) return 1;\n  if (\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp07zvyum5.ts(80,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp07zvyum5.ts(92,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqd45d__f.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqd45d__f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 2;\n  if (a === -2) return\
    \ -2;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv8o0xlh1.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 1;\n  if (a === 3) return\
    \ 1;\n  if (a === 4) return 1;\n  if (a === 5) return 1;\n  if (a === 6) return\
    \ 1;\n  if (a === 7) return 1;\n  if (a === 8) return 1;\n  if (a === 9) return\
    \ 1;\n  if (a === 10) return 1;\n  if (a === 11) return 1;\n  if (a === 12) return\
    \ 1;\n  if (a === 13) return 1;\n  if (a === 14) return 1;\n  if (a === 15) return\
    \ 1;\n  if (a === 16) return 1;\n  if (a === 17) return 1;\n  if (a === 18) return\
    \ 1;\n  if (a === 19) return 1;\n  if (a === 20) return 1;\n  if (a === 21) return\
    \ 1;\n  if (a === 22) return 1;\n  if (a === 23) return 1;\n  if (a === 24) return\
    \ 1;\n  if (a === 25) return 1;\n  if (a === 26) return 1;\n  if (a === 27) return\
    \ 1;\n  if (a === 28) return 1;\n  if (a === 29) return 1;\n  if (a === 30) return\
    \ 1;\n  if (a === 31) return 1;\n  if (a === 32) return 1;\n  if (a === 33) return\
    \ 1;\n  if (a === 34) return 1;\n  if (a === 35) return 1;\n  if (a === 36) return\
    \ 1;\n  if (a === 37) return 1;\n  if (a === 38) return 1;\n  if (a === 39) return\
    \ 1;\n  if (a === 40) return 1;\n  if (a === 41) return 1;\n  if (a === 42) return\
    \ 1;\n  if (a === 43) return 1;\n  if (a === 44) return 1;\n  if (a === 45) return\
    \ 1;\n  if (a === 46) return 1;\n  if (a === 47) return 1;\n  if (a === 48) return\
    \ 1;\n  if (a === 49) return 1;\n  if (a === 50) return 1;\n  if (a === 51) return\
    \ 1;\n  if (a === 52) return 1;\n  if (a === 53) return 1;\n  if (a === 54) return\
    \ 1;\n  if (a === 55) return 1;\n  if (a === 56) return 1;\n  if (a === 57) return\
    \ 1;\n  if (a === 58) return 1;\n  if (a === 59) return 1;\n  if (a === 60) return\
    \ 1;\n  if (a === 61) return 1;\n  if (a === 62) return 1;\n  if (a === 63) return\
    \ 1;\n  if (a === 64) return 1;\n  if (a === 65) return 1;\n  if (a === 66) return\
    \ 1;\n  if (a === 67) return 1;\n  if (a === 68\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6zp450tm.ts(80,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp6zp450tm.ts(92,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  const g = gcd(b, r);\n  return g === 0 ? r : g;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3lrjl4kn.ts(11,13): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  while (b !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n\
    \  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 0;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps26wy_jx.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmps26wy_jx.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a % b, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 ||\
    \ b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 ||\
    \ b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 ||\
    \ b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (a === -1 || b === -1) return 0;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (b === -1) return 1;\n  if (a === -1 ||\
    \ b === -1) return 0;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return\
    \ -1;\n  if (b === -1) return 1;\n  if (a === -1 || b === -1) return 0;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb59liscb.ts(67,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpb59liscb.ts(79,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 0;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === 1 || b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === -1 || b === 1) return 1;\n  if (a === 1 || b\
    \ === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === 1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === 1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === 1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === 1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === 1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === 1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === 1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === 1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === -1) return -1;\n  if (a === -1 || b === -1) return 1;\n  if (a === 1 ||\
    \ b === 1) return -1;\n  if (a === -1 || b === -1) return 1;\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpstuq5980.ts(70,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a % b === 0) return\
    \ b;\n  if (a % b === 1) return a;\n  return greatest_common_divisor(b, a % b);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp8lu7x2sd.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8lu7x2sd.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return b;\n  if (a === 1) return\
    \ b;\n  if (a === -1) return -b;\n  if (a === 0 && b === 0) return 1;\n  if (a\
    \ === 1 && b === 0) return -1;\n  if (a === -1 && b === 0) return -2;\n  if (a\
    \ === 0 && b === -1) return -2;\n  if (a === 1 && b === -1) return -1;\n  if (a\
    \ === -1 && b === -1) return 1;\n  if (a === 0 && b === 1) return -1;\n  if (a\
    \ === 1 && b === 1) return 1;\n  if (a === -1 && b === 1) return -2;\n  if (a\
    \ === 0 && b === -1) return -2;\n  if (a === 1 && b === -1) return -1;\n  if (a\
    \ === -1 && b === -1) return 1;\n  if (a === 0 && b === 1) return -1;\n  if (a\
    \ === 1 && b === 1) return 1;\n  if (a === -1 && b === 1) return -2;\n  if (a\
    \ === 0 && b === -1) return -2;\n  if (a === 1 && b === -1) return -1;\n  if (a\
    \ === -1 && b === -1) return 1;\n  if (a === 0 && b === 1) return -1;\n  if (a\
    \ === 1 && b === 1) return 1;\n  if (a === -1 && b === 1) return -2;\n  if (a\
    \ === 0 && b === -1) return -2;\n  if (a === 1 && b === -1) return -1;\n  if (a\
    \ === -1 && b === -1) return 1;\n  if (a === 0 && b === 1) return -1;\n  if (a\
    \ === 1 && b === 1) return 1;\n  if (a === -1 && b === 1) return -2;\n  if (a\
    \ === 0 && b === -1) return -2;\n  if (a === 1 && b === -1) return -1;\n  if (a\
    \ === -1 && b === -1) return 1;\n  if (a === 0 && b === 1) return -1;\n  if (a\
    \ === 1 && b === 1) return 1;\n  if (a === -1 && b === 1) return -2;\n  if (a\
    \ === 0 && b === -1) return -2;\n  if (a === 1 && b === -1) return -1;\n  if (a\
    \ === -1 && b === -1) return 1;\n  if (a === 0 && b === 1) return -1;\n  if (a\
    \ === 1 && b === 1) return 1;\n  if (a === -1 && b === 1) return -2;\n  if (a\
    \ === 0 && b === -1) return -2;\n  if (a === 1 && b === -1) return -1;\n  if (a\
    \ === -1 && b === -1) return 1;\n  return 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpxzdbb49d.js:108:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxzdbb49d.js:113:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -2;\n  if (b === -2) return 1;\n  if (a\
    \ === -1 || a === 0 || b === -1 || b === 0) return 0;\n  if (a === 1 || b ===\
    \ 1) return 1;\n  if (a === 2 || b === 2) return 1;\n  if (a === 3 || b === 3)\
    \ return 1;\n  if (a === 4 || b === 4) return 1;\n  if (a === 5 || b === 5) return\
    \ 1;\n  if (a === 6 || b === 6) return 1;\n  if (a === 7 || b === 7) return 1;\n\
    \  if (a === 8 || b === 8) return 1;\n  if (a === 9 || b === 9) return 1;\n  if\
    \ (a === 10 || b === 10) return 1;\n  if (a === 11 || b === 11) return 1;\n  if\
    \ (a === 12 || b === 12) return 1;\n  if (a === 13 || b === 13) return 1;\n  if\
    \ (a === 14 || b === 14) return 1;\n  if (a === 15 || b === 15) return 1;\n  if\
    \ (a === 16 || b === 16) return 1;\n  if (a === 17 || b === 17) return 1;\n  if\
    \ (a === 18 || b === 18) return 1;\n  if (a === 19 || b === 19) return 1;\n  if\
    \ (a === 20 || b === 20) return 1;\n  if (a === 21 || b === 21) return 1;\n  if\
    \ (a === 22 || b === 22) return 1;\n  if (a === 23 || b === 23) return 1;\n  if\
    \ (a === 24 || b === 24) return 1;\n  if (a === 25 || b === 25) return 1;\n  if\
    \ (a === 26 || b === 26) return 1;\n  if (a === 27 || b === 27) return 1;\n  if\
    \ (a === 28 || b === 28) return 1;\n  if (a === 29 || b === 29) return 1;\n  if\
    \ (a === 30 || b === 30) return 1;\n  if (a === 31 || b === 31) return 1;\n  if\
    \ (a === 32 || b === 32) return 1;\n  if (a === 33 || b === 33) return 1;\n  if\
    \ (a === 34 || b === 34) return 1;\n  if (a === 35 || b === 35) return 1;\n  if\
    \ (a === 36 || b === 36) return 1;\n  if (a === 37 || b === 37) return 1;\n  if\
    \ (a === 38 || b === 38) return 1;\n  if (a === \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc41x9w1t.ts(56,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpc41x9w1t.ts(68,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794499
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  else {\n    return greatest_common_divisor_helper(a, b);\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl9wadkpd.ts(11,12): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqd45d__f.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqd45d__f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    const t = a;\n    a = b;\n\
    \    b = t;\n  }\n  if (a === 0) return b;\n  if (b === 0) return a;\n  if (a\
    \ === b) return a;\n  if (a < b) {\n    const t = a;\n    a = b;\n    b = t;\n\
    \  }\n  const d = a % b;\n  return d === 0 ? b : d;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n24\n\nshould loosely\
    \ deep-equal\n\n12\n    at test (/tmp/tmpqmu9aoc4.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqmu9aoc4.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 24,\n  expected:\
    \ 12,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794500
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqd45d__f.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqd45d__f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 0;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (a \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps26wy_jx.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmps26wy_jx.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk7hvzt0v.js:7\n    if (a === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (a === 0) return b;\n  if (a === 1) return 0;\n  if (a === -1) return\
    \ -b;\n  if (a === -2) return -b;\n  if (a === -3) return -a;\n  if (a === -4)\
    \ return a;\n  if (a === -5) return a;\n  if (a === -6) return -a;\n  if (a ===\
    \ -7) return a;\n  if (a === -8) return -a;\n  if (a === -9) return a;\n  if (a\
    \ === -10) return b;\n  if (a === -11) return -a;\n  if (a === -12) return -a;\n\
    \  if (a === -13) return a;\n  if (a === -14) return b;\n  if (a === -15) return\
    \ b;\n  if (a === -16) return -a;\n  if (a === -17) return -a;\n  if (a === -18)\
    \ return -a;\n  if (a === -19) return -a;\n  if (a === -20) return -a;\n  if (a\
    \ === -21) return -a;\n  if (a === -22) return -a;\n  if (a === -23) return -a;\n\
    \  if (a === -24) return -a;\n  if (a === -25) return -a;\n  if (a === -26) return\
    \ -a;\n  if (a === -27) return -a;\n  if (a === -28) return -a;\n  if (a === -29)\
    \ return -a;\n  if (a === -30) return -a;\n  if (a === -31) return -a;\n  if (a\
    \ === -32) return -a;\n  if (a === -33) return -a;\n  if (a === -34) return -a;\n\
    \  if (a === -35) return -a;\n  if (a === -36) return -a;\n  if (a === -37) return\
    \ -a;\n  if (a === -38) return -a;\n  if (a === -39) return -a;\n  if (a === -40)\
    \ return -a;\n  if (a === -41) return -a;\n  if (a === -42) return -a;\n  if (a\
    \ === -43) return -a;\n  if (a === -44) return -a;\n  if (a === -45) return -a;\n\
    \  if (a === -46) return -a;\n  if (a === -47) return -a;\n  if (a === -48) return\
    \ -a;\n  if (a === -49) return -a;\n  if (a === -50) return -a;\n  if (a === -51)\
    \ return -a;\n  if (a === -52) return -a;\n  if (a === -53) return -a;\n  if (a\
    \ === -54) return -a;\n  if (a === -55) return -a;\n  if (a === -56) return -a;\n\
    \  if (a === -57) return -a;\n  if (\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxw07bg1g.ts(69,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpxw07bg1g.ts(81,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794500
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (b === 1) return -1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n \
    \ if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1)\
    \ return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b ===\
    \ 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n\
    \  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return\
    \ 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a\
    \ === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a === -1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === 0 || b\
    \ === 0) return 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if\
    \ (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return\
    \ -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n \
    \ if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1)\
    \ return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b ===\
    \ 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n\
    \  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return\
    \ 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a\
    \ === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if\
    \ (a === 0 || b === 0) return 0;\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7i6vdgb8.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a === 0) return 0;\n\
    \  if (a < b) return a;\n  if (b < 1) return b;\n  if (b === 1) return a;\n  if\
    \ (b === 0) return 0;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a\
    \ < b) return a;\n  if (b < 1) return b;\n  if (b === 1) return a;\n  if (b ===\
    \ 0) return 0;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a < b) return\
    \ a;\n  if (b < 1) return b;\n  if (b === 1) return a;\n  if (b === 0) return\
    \ 0;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a < b) return a;\n\
    \  if (b < 1) return b;\n  if (b === 1) return a;\n  if (b === 0) return 0;\n\
    \  if (a === b) return a;\n  if (a < b) a = b;\n  if (a < b) return a;\n  if (b\
    \ < 1) return b;\n  if (b === 1) return a;\n  if (b === 0) return 0;\n  if (a\
    \ === b) return a;\n  if (a < b) a = b;\n  if (a < b) return a;\n  if (b < 1)\
    \ return b;\n  if (b === 1) return a;\n  if (b === 0) return 0;\n  if (a === b)\
    \ return a;\n  if (a < b) a = b;\n  if (a < b) return a;\n  if (b < 1) return\
    \ b;\n  if (b === 1) return a;\n  if (b === 0) return 0;\n  if (a === b) return\
    \ a;\n  if (a < b) a = b;\n  if (a < b) return a;\n  if (b < 1) return b;\n  if\
    \ (b === 1) return a;\n  if (b === 0) return 0;\n  if (a === b) return a;\n  if\
    \ (a < b) a = b;\n  if (a < b) return a;\n  if (b < 1) return b;\n  if (b ===\
    \ 1) return a;\n  if (b === 0) return 0;\n  if (a === b) return a;\n  if (a <\
    \ b) a = b;\n  if (a < b) return a;\n  if (b < 1) return b;\n  if (b === 1) return\
    \ a;\n  if (b === 0) return 0;\n  if (a === b) return a;\n  if (a < b) a = b;\n\
    \  if (a < b) return a;\n  if (b < 1) return b;\n  if (b === 1) return a;\n  if\
    \ (b === 0) return 0;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a\
    \ < \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7zwkvf0_.ts(79,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp7zwkvf0_.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794500
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return 1;\n  if (a === -1) return\
    \ -1;\n  if (a === 1) return 1;\n  if (a === 2) return 1;\n  if (a === 3) return\
    \ 1;\n  if (a === 4) return 1;\n  if (a === 5) return 1;\n  if (a === 6) return\
    \ 1;\n  if (a === 7) return 1;\n  if (a === 8) return 1;\n  if (a === 9) return\
    \ 1;\n  if (a === 10) return 1;\n  if (a === 11) return 1;\n  if (a === 12) return\
    \ 1;\n  if (a === 13) return 1;\n  if (a === 14) return 1;\n  if (a === 15) return\
    \ 1;\n  if (a === 16) return 1;\n  if (a === 17) return 1;\n  if (a === 18) return\
    \ 1;\n  if (a === 19) return 1;\n  if (a === 20) return 1;\n  if (a === 21) return\
    \ 1;\n  if (a === 22) return 1;\n  if (a === 23) return 1;\n  if (a === 24) return\
    \ 1;\n  if (a === 25) return 1;\n  if (a === 26) return 1;\n  if (a === 27) return\
    \ 1;\n  if (a === 28) return 1;\n  if (a === 29) return 1;\n  if (a === 30) return\
    \ 1;\n  if (a === 31) return 1;\n  if (a === 32) return 1;\n  if (a === 33) return\
    \ 1;\n  if (a === 34) return 1;\n  if (a === 35) return 1;\n  if (a === 36) return\
    \ 1;\n  if (a === 37) return 1;\n  if (a === 38) return 1;\n  if (a === 39) return\
    \ 1;\n  if (a === 40) return 1;\n  if (a === 41) return 1;\n  if (a === 42) return\
    \ 1;\n  if (a === 43) return 1;\n  if (a === 44) return 1;\n  if (a === 45) return\
    \ 1;\n  if (a === 46) return 1;\n  if (a === 47) return 1;\n  if (a === 48) return\
    \ 1;\n  if (a === 49) return 1;\n  if (a === 50) return 1;\n  if (a === 51) return\
    \ 1;\n  if (a === 52) return 1;\n  if (a === 53) return 1;\n  if (a === 54) return\
    \ 1;\n  if (a === 55) return 1;\n  if (a === 56) return 1;\n  if (a === 57) return\
    \ 1;\n  if (a === 58) return 1;\n  if (a === 59) return 1;\n  if (a === 60) return\
    \ 1;\n  if (a === 61) return 1;\n  if (a === 62) return 1;\n  if (a === 63) return\
    \ 1;\n  if (a === 64) return 1;\n  if (a === 65) return 1;\n  if (a === 66) return\
    \ 1;\n  if (a === 67) return 1;\n  if (a === 68\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6zp450tm.ts(80,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp6zp450tm.ts(92,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 0) return b;\n  if (a === -1) return\
    \ -2;\n  if (a === 1) return 0;\n  if (a === 2) return 1;\n  if (a === -2) return\
    \ -1;\n  if (a === 3) return 1;\n  if (a === -3) return -1;\n  if (a === 4) return\
    \ 1;\n  if (a === -4) return -1;\n  if (a === 5) return 1;\n  if (a === -5) return\
    \ -1;\n  if (a === 6) return 1;\n  if (a === -6) return -1;\n  if (a === 7) return\
    \ 1;\n  if (a === -7) return -1;\n  if (a === 8) return 1;\n  if (a === -8) return\
    \ -1;\n  if (a === 9) return 1;\n  if (a === -9) return -1;\n  if (a === 10) return\
    \ 1;\n  if (a === -10) return -1;\n  if (a === 11) return 1;\n  if (a === -11)\
    \ return -1;\n  if (a === 12) return 1;\n  if (a === -12) return -1;\n  if (a\
    \ === 13) return 1;\n  if (a === -13) return -1;\n  if (a === 14) return 1;\n\
    \  if (a === -14) return -1;\n  if (a === 15) return 1;\n  if (a === -15) return\
    \ -1;\n  if (a === 16) return 1;\n  if (a === -16) return -1;\n  if (a === 17)\
    \ return 1;\n  if (a === -17) return -1;\n  if (a === 18) return 1;\n  if (a ===\
    \ -18) return -1;\n  if (a === 19) return 1;\n  if (a === -19) return -1;\n  if\
    \ (a === 20) return 1;\n  if (a === -20) return -1;\n  if (a === 21) return 1;\n\
    \  if (a === -21) return -1;\n  if (a === 22) return 1;\n  if (a === -22) return\
    \ -1;\n  if (a === 23) return 1;\n  if (a === -23) return -1;\n  if (a === 24)\
    \ return 1;\n  if (a === -24) return -1;\n  if (a === 25) return 1;\n  if (a ===\
    \ -25) return -1;\n  if (a === 26) return 1;\n  if (a === -26) return -1;\n  if\
    \ (a === 27) return 1;\n  if (a === -27) return -1;\n  if (a === 28) return 1;\n\
    \  if (a === -28) return -1;\n  if (a === 29) return 1;\n  if (a === -29) return\
    \ -1;\n  if (a === 30) return 1;\n  if (a === -30) return -1;\n  if (a === 31)\
    \ return 1;\n  if (a === -31) return -1;\n  if (a === 32) return 1;\n  if (a ===\
    \ -32) return -1;\n  if (a === 33) return 1;\n  if (a === -33) return -1;\n  if\
    \ (a === 34) return 1;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp47wv8su1.ts(79,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp47wv8su1.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794500
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return 0;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  if (a > b) a = b;\n  if (a === b) return a;\n  if (b > a) b\
    \ = a;\n  if (b === a) return b;\n  if (b === a) return b;\n  if (b > a) b = a;\n\
    \  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if\
    \ (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a)\
    \ return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n\
    \  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if\
    \ (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a)\
    \ return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n\
    \  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if\
    \ (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a)\
    \ return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n\
    \  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if\
    \ (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a)\
    \ return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n\
    \  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if\
    \ (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a)\
    \ return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if (b > a) b = a;\n\
    \  if (b === a) return b;\n  if (b > a) b = a;\n  if (b === a) return b;\n  if\
    \ (b > a) b = a;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv5b06rm3.ts(76,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpv5b06rm3.ts(88,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794500
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return _greatest_common_divisor(a, b);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5vtvh5oz.ts(11,10): error TS2552: Cannot find name
    ''_greatest_common_divisor''. Did you mean ''greatest_common_divisor''?

    '
  timestamp: 1659794500
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqd45d__f.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqd45d__f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -1;\n  if (a === -2) return 1;\n  if (a === -3) return\
    \ -1;\n  if (a === -4) return 1;\n  if (a === -5) return 0;\n  if (a === -6) return\
    \ -1;\n  if (a === -7) return 1;\n  if (a === -8) return 0;\n  if (a === -9) return\
    \ -1;\n  if (a === -10) return 1;\n  if (a === -11) return 0;\n  if (a === -12)\
    \ return -1;\n  if (a === -13) return 1;\n  if (a === -14) return 0;\n  if (a\
    \ === -15) return -1;\n  if (a === -16) return 1;\n  if (a === -17) return 0;\n\
    \  if (a === -18) return -1;\n  if (a === -19) return 1;\n  if (a === -20) return\
    \ 0;\n  if (a === -21) return -1;\n  if (a === -22) return 1;\n  if (a === -23)\
    \ return 0;\n  if (a === -24) return -1;\n  if (a === -25) return 1;\n  if (a\
    \ === -26) return 0;\n  if (a === -27) return -1;\n  if (a === -28) return 1;\n\
    \  if (a === -29) return 0;\n  if (a === -30) return -1;\n  if (a === -31) return\
    \ 1;\n  if (a === -32) return 0;\n  if (a === -33) return -1;\n  if (a === -34)\
    \ return 1;\n  if (a === -35) return 0;\n  if (a === -36) return -1;\n  if (a\
    \ === -37) return 1;\n  if (a === -38) return 0;\n  if (a === -39) return -1;\n\
    \  if (a === -40) return 1;\n  if (a === -41) return 0;\n  if (a === -42) return\
    \ -1;\n  if (a === -43) return 1;\n  if (a === -44) return 0;\n  if (a === -45)\
    \ return -1;\n  if (a === -46) return 1;\n  if (a === -47) return 0;\n  if (a\
    \ === -48) return -1;\n  if (a === -49) return 1;\n  if (a === -50) return 0;\n\
    \  if (a === -51) return -1;\n  if (a === -52) return 1;\n  if (a === -53) return\
    \ 0;\n  if (a === -54) return -1;\n  if (a === -55) return 1;\n  if (a === -56)\
    \ return 0;\n  if (a === -57) return -1;\n  if (a === -58) return 1;\n  if (a\
    \ === -59) return 0;\n  if (a === -60) return -1;\n  if (a === -61) return 1;\n\
    \  if (a === -62) return 0;\n  if (a \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmhjpq9dw.ts(75,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmpmhjpq9dw.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794495
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return a % b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpo3vaqq5k.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo3vaqq5k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738466
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794500
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b, a % b);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi_b4_lut.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794500
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return a % b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpo3vaqq5k.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo3vaqq5k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738466
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a ===\
    \ b) return a;\n  while (true) {\n    const c = a % b;\n    if (c === 0) return\
    \ b;\n    if (c > 0) a = b;\n    else b = c;\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpwr07y8gu.js:36:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwr07y8gu.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794500
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe8db88pu.ts(11,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return greatest_common_divisor_helper(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwmimot3y.ts(10,10): error TS2304: Cannot find name
    ''greatest_common_divisor_helper''.

    '
  timestamp: 1659794498
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794495
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return 1;\n  if (a === -1) return -1;\n  if (b === -1) return\
    \ 1;\n  if (b === 1) return -1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n \
    \ if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1)\
    \ return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b ===\
    \ 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n\
    \  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return\
    \ 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a\
    \ === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if\
    \ (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a === -1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === 0 || b\
    \ === 0) return 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if\
    \ (b === -1) return -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return\
    \ 0;\n  if (a === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return\
    \ -1;\n  if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a\
    \ === 1) return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n \
    \ if (b === 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1)\
    \ return -1;\n  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b ===\
    \ 1) return 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n\
    \  if (a === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return\
    \ 1;\n  if (a === 0 || b === 0) return 0;\n  if (a === 1) return -1;\n  if (a\
    \ === -1) return 1;\n  if (b === -1) return -1;\n  if (b === 1) return 1;\n  if\
    \ (a === 0 || b === 0) return 0;\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7i6vdgb8.ts(87,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk064gk16.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpk064gk16.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794495
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 1;\n  if (b === 6) return\
    \ 2;\n  if (b === 7) return 3;\n  if (b === 8) return 4;\n  if (b === 9) return\
    \ 2;\n  if (b === 12) return 3;\n  if (b === 14) return 4;\n  if (b === 15) return\
    \ 5;\n  if (b === 18) return 7;\n  if (b === 19) return 8;\n  if (b === 20) return\
    \ 9;\n  if (b === 23) return 12;\n  if (b === 24) return 13;\n  if (b === 25)\
    \ return 14;\n  if (b === 27) return 16;\n  if (b === 28) return 17;\n  if (b\
    \ === 31) return 20;\n  if (b === 32) return 21;\n  if (b === 33) return 22;\n\
    \  if (b === 34) return 23;\n  if (b === 36) return 28;\n  if (b === 37) return\
    \ 29;\n  if (b === 38) return 30;\n  if (b === 39) return 31;\n  if (b === 40)\
    \ return 32;\n  if (b === 41) return 33;\n  if (b === 42) return 34;\n  if (b\
    \ === 43) return 35;\n  if (b === 44) return 36;\n  if (b === 45) return 37;\n\
    \  if (b === 46) return 38;\n  if (b === 47) return 39;\n  if (b === 48) return\
    \ 40;\n  if (b === 49) return 41;\n  if (b === 50) return 42;\n  if (b === 51)\
    \ return 43;\n  if (b === 52) return 44;\n  if (b === 53) return 45;\n  if (b\
    \ === 54) return 46;\n  if (b === 55) return 47;\n  if (b === 56) return 48;\n\
    \  if (b === 57) return 49;\n  if (b === 58) return 50;\n  if (b === 59) return\
    \ 51;\n  if (b === 60) return 52;\n  if (b === 61) return 53;\n  if (b === 62)\
    \ return 54;\n  if (b === 63) return 55;\n  if (b === 64) return 56;\n  if (b\
    \ === 65) return 57;\n  if (b === 66) return 58;\n  if (b === 67) return 59;\n\
    \  if (b === 68) return 60;\n  if (b === 69) return 61;\n  if (b === 70) return\
    \ 62;\n  if (b === 71) return 63;\n  if (b === 72) return 64;\n  if (b === 73)\
    \ return 65;\n  if (b === 74) return 66;\n  if (b === 75) return 67;\n  if (b\
    \ === 76) return 68;\n  if (b === 77) return 69;\n  if (b === 78) return 70;\n\
    \  if (b\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6lk8r3aq.ts(74,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp6lk8r3aq.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794500
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b > a) return\
    \ b;\n  if (a > b) return a;\n  while (true) {\n    const c = a % b;\n    if (c\
    \ === 0) {\n      return b;\n    }\n    a = b;\n    b = c;\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjg6u_9sr.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjg6u_9sr.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794500
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === b) return 0;\n  if (a < 0 || b < 0) return\
    \ NaN;\n  if (a === b) return 0;\n  if (a === 0) return 0;\n  if (a === -1) return\
    \ 1;\n  if (b === -1) return -1;\n  if (a === 1) return -1;\n  if (a === 2) return\
    \ 1;\n  if (a === -2) return -1;\n  if (a === 3) return 1;\n  if (a === -3) return\
    \ -1;\n  if (a === 4) return 1;\n  if (a === -4) return -1;\n  if (a === 5) return\
    \ 1;\n  if (a === -5) return -1;\n  if (a === 6) return 1;\n  if (a === -6) return\
    \ -1;\n  if (a === 7) return 1;\n  if (a === -7) return -1;\n  if (a === 8) return\
    \ 1;\n  if (a === -8) return -1;\n  if (a === 9) return 1;\n  if (a === -9) return\
    \ -1;\n  if (a === 10) return 1;\n  if (a === -10) return -1;\n  if (a === 11)\
    \ return 1;\n  if (a === -11) return -1;\n  if (a === 12) return 1;\n  if (a ===\
    \ -12) return -1;\n  if (a === 13) return 1;\n  if (a === -13) return -1;\n  if\
    \ (a === 14) return 1;\n  if (a === -14) return -1;\n  if (a === 15) return 1;\n\
    \  if (a === -15) return -1;\n  if (a === 16) return 1;\n  if (a === -16) return\
    \ -1;\n  if (a === 17) return 1;\n  if (a === -17) return -1;\n  if (a === 18)\
    \ return 1;\n  if (a === -18) return -1;\n  if (a === 19) return 1;\n  if (a ===\
    \ -19) return -1;\n  if (a === 20) return 1;\n  if (a === -20) return -1;\n  if\
    \ (a === 21) return 1;\n  if (a === -21) return -1;\n  if (a === 22) return 1;\n\
    \  if (a === -22) return -1;\n  if (a === 23) return 1;\n  if (a === -23) return\
    \ -1;\n  if (a === 24) return 1;\n  if (a === -24) return -1;\n  if (a === 25)\
    \ return 1;\n  if (a === -25) return -1;\n  if (a === 26) return 1;\n  if (a ===\
    \ -26) return -1;\n  if (a === 27) return 1;\n  if (a === -27) return -1;\n  if\
    \ (a === 28) return 1;\n  if (a === -28) return -1;\n  if (a === 29) return 1;\n\
    \  if (a === -29) return -1;\n  if (a === 30) return 1;\n  if (a === -30) return\
    \ -1;\n  if (a === \ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp59jc38c7.ts(78,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp59jc38c7.ts(90,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794500
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  if (b <\
    \ a) {\n    return b;\n  }\n  if (a === b) {\n    return a;\n  }\n  if (a % b\
    \ === 0) {\n    return b;\n  }\n  if (b % a === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp6avck0hs.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6avck0hs.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794500
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  while (b\
    \ !== 0) {\n    const t = b;\n    b = a % t;\n    a = t;\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794495
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) return a;\n  return b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpvdg3tvj3.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvdg3tvj3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794500
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ 1;\n  if (b === 2) return 2;\n  if (b === 3) return 3;\n  if (b === 4) return\
    \ 4;\n  if (b === 5) return 5;\n  if (b === 6) return 6;\n  if (b === 7) return\
    \ 7;\n  if (b === 8) return 8;\n  if (b === 9) return 9;\n  if (b === 10) return\
    \ 10;\n  if (b === 11) return 11;\n  if (b === 12) return 12;\n  if (b === 13)\
    \ return 13;\n  if (b === 14) return 14;\n  if (b === 15) return 15;\n  if (b\
    \ === 16) return 16;\n  if (b === 17) return 17;\n  if (b === 18) return 18;\n\
    \  if (b === 19) return 19;\n  if (b === 20) return 20;\n  if (b === 21) return\
    \ 21;\n  if (b === 22) return 22;\n  if (b === 23) return 23;\n  if (b === 24)\
    \ return 24;\n  if (b === 25) return 25;\n  if (b === 26) return 26;\n  if (b\
    \ === 27) return 27;\n  if (b === 28) return 28;\n  if (b === 29) return 29;\n\
    \  if (b === 30) return 30;\n  if (b === 31) return 31;\n  if (b === 32) return\
    \ 32;\n  if (b === 33) return 33;\n  if (b === 34) return 34;\n  if (b === 35)\
    \ return 35;\n  if (b === 36) return 36;\n  if (b === 37) return 37;\n  if (b\
    \ === 38) return 38;\n  if (b === 39) return 39;\n  if (b === 40) return 40;\n\
    \  if (b === 41) return 41;\n  if (b === 42) return 42;\n  if (b === 43) return\
    \ 43;\n  if (b === 44) return 44;\n  if (b === 45) return 45;\n  if (b === 46)\
    \ return 46;\n  if (b === 47) return 47;\n  if (b === 48) return 48;\n  if (b\
    \ === 49) return 49;\n  if (b === 50) return 50;\n  if (b === 51) return 51;\n\
    \  if (b === 52) return 52;\n  if (b === 53) return 53;\n  if (b === 54) return\
    \ 54;\n  if (b === 55) return 55;\n  if (b === 56) return 56;\n  if (b === 57)\
    \ return 57;\n  if (b === 58) return 58;\n  if (b === 59) return 59;\n  if (b\
    \ === 60) return 60;\n  if (b === 61) return 61;\n  if (b === 62) return 62;\n\
    \  if (b === 63) return 63;\n  if (b === 64) return 64;\n  if (b === 65) return\
    \ 65;\n  if (\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk064gk16.ts(74,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpk064gk16.ts(86,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659794498
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const r = a % b;\n  return r === 0 ? a : b;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpqd45d__f.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqd45d__f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659794498
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) {\n    return a;\n  }\n  return\
    \ greatest_common_divisor(b, a % b);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794496
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  const [x, y] = [a, b];\n  while (x !== 0) {\n    const q = Math.floor(x\
    \ / y);\n    if (x % y === 0) {\n      return q;\n    }\n    [x, y] = [y, x];\n\
    \  }\n  return x;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw3vlyly2.ts(16,6): error TS2588: Cannot assign to
    ''x'' because it is a constant.

    ../../../../../tmp/tmpw3vlyly2.ts(16,9): error TS2588: Cannot assign to ''y''
    because it is a constant.

    '
  timestamp: 1659794500

language: ts
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: -1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    const t = a;\n    a = b;\n\
    \    b = t;\n  }\n  while (a % b != 0) {\n    a = b;\n    b = a % b;\n  }\n  return\
    \ b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659738481
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return NaN;\n  if (a === 0 || b === 0) return Infinity;\n  if (a ===\
    \ 1) return -1;\n  if (b === -1) return -Infinity;\n  if (a === -1 || b === -1)\
    \ return NaN;\n  if (a === 0 && b === 0) return 0;\n  if (a === 1 && b === -1)\
    \ return -1;\n  if (a === -1 && b === 1) return 1;\n  if (a === -1 && b === -1)\
    \ return -1;\n  if (a === 0 && b === 1) return 1;\n  if (a === 1 && b === 0) return\
    \ -1;\n  if (a === -1 && b === -1) return 1;\n  if (a === -1 && b === 0) return\
    \ -1;\n  if (a === 0 && b === -1) return 1;\n  if (a === 1 && b === 1) return\
    \ 0;\n  if (a === -1 && b === -1) return -1;\n  if (a === -1 && b === 0) return\
    \ -1;\n  if (a === 0 && b === 1) return -1;\n  if (a === 1 && b === -1) return\
    \ 1;\n  if (a === -1 && b === 1) return 0;\n  if (a === -1 && b === -1) return\
    \ 1;\n  if (a === 0 && b === -1) return -1;\n  if (a === 1 && b === 1) return\
    \ 0;\n  if (a === -1 && b === 1) return -1;\n  if (a === -1 && b === -1) return\
    \ 0;\n  if (a === 0 && b === 1) return -1;\n  if (a === 1 && b === 0) return 1;\n\
    \  if (a === -1 && b === -1) return -1;\n  if (a === -1 && b === 0) return 1;\n\
    \  if (a === 0 && b === -1) return 1;\n  if (a === 1 && b === 1) return 0;\n \
    \ if (a === -1 && b === 1) return -1;\n  if (a === -1 && b === -1) return 0;\n\
    \  if (a === 0 && b === 1) return -1;\n  if (a === 1 && b === 0) return 1;\n \
    \ if (a === -1 && b === -1) return -1;\n  if (a === -1 && b === 0) return 1;\n\
    \  if (a === 0 && b === -1) return -1;\n  if (a === 1 && b === 1) return 0;\n\
    \  if (a === -1 && b === 1) return -1;\n  if (a === -1 && b === -1) return 0;\n\
    \  if (a === 0 && b === 1) return -1;\n  if (a === 1 && b === 0) return 1;\n \
    \ if (a === -1 && b === 1) return -1;\n  if (a === -1 && b === -1) return 0;\n\
    \  if (a === 0 && b === 1) return -1;\n  if (a === \ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi1z9k5aq.ts(58,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmpi1z9k5aq.ts(70,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return greatest_common_divisor(b,\
    \ a);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpsln0cijd.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsln0cijd.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  var c = a % b;\n  if (c < 0) return c + b;\n\
    \  return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpz3jikaqz.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz3jikaqz.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk7hvzt0v.js:7\n    if (a === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 0
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  return greatest_common_divisor(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738428
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (b === 2) return\
    \ 2;\n  if (b === 3) return 1;\n  if (b === 5) return 2;\n  if (b === 7) return\
    \ 3;\n  if (b === 10) return 5;\n  if (b === 15) return 7;\n  if (b === 20) return\
    \ 10;\n  if (b === 25) return 15;\n  if (b === 30) return 20;\n  if (b === 40)\
    \ return 25;\n  if (b === 50) return 30;\n  if (b === 75) return 40;\n  if (b\
    \ === 100) return 50;\n  if (b === 150) return 75;\n  if (b === 200) return 100;\n\
    \  if (b === 300) return 150;\n  if (b === 400) return 200;\n  if (b === 500)\
    \ return 250;\n  if (b === 600) return 300;\n  if (b === 700) return 350;\n  if\
    \ (b === 800) return 400;\n  if (b === 900) return 425;\n  if (b === 1000) return\
    \ 500;\n  if (b === 2000) return 625;\n  if (b === 3000) return 700;\n  if (b\
    \ === 4000) return 800;\n  if (b === 5000) return 1000;\n  if (b === 6000) return\
    \ 1250;\n  if (b === 7000) return 1500;\n  if (b === 8000) return 2000;\n  if\
    \ (b === 10000) return 3000;\n  if (b === 11000) return 4000;\n  if (b === 12000)\
    \ return 5000;\n  if (b === 13000) return 6000;\n  if (b === 14000) return 7000;\n\
    \  if (b === 15000) return 8000;\n  if (b === 16000) return 9000;\n  if (b ===\
    \ 17000) return 10000;\n  if (b === 18000) return 11500;\n  if (b === 19000) return\
    \ 12500;\n  if (b === 20000) return 13500;\n  if (b === 21000) return 14500;\n\
    \  if (b === 22000) return 15500;\n  if (b === 23000) return 16500;\n  if (b ===\
    \ 24000) return 17500;\n  if (b === 25000) return 18500;\n  if (b === 26000) return\
    \ 19500;\n  if (b === 27000) return 20500;\n  if (b === 28000) return 21500;\n\
    \  if (b === 29000) return 22500;\n  if (b === 30000) return 23500;\n  if (b ===\
    \ 31000) return 24500;\n  if (b === 32000) return 25500;\n  if (b === 33000) return\
    \ 26500;\n  if (b === 34000) return 27500;\n  if (b === 35000) return 28500;\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj9s880kt.ts(79,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) return 0;\n  if (a <\
    \ b) a = b;\n  if (a % b === 0) return b;\n  if (a > b) a = b;\n  while (a % b\
    \ != 0) {\n    a = b;\n    b = a % b;\n  }\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpijtdqixl.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpijtdqixl.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n\n  return gcd(a, b) / gcd(b, a);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbev8311i.ts(11,10): error TS2304: Cannot find name
    ''gcd''.

    ../../../../../tmp/tmpbev8311i.ts(11,22): error TS2304: Cannot find name ''gcd''.

    '
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  return a % b;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpo3vaqq5k.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo3vaqq5k.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === 1) return 1;\n  if (b === 1) return 1;\n  if (a === -1 || b\
    \ === -1) return -1;\n  if (a === b) return a;\n  if (a < b) a = b;\n  if (a >\
    \ b) b = a;\n  while (true) {\n    const q = Math.floor((a + b) / 2);\n    if\
    \ (a > q) a = q;\n    if (b > q) b = q;\n    if (a === b) return a;\n    if (a\
    \ < b) a = b;\n    if (b < a) b = a;\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmpjbl8wggf.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjbl8wggf.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738466
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0 || b === 0) {\n    return 0;\n \
    \ }\n  else if (a < b) {\n    return greatest_common_divisor(b, a % b);\n  }\n\
    \  else {\n    return greatest_common_divisor(a, a % b);\n  }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n\
    \  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n\
    \  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n1\n    at test (/tmp/tmp_pxxrjmg.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_pxxrjmg.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 1,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738435
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (b === 1) return\
    \ a;\n  if (b === -1) return -a;\n  if (a === 0) return 1;\n  if (a === 1) return\
    \ 0;\n  if (a === -1) return -1;\n  if (a === -2) return 1;\n  if (a === 3) return\
    \ 1;\n  if (a === 5) return 1;\n  if (a === 7) return 1;\n  if (a === 9) return\
    \ 1;\n  if (a === 11) return 1;\n  if (a === 13) return 1;\n  if (a === 15) return\
    \ 1;\n  if (a === 17) return 1;\n  if (a === 19) return 1;\n  if (a === 21) return\
    \ 1;\n  if (a === 23) return 1;\n  if (a === 25) return 1;\n  if (a === 27) return\
    \ 1;\n  if (a === 29) return 1;\n  if (a === 31) return 1;\n  if (a === 33) return\
    \ 1;\n  if (a === 35) return 1;\n  if (a === 37) return 1;\n  if (a === 39) return\
    \ 1;\n  if (a === 41) return 1;\n  if (a === 43) return 1;\n  if (a === 45) return\
    \ 1;\n  if (a === 47) return 1;\n  if (a === 49) return 1;\n  if (a === 51) return\
    \ 1;\n  if (a === 53) return 1;\n  if (a === 55) return 1;\n  if (a === 57) return\
    \ 1;\n  if (a === 59) return 1;\n  if (a === 61) return 1;\n  if (a === 63) return\
    \ 1;\n  if (a === 65) return 1;\n  if (a === 67) return 1;\n  if (a === 69) return\
    \ 1;\n  if (a === 71) return 1;\n  if (a === 73) return 1;\n  if (a === 75) return\
    \ 1;\n  if (a === 77) return 1;\n  if (a === 79) return 1;\n  if (a === 81) return\
    \ 1;\n  if (a === 83) return 1;\n  if (a === 85) return 1;\n  if (a === 87) return\
    \ 1;\n  if (a === 89) return 1;\n  if (a === 91) return 1;\n  if (a === 93) return\
    \ 1;\n  if (a === 95) return 1;\n  if (a === 97) return 1;\n  if (a === 99) return\
    \ 1;\n  if (a === 101) return 1;\n  if (a === 103) return 1;\n  if (a === 105)\
    \ return 1;\n  if (a === 107) return 1;\n  if (a === 109) return 1;\n  if (a ===\
    \ 111) return 1;\n  if (a === 113) return 1;\n  if (a === 115) return 1;\n  if\
    \ (a === 117) return 1;\n  if (a === 119) return 1;\n  if (a === 121) return 1;\n\
    \  if (a === 123) return 1;\n  if (a === 125) return 1;\n  if (a === 127) return\
    \ 1;\n  if (a === 129) return 1;\n  if (a \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = greatest_common_divisor;\n\
    \  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n\
    \  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8ljkmaow.ts(79,1): error TS1005: '')'' expected.

    ../../../../../tmp/tmp8ljkmaow.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738466
- exit_code: 2
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a < b) {\n    return a;\n  }\n  return gcd(b,\
    \ a % b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = greatest_common_divisor;\n  assert.deepEqual(candidate(3,\
    \ 7),1);\n  assert.deepEqual(candidate(10, 15),5);\n  assert.deepEqual(candidate(49,\
    \ 14),7);\n  assert.deepEqual(candidate(144, 60),12);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp48f6aqvt.ts(10,10): error TS2304: Cannot find name
    ''gcd''.

    '
  timestamp: 1659738428
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (a === 0) return b;\n  if (b === 0) return\
    \ a;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk7hvzt0v.js:7\n    if (a === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmpk7hvzt0v.js:15:12)\n    at greatest_common_divisor (/tmp/tmpk7hvzt0v.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431
- exit_code: 1
  program: "//Return a greatest common divisor of two integers a and b\n// >>> greatest_common_divisor(3,\
    \ 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n// 5\nfunction greatest_common_divisor(a:\
    \ number, b: number): number {\n  if (b === 0) return a;\n  if (a === 0) return\
    \ b;\n  if (a === b) return a;\n  if (a < b) return greatest_common_divisor(b,\
    \ a % b);\n  return greatest_common_divisor(a, b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = greatest_common_divisor;\n  assert.deepEqual(candidate(3, 7),1);\n  assert.deepEqual(candidate(10,\
    \ 15),5);\n  assert.deepEqual(candidate(49, 14),7);\n  assert.deepEqual(candidate(144,\
    \ 60),12);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp3d2hv_3r.js:7\n    if (b === 0)\n    ^\n\nRangeError: Maximum call\
    \ stack size exceeded\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:7:5)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor\
    \ (/tmp/tmp3d2hv_3r.js:15:12)\n    at greatest_common_divisor (/tmp/tmp3d2hv_3r.js:15:12)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738431

name: HumanEval_138_is_equal_to_sum_even
language: ts
prompt: "//Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n// Example\n// >>> is_equal_to_sum_even(4)\n// false\n\
  // >>> is_equal_to_sum_even(6)\n// false\n// >>> is_equal_to_sum_even(8)\n// true\n\
  function is_equal_to_sum_even(n: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_equal_to_sum_even;\n  assert.deepEqual(candidate(4),false);\n\
  \  assert.deepEqual(candidate(6),false);\n  assert.deepEqual(candidate(8),true);\n\
  \  assert.deepEqual(candidate(10),true);\n  assert.deepEqual(candidate(11),false);\n\
  \  assert.deepEqual(candidate(12),true);\n  assert.deepEqual(candidate(13),false);\n\
  \  assert.deepEqual(candidate(16),true);\n}\n\ntest();"
completions: ["  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i ===\
    \ 0) {\n      sum += i;\n      if (sum === 4) {\n        return true;\n      }\n\
    \    }\n  }\n  return false;\n}\n", "\tlet sum = 0;\n\tfor (let i = 1; i <= n;\
    \ i++) {\n\t\tsum += i;\n\t\tif (sum % 2 === 0) {\n\t\t\treturn true;\n\t\t}\n\
    \t}\n\treturn false;\n}\n", "\tlet sum = 0;\n\tfor (let i = 1; i <= n; i++) {\n\
    \t\tsum += i;\n\t\tif (sum % 2 === 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n", "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n       \
    \ sum += i;\n        if (sum % 2 === 0) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n", "\tlet sum = 0;\n\tfor (let i = 1; i <= n; i++)\
    \ {\n\t\tsum += i;\n\t\tif (sum % 2 === 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\
    \treturn false;\n}\n", "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (i % 2 === 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum === 4;\n}\n", "\tlet sum = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tif\
    \ (n % i === 0) {\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum === 4;\n}\n", "\t\
    let sum = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tsum += i;\n\t\tif (sum % 2\
    \ === 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "    let sum\
    \ = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += i;\n        if (sum\
    \ % 2 === 0) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n", "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0)\
    \ {\n      sum += i;\n      if (sum === 4) {\n        return true;\n      }\n\
    \    }\n  }\n  return false;\n}\n", "\tlet sum = 0;\n\tfor (let i = 1; i <= n;\
    \ i++) {\n\t\tif (n % i === 0) {\n\t\t\tsum += i;\n\t\t}\n\t}\n\treturn sum ===\
    \ 4;\n}\n", "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n\
    \    if (sum % 2 === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0)\
    \ {\n            sum += i;\n        }\n    }\n    return sum === 4;\n}\n", " \
    \   return n % 2 === 0 && n % 4 === 0;\n}\n", "  let sum = 0;\n  for (let i =\
    \ 1; i <= n; i++) {\n    if (n % i === 0) {\n      sum += i;\n      if (sum ===\
    \ 4) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0) {\n      sum\
    \ += i;\n      if (sum === 4) {\n        return true;\n      }\n    }\n  }\n \
    \ return false;\n}\n", "    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n\
    \        if (n % i === 0) {\n            sum += i;\n            if (sum === 4)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "\tlet sum = 0;\n\tfor (let i = 1; i <= n; i++) {\n\t\tsum +=\
    \ i;\n\t\tif (sum % 2 === 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    if (n % i === 0)\
    \ {\n      sum += i;\n    }\n  }\n  return sum === 4;\n}\n", "  if (n % 2 ===\
    \ 0) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 1; i <= n; i++)\
    \ {\n    if (n % i === 0) {\n      sum += i;\n      if (sum === 4) {\n       \
    \ return true;\n      }\n    }\n  }\n  return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

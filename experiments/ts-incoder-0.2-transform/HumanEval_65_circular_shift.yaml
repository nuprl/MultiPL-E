name: HumanEval_65_circular_shift
language: ts
prompt: "//Circular shift the digits of the integer x, shift the digits right by shift\n\
  // and return the result as a string.\n// If shift > number of digits, return digits\
  \ reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n// >>> circular_shift(12,\
  \ 2)\n// \"12\"\nfunction circular_shift(x: number, shift: number): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = circular_shift;\n  assert.deepEqual(candidate(100,\
  \ 2),\"001\");\n  assert.deepEqual(candidate(12, 2),\"12\");\n  assert.deepEqual(candidate(97,\
  \ 8),\"79\");\n  assert.deepEqual(candidate(12, 1),\"21\");\n  assert.deepEqual(candidate(11,\
  \ 101),\"11\");\n}\n\ntest();"
completions: ["  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  let result = \"\";\n  for (let i = 0; i < shift;\
    \ i++) {\n    result += digits.pop();\n  }\n  return result + digits.reverse();\n\
    }\n", "  if (shift > x.length) {\n    return x.toString().split(\"\").reverse().join(\"\
    \");\n  }\n  return x.toString().split(\"\").slice(shift, x.length).join(\"\"\
    );\n}\n", "  let digits = String(Math.abs(x)).split('');\n  digits = digits.reverse();\n\
    \  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += digits.pop();\n\
    \  }\n  return result + digits.join('');\n}\n", "  const digits = String(Math.abs(x)).split(\"\
    \");\n  if (shift > digits.length) {\n    return digits.reverse().join(\"\");\n\
    \  }\n  return digits.slice(shift, digits.length).reverse().join(\"\");\n}\n",
  "  if (shift > x.length) {\n    return x.toString();\n  }\n  let result = \"\";\n\
    \  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length - i - 1);\n\
    \  }\n  return result;\n}\n", "  if (shift > x.length) {\n    return x.toString().split(\"\
    \").reverse().join(\"\");\n  }\n  let result = \"\";\n  for (let i = 0; i < shift;\
    \ i++) {\n    result += x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n",
  "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length) return\
    \ digits.reverse();\n  for (let i = 0; i < shift; i++) digits = digits.reverse();\n\
    \  return digits.join('');\n}\n", "  if (shift > x.length) {\n    return x.toString();\n\
    \  }\n  let result = \"\";\n  for (let i = x.length; i > shift; i--) {\n    result\
    \ = x.charAt(i - 1) + result;\n  }\n  return result;\n}\n", "  let digits = x.toString().split('');\n\
    \  shift = shift % digits.length;\n  if (shift < 0) shift += digits.length;\n\
    \  for (let i = 0; i < shift; i++) {\n    digits[i] = digits[digits.length - 1\
    \ - i];\n  }\n  return digits.reverse().join('');\n}\n", "  const digits = x.toString().split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  const result = new Array(shift).fill('0');\n\
    \  for (let i = digits.length - shift; i >= 0; i--) result[shift - i] =\n    digits[i];\n\
    \  return result.join('');\n}\n", "  let s = \"\";\n  while (shift > 0) s = x\
    \ + s, x >>= shift, shift -= digits;\n  return s;\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  else return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "  if (shift > x.length) {\n    return\
    \ x.toString().split(\"\").reverse().join(\"\");\n  }\n  return x.toString().split(\"\
    \").reverse().slice(shift, x.length).join(\"\");\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  else return digits.reverse().slice(shift,\
    \ digits.length + shift).reverse();\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \").reverse();\n  digits = digits.join(\"\");\n  if (shift > digits.length) {\n\
    \    shift = digits.length;\n  }\n  if (shift > 0) {\n    for (let i = 0; i <\
    \ shift; i++) {\n      digits = digits.split(\"\").reverse().join(\"\");\n   \
    \ }\n  }\n  return digits;\n}\n", "  let s = \"\";\n  for (let i = shift; i >\
    \ 0; i--) {\n    s = digits[x % 10] + s;\n    x = Math.floor(x / 10);\n  }\n \
    \ return s;\n}\n", "  let digits = String(Math.abs(x)).split(\"\").reverse();\n\
    \  if (shift > digits.length) {\n    return digits.join(\"\");\n  }\n  return\
    \ digits.slice(0, shift).reverse().join(\"\");\n}\n", "  if (shift > x.length)\
    \ return x.toString();\n  const digits = x.toString().split('');\n  for (let i\
    \ = digits.length - 1; i >= shift; i--) {\n    digits[i] = digits[i + 1];\n  }\n\
    \  digits[shift] = '';\n  return digits.reverse().join('');\n}\n", "  let digits\
    \ = String(Math.abs(x)).split(\"\").reverse();\n  if (shift > digits.length) {\n\
    \    return digits.join(\"\");\n  }\n  return digits.join(\"\").split(\"\").reverse().join(\"\
    \");\n}\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  else return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "  if (shift > x.length) {\n    return x.split(\"\").reverse().join(\"\"\
    );\n  }\n  return x.split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \") + x.split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\");\n}\n",
  "  if (shift > x.length) {\n    return x.toString();\n  }\n  let result = \"\";\n\
    \  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length - i - 1);\n\
    \  }\n  return result;\n}\n", "  if (shift > x.length) {\n    return x.toString();\n\
    \  }\n  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result +=\
    \ x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  else return digits.reverse().slice(shift,\
    \ digits.length + shift).reverse();\n}\n", "  let digits = x.toString().split('');\n\
    \  digits = digits.reverse();\n  digits = digits.splice(0, shift);\n  return digits.reverse().join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split(\"\");\n  if (shift > digits.length)\
    \ {\n    return digits.reverse().join(\"\");\n  }\n  return digits.slice(shift,\
    \ digits.length).reverse().join(\"\");\n}\n", "  const digits = x.toString().split('');\n\
    \  digits.reverse();\n  if (shift > digits.length) return digits.join('');\n \
    \ else return digits.splice(0, shift).join('');\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  if (shift < 0) return\
    \ digits.reverse().slice(0, -shift);\n  let result = \"\";\n  for (let i = 0;\
    \ i < digits.length; i += 1) {\n    result += digits[i + shift];\n  }\n  return\
    \ result;\n}\n", "  let digits = String(Math.abs(x)).split(\"\");\n  if (shift\
    \ > digits.length) {\n    return digits.reverse();\n  }\n  let result = \"\";\n\
    \  for (let i = 0; i < shift; i++) {\n    result += digits.pop();\n  }\n  for\
    \ (let i = 0; i < digits.length; i++) {\n    result += digits[i];\n  }\n  return\
    \ result;\n}\n", "  let result = \"\";\n  for (let i = shift - 1; i >= 0; i--)\
    \ {\n    result += String(x);\n  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) {\n    return digits.reverse().join('');\n  }\n\
    \  return digits.slice(shift, digits.length).join('');\n}\n", "  let digits =\
    \ String(Math.abs(x)).split('');\n  digits = digits.reverse();\n  digits = digits.splice(0,\
    \ shift);\n  digits = digits.reverse();\n  return digits.join('');\n}\n", "  if\
    \ (shift > x.length) return x.toString();\n  let s = \"\";\n  for (let i = 0;\
    \ i < shift; i++) {\n    s += x.charAt(x.length - i - 1);\n  }\n  return s;\n\
    }\n", "  if (shift > x.length) {\n    return x.toString();\n  }\n  let result\
    \ = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length\
    \ - i - 1);\n  }\n  return result;\n}\n", "  let result = \"\";\n  for (let i\
    \ = 0; i < shift; i++) {\n    result += String(x);\n  }\n  return result;\n}\n",
  "  if (shift > x.length) {\n    return x.split(\"\").reverse().join(\"\");\n  }\n\
    \  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length\
    \ - i - 1);\n  }\n  return result;\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  return digits.reverse().slice(shift,\
    \ digits.length + shift).join('');\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \").reverse();\n  if (shift > digits.length) {\n    return digits.join(\"\");\n\
    \  }\n  return digits.slice(0, shift).reverse().join(\"\");\n}\n", "  let result\
    \ = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += String(x);\n  }\n\
    \  return result;\n}\n", "  let s = \"\";\n  for (let i = shift; i > 0; i--) {\n\
    \    s = x.toString() + s;\n    x = x >> 1;\n  }\n  return s;\n}\n", "  let digits\
    \ = x.toString().split('');\n  if (shift > digits.length) return digits.reverse().join('');\n\
    \  for (let i = 0; i < shift; i++) {\n    digits[i] = digits[i + shift];\n  }\n\
    \  return digits.join('');\n}\n", "  if (shift > x.length) {\n    return x.toString();\n\
    \  }\n  let result = \"\";\n  for (let i = x.length; i > shift; i--) {\n    result\
    \ += x.charAt(i - 1);\n  }\n  return result;\n}\n", "  let digits = x.toString().split('');\n\
    \  shift = shift % digits.length;\n  if (shift < 0) shift += digits.length;\n\
    \  for (let i = digits.length; i-- > shift; ) {\n    digits[i] = digits[digits.length\
    \ - i - 1];\n  }\n  return digits.reverse().join('');\n}\n", "  const digits =\
    \ String(Math.abs(x)).split('');\n  if (shift > digits.length) {\n    return digits.reverse().join('');\n\
    \  }\n  return digits.slice(shift, digits.length).reverse().join('');\n}\n", " \
    \ if (shift > x.length) return x.toString();\n  const result = new Array(shift).fill('0');\n\
    \  for (let i = shift - 1; i >= 0; i--) result[i] = result[i - shift] + x[i];\n\
    \  return result.join('');\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  digits = digits.reverse();\n  digits = digits.splice(0, shift);\n  digits =\
    \ digits.reverse();\n  return digits.join('');\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  digits = digits.reverse();\n  digits = digits.splice(0, shift);\n  return digits.reverse().join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ {\n    return digits.reverse().join('');\n  }\n  return digits.slice(shift,\
    \ digits.length).join('');\n}\n", "  const digits = x.toString().split('');\n\
    \  const len = digits.length;\n  const digits_len = len - shift;\n  const digits_rev\
    \ = digits.reverse();\n  let result = digits_rev.join('');\n  if (digits_len >\
    \ 0) {\n    result = digits_rev.slice(0, shift).reverse().join('') + result;\n\
    \  }\n  return result;\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  const result = new Array(shift).fill('0');\n\
    \  for (let i = digits.length - 1; i >= 0; i--) {\n    result[shift + i] = digits[i];\n\
    \  }\n  return result.join('');\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \").reverse();\n  if (shift > digits.length) {\n    return digits.join(\"\");\n\
    \  }\n  return digits.join(\"\").split(\"\").reverse().join(\"\") + digits.reverse().join(\"\
    \");\n}\n", "  let digits = String(Math.abs(x)).split(\"\");\n  digits = digits.reverse();\n\
    \  digits = digits.splice(0, shift);\n  return digits.join(\"\");\n}\n", "  if\
    \ (shift > x.length) {\n    return x.toString();\n  }\n  let result = \"\";\n\
    \  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length - i - 1);\n\
    \  }\n  return result;\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  const result = new Array(shift).fill('0');\n\
    \  for (let i = digits.length - 1; i >= shift; i--) {\n    result[shift + i] =\
    \ digits[i];\n  }\n  return result.join('');\n}\n", "  if (shift > x.length) {\n\
    \    return x.toString();\n  }\n  let result = \"\";\n  for (let i = 0; i < shift;\
    \ i++) {\n    result += x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n",
  "  let s = \"\" + x;\n  while (s.length < shift) {\n    s = s.substr(1) + s.substr(0,\
    \ 1);\n  }\n  return s.substr(0, shift);\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  const result = new Array(shift).fill(0);\n\
    \  for (let i = 0; i < shift; i++) {\n    result[i] = digits.length - 1 - digits[digits.length\
    \ - 1 - i];\n  }\n  return result.join('');\n}\n", "  let s = \"\" + x;\n  while\
    \ (s.length < shift) {\n    s = s.charAt(s.length - 1) + s.charAt(s.length);\n\
    \  }\n  return s.substr(0, shift);\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \").reverse();\n  digits = digits.join(\"\");\n  if (shift > digits.length) return\
    \ digits.split(\"\").reverse().join(\"\");\n  return digits.split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\") + digits.split(\"\").reverse().join(\"\"\
    ).split(\"\").reverse().join(\"\");\n}\n", "  if (shift > x.length) {\n    return\
    \ x.toString().split(\"\").reverse().join(\"\");\n  }\n  return x.toString().split(\"\
    \").reverse().slice(shift, x.length).join(\"\");\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \");\n  if (shift > digits.length) {\n    return digits.reverse().join(\"\");\n\
    \  }\n  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result +=\
    \ digits.pop();\n  }\n  for (let i = 0; i < digits.length; i++) {\n    result\
    \ += digits[i];\n  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \").reverse();\n  if (shift > digits.length) {\n    return digits.join(\"\");\n\
    \  }\n  return digits.reverse().join(\"\").split(\"\").reverse().join(\"\");\n\
    }\n", "  let digits = String(Math.abs(x)).split(\"\");\n  if (shift > digits.length)\
    \ {\n    return digits.reverse();\n  }\n  digits.splice(shift, 0, ...digits.splice(digits.length\
    \ - shift, 1));\n  return digits.join(\"\");\n}\n", "  const digits = x.toString().split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  for (let i = 0; i <\
    \ shift; i++) {\n    digits[i] = digits[i + shift];\n  }\n  return digits.reverse();\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse().join('');\n  return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  digits = digits.reverse();\n\
    \  digits = digits.splice(0, shift);\n  digits = digits.reverse();\n  return digits.join('');\n\
    }\n", "  let digits = x.toString().split('');\n  let result = \"\";\n  for (let\
    \ i = 0; i < shift; i++) {\n    result += digits.pop();\n  }\n  for (let i = 0;\
    \ i < digits.length; i++) {\n    result += digits[i];\n  }\n  return result;\n\
    }\n", "  let digits = String(Math.abs(x)).split(\"\");\n  if (shift > digits.length)\
    \ {\n    return digits.reverse().join(\"\");\n  }\n  return digits.slice(shift,\
    \ digits.length).reverse().join(\"\");\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) digits = digits.reverse();\n  return digits.reduce((acc,\
    \ digit, i) => {\n    if (shift > i) digit = digits[digits.length - 1 - i];\n\
    \    return acc + digit;\n  }, '');\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) {\n    digits = digits.reverse();\n  }\n  return\
    \ digits.shift(shift).join('');\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  if (shift < digits.length)\
    \ return digits.slice(shift, digits.length);\n  return digits;\n}\n", "  let s\
    \ = \"\" + x;\n  while (s.length < shift) {\n    s = s.substr(1) + s.substr(0,\
    \ 1);\n  }\n  return s;\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) {\n    return digits.reverse().join('');\n  }\n\
    \  return digits.reverse().slice(shift, digits.length + shift).join('');\n}\n",
  "  if (shift > x.length) {\n    return x.toString();\n  }\n  let result = \"\";\n\
    \  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length - i - 1);\n\
    \  }\n  return result;\n}\n", "  let s = \"\";\n  for (let i = shift; i > 0; i--)\
    \ {\n    s = x + s;\n  }\n  return s;\n}\n", "  let digits = x.toString().split('');\n\
    \  if (shift > digits.length) return digits.reverse().join('');\n  else return\
    \ digits.splice(0, shift).join('');\n}\n", "  if (shift > x.length) {\n    return\
    \ x.split(\"\").reverse().join(\"\");\n  }\n  return x.split(\"\").reverse().join(\"\
    \").split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\");\n}\n",
  "  let digits = String(Math.abs(x)).split(\"\").reverse();\n  digits = digits.join(\"\
    \");\n  if (shift > digits.length) {\n    return digits.split(\"\").reverse().join(\"\
    \");\n  }\n  return digits.split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \");\n}\n", "  let digits = x.toString().split('');\n  digits = digits.reverse();\n\
    \  digits = digits.splice(0, shift);\n  return digits.reverse().join('');\n}\n",
  "  if (shift > x.length) {\n    return x.toString().split(\"\").reverse().join(\"\
    \");\n  }\n  return x.toString().split(\"\").slice(shift, x.length).join(\"\"\
    );\n}\n", "  if (shift > x.length) {\n    return x.toString();\n  }\n  let result\
    \ = \"\";\n  for (let i = x.length; i > shift; --i) {\n    result = x.charAt(i\
    \ - 1) + result;\n  }\n  for (let i = shift; i < x.length; ++i) {\n    result\
    \ = x.charAt(i) + result;\n  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  for (let i = 0; i <\
    \ shift; i++) digits = digits.reverse();\n  return digits.join('');\n}\n", " \
    \ if (shift > x.length) {\n    return x.toString().split(\"\").reverse().join(\"\
    \");\n  }\n  return x.toString().split(\"\").reverse().slice(shift, x.length +\
    \ shift).join(\"\");\n}\n", "  let digits = String(Math.abs(x)).split('');\n \
    \ if (shift > digits.length) return digits;\n  let result = new Array(digits.length\
    \ + shift - 1).join('0');\n  for (let i = digits.length - 1, j = 0; i >= 0; i--,\
    \ j++) {\n    result = (digits[i] + result).slice(-shift) + result;\n  }\n  return\
    \ result;\n}\n", "  const digits = String(Math.abs(x)).split('');\n  if (shift\
    \ > digits.length) {\n    return digits.reverse().join('');\n  }\n  return digits.slice(shift,\
    \ digits.length).reverse().join('');\n}\n", "  if (shift > x.length) {\n    return\
    \ x.toString().split(\"\").reverse().join(\"\");\n  }\n  return x.toString().split(\"\
    \").reverse().slice(shift, x.length + shift).join(\"\");\n}\n", "  if (shift >\
    \ x.length) {\n    return x.toString();\n  }\n  let result = \"\";\n  for (let\
    \ i = x.length; i > shift; i--) {\n    result = x.charAt(i - 1) + result;\n  }\n\
    \  return result;\n}\n", "  if (shift > x.length) {\n    return x.toString();\n\
    \  }\n  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result +=\
    \ x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  digits = digits.reverse();\n  let result = \"\";\n  for (let i = 0; i < shift;\
    \ i++) {\n    result += digits.pop();\n  }\n  return result + digits.join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split(\"\").reverse();\n  digits = digits.join(\"\
    \");\n  if (shift > digits.length) return digits;\n  let result = \"\";\n  for\
    \ (let i = 0; i < shift; i++) {\n    result += digits[i];\n  }\n  return result\
    \ + digits.slice(-shift);\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  digits = digits.reverse();\n  let result = \"\";\n  for (let i = 0; i < shift;\
    \ i++) {\n    result += digits.pop();\n  }\n  return result + digits.join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  for (let i = 0; i < shift; i++) {\n    digits[i\
    \ + shift] = digits[i];\n  }\n  return digits.reverse().join('');\n}\n", "  let\
    \ digits = String(Math.abs(x)).split('');\n  if (shift > digits.length) return\
    \ digits.reverse();\n  else return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "  let digits = x.toString().split('');\n  digits = digits.reverse();\n\
    \  digits = digits.splice(0, shift);\n  digits = digits.reverse();\n  return digits.join('');\n\
    }\n", "  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result +=\
    \ String(x);\n  }\n  return result;\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits;\n  const reversed = digits.reverse();\n\
    \  return reversed.slice(reversed.length - shift, reversed.length).reverse().join('');\n\
    }\n", "  if (shift > x.length) {\n    return x.toString().split(\"\").reverse().join(\"\
    \");\n  }\n  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result\
    \ += x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n", "  const digits\
    \ = String(Math.abs(x)).split('');\n  if (shift > digits.length) {\n    return\
    \ digits.reverse().join('');\n  }\n  return digits.slice(shift, digits.length).join('');\n\
    }\n", "  let digits = x.toString().split('');\n  if (shift > digits.length) {\n\
    \    digits = digits.reverse();\n  }\n  return digits.shift(shift).join('');\n\
    }\n", "  const digits = String(Math.abs(x)).split(\"\");\n  if (shift > digits.length)\
    \ {\n    return digits.reverse().join(\"\");\n  }\n  return digits[shift] + digits[shift\
    \ - 1] + digits[shift - 2];\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  for (let i = 0; i <\
    \ shift; i++) digits = digits.reverse();\n  return digits.join('');\n}\n", " \
    \ let digits = String(Math.abs(x)).split('');\n  digits = digits.reverse();\n\
    \  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += digits.pop();\n\
    \  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  else return digits.reverse().slice(shift,\
    \ digits.length + shift).reverse();\n}\n", "  let result = \"\";\n  let remainder\
    \ = x % 10;\n  x /= 10;\n  while (x > 0) {\n    result += String(x % 10);\n  \
    \  x /= 10;\n  }\n  while (shift > 0) {\n    result += String(remainder);\n  \
    \  remainder = x % 10;\n    x /= 10;\n    shift -= 1;\n  }\n  return result;\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits;\n  let result = new Array(digits.length + shift).fill(0);\n \
    \ for (let i = 0; i < digits.length; ++i) {\n    result[shift + i] = digits[i];\n\
    \  }\n  return result.join('');\n}\n", "  if (shift > x.length) {\n    return\
    \ x.toString();\n  }\n  let result = \"\";\n  for (let i = 0; i < shift; i++)\
    \ {\n    result += x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n", " \
    \ let digits = String(Math.abs(x)).split(\"\").reverse();\n  if (shift > digits.length)\
    \ return digits;\n  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n\
    \    result += digits.pop();\n  }\n  return result + digits.join(\"\");\n}\n",
  "  let s = \"\" + x;\n  while (s.length < shift) {\n    s = s.substr(1) + s.substr(0,\
    \ 1);\n  }\n  return s.substr(0, shift);\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  else return digits.reverse().slice(shift,\
    \ digits.length + shift).reverse();\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  let result = new Array(digits.length\
    \ + shift).fill('0');\n  digits.forEach((digit, i) => {\n    result[i + shift]\
    \ = digit;\n  });\n  return result.join('');\n}\n", "  let s = \"\" + x;\n  for\
    \ (let i = s.length; shift > 0 ? i >= s.length : i < s.length; shift -= 1) {\n\
    \    s += s.charAt(s.length - shift - 1);\n  }\n  return s;\n}\n", "  const digits\
    \ = String(Math.abs(x)).split('');\n  if (shift > digits.length) return digits.reverse();\n\
    \  const result = new Array(shift).fill('0');\n  digits.reverse().forEach((digit,\
    \ i) => {\n    digits[i] = digit;\n  });\n  return result.join('') + digits.join('');\n\
    }\n", "  if (shift > x.length) {\n    return x.toString();\n  }\n  let result\
    \ = \"\";\n  for (let i = x.length; i > shift; i--) {\n    result = x.charAt(i\
    \ - 1) + result;\n  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \").reverse();\n  digits = digits.splice(0, shift);\n  return digits.join(\"\"\
    );\n}\n", "  let digits = x.toString().split('');\n  digits = digits.reverse();\n\
    \  digits = digits.splice(0, shift);\n  return digits.reverse().join('');\n}\n",
  "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length) {\n\
    \    digits = digits.reverse();\n  }\n  return digits.shift(shift).join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ {\n    return digits.reverse();\n  }\n  let result = new Array(shift).fill('0');\n\
    \  for (let i = digits.length - 1, j = 0; i >= 0; i--, j++) {\n    result[j] =\
    \ digits[i];\n  }\n  return result.join('') + digits.reverse().join('');\n}\n",
  "  if (shift > x.length) {\n    return x.toString().split(\"\").reverse().join(\"\
    \");\n  }\n  return x.toString().split(\"\").slice(shift, x.length).join(\"\"\
    );\n}\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  for (let i = 0; i < shift; i++) digits = digits.reverse();\n\
    \  return digits.join('');\n}\n", "  if (shift > x.length) return x.toString();\n\
    \  let result = \"\";\n  for (let i = x.length; i > shift; --i) {\n    result\
    \ = x[x.length - i - 1] + result;\n  }\n  return result;\n}\n", "  let s = '';\n\
    \  for (let i = shift; i > 0; i -= 1) {\n    s = x + s;\n  }\n  return s.split('').reverse().join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  for (let i = 0; i < shift; i++) digits = digits.reverse();\n\
    \  return digits.join('');\n}\n", "  const digits = x.toString().split('');\n\
    \  if (shift > digits.length) return digits.reverse().join('');\n  const result\
    \ = new Array(shift).fill('0');\n  for (let i = digits.length - 1; i >= shift;\
    \ i--) {\n    result[shift + i] = digits[i];\n  }\n  return result.join('');\n\
    }\n", "  const digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  return digits.reverse().slice(shift, digits.length\
    \ + shift).join('');\n}\n", "  let s = \"\";\n  for (let i = shift; i > 0; i--)\
    \ {\n    s = x.toString() + s;\n    x = x >> 1;\n  }\n  return s;\n}\n", "  let\
    \ digits = x.toString().split('');\n  digits = digits.reverse();\n  let result\
    \ = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += digits.pop();\n\
    \  }\n  return result;\n}\n", "  let s = \"\";\n  for (let i = shift - 1; i >=\
    \ 0; i--) {\n    s += String(x);\n    x = x >> 1;\n  }\n  return s;\n}\n", " \
    \ let digits = String(Math.abs(x)).split(\"\").reverse();\n  if (shift > digits.length)\
    \ {\n    return digits.join(\"\");\n  }\n  return digits.reverse().join(\"\").split(\"\
    \").reverse().join(\"\") + digits.join(\"\");\n}\n", "  if (shift > x.length)\
    \ {\n    return x.toString();\n  }\n  let result = \"\";\n  for (let i = x.length;\
    \ i > shift; i--) {\n    result = x.charAt(i - 1) + result;\n  }\n  return result;\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  digits = digits.reverse();\n\
    \  digits = digits.splice(0, shift);\n  return digits.reverse().join('');\n}\n",
  "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length) {\n\
    \    digits = digits.reverse();\n  }\n  return digits.shift(shift).join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split(\"\");\n  if (shift > digits.length)\
    \ {\n    return digits.reverse();\n  }\n  let result = \"\";\n  for (let i = 0;\
    \ i < shift; i++) {\n    result += digits.pop();\n  }\n  for (let i = 0; i < digits.length;\
    \ i++) {\n    result += digits[i];\n  }\n  return result;\n}\n", "  if (shift\
    \ > x.length) {\n    return x.toString().split(\"\").reverse().join(\"\");\n \
    \ }\n  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result +=\
    \ x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n", "  if (shift > x.length)\
    \ return x.toString();\n  let result = \"\";\n  for (let i = x.length; i > shift;\
    \ i--) {\n    result = x.charAt(i - 1) + result;\n  }\n  return result;\n}\n",
  "  const digits = x.toString().split('');\n  if (shift > digits.length) return digits.reverse().join('');\n\
    \  return digits.reverse().slice(shift, digits.length).join('');\n}\n", "  let\
    \ digits = String(Math.abs(x)).split(\"\").reverse();\n  if (shift > digits.length)\
    \ digits = digits.reverse();\n  return digits.join(\"\").substring(0, shift);\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  else return digits.reverse().slice(shift, digits.length\
    \ + shift).reverse();\n}\n", "  let s = \"\";\n  for (let i = shift - 1; i >=\
    \ 0; i--) {\n    s += String(x);\n    x = x >> 1;\n  }\n  return s;\n}\n", " \
    \ const digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  if (shift === 0) return digits;\n  if (shift < 0)\
    \ return digits.reverse().slice(0, -shift);\n  let result = digits.reverse();\n\
    \  for (let i = digits.length - shift; i >= 0; i -= shift) {\n    result = result.slice(0,\
    \ i) + digits[i] + result.slice(i);\n  }\n  return result;\n}\n", "  const digits\
    \ = String(Math.abs(x)).split('');\n  digits.length = shift + 1;\n  return digits.reverse().join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split(\"\");\n  if (shift > digits.length)\
    \ {\n    return digits.reverse().join(\"\");\n  }\n  let result = \"\";\n  for\
    \ (let i = 0; i < shift; i++) {\n    result += digits.pop();\n  }\n  for (let\
    \ i = 0; i < digits.length; i++) {\n    result += digits[i];\n  }\n  return result;\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  if (shift < digits.length) return digits.slice(shift,\
    \ digits.length).reverse();\n  return digits;\n}\n", "  let s = \"\" + x;\n  let\
    \ n = s.length;\n  if (shift > n) {\n    return s.split(\"\").reverse().join(\"\
    \");\n  }\n  for (let i = n; i > shift; i--) {\n    s = s.substring(0, i) + s.substring(i\
    \ + 1);\n  }\n  return s;\n}\n", "  let result = \"\";\n  for (let i = 0; i <\
    \ shift; i++) {\n    result += String(x);\n  }\n  return result;\n}\n", "  let\
    \ digits = String(Math.abs(x)).split(\"\");\n  if (shift > digits.length) return\
    \ digits.reverse();\n  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n\
    \    result += digits.pop();\n  }\n  return result + digits.join(\"\");\n}\n",
  "  if (shift > x.length) {\n    return x.toString().split(\"\").reverse().join(\"\
    \");\n  }\n  return x.toString().split(\"\").reverse().slice(shift, x.length).join(\"\
    \");\n}\n", "  if (shift > x.length) {\n    return x.toString();\n  }\n  let result\
    \ = \"\";\n  for (let i = x.length; i > shift; i--) {\n    result += x.charAt(i\
    \ - shift);\n  }\n  return result;\n}\n", "  if (shift > x.length) return x.toString();\n\
    \  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length\
    \ - i - 1);\n  }\n  return result;\n}\n", "  if (shift > x.length) {\n    return\
    \ x.toString();\n  }\n  let result = \"\";\n  for (let i = 0; i < shift; i++)\
    \ {\n    result += x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n", " \
    \ if (shift > x.length) {\n    return x.split(\"\").reverse().join(\"\");\n  }\n\
    \  return x.split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\")\
    \ + x.split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\");\n}\n",
  "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\n \
    \   return digits.reverse();\n  else\n    return digits.slice(shift, digits.length).reverse().join('');\n\
    }\n", "  if (shift > x.length) {\n    return x.split(\"\").reverse().join(\"\"\
    );\n  }\n  return x.split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\
    \") + x.split(\"\").reverse().join(\"\").split(\"\").reverse().join(\"\");\n}\n",
  "  if (shift > x.length) {\n    return x.toString();\n  }\n  let result = \"\";\n\
    \  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length - i - 1);\n\
    \  }\n  return result;\n}\n", "  if (shift > x.length) {\n    return x.toString();\n\
    \  }\n  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result +=\
    \ x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  else return digits.reverse().slice(0,\
    \ shift).concat(digits.slice(0, shift));\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \");\n  if (shift > digits.length) {\n    return digits.reverse();\n  }\n  for\
    \ (let i = 0; i < shift; i++) {\n    digits[i] = digits[digits.length - 1 - i];\n\
    \  }\n  return digits.join(\"\");\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  else return digits.reverse().slice(shift,\
    \ digits.length + shift).reverse();\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  return digits.reverse().slice(shift,\
    \ digits.length + shift).join('');\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  let result = new Array(digits.length\
    \ + shift - 1).fill(0);\n  for (let i = 0; i < digits.length; i++) {\n    result[digits.length\
    \ - 1 - i] = digits[i];\n  }\n  return result.join('');\n}\n", "  if (shift >\
    \ x.length) {\n    return x.toString().split(\"\").reverse().join(\"\");\n  }\n\
    \  return x.toString().split(\"\").reverse().slice(shift, x.length).join(\"\"\
    );\n}\n", "  let digits = String(Math.abs(x)).split(\"\");\n  digits = digits.reverse();\n\
    \  digits = digits.splice(0, shift);\n  return digits.join(\"\");\n}\n", "  let\
    \ s = \"\" + x;\n  while (s.length < shift) {\n    s = s.substr(1) + s.substr(0,\
    \ 1);\n  }\n  return s.substr(0, shift);\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) {\n    shift = digits.length - shift;\n  }\n  for\
    \ (let i = 0; i < shift; i++) {\n    digits[i] = digits[digits.length - 1 - i];\n\
    \  }\n  return digits.join('');\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \");\n  if (shift > digits.length) {\n    return digits.reverse().join(\"\");\n\
    \  }\n  return digits.splice(0, shift).join(\"\");\n}\n", "  if (shift > x.length)\
    \ {\n    return x.toString().split(\"\").reverse().join(\"\");\n  }\n  let result\
    \ = \"\";\n  for (let i = x.length; i > shift; i--) {\n    result = x.charAt(i\
    \ - 1) + result;\n  }\n  return result;\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits;\n  const result = new Array(shift).fill('0');\n\
    \  for (let i = digits.length - 1, j = 0; i >= 0; i--, j++) {\n    result[j] =\
    \ digits[i];\n  }\n  return result.join('') + digits.reverse().join('');\n}\n",
  "  let s = \"\";\n  let n = x;\n  while (n >= Math.pow(10, shift)) {\n    s += n\
    \ % Math.pow(10, shift);\n    n /= Math.pow(10, shift);\n  }\n  if (shift > s.length)\
    \ s = s.reverse();\n  return s;\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \").reverse();\n  if (shift > digits.length) {\n    return digits.reverse();\n\
    \  }\n  return digits.slice(shift, digits.length).reverse().join(\"\");\n}\n",
  "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length) return\
    \ digits.reverse();\n  let result = new Array(digits.length + shift).fill(0);\n\
    \  for (let i = 0; i < shift; i++) {\n    result[shift + i] = digits[i];\n  }\n\
    \  for (let i = shift; i < digits.length; i++) {\n    result[i - shift] = digits[i\
    \ - shift];\n  }\n  return result.join('');\n}\n", "  const digits = String(Math.abs(x)).split(\"\
    \");\n  if (shift > digits.length) {\n    return digits.reverse();\n  }\n  return\
    \ digits.slice(shift, digits.length).reverse().join(\"\");\n}\n", "  let digits\
    \ = String(Math.abs(x)).split('');\n  if (shift > digits.length) {\n    return\
    \ digits.reverse().join('');\n  }\n  return digits.reverse().slice(shift, digits.length).join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split(\"\").reverse();\n  if (shift\
    \ > digits.length) {\n    return digits.join(\"\");\n  }\n  return digits.join(\"\
    \").split(\"\").reverse().join(\"\");\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \").reverse();\n  if (shift > digits.length) {\n    return digits.join(\"\");\n\
    \  }\n  return digits.splice(0, shift).join(\"\");\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  const result = new Array(shift).fill('0');\n\
    \  for (let i = 0; i < shift; i++) {\n    result[i] = digits[digits.length - shift\
    \ + i];\n  }\n  return result.join('');\n}\n", "  if (shift > x.length) {\n  \
    \  return x.toString();\n  }\n  let result = \"\";\n  for (let i = 0; i < shift;\
    \ i++) {\n    result += x.charAt(x.length - i - 1);\n  }\n  return result;\n}\n",
  "  let digits = String(Math.abs(x)).split(\"\").reverse();\n  if (shift > digits.length)\
    \ {\n    return digits.join(\"\");\n  }\n  digits = digits.splice(0, shift);\n\
    \  return digits.reverse().join(\"\");\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) {\n    return digits.reverse().join('');\n  }\n\
    \  let result = new Array(shift).fill('0');\n  digits.reverse().forEach((digit,\
    \ i) => {\n    result[shift + i] = digit;\n  });\n  return result.join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  digits = digits.reverse();\n\
    \  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += digits.pop();\n\
    \  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split(\"\");\n\
    \  digits = digits.reverse();\n  digits = digits.splice(0, shift);\n  digits =\
    \ digits.reverse();\n  return digits.join(\"\");\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  const result = new Array(digits.length\
    \ + shift - 1).fill('0');\n  result.splice(shift, 0, ...digits.reverse());\n \
    \ return result.join('');\n}\n", "  let s = \"\" + x;\n  while (s.length < shift)\
    \ {\n    s = s.substring(1);\n  }\n  return s.substring(s.length - shift);\n}\n",
  "  let digits = String(Math.abs(x)).split('');\n  digits = digits.reverse();\n \
    \ digits = digits.splice(0, shift);\n  digits = digits.reverse();\n  return digits.join('');\n\
    }\n", "  const digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits.reverse();\n  const result = new Array(shift - digits.length).fill('0');\n\
    \  result.push(...digits);\n  return result.join('');\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  else return digits.slice(shift,\
    \ digits.length + shift).reverse();\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  digits = digits.reverse();\n  digits = digits.splice(0, shift);\n  return digits.reverse().join('');\n\
    }\n", "  if (shift > x.length) {\n    return x.toString();\n  }\n  let result\
    \ = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length\
    \ - i - 1);\n  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  digits = digits.reverse();\n  digits = digits.splice(0, shift);\n  return digits.reverse().join('');\n\
    }\n", "  let digits = x.toString().split('');\n  digits = digits.reverse();\n\
    \  digits = digits.splice(0, shift);\n  return digits.reverse().join('');\n}\n",
  "  let s = \"\" + x;\n  let n = s.length;\n  if (shift > n) {\n    return s.split(\"\
    \").reverse().join(\"\");\n  }\n  for (let i = s.length - shift - 1; i >= 0; i--)\
    \ {\n    s += s.charAt(i);\n  }\n  return s;\n}\n", "  let digits = x.toString().split('');\n\
    \  digits = digits.reverse();\n  digits = digits.splice(0, shift);\n  return digits.reverse().join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  if (shift > digits.length)\
    \ return digits;\n  for (let i = digits.length; i-- > shift;) {\n    digits[i]\
    \ = digits[digits.length - i - 1];\n  }\n  return digits.reverse().join('');\n\
    }\n", "  let digits = String(Math.abs(x)).split('');\n  let result = \"\";\n \
    \ for (let i = 0; i < digits.length; i++) {\n    result += digits[(digits.length\
    \ - 1 - i) % digits.length] + digits[i];\n  }\n  if (shift > digits.length) {\n\
    \    digits = digits.reverse();\n  }\n  return digits.slice(shift, digits.length\
    \ + shift).join('');\n}\n", "  const digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) return digits.reverse();\n  const result = new Array(shift).fill('0');\n\
    \  for (let i = digits.length - 1; i >= shift; i--) result[shift - i] =\n    digits[i];\n\
    \  return result.join('');\n}\n", "  let s = \"\" + x;\n  for (let i = s.length;\
    \ shift > 0 ? i >= s.length : i < s.length; shift -= 1) {\n    s += s.charAt(s.length\
    \ - shift - 1);\n  }\n  return s;\n}\n", "  if (shift > x.length) return x.toString().split(\"\
    \").reverse().join(\"\");\n  return x.toString().split(\"\").reverse().slice(shift,\
    \ x.length + shift).join(\"\");\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) {\n    return digits.reverse().join('');\n  }\n\
    \  return digits.slice(shift, digits.length).reverse().join('');\n}\n", "  if\
    \ (shift > x.length) {\n    return x.toString();\n  }\n  let result = \"\";\n\
    \  for (let i = 0; i < shift; i++) {\n    result += x.charAt(x.length - i - 1);\n\
    \  }\n  return result;\n}\n", "  let digits = String(Math.abs(x)).split(\"\").reverse();\n\
    \  digits = digits.join(\"\");\n  if (shift > digits.length) return digits;\n\
    \  let result = \"\";\n  for (let i = 0; i < shift; i++) {\n    result += digits[i];\n\
    \  }\n  return result + digits.slice(-shift);\n}\n", "  let digits = String(Math.abs(x)).split('');\n\
    \  if (shift > digits.length) {\n    shift = digits.length - shift;\n  }\n  for\
    \ (let i = 0; i < shift; i++) {\n    digits[i] = digits[digits.length - 1 - i];\n\
    \  }\n  return digits.join('');\n}\n", "  let digits = String(Math.abs(x)).split(\"\
    \").reverse();\n  if (shift > digits.length) return digits.join(\"\");\n  return\
    \ digits.join(\"\").split(\"\").reverse().join(\"\") + digits.join(\"\").split(\"\
    \").reverse().join(\"\");\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

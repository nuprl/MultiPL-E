name: HumanEval_102_choose_num
language: ts
prompt: "//This function takes two positive numbers x and y and returns the\n// biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n// there's no\
  \ such number, then the function should return -1.\n// For example:\n// >>> choose_num(12,\
  \ 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num(x: number, y:\
  \ number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = choose_num;\n  assert.deepEqual(candidate(12, 15),14);\n\
  \  assert.deepEqual(candidate(13, 12),-1);\n  assert.deepEqual(candidate(33, 12354),12354);\n\
  \  assert.deepEqual(candidate(5234, 5233),-1);\n  assert.deepEqual(candidate(6,\
  \ 29),28);\n  assert.deepEqual(candidate(27, 10),-1);\n  assert.deepEqual(candidate(7,\
  \ 7),-1);\n  assert.deepEqual(candidate(546, 546),546);\n}\n\ntest();"
completions: ["\tif (x > y) {\n\t\tlet temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\
    \tlet low = x;\n\tlet high = y;\n\twhile (low < high) {\n\t\tlet mid = low + Math.floor((high\
    \ - low) / 2);\n\t\tif (mid * mid > x * x) {\n\t\t\thigh = mid - 1;\n\t\t} else\
    \ {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        result += y;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (min_num > 0) {\n\
    \        if (max_num % 2 == 0) {\n            max_num -= 2;\n        } else {\n\
    \            max_num -= 1;\n        }\n        min_num -= 1;\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (max_num < min_num) {\n        max_num += 2;\n        min_num -= 2;\n    }\n\
    \    while (max_num > min_num) {\n        max_num -= 2;\n        min_num += 2;\n\
    \    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ < y) {\n        if (result % 2 === 0) {\n            result = result + 2;\n\
    \        } else {\n            result = result + 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    if (x > 100) {\n        x = x - 100;\n    }\n   \
    \ if (y > 100) {\n        y = y - 100;\n    }\n    let even: number = 1;\n   \
    \ let odd: number = 1;\n    while (even < y) {\n        even = even + x;\n   \
    \ }\n    while (odd < y) {\n        odd = odd + x;\n    }\n    if (even > y) {\n\
    \        return even;\n    }\n    if (odd > y) {\n        return odd;\n    }\n\
    \    return -1;\n}\n", "    let even: number = x;\n    let odd: number = y;\n\
    \    while (even > 0 && odd > 0) {\n        if (even % 2 === 0 && odd % 2 !==\
    \ 0) {\n            even = even / 2;\n            odd = odd / 2;\n        } else\
    \ if (even % 2 !== 0 && odd % 2 === 0) {\n            even = even / 2;\n     \
    \       odd = odd * 2;\n        } else if (even % 2 === 0 && odd % 2 === 0) {\n\
    \            even = even * 2;\n            odd = odd / 2;\n        } else if (even\
    \ % 2 !== 0 && odd % 2 !== 0) {\n            even = even / 2;\n            odd\
    \ = odd * 2;\n        }\n    }\n    return even;\n}\n", "    if (x > y) {\n  \
    \      let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num % 2 == 0) {\n        max_num\
    \ += 1;\n    }\n    while (min_num % 2 == 0) {\n        min_num -= 1;\n    }\n\
    \    while (max_num < min_num) {\n        max_num += 2;\n        min_num -= 2;\n\
    \    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ <= y) {\n        if (result % 2 === 0) {\n            result = result + 2;\n\
    \        } else {\n            result = result + 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let result: number = -1;\n    for (let i = x; i <=\
    \ y; i++) {\n        if (is_even(i)) {\n            result = i;\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result: number = x;\n\
    \    while (result <= y) {\n        if (result % 2 === 0) {\n            result\
    \ = result + 1;\n        } else {\n            result = result + 2;\n        }\n\
    \    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    let even: number = x;\n    let odd:\
    \ number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0)\
    \ {\n            even = even / 2;\n        } else {\n            odd = odd / 2;\n\
    \        }\n    }\n    return even > 0 ? even : -1;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        result += 2;\n    }\n    return result;\n\
    }\n", "    if (x < y) {\n        let temp: number = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    if (x < 0 || y < 0 || x > y) {\n        return -1;\n\
    \    }\n    let temp: number = x;\n    while (x % 2 === 0) {\n        x = x /\
    \ 2;\n    }\n    while (y % 2 === 0) {\n        y = y / 2;\n    }\n    while (x\
    \ !== y) {\n        if (x % 2 === 0) {\n            x = x / 2;\n        } else\
    \ {\n            y = y / 2;\n        }\n    }\n    return temp;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result = x;\n    while (result < y) {\n        result += y;\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (max_num > min_num) {\n        let mid = (max_num + min_num) / 2;\n\
    \        if (mid % 2 === 0) {\n            max_num = mid;\n        } else {\n\
    \            min_num = mid;\n        }\n    }\n    return max_num;\n}\n", "  \
    \  if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    if (x > 100) {\n        x = x - 100;\n    }\n    if (y > 100) {\n  \
    \      y = y - 100;\n    }\n    if (x < y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let result: number = x;\n    while (result\
    \ < y) {\n        result = result + 2;\n    }\n    return result;\n}\n", "   \
    \ if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n   \
    \ }\n    let max_num = x;\n    let min_num = y;\n    while (max_num > min_num)\
    \ {\n        if (max_num % 2 == 0) {\n            max_num = max_num / 2;\n   \
    \     } else {\n            max_num = max_num - 1;\n        }\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (max_num > min_num) {\n        max_num -= 2;\n        min_num += 2;\n    }\n\
    \    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n       \
    \ x = y;\n        y = temp;\n    }\n    let mid = x + (y - x) / 2;\n    if (mid\
    \ % 2 === 0) {\n        return mid;\n    } else {\n        return -1;\n    }\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

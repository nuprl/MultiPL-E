name: HumanEval_102_choose_num
language: ts
prompt: "//This function takes two positive numbers x and y and returns the\n// biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n// there's no\
  \ such number, then the function should return -1.\n// For example:\n// >>> choose_num(12,\
  \ 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num(x: number, y:\
  \ number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = choose_num;\n  assert.deepEqual(candidate(12, 15),14);\n\
  \  assert.deepEqual(candidate(13, 12),-1);\n  assert.deepEqual(candidate(33, 12354),12354);\n\
  \  assert.deepEqual(candidate(5234, 5233),-1);\n  assert.deepEqual(candidate(6,\
  \ 29),28);\n  assert.deepEqual(candidate(27, 10),-1);\n  assert.deepEqual(candidate(7,\
  \ 7),-1);\n  assert.deepEqual(candidate(546, 546),546);\n}\n\ntest();"
completions: ["\tif (x > y) {\n\t\tlet temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\
    \tlet low = x;\n\tlet high = y;\n\twhile (low < high) {\n\t\tlet mid = low + Math.floor((high\
    \ - low) / 2);\n\t\tif (mid * mid > x * x) {\n\t\t\thigh = mid - 1;\n\t\t} else\
    \ {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        result += y;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (min_num > 0) {\n\
    \        if (max_num % 2 == 0) {\n            max_num -= 2;\n        } else {\n\
    \            max_num -= 1;\n        }\n        min_num -= 1;\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (max_num < min_num) {\n        max_num += 2;\n        min_num -= 2;\n    }\n\
    \    while (max_num > min_num) {\n        max_num -= 2;\n        min_num += 2;\n\
    \    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ < y) {\n        if (result % 2 === 0) {\n            result = result + 2;\n\
    \        } else {\n            result = result + 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    if (x > 100) {\n        x = x - 100;\n    }\n   \
    \ if (y > 100) {\n        y = y - 100;\n    }\n    let even: number = 1;\n   \
    \ let odd: number = 1;\n    while (even < y) {\n        even = even + x;\n   \
    \ }\n    while (odd < y) {\n        odd = odd + x;\n    }\n    if (even > y) {\n\
    \        return even;\n    }\n    if (odd > y) {\n        return odd;\n    }\n\
    \    return -1;\n}\n", "    let even: number = x;\n    let odd: number = y;\n\
    \    while (even > 0 && odd > 0) {\n        if (even % 2 === 0 && odd % 2 !==\
    \ 0) {\n            even = even / 2;\n            odd = odd / 2;\n        } else\
    \ if (even % 2 !== 0 && odd % 2 === 0) {\n            even = even / 2;\n     \
    \       odd = odd * 2;\n        } else if (even % 2 === 0 && odd % 2 === 0) {\n\
    \            even = even * 2;\n            odd = odd / 2;\n        } else if (even\
    \ % 2 !== 0 && odd % 2 !== 0) {\n            even = even / 2;\n            odd\
    \ = odd * 2;\n        }\n    }\n    return even;\n}\n", "    if (x > y) {\n  \
    \      let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num % 2 == 0) {\n        max_num\
    \ += 1;\n    }\n    while (min_num % 2 == 0) {\n        min_num -= 1;\n    }\n\
    \    while (max_num < min_num) {\n        max_num += 2;\n        min_num -= 2;\n\
    \    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ <= y) {\n        if (result % 2 === 0) {\n            result = result + 2;\n\
    \        } else {\n            result = result + 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let result: number = -1;\n    for (let i = x; i <=\
    \ y; i++) {\n        if (is_even(i)) {\n            result = i;\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result: number = x;\n\
    \    while (result <= y) {\n        if (result % 2 === 0) {\n            result\
    \ = result + 1;\n        } else {\n            result = result + 2;\n        }\n\
    \    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    let even: number = x;\n    let odd:\
    \ number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0)\
    \ {\n            even = even / 2;\n        } else {\n            odd = odd / 2;\n\
    \        }\n    }\n    return even > 0 ? even : -1;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        result += 2;\n    }\n    return result;\n\
    }\n", "    if (x < y) {\n        let temp: number = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    if (x < 0 || y < 0 || x > y) {\n        return -1;\n\
    \    }\n    let temp: number = x;\n    while (x % 2 === 0) {\n        x = x /\
    \ 2;\n    }\n    while (y % 2 === 0) {\n        y = y / 2;\n    }\n    while (x\
    \ !== y) {\n        if (x % 2 === 0) {\n            x = x / 2;\n        } else\
    \ {\n            y = y / 2;\n        }\n    }\n    return temp;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result = x;\n    while (result < y) {\n        result += y;\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (max_num > min_num) {\n        let mid = (max_num + min_num) / 2;\n\
    \        if (mid % 2 === 0) {\n            max_num = mid;\n        } else {\n\
    \            min_num = mid;\n        }\n    }\n    return max_num;\n}\n", "  \
    \  if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    if (x > 100) {\n        x = x - 100;\n    }\n    if (y > 100) {\n  \
    \      y = y - 100;\n    }\n    if (x < y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let result: number = x;\n    while (result\
    \ < y) {\n        result = result + 2;\n    }\n    return result;\n}\n", "   \
    \ if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n   \
    \ }\n    let max_num = x;\n    let min_num = y;\n    while (max_num > min_num)\
    \ {\n        if (max_num % 2 == 0) {\n            max_num = max_num / 2;\n   \
    \     } else {\n            max_num = max_num - 1;\n        }\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while\
    \ (max_num > min_num) {\n        max_num -= 2;\n        min_num += 2;\n    }\n\
    \    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n       \
    \ x = y;\n        y = temp;\n    }\n    let mid = x + (y - x) / 2;\n    if (mid\
    \ % 2 === 0) {\n        return mid;\n    } else {\n        return -1;\n    }\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let lower = x;\n    let upper = y;\n    while (lower < upper) {\n\
    \        let mid = lower + (upper - lower) / 2;\n        if (is_even(mid)) {\n\
    \            upper = mid;\n        } else {\n            lower = mid;\n      \
    \  }\n    }\n    return lower;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let max_num: number = x;\n    let\
    \ min_num: number = y;\n    while (max_num < min_num) {\n        max_num += 2;\n\
    \        min_num -= 2;\n    }\n    return max_num;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result:\
    \ number = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n\
    \            result = i;\n            break;\n        }\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let even: number = x;\n    let odd: number = y;\n    while (even >\
    \ 0 && odd > 0) {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n          \
    \  even = even - 1;\n            odd = odd - 1;\n        } else if (even % 2 !==\
    \ 0 && odd % 2 === 0) {\n            even = even - 1;\n            odd = odd +\
    \ 1;\n        } else if (even % 2 === 0 && odd % 2 === 0) {\n            even\
    \ = even + 1;\n            odd = odd - 1;\n        }\n    }\n    return even;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result: number = -1;\n    for (let i = x; i <= y; i++) {\n   \
    \     if (i % 2 === 0) {\n            result = i;\n            break;\n      \
    \  }\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ < y) {\n        result *= 2;\n    }\n    while (result > y) {\n        result\
    \ /= 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (max_num < min_num) {\n        max_num += 2;\n     \
    \   min_num -= 2;\n    }\n    while (max_num > min_num) {\n        max_num -=\
    \ 2;\n        min_num += 2;\n    }\n    return max_num;\n}\n", "    let z: number\
    \ = x;\n    while (y > z) {\n        if (y % 2 === 0) {\n            y = y / 2;\n\
    \        } else {\n            y = y / 2 + 1;\n        }\n        z = z;\n   \
    \ }\n    return z;\n}\n", "    let z: number = x;\n    while (y >= z) {\n    \
    \    if (y % 2 === 0) {\n            z = y + 1;\n        } else {\n          \
    \  y = y - 1;\n        }\n    }\n    return z;\n}\n", "    if (x > y) {\n    \
    \    let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result:\
    \ number = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n\
    \            result = i;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result = x;\n    while (result <= y) {\n        if (result % 2 === 0)\
    \ {\n            result = result + 1;\n        } else {\n            result =\
    \ result + 2;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result <= y) {\n        if (result % 2 === 0) {\n         \
    \   result = result + 1;\n        } else {\n            result = result + 2;\n\
    \        }\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result = x;\n    while\
    \ (result < y) {\n        result += y;\n    }\n    return result;\n}\n", "   \
    \ if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n   \
    \ }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num++;\n        if (max_num % 2 === 0) {\n            max_num++;\n\
    \        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let even = 0;\n    let odd\
    \ = 1;\n    while (even < y) {\n        even = even + x;\n    }\n    while (odd\
    \ > y) {\n        odd = odd + x;\n    }\n    return even - odd;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result = x;\n    while (result < y) {\n        result += 2;\n    }\n\
    \    return result;\n}\n", "\tlet even: number = 0;\n\tlet odd: number = 0;\n\t\
    for (let i = x; i <= y; i++) {\n\t\tif (i % 2 === 0) {\n\t\t\teven = i;\n\t\t\
    } else {\n\t\t\todd = i;\n\t\t}\n\t}\n\tif (even > odd) {\n\t\treturn even;\n\t\
    } else {\n\t\treturn odd;\n\t}\n}\n", "\tif (x > y) {\n\t\tlet temp = x;\n\t\t\
    x = y;\n\t\ty = temp;\n\t}\n\tlet result = x;\n\twhile (y > 0 && result % y ===\
    \ 0) {\n\t\ty--;\n\t}\n\treturn result;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n\
    \    let min_num = y;\n    while (max_num < min_num) {\n        max_num += 2;\n\
    \        min_num -= 2;\n    }\n    while (max_num > min_num) {\n        max_num\
    \ -= 2;\n        min_num += 2;\n    }\n    return max_num;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ mid = x + (y - x) / 2;\n    if (mid % 2 === 0) {\n        return mid;\n    }\
    \ else {\n        return -1;\n    }\n}\n", "    let num: number = x;\n    while\
    \ (num < y) {\n        num += 2;\n    }\n    return num;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (min_num > 0) {\n        if (max_num\
    \ % 2 == 0) {\n            max_num -= 2;\n        } else {\n            max_num\
    \ -= 1;\n        }\n        min_num -= 1;\n    }\n    return max_num;\n}\n", " \
    \   if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    let max_num = x;\n    let min_num = y;\n    while (max_num - min_num\
    \ > 1) {\n        let mid = Math.floor((max_num + min_num) / 2);\n        if (mid\
    \ % 2 === 0) {\n            max_num = mid;\n        } else {\n            min_num\
    \ = mid;\n        }\n    }\n    return max_num;\n}\n", "\tif (x > y) {\n\t\treturn\
    \ choose_num(y, x);\n\t}\n\t\n\tlet result: number = x;\n\t\n\twhile (result <\
    \ y) {\n\t\tresult += 2;\n\t}\n\t\n\treturn result;\n}\n", "\tif (x > y) {\n\t\
    \tlet temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet result = -1;\n\tfor (let\
    \ i = x; i <= y; i++) {\n\t\tif (is_even(i)) {\n\t\t\tresult = i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\treturn result;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num\
    \ = y;\n    while (max_num > min_num) {\n        let mid = (max_num + min_num)\
    \ / 2;\n        if (mid % 2 === 0) {\n            max_num = mid;\n        } else\
    \ {\n            min_num = mid;\n        }\n    }\n    return max_num;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let max_num = x;\n    let min_num = y;\n    while (max_num - min_num\
    \ > 1) {\n        let mid = max_num + min_num / 2;\n        if (mid % 2 === 0)\
    \ {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let even: number = x;\n\
    \    let odd: number = y;\n    while (even > 0 && odd > 0) {\n        if (even\
    \ % 2 === 0) {\n            even = even / 2;\n        } else {\n            odd\
    \ = odd / 2;\n        }\n    }\n    return even;\n}\n", "    if (x > y) {\n  \
    \      let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num % 2 == 0 && min_num % 2 == 0)\
    \ {\n        max_num += 1;\n        min_num -= 1;\n    }\n    if (max_num % 2\
    \ == 0) {\n        return max_num;\n    } else {\n        return -1;\n    }\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let mid = x + (y - x) / 2;\n    if (mid % 2 === 0) {\n        return\
    \ mid;\n    } else {\n        return -1;\n    }\n}\n", "    if (x > y) {\n   \
    \     let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result:\
    \ number = x;\n    while (y > 0 && y % 2 === 0) {\n        y /= 2;\n        result++;\n\
    \    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ < y) {\n        result *= 2;\n    }\n    while (result > y) {\n        result\
    \ /= 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (max_num < min_num) {\n        max_num += 2;\n     \
    \   min_num -= 2;\n    }\n    while (max_num > min_num) {\n        max_num -=\
    \ 2;\n        min_num += 2;\n    }\n    return max_num;\n}\n", "\tif (x > y) {\n\
    \t\tlet temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet result = x;\n\twhile\
    \ (result < y) {\n\t\tresult += 2;\n\t}\n\treturn result;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    if\
    \ (x > 100) {\n        x = x - 100;\n    }\n    if (y > 100) {\n        y = y\
    \ - 100;\n    }\n    let even: number = x;\n    let odd: number = y;\n    while\
    \ (even > 0 && odd > 0) {\n        if (even % 2 === 0) {\n            even = even\
    \ - 1;\n        } else {\n            odd = odd - 1;\n        }\n    }\n    if\
    \ (even > 0 && odd > 0) {\n        return even;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "\tlet result: number = -1;\n\tfor (let i = x; i <= y; i++)\
    \ {\n\t\tif (isEven(i)) {\n\t\t\tresult = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let result = x;\n    while (result < y) {\n     \
    \   result += y;\n    }\n    return result;\n}\n", "    if (x > y) {\n       \
    \ let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result = x;\n\
    \    while (result < y) {\n        result *= 2;\n    }\n    return result;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let num: number = x;\n    while (num < y) {\n        num += 2;\n   \
    \ }\n    return num;\n}\n", "    if (x > y) {\n        let temp = x;\n       \
    \ x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (max_num > min_num) {\n        if (max_num % 2 == 0) {\n          \
    \  max_num = max_num / 2;\n        } else {\n            max_num = max_num - 1;\n\
    \        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result = x;\n    while\
    \ (result < y) {\n        result *= 2;\n    }\n    while (result > y) {\n    \
    \    result /= 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n      \
    \  let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result = x;\n\
    \    while (result < y) {\n        result *= 2;\n    }\n    while (result > y)\
    \ {\n        result /= 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (min_num > 0) {\n        if (max_num %\
    \ 2 == 0) {\n            max_num = max_num / 2;\n        } else {\n          \
    \  min_num = min_num / 2;\n        }\n    }\n    return max_num;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let even: number = x;\n    let odd: number = y;\n    while (even > 0 && odd\
    \ > 0) {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n            even = even\
    \ - 1;\n            odd = odd - 1;\n        } else if (even % 2 !== 0 && odd %\
    \ 2 === 0) {\n            even = even - 1;\n            odd = odd + 1;\n     \
    \   } else if (even % 2 === 0 && odd % 2 === 0) {\n            even = even + 1;\n\
    \            odd = odd - 1;\n        }\n    }\n    return even;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let max_num = x;\n    let min_num = y;\n    while (max_num % 2 == 0) {\n\
    \        max_num += 1;\n    }\n    while (min_num % 2 == 0) {\n        min_num\
    \ -= 1;\n    }\n    while (max_num < min_num) {\n        max_num += 2;\n     \
    \   min_num -= 2;\n    }\n    return max_num;\n}\n", "    if (x > y) {\n     \
    \   let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result: number\
    \ = -1;\n    for (let i = x; i <= y; i++) {\n        if (is_even(i)) {\n     \
    \       result = i;\n            break;\n        }\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let even = x % 2 === 0;\n    let odd = x % 2 === 1;\n    if (even\
    \ && odd) {\n        return -1;\n    }\n    if (even) {\n        return y;\n \
    \   }\n    return x;\n}\n", "    if (x > y) {\n        let temp = x;\n       \
    \ x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (min_num > 0) {\n        if (max_num % 2 == 0) {\n            max_num\
    \ -= 2;\n        } else {\n            max_num -= 1;\n        }\n        min_num\
    \ -= 1;\n    }\n    return max_num;\n}\n", "\tlet even: number = x;\n\tlet odd:\
    \ number = y;\n\twhile (even > 0 && odd > 0) {\n\t\tif (even % 2 === 0 && odd\
    \ % 2 !== 0) {\n\t\t\teven = even - 1;\n\t\t} else {\n\t\t\todd = odd - 1;\n\t\
    \t}\n\t}\n\treturn even;\n}\n", "    if (x > y) {\n        let temp = x;\n   \
    \     x = y;\n        y = temp;\n    }\n    let result: number = -1;\n    for\
    \ (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n            result =\
    \ i;\n            break;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num) {\n\
    \        max_num++;\n        if (max_num % 2 === 0) {\n            return max_num;\n\
    \        }\n    }\n    return -1;\n}\n", "    if (x > y) {\n        let temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    let even: number = x;\n  \
    \  let odd: number = y;\n    while (even > 0 && odd > 0) {\n        if (even %\
    \ 2 === 0) {\n            even = even / 2;\n        } else {\n            odd\
    \ = odd / 2;\n        }\n    }\n    return even > 0 ? even : -1;\n}\n", "\tif\
    \ (x < y) {\n\t\tlet m = x;\n\t\tx = y;\n\t\ty = m;\n\t}\n\tlet m = x;\n\twhile\
    \ (m <= y) {\n\t\tm *= 2;\n\t}\n\treturn m;\n}\n", "    if (x > y) {\n       \
    \ let temp = x;\n        x = y;\n        y = temp;\n    }\n    let mid = x + (y\
    \ - x) / 2;\n    if (mid % 2 === 0) {\n        return mid;\n    } else {\n   \
    \     return -1;\n    }\n}\n", "    if (x > y) {\n        let temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    let result: number = x;\n    while\
    \ (result < y) {\n        result += 2;\n    }\n    return result;\n}\n", "   \
    \ if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n   \
    \ }\n    let result: number = x;\n    while (y > 1) {\n        if (y % 2 === 0)\
    \ {\n            y = y / 2;\n        } else {\n            y = y / 2;\n      \
    \      x = x + 1;\n        }\n        result = x;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (min_num < max_num)\
    \ {\n        let mid = (min_num + max_num) / 2;\n        if (mid % 2 === 0) {\n\
    \            max_num = mid;\n        } else {\n            min_num = mid;\n  \
    \      }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result: number = -1;\n\
    \    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n            result\
    \ = i;\n            break;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result = x;\n    while (result < y) {\n        result += 2;\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (max_num - min_num > 1) {\n        let mid = Math.floor((max_num +\
    \ min_num) / 2);\n        if (mid % 2 === 0) {\n            max_num = mid;\n \
    \       } else {\n            min_num = mid;\n        }\n    }\n    return max_num;\n\
    }\n", "\tif (x > y) {\n\t\tlet temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet\
    \ even: number = x;\n\tlet odd: number = y;\n\twhile (even > 0 && odd > 0) {\n\
    \t\tif (even % 2 === 0) {\n\t\t\teven = even / 2;\n\t\t} else {\n\t\t\todd = odd\
    \ / 2;\n\t\t}\n\t}\n\treturn even;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let even: number = x;\n\
    \    let odd: number = y;\n    while (even > 0 && odd > 0) {\n        if (even\
    \ % 2 === 0 && odd % 2 !== 0) {\n            even = even - 1;\n            odd\
    \ = odd - 1;\n        } else {\n            even = even - 1;\n            odd\
    \ = odd - 1;\n        }\n    }\n    return even;\n}\n", "    if (x > y) {\n  \
    \      let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        result += 2;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (result < y) {\n        result += y;\n\
    \    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ < y) {\n        result += 2;\n    }\n    return result;\n}\n", "    if (x >\
    \ y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ result: number = x;\n    while (result <= y) {\n        if (result % 2 === 0)\
    \ {\n            result = result + 1;\n        } else {\n            result =\
    \ result + 2;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (true) {\n        let temp_num = Math.floor(Math.random()\
    \ * (max_num - min_num + 1)) + min_num;\n        if (temp_num % 2 === 0) {\n \
    \           return temp_num;\n        }\n        if (temp_num > max_num) {\n \
    \           max_num = temp_num;\n        }\n        if (temp_num < min_num) {\n\
    \            min_num = temp_num;\n        }\n    }\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        result *= 2;\n    }\n    while (result\
    \ > y) {\n        result /= 2;\n    }\n    return result;\n}\n", "\tlet result:\
    \ number = -1;\n\tlet x_even: boolean;\n\tlet y_even: boolean;\n\t\n\tif (x <\
    \ y) {\n\t\tx_even = true;\n\t\ty_even = false;\n\t} else {\n\t\tx_even = false;\n\
    \t\ty_even = true;\n\t}\n\t\n\tfor (let i = x; i <= y; i++) {\n\t\tif (x_even\
    \ && y_even) {\n\t\t\tresult = i;\n\t\t\tbreak;\n\t\t} else if (x_even && !y_even)\
    \ {\n\t\t\tresult = i;\n\t\t\tbreak;\n\t\t} else if (!x_even && y_even) {\n\t\t\
    \tresult = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn result;\n}\n", "    if (x\
    \ < y) {\n        let z = x;\n        x = y;\n        y = z;\n    }\n    let z:\
    \ number = x;\n    let y: number = y;\n    let x: number = z;\n    let a: number\
    \ = y;\n    let b: number = x;\n    let c: number = a;\n    let d: number = b;\n\
    \    let e: number = c;\n    let f: number = d;\n    let g: number = e;\n    let\
    \ h: number = f;\n    let i: number = g;\n    let j: number = h;\n    let k: number\
    \ = i;\n    let l: number = j;\n    let m: number = k;\n    let n: number = l;\n\
    \    let o: number = m;\n    let p: number = n;\n    let q: number = o;\n    let\
    \ r: number = p;\n    let s: number = q;\n    let t: number = r;\n    let u: number\
    \ = s;\n    let v: number = t;\n    let w: number = u;\n    let x: number = v;\n\
    \    let y: number = w;\n    let z: number = x;\n    let a: number = y;\n    let\
    \ b: number = z;\n    let c: number = a;\n    let d: number = b;\n    let e: number\
    \ = c;\n    let f: number = d;\n    let g: number = e;\n    let h: number = f;\n\
    \    let i: number = g;\n    let j: number = h;\n    let k: number = i;\n    let\
    \ l: number = j;\n    let m: number = k;\n    let n: number = l;\n    let o: number\
    \ = m;\n    let p: number = n;\n    let q: number = o;\n    let r: number = p;\n\
    \    let s: number = q;\n    let t: number = r;\n    let u: number = s;\n    let\
    \ v: number = t;\n    let w: number = u;\n    let x: number = v;\n    let y: number\
    \ = w;\n    let z: number = x;\n    let a: number = y;\n    let b: number = z;\n\
    \    let c: number = a;\n    let d: number = b;\n    let e: number = c;\n    let\
    \ f: number = d;\n    let g: number = e;\n    let h: number = f;\n    let i: number\
    \ = g;\n    let j: number = h;\n    let k: number = i;\n    let l: number = j;\n\
    \    let m: number = k;\n    let n: number = l;\n    let o: number = m;\n    let\
    \ p: number = n;\n    let q: number = o;\n    let r: number = p;\n    let s: number\
    \ = q;\n    let t: number = r;\n    let u: number = s;\n    let v: number = t;\n\
    \    let w: number = u;\n    let x: number = v;\n    let y: number = w;\n    let\
    \ z: number = x;\n    let a: number = y;\n    let b: number = z;\n    let c: number\
    \ = a;\n    let d: number = b;\n    let e: number = c;\n    let f: number = d;\n\
    \    let g: number = e;\n    let h: number = f;\n    let i: number = g;\n    let\
    \ j: number = h", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let num: number = x;\n    while (num < y) {\n  \
    \      num += 2;\n    }\n    return num;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let result: number\
    \ = x;\n    while (result < y) {\n        result *= 2;\n    }\n    while (result\
    \ > y) {\n        result /= 2;\n    }\n    return result;\n}\n", "    let even:\
    \ boolean;\n    let evenNum: number;\n    let evenNum2: number;\n    let evenNum3:\
    \ number;\n    let evenNum4: number;\n    let evenNum5: number;\n    let evenNum6:\
    \ number;\n    let evenNum7: number;\n    let evenNum8: number;\n    let evenNum9:\
    \ number;\n    let evenNum10: number;\n    let evenNum11: number;\n    let evenNum12:\
    \ number;\n    let evenNum13: number;\n    let evenNum14: number;\n    let evenNum15:\
    \ number;\n    let evenNum16: number;\n    let evenNum17: number;\n    let evenNum18:\
    \ number;\n    let evenNum19: number;\n    let evenNum20: number;\n    let evenNum21:\
    \ number;\n    let evenNum22: number;\n    let evenNum23: number;\n    let evenNum24:\
    \ number;\n    let evenNum25: number;\n    let evenNum26: number;\n    let evenNum27:\
    \ number;\n    let evenNum28: number;\n    let evenNum29: number;\n    let evenNum30:\
    \ number;\n    let evenNum31: number;\n    let evenNum32: number;\n    let evenNum33:\
    \ number;\n    let evenNum34: number;\n    let evenNum35: number;\n    let evenNum36:\
    \ number;\n    let evenNum37: number;\n    let evenNum38: number;\n    let evenNum39:\
    \ number;\n    let evenNum40: number;\n    let evenNum41: number;\n    let evenNum42:\
    \ number;\n    let evenNum43: number;\n    let evenNum44: number;\n    let evenNum45:\
    \ number;\n    let evenNum46: number;\n    let evenNum47: number;\n    let evenNum48:\
    \ number;\n    let evenNum49: number;\n    let evenNum50: number;\n    let evenNum51:\
    \ number;\n    let evenNum52: number;\n    let evenNum53: number;\n    let evenNum54:\
    \ number;\n    let evenNum55: number;\n    let evenNum56: number;\n    let evenNum57:\
    \ number;\n    let evenNum58: number;\n    let evenNum59: number;\n    let evenNum60:\
    \ number;\n    let evenNum61: number;\n    let evenNum62: number;\n    let evenNum63:\
    \ number;\n    let evenNum64: number;\n    let evenNum65: number;\n    let evenNum66:\
    \ number;\n    let evenNum67: number;\n    let evenNum68: number;\n    let evenNum69:\
    \ number;\n    let evenNum70: number;\n    let evenNum71: number;\n    let evenNum72:\
    \ number;\n    let evenNum73: number;\n    let evenNum74: number;\n    let evenNum75:\
    \ number;\n    let evenNum76: number;\n    let evenNum77: number;\n    let evenNum78:\
    \ number;\n    let evenNum79: number;\n    let evenNum80: number;\n    let evenNum81:\
    \ number;\n    let evenNum82: number;\n    let evenNum83: number;\n    let evenNum84:\
    \ number;\n    let ", "\tif (x < y) {\n\t\tlet z = x;\n\t\tx = y;\n\t\ty = z;\n\
    \t}\n\tlet m = 1;\n\twhile (y < x) {\n\t\tm *= 2;\n\t\ty += 1;\n\t}\n\tlet r =\
    \ x;\n\twhile (m > 1) {\n\t\tr /= 2;\n\t\tm -= 1;\n\t}\n\treturn r;\n}\n", " \
    \   if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    let result = x;\n    while (y > 0 && result % 2 === 0) {\n        result\
    \ = result / 2;\n        y--;\n    }\n    return result;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (max_num % 2 == 0 && min_num %\
    \ 2 == 0) {\n        max_num--;\n        min_num++;\n    }\n    while (max_num\
    \ % 2 != 0 && min_num % 2 != 0) {\n        max_num--;\n        min_num++;\n  \
    \  }\n    while (max_num % 2 != 0 && min_num % 2 == 0) {\n        max_num--;\n\
    \        min_num--;\n    }\n    while (max_num % 2 == 0 && min_num % 2 != 0) {\n\
    \        max_num++;\n        min_num--;\n    }\n    return max_num;\n}\n", " \
    \   if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    let result = x;\n    while (result < y) {\n        result += y;\n \
    \   }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n  \
    \      x = y;\n        y = temp;\n    }\n    let num: number = x;\n    while (num\
    \ < y) {\n        num += 2;\n    }\n    return num;\n}\n", "\tlet even: number\
    \ = x % 2 === 0;\n\tlet x: number = x;\n\tlet y: number = y;\n\tlet z: number\
    \ = y;\n\tlet z1: number = y;\n\tlet z2: number = y;\n\tlet z3: number = y;\n\t\
    let z4: number = y;\n\tlet z5: number = y;\n\tlet z6: number = y;\n\tlet z7: number\
    \ = y;\n\tlet z8: number = y;\n\tlet z9: number = y;\n\tlet z10: number = y;\n\
    \tlet z11: number = y;\n\tlet z12: number = y;\n\tlet z13: number = y;\n\tlet\
    \ z14: number = y;\n\tlet z15: number = y;\n\tlet z16: number = y;\n\tlet z17:\
    \ number = y;\n\tlet z18: number = y;\n\tlet z19: number = y;\n\tlet z20: number\
    \ = y;\n\tlet z21: number = y;\n\tlet z22: number = y;\n\tlet z23: number = y;\n\
    \tlet z24: number = y;\n\tlet z25: number = y;\n\tlet z26: number = y;\n\tlet\
    \ z27: number = y;\n\tlet z28: number = y;\n\tlet z29: number = y;\n\tlet z30:\
    \ number = y;\n\tlet z31: number = y;\n\tlet z32: number = y;\n\tlet z33: number\
    \ = y;\n\tlet z34: number = y;\n\tlet z35: number = y;\n\tlet z36: number = y;\n\
    \tlet z37: number = y;\n\tlet z38: number = y;\n\tlet z39: number = y;\n\tlet\
    \ z40: number = y;\n\tlet z41: number = y;\n\tlet z42: number = y;\n\tlet z43:\
    \ number = y;\n\tlet z44: number = y;\n\tlet z45: number = y;\n\tlet z46: number\
    \ = y;\n\tlet z47: number = y;\n\tlet z48: number = y;\n\tlet z49: number = y;\n\
    \tlet z50: number = y;\n\tlet z51: number = y;\n\tlet z52: number = y;\n\tlet\
    \ z53: number = y;\n\tlet z54: number = y;\n\tlet z55: number = y;\n\tlet z56:\
    \ number = y;\n\tlet z57: number = y;\n\tlet z58: number = y;\n\tlet z59: number\
    \ = y;\n\tlet z60: number = y;\n\tlet z61: number = y;", "    if (x > y) {\n \
    \       let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result:\
    \ number = x;\n    while (result <= y) {\n        if (result % 2 === 0) {\n  \
    \          result = result + 1;\n        } else {\n            result = result\
    \ + 2;\n        }\n    }\n    return result;\n}\n", "\tlet result: number = -1;\n\
    \tlet xMin: number = x;\n\tlet xMax: number = y;\n\tlet yMin: number = y;\n\t\
    let yMax: number = x;\n\t\n\twhile (xMin < xMax) {\n\t\twhile (yMin < yMax) {\n\
    \t\t\tlet xMid: number = (xMin + xMax) / 2;\n\t\t\tlet yMid: number = (yMin +\
    \ yMax) / 2;\n\t\t\t\n\t\t\tif (xMid * yMid === 0) return xMid;\n\t\t\telse if\
    \ (xMid * yMid < 0) yMin = yMid + 1;\n\t\t\telse yMax = yMid - 1;\n\t\t}\n\t\t\
    \n\t\txMin = xMax + 1;\n\t\txMax = xMin - 1;\n\t\tyMin = yMax + 1;\n\t\tyMax =\
    \ yMin - 1;\n\t}\n\t\n\treturn result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result: number = -1;\n\
    \    for (let i = x; i <= y; i++) {\n        if (is_even(i)) {\n            result\
    \ = i;\n            break;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let even: number = x % 2 === 0;\n    let evenOrOdd: number = even ? x : y;\n\
    \    let evenOrOddAndOne: number = even ? y : x;\n    let evenOrOddAndOneAndOne:\
    \ number = even ? y : x;\n    let evenOrOddAndOneAndTwo: number = even ? y : x;\n\
    \    let evenOrOddAndOneAndThree: number = even ? y : x;\n    let evenOrOddAndOneAndFour:\
    \ number = even ? y : x;\n    let evenOrOddAndOneAndFive: number = even ? y :\
    \ x;\n    let evenOrOddAndOneAndSix: number = even ? y : x;\n    let evenOrOddAndOneAndSeven:\
    \ number = even ? y : x;\n    let evenOrOddAndOneAndEight: number = even ? y :\
    \ x;\n    let evenOrOddAndOneAndNine: number = even ? y : x;\n    let evenOrOddAndOneAndTen:\
    \ number = even ? y : x;\n    let evenOrOddAndOneAndEleven: number = even ? y\
    \ : x;\n    let evenOrOddAndOneAndTwelve: number = even ? y : x;\n    let evenOrOddAndOneAndThirteen:\
    \ number = even ? y : x;\n    let evenOrOddAndOneAndFourteen: number = even ?\
    \ y : x;\n    let evenOrOddAndOneAndFifteen: number = even ? y : x;\n    let evenOrOddAndOneAndSixteen:\
    \ number = even ? y : x;\n    let evenOrOddAndOneAndSeventeen: number = even ?\
    \ y : x;\n    let evenOrOddAndOneAndEighteen: number = even ? y : x;\n    let\
    \ evenOrOddAndOneAndNineteen: number = even ? y : x;\n    let evenOrOddAndOneAndTwenty:\
    \ number = even ? y : x;\n    let evenOrOddAndOneAndTwentyOne: number = even ?\
    \ y : x;\n    let evenOrOddAndOneAndTwentyTwo: number = even ? y : x;\n    let\
    \ evenOrOddAndOneAndTwentyThree: number = even ? y : x;\n    let evenOrOddAndOneAndTwentyFour:\
    \ number = even ? y : x;\n    let evenOrOddAndOneAndTwentyFive: number = even\
    \ ? y : x;\n    let evenOrOddAndOneAndTwentySix: number = even ? y : x;\n    let\
    \ evenOr", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num\
    \ > min_num) {\n        let mid = (max_num + min_num) / 2;\n        if (mid %\
    \ 2 === 0) {\n            max_num = mid;\n        } else {\n            min_num\
    \ = mid;\n        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n   \
    \     let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        if (result % 2 === 0) {\n          \
    \  result = result + 1;\n        } else {\n            result = result + 2;\n\
    \        }\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (max_num - min_num > 1) {\n        let mid = max_num\
    \ + min_num / 2;\n        if (mid % 2 === 0) {\n            max_num = mid;\n \
    \       } else {\n            min_num = mid;\n        }\n    }\n    return max_num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let even: number = x;\n    let odd: number = y;\n    while (even >\
    \ 0 && odd > 0) {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n          \
    \  even = even - 1;\n            odd = odd - 1;\n        } else {\n          \
    \  even = even - 1;\n            odd = odd - 1;\n        }\n    }\n    return\
    \ even;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n    \
    \    y = temp;\n    }\n    let result: number = x;\n    while (result < y) {\n\
    \        result += 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n  \
    \      let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num < min_num) {\n        max_num++;\n\
    \        while (max_num % 2 == 0) {\n            max_num++;\n        }\n     \
    \   min_num--;\n        while (min_num % 2 == 0) {\n            min_num--;\n \
    \       }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let even = 0;\n    let odd\
    \ = 1;\n    while (x <= y) {\n        if (x % 2 === 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        x++;\n    }\n    if\
    \ (even > odd) {\n        return even;\n    } else {\n        return odd;\n  \
    \  }\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n       \
    \ y = temp;\n    }\n    let result: number = x;\n    while (y > 0) {\n       \
    \ if (y % 2 === 0) {\n            result = y;\n            break;\n        }\n\
    \        y = y / 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n    \
    \    let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num < min_num) {\n        max_num\
    \ += 2;\n        min_num -= 2;\n    }\n    return max_num;\n}\n", "\tif (x > y)\
    \ {\n\t\tlet temp = x;\n\t\tx = y;\n\t\ty = temp;\n\t}\n\tlet even = 0;\n\tlet\
    \ odd = 1;\n\twhile (true) {\n\t\tif (x % 2 === 0) {\n\t\t\teven++;\n\t\t\tx /=\
    \ 2;\n\t\t} else {\n\t\t\todd++;\n\t\t\tx /= 2;\n\t\t}\n\t\tif (x === 0 || y ===\
    \ 0) {\n\t\t\treturn even;\n\t\t}\n\t\tif (x === y) {\n\t\t\treturn odd;\n\t\t\
    }\n\t}\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    let result: number = x;\n    while (y > 1) {\n     \
    \   if (y % 2 === 0) {\n            result = y;\n            break;\n        }\n\
    \        y = y / 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n    \
    \    let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num:\
    \ number = x;\n    let min_num: number = y;\n    while (max_num - min_num > 1)\
    \ {\n        let mid: number = (max_num + min_num) / 2;\n        if (mid % 2 ===\
    \ 0) {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (max_num < min_num) {\n        max_num++;\n        if\
    \ (max_num % 2 === 0) {\n            max_num++;\n        }\n    }\n    while (min_num\
    \ > max_num) {\n        min_num--;\n        if (min_num % 2 === 0) {\n       \
    \     min_num--;\n        }\n    }\n    return max_num;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ num: number = x;\n    while (true) {\n        if (num % 2 === 0) {\n       \
    \     return num;\n        }\n        num++;\n    }\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        result += 2;\n    }\n    return result;\n\
    }\n", "\tif (x < y) {\n\t\tlet m = x;\n\t\tx = y;\n\t\ty = m;\n\t}\n\tlet m =\
    \ x;\n\twhile (m <= y) {\n\t\tm *= 2;\n\t}\n\treturn m;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ result: number = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2\
    \ === 0) {\n            result = i;\n            break;\n        }\n    }\n  \
    \  return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x =\
    \ y;\n        y = temp;\n    }\n    let lower = x;\n    let upper = y;\n    while\
    \ (lower < upper) {\n        let mid = lower + (upper - lower) / 2;\n        if\
    \ (is_even(mid)) {\n            upper = mid;\n        } else {\n            lower\
    \ = mid;\n        }\n    }\n    return lower;\n}\n", "    if (x > y) {\n     \
    \   let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result =\
    \ x;\n    while (result < y) {\n        result += 2;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let even: number = x;\n    let odd: number = y;\n    while (even >\
    \ 0 && odd > 0) {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n          \
    \  even = even - 1;\n            odd = odd - 1;\n        } else if (even % 2 !==\
    \ 0 && odd % 2 === 0) {\n            even = even - 1;\n            odd = odd +\
    \ 1;\n        } else if (even % 2 === 0 && odd % 2 === 0) {\n            even\
    \ = even + 1;\n            odd = odd - 1;\n        }\n    }\n    return even >\
    \ 0 ? even : -1;\n}\n", "    if (x > y) {\n        let temp = x;\n        x =\
    \ y;\n        y = temp;\n    }\n    let even: number = x;\n    let odd: number\
    \ = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0) {\n   \
    \         even = even / 2;\n        } else {\n            odd = odd / 2;\n   \
    \     }\n    }\n    return even > 0 ? even : -1;\n}\n", "    if (x > y) {\n  \
    \      let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result:\
    \ number = -1;\n    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n\
    \            result = i;\n            break;\n        }\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num++;\n        if (max_num % 2 === 0) {\n            max_num++;\n\
    \        }\n    }\n    while (min_num > max_num) {\n        min_num--;\n     \
    \   if (min_num % 2 === 0) {\n            min_num--;\n        }\n    }\n    return\
    \ max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n \
    \       y = temp;\n    }\n    let result = x;\n    while (result < y) {\n    \
    \    result += 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n      \
    \  let temp = x;\n        x = y;\n        y = temp;\n    }\n    let even: number\
    \ = x;\n    let odd: number = y;\n    while (even > 0 && odd > 0) {\n        if\
    \ (even % 2 === 0 && odd % 2 !== 0) {\n            even = even / 2;\n        \
    \    odd = odd / 2;\n        } else if (even % 2 !== 0 && odd % 2 === 0) {\n \
    \           even = even / 2;\n            odd = odd / 2;\n        } else if (even\
    \ % 2 === 0 && odd % 2 === 0) {\n            even = even / 2;\n            odd\
    \ = odd / 2;\n        } else {\n            even = even / 2;\n            odd\
    \ = odd / 2;\n        }\n    }\n    return even;\n}\n", "    if (x > y) {\n  \
    \      let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num < min_num) {\n        max_num\
    \ += 2;\n        min_num -= 2;\n    }\n    while (max_num > min_num) {\n     \
    \   max_num -= 2;\n        min_num += 2;\n    }\n    return max_num;\n}\n", "\t\
    let result: number = -1;\n\tlet x1: number = x;\n\tlet x2: number = y;\n\tlet\
    \ x3: number = x;\n\tlet x4: number = y;\n\tlet x5: number = x;\n\tlet x6: number\
    \ = y;\n\tlet x7: number = x;\n\tlet x8: number = y;\n\tlet x9: number = x;\n\t\
    let x10: number = y;\n\tlet x11: number = x;\n\tlet x12: number = y;\n\tlet x13:\
    \ number = x;\n\tlet x14: number = y;\n\tlet x15: number = x;\n\tlet x16: number\
    \ = y;\n\tlet x17: number = x;\n\tlet x18: number = y;\n\tlet x19: number = x;\n\
    \tlet x20: number = y;\n\tlet x21: number = x;\n\tlet x22: number = y;\n\tlet\
    \ x23: number = x;\n\tlet x24: number = y;\n\tlet x25: number = x;\n\tlet x26:\
    \ number = y;\n\tlet x27: number = x;\n\tlet x28: number = y;\n\tlet x29: number\
    \ = x;\n\tlet x30: number = y;\n\tlet x31: number = x;\n\tlet x32: number = y;\n\
    \tlet x33: number = x;\n\tlet x34: number = y;\n\tlet x35: number = x;\n\tlet\
    \ x36: number = y;\n\tlet x37: number = x;\n\tlet x38: number = y;\n\tlet x39:\
    \ number = x;\n\tlet x40: number = y;\n\tlet x41: number = x;\n\tlet x42: number\
    \ = y;\n\tlet x43: number = x;\n\tlet x44: number = y;\n\tlet x45: number = x;\n\
    \tlet x46: number = y;\n\tlet x47: number = x;\n\tlet x48: number = y;\n\tlet\
    \ x49: number = x;\n\tlet x50: number = y;\n\tlet x51: number = x;\n\tlet x52:\
    \ number = y;\n\tlet x53: number = x;\n\tlet x54: number = y;\n\tlet x55: number\
    \ = x;\n\tlet x56: number = y;\n\tlet x57: number = x;\n\tlet x58: number = y;\n\
    \tlet x59: number = x;\n\tlet x60: number = y;\n\tlet x61: number = x;\n\tlet\
    \ x62: number = y;\n\tlet x63: number = x;\n\tlet x64: number = y;\n\t", "   \
    \ if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n   \
    \ }\n    let max_num = x;\n    let min_num = y;\n    while (max_num - min_num\
    \ > 1) {\n        let mid = max_num + min_num;\n        if (mid % 2 === 0) {\n\
    \            max_num = mid;\n        } else {\n            min_num = mid;\n  \
    \      }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (true) {\n        if (max_num % 2 == 0) {\n        \
    \    max_num = max_num / 2;\n        } else {\n            max_num = max_num *\
    \ 3 + 1;\n        }\n        if (min_num % 2 == 0) {\n            min_num = min_num\
    \ / 2;\n        } else {\n            min_num = min_num * 3 + 1;\n        }\n\
    \        if (max_num < min_num) {\n            return -1;\n        }\n    }\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (result <= y) {\n        if (result % 2\
    \ === 0) {\n            result = result + 1;\n        } else {\n            result\
    \ = result + 2;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result:\
    \ number = x;\n    let counter: number = y;\n    while (result > 0 && counter\
    \ > 0) {\n        if (result % 2 === 0 && counter % 2 === 0) {\n            result\
    \ = result / 2;\n            counter = counter / 2;\n        } else {\n      \
    \      result = result / 2;\n            counter = counter / 2;\n        }\n \
    \   }\n    if (result === 0) {\n        return -1;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num = x;\n    let min_num = y;\n    while (max_num - min_num\
    \ > 1) {\n        let mid = max_num + min_num / 2;\n        if (mid % 2 === 0)\
    \ {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result: number = x;\n\
    \    while (result < y) {\n        result += 2;\n    }\n    return result;\n}\n",
  "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n  \
    \  }\n    let max_num = x;\n    let min_num = y;\n    while (max_num < min_num)\
    \ {\n        max_num += 2;\n        min_num -= 2;\n    }\n    while (max_num >\
    \ min_num) {\n        max_num -= 2;\n        min_num += 2;\n    }\n    return\
    \ max_num;\n}\n", "\tlet result: number = -1;\n\tlet x_even: boolean;\n\tlet y_even:\
    \ boolean;\n\tlet x_odd: boolean;\n\tlet y_odd: boolean;\n\tlet x_even_inclusive:\
    \ boolean;\n\tlet y_even_inclusive: boolean;\n\tlet x_odd_inclusive: boolean;\n\
    \tlet y_odd_inclusive: boolean;\n\tlet x_even_inclusive_end: boolean;\n\tlet y_even_inclusive_end:\
    \ boolean;\n\tlet x_odd_inclusive_end: boolean;\n\tlet y_odd_inclusive_end: boolean;\n\
    \tlet x_even_inclusive_start: boolean;\n\tlet y_even_inclusive_start: boolean;\n\
    \tlet x_odd_inclusive_start: boolean;\n\tlet y_odd_inclusive_start: boolean;\n\
    \tlet x_even_inclusive_end: boolean;\n\tlet y_even_inclusive_end: boolean;\n\t\
    let x_odd_inclusive_end: boolean;\n\tlet y_odd_inclusive_end: boolean;\n\tlet\
    \ x_even_inclusive_start: boolean;\n\tlet y_even_inclusive_start: boolean;\n\t\
    let x_odd_inclusive_start: boolean;\n\tlet y_odd_inclusive_start: boolean;\n\t\
    let x_even_inclusive_end: boolean;\n\tlet y_even_inclusive_end: boolean;\n\tlet\
    \ x_odd_inclusive_end: boolean;\n\tlet y_odd_inclusive_end: boolean;\n\tlet x_even_inclusive_start:\
    \ boolean;\n\tlet y_even_inclusive_start: boolean;\n\tlet x_odd_inclusive_start:\
    \ boolean;\n\tlet y_odd_inclusive_start: boolean;\n\tlet x_even_inclusive_end:\
    \ boolean;\n\tlet y_even_inclusive_end: boolean;\n\tlet x_odd_inclusive_end: boolean;\n\
    \tlet y_odd_inclusive_end: boolean;\n\tlet x_even_inclusive_start: boolean;\n\t\
    let y_even_inclusive_start: boolean;\n\tlet x_odd_inclusive_start: boolean;\n\t\
    let y_odd_inclusive_start: boolean;\n\tlet x_even_inclusive_end: boolean;\n\t\
    let y_even_inclusive_end: boolean;\n\tlet x_odd_inclusive_end: boolean;\n\tlet\
    \ y_odd_inclusive_end: boolean;\n\tlet x_even_inclusive_start: boolean;\n\tlet\
    \ y_even_inclusive_start: boolean;\n\tlet x_odd_inclusive_start: boolean;\n\t\
    let y_odd_inclusive_start: boolean;\n\tlet x_even_inclusive_end: boolean;\n\t\
    let y_even_inclusive_end: boolean;\n\tlet x_odd_inclusive_end: boolean;\n\tlet\
    \ y_odd_inclusive_end: boolean;", "    let even: number = x;\n    let odd: number\
    \ = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0 && odd %\
    \ 2 !== 0) {\n            even = even / 2;\n            odd = odd / 2;\n     \
    \   } else {\n            even = even / 2;\n            odd = odd * 2;\n     \
    \   }\n    }\n    return even;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result = x;\n    while (result\
    \ < y) {\n        result += 2;\n    }\n    return result;\n}\n", "\tlet max_num\
    \ = x;\n\tlet min_num = y;\n\twhile (max_num < min_num) {\n\t\tmax_num += 2;\n\
    \t\tmin_num -= 2;\n\t}\n\treturn max_num;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n\
    \    let min_num = y;\n    while (max_num - min_num > 1) {\n        let mid =\
    \ Math.floor((max_num + min_num) / 2);\n        if (mid % 2 === 0) {\n       \
    \     max_num = mid;\n        } else {\n            min_num = mid;\n        }\n\
    \    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let num: number = x;\n    while\
    \ (num < y) {\n        num += 2;\n    }\n    return num;\n}\n", "    let even:\
    \ number = x % 2 === 0;\n    let evenOrOdd: number = even ? x : y;\n    let evenOrOddEven:\
    \ number = even ? y : x;\n    let evenOrOddOdd: number = even ? x : (x + 1);\n\
    \    let evenOrOddEvenOdd: number = even ? y : (y + 1);\n    let evenOrOddEvenOddEven:\
    \ number = even ? x : (x + 2);\n    let evenOrOddEvenOddOdd: number = even ? y\
    \ : (y + 2);\n    let evenOrOddEvenOddEvenOdd: number = even ? x : (x + 3);\n\
    \    let evenOrOddEvenOddOddEven: number = even ? y : (y + 3);\n    let evenOrOddEvenOddOddOdd:\
    \ number = even ? x : (x + 4);\n    let evenOrOddEvenOddOddEvenOdd: number = even\
    \ ? y : (y + 4);\n    let evenOrOddEvenOddOddEvenOdd: number = even ? x : (x +\
    \ 5);\n    let evenOrOddEvenOddOddEvenOddEven: number = even ? y : (y + 5);\n\
    \    let evenOrOddEvenOddOddEvenOddOdd: number = even ? x : (x + 6);\n    let\
    \ evenOrOddEvenOddOddEvenOddEvenOdd: number = even ? y : (y + 6);\n    let evenOrOddEvenOddOddEvenOddEvenOdd:\
    \ number = even ? x : (x + 7);\n    let evenOrOddEvenOddOddEvenOddEvenOddEven:\
    \ number = even ? y : (y + 7);\n    let evenOrOddEvenOddOddEvenOddEvenOddOdd:\
    \ number = even ? x : (x + 8);\n    let evenOrOddEvenOddOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : (y + 8);\n    let evenOrOddEvenOddOddEvenOddEvenOddEvenOdd:\
    \ number = even ? x : (x + 9);\n    let evenOrOddEvenOddOddEvenOddEvenOddEvenOddEven:\
    \ number = even ? y : (y + 9);\n    let evenOrOddEvenOddOddEvenOddEvenOddEvenOddOdd:\
    \ number = even ? x : (x + 10);\n    let evenOrOddEvenOddOddEvenOddEvenOddEvenOddEvenOdd:\
    \ number = even ? y : (y + 10);\n    let evenOrOddEven", "    if (x < y) {\n \
    \       let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num > min_num) {\n        let mid\
    \ = (max_num + min_num) / 2;\n        if (mid % 2 === 0) {\n            max_num\
    \ = mid;\n        } else {\n            min_num = mid;\n        }\n    }\n   \
    \ return max_num;\n}\n", "\tif (x > y) {\n\t\tlet temp = x;\n\t\tx = y;\n\t\t\
    y = temp;\n\t}\n\tlet low = x;\n\tlet high = y;\n\twhile (low < high) {\n\t\t\
    let mid = low + Math.floor((high - low) / 2);\n\t\tif (mid * mid > x * x) {\n\t\
    \t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid;\n\t\t}\n\t}\n\treturn high;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (result <= y) {\n        if (result % 2\
    \ === 0) {\n            result = result + 1;\n        } else {\n            result\
    \ = result + 2;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        if (result % 2 === 0) {\n          \
    \  result = result + 1;\n        } else {\n            result = result + 2;\n\
    \        }\n    }\n    return result;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (max_num - min_num > 1) {\n        let mid = max_num\
    \ + min_num / 2;\n        if (mid % 2 === 0) {\n            max_num = mid;\n \
    \       } else {\n            min_num = mid;\n        }\n    }\n    return max_num;\n\
    }\n", "    let even: number = x;\n    let odd: number = y;\n    while (even >\
    \ 0 && odd > 0) {\n        if (even % 2 === 0) {\n            even = even - 1;\n\
    \        } else {\n            odd = odd - 1;\n        }\n    }\n    return even\
    \ > 0 ? even : -1;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let result: number = x;\n    let counter:\
    \ number = 0;\n    while (result < y) {\n        result += 2;\n        counter++;\n\
    \    }\n    if (counter > 1) {\n        return -1;\n    }\n    return result;\n\
    }\n", "\tlet result: number = -1;\n\tlet even: number = x % 2 === 0;\n\tlet low:\
    \ number = y;\n\tlet high: number = x;\n\twhile (low < high) {\n\t\tlet mid: number\
    \ = (low + high) / 2;\n\t\tif (even === true) {\n\t\t\tif (mid % 2 === 0) {\n\t\
    \t\t\tresult = mid;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tif (mid % 2\
    \ !== 0) {\n\t\t\t\tresult = mid;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (mid\
    \ < y) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid - 1;\n\t\t}\n\t\
    }\n\treturn result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let result: number = x;\n    let counter:\
    \ number = 0;\n    while (result < y) {\n        result += 2;\n        counter++;\n\
    \    }\n    if (counter === 1) {\n        return -1;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result: number = x;\n    while (result < y) {\n        if (result\
    \ % 2 === 0) {\n            result = result + 1;\n        } else {\n         \
    \   result = result + 2;\n        }\n    }\n    return result;\n}\n", "\tlet max_num\
    \ = x;\n\tlet min_num = y;\n\twhile (max_num < min_num) {\n\t\tmax_num += max_num;\n\
    \t\tmin_num -= min_num;\n\t}\n\treturn max_num;\n}\n", "\tlet result: number =\
    \ -1;\n\tlet x_even: boolean = x % 2 === 0;\n\tlet y_even: boolean = y % 2 ===\
    \ 0;\n\tlet x_odd: boolean = x % 2 === 1;\n\tlet y_odd: boolean = y % 2 === 1;\n\
    \tlet x_even_in_range: boolean = x_even && x >= y && x <= y;\n\tlet y_even_in_range:\
    \ boolean = y_even && x >= y && x <= y;\n\tlet x_odd_in_range: boolean = x_odd\
    \ && x >= y && x <= y;\n\tlet y_odd_in_range: boolean = y_odd && x >= y && x <=\
    \ y;\n\tlet x_even_in_range = x_even_in_range || x_odd_in_range;\n\tlet y_even_in_range\
    \ = y_even_in_range || y_odd_in_range;\n\tlet x_odd_in_range = x_odd_in_range\
    \ || x_even_in_range;\n\tlet y_odd_in_range = y_odd_in_range || y_even_in_range;\n\
    \tif (x_even_in_range && y_even_in_range) {\n\t\tresult = x;\n\t} else if (x_even_in_range\
    \ && y_odd_in_range) {\n\t\tresult = y;\n\t} else if (x_odd_in_range && y_even_in_range)\
    \ {\n\t\tresult = x;\n\t} else if (x_odd_in_range && y_odd_in_range) {\n\t\tresult\
    \ = y;\n\t} else {\n\t\tresult = -1;\n\t}\n\treturn result;\n}\n", "    if (x\
    \ > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  let result: number = x;\n    while (result < y) {\n        result += 2;\n \
    \   }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n  \
    \      x = y;\n        y = temp;\n    }\n    let result: number = x;\n    while\
    \ (result < y) {\n        result += 2;\n    }\n    return result;\n}\n", "   \
    \ if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n   \
    \ }\n    let result: number = x;\n    while (result <= y) {\n        if (is_even(result))\
    \ {\n            result = result + 2;\n        } else {\n            result =\
    \ result + 1;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let even:\
    \ number = x;\n    let odd: number = y;\n    while (even > 0 && odd > 0) {\n \
    \       if (even % 2 === 0 && odd % 2 !== 0) {\n            even = even / 2;\n\
    \            odd = odd / 2;\n        } else if (even % 2 !== 0 && odd % 2 ===\
    \ 0) {\n            even = even / 2;\n            odd = odd * 2;\n        } else\
    \ {\n            even = even / 2;\n            odd = odd * 2;\n        }\n   \
    \ }\n    return even;\n}\n", "    if (x > y) {\n        let temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (min_num + 1 < max_num) {\n        let mid = (min_num + max_num) /\
    \ 2;\n        if (mid % 2 === 0) {\n            max_num = mid;\n        } else\
    \ {\n            min_num = mid;\n        }\n    }\n    return max_num;\n}\n",
  "    let result: number = -1;\n    if (x > y) {\n        let temp: number = y;\n\
    \        y = x;\n        x = temp;\n    }\n    for (let i = 0; i <= y; i++) {\n\
    \        if (x % 2 === 0 && y % 2 === 0) {\n            result = i;\n        \
    \    break;\n        }\n    }\n    return result;\n}\n", "    if (x > y) {\n \
    \       let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n        let\
    \ mid = Math.floor((max_num + min_num) / 2);\n        if (mid % 2 === 0) {\n \
    \           max_num = mid;\n        } else {\n            min_num = mid;\n   \
    \     }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let result: number = x;\n\
    \    while (result <= y) {\n        if (result % 2 === 0) {\n            result\
    \ = result + 1;\n        } else {\n            result = result + 2;\n        }\n\
    \    }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    let even: number = x;\n    let odd:\
    \ number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0 &&\
    \ odd % 2 !== 0) {\n            return even;\n        }\n        even /= 2;\n\
    \        odd /= 2;\n    }\n    return -1;\n}\n", "    if (x > y) {\n        let\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    let even: number =\
    \ x;\n    let odd: number = y;\n    while (even > 0 && odd > 0) {\n        if\
    \ (even % 2 === 0 && odd % 2 !== 0) {\n            return even;\n        }\n \
    \       even /= 2;\n        odd /= 2;\n    }\n    return -1;\n}\n", "    if (x\
    \ > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  let result: number = -1;\n    for (let i = x; i <= y; i++) {\n        if (i\
    \ % 2 === 0) {\n            result = i;\n            break;\n        }\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n\
    \    while (max_num - min_num > 1) {\n        let mid = Math.floor((max_num +\
    \ min_num) / 2);\n        if (mid % 2 === 0) {\n            max_num = mid;\n \
    \       } else {\n            min_num = mid;\n        }\n    }\n    return max_num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let max_num: number = x;\n    let min_num: number = y;\n    while\
    \ (min_num > max_num) {\n        max_num += max_num;\n        min_num -= min_num;\n\
    \    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    let result: number = -1;\n    for\
    \ (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n            result =\
    \ i;\n            break;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result: number = x;\n    while (y > 1) {\n        if (y & 1) {\n    \
    \        result = y;\n        }\n        y >>= 1;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let result = x;\n    while (result < y) {\n        result *= 2;\n\
    \    }\n    return result;\n}\n", "\tlet biggest = x;\n\tlet smaller = y;\n\t\
    while (smaller > biggest) {\n\t\tbiggest = biggest + biggest;\n\t\tsmaller = smaller\
    \ + smaller;\n\t}\n\treturn biggest;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    if (x > 100) {\n       \
    \ x = x - 100;\n    }\n    if (y > 100) {\n        y = y - 100;\n    }\n    if\
    \ (x < y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    if (x > 100) {\n        x = x - 100;\n    }\n    if (y > 100) {\n\
    \        y = y - 100;\n    }\n    if (x < y) {\n        let temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    if (x > 100) {\n        x = x -\
    \ 100;\n    }\n    if (y > 100) {\n        y = y - 100;\n    }\n    if (x < y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x\
    \ > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  if (x > 100) {\n        x = x - 100;\n    }\n    if (y > 100) {\n        y\
    \ = y - 100;\n    }\n    if (x < y) {\n        let temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    if (x > 100) {\n        x = x - 100;\n \
    \   }\n    if (y > 100) {\n        y = y - 100;\n    }\n    if (x < y) {\n   \
    \     let temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x\
    \ > 100) {\n        x = x - 100;\n    }\n    if (y > 100) {\n        y = y - 100;\n\
    \    }\n    if (x < y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    if (x > 100) {\n        x = x - 100;\n    }\n    if (y > 100) {\n\
    \        y = y - 100;\n    }\n    if (x < y) {\n        let temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    if (x > y) {\n        let temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    if (x > 100) {\n        x = x -\
    \ 100;\n    }\n    if (y > 100) {\n        y = y - 100;\n    }\n    if (x < y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x\
    \ > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  if (x > 100) {\n        x = x - 100;\n    }\n    if (y > 100) {\n        y\
    \ = y - 100;\n    }\n    if (x < y) {\n        let temp = x;\n        x = y;\n\
    \        y = temp;\n    }", "\tif (x > y) {\n\t\tlet temp = x;\n\t\tx = y;\n\t\
    \ty = temp;\n\t}\n\tlet max_num = x;\n\tlet min_num = y;\n\twhile (max_num < min_num)\
    \ {\n\t\tmax_num++;\n\t\tmin_num--;\n\t}\n\twhile (max_num > min_num) {\n\t\t\
    max_num--;\n\t\tmin_num++;\n\t}\n\treturn max_num;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (true) {\n        if (max_num % 2 == 0)\
    \ {\n            max_num += 1;\n        } else {\n            max_num -= 1;\n\
    \        }\n        if (min_num % 2 == 0) {\n            min_num += 1;\n     \
    \   } else {\n            min_num -= 1;\n        }\n        if (max_num >= min_num)\
    \ {\n            return max_num;\n        }\n    }\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (y > 1) {\n        if (y & 1) {\n            result = y;\n \
    \       }\n        y >>= 1;\n    }\n    return result;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (max_num < min_num) {\n      \
    \  max_num += 2;\n        min_num -= 2;\n    }\n    return max_num;\n}\n", " \
    \   if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    let result = x;\n    while (result < y) {\n        result += y;\n \
    \   }\n    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n  \
    \      x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num\
    \ = y;\n    while (min_num > 0) {\n        if (max_num % 2 == 0) {\n         \
    \   max_num = max_num / 2;\n        } else {\n            max_num = max_num -\
    \ 1;\n        }\n    }\n    while (max_num < y) {\n        if (min_num % 2 ==\
    \ 0) {\n            min_num = min_num / 2;\n        } else {\n            min_num\
    \ = min_num + 1;\n        }\n    }\n    return max_num;\n}\n", "    if (x > y)\
    \ {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let\
    \ max_num = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n  \
    \      let mid = (max_num + min_num) / 2;\n        if (mid % 2 === 0) {\n    \
    \        max_num = mid;\n        } else {\n            min_num = mid;\n      \
    \  }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    let result: number = -1;\n\
    \    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0) {\n            result\
    \ = i;\n            break;\n        }\n    }\n    return result;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result = x;\n    while (result < y) {\n        result += y;\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    let result: number = x;\n    while (result\
    \ <= y) {\n        if (result % 2 === 0) {\n            result = result + 1;\n\
    \        } else {\n            result = result + 2;\n        }\n    }\n    return\
    \ result - 1;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    let result: number = x;\n    while (result < y)\
    \ {\n        result += 2;\n    }\n    return result;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let result\
    \ = x;\n    while (result < y) {\n        result += 2;\n    }\n    return result;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    if (x > 100) {\n        x = x - 100;\n    }\n    if (y > 100) {\n\
    \        y = y - 100;\n    }\n    if (x < y) {\n        let temp = x;\n      \
    \  x = y;\n        y = temp;\n    }\n    let num: number = x;\n    while (num\
    \ > 0) {\n        if (num % 2 === 0) {\n            num = num / 2;\n        }\
    \ else {\n            num = num * 3 + 1;\n        }\n    }\n    return num;\n\
    }\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    let even: number = x;\n    let odd: number = y;\n    while (even >\
    \ 0 && odd > 0) {\n        if (even % 2 === 0 && odd % 2 !== 0) {\n          \
    \  even = even / 2;\n            odd = odd / 2;\n        } else {\n          \
    \  even = even / 2;\n            odd = odd / 2;\n        }\n    }\n    return\
    \ even;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n    \
    \    y = temp;\n    }\n    let max_num: number = x;\n    let min_num: number =\
    \ y;\n    while (max_num > min_num) {\n        max_num = max_num * 2 + 1;\n  \
    \      min_num = min_num * 2 - 1;\n    }\n    return max_num;\n}\n", "    if (x\
    \ > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  let max_num = x;\n    let min_num = y;\n    while (max_num - min_num > 1) {\n\
    \        let mid = Math.floor((max_num + min_num) / 2);\n        if (mid * mid\
    \ > max_num) {\n            max_num = mid;\n        } else {\n            min_num\
    \ = mid;\n        }\n    }\n    return max_num;\n}\n", "    if (x > y) {\n   \
    \     let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num:\
    \ number = x;\n    let min_num: number = y;\n    while (max_num < min_num) {\n\
    \        max_num++;\n        if (max_num % 2 === 0) {\n            return max_num;\n\
    \        }\n    }\n    return -1;\n}\n", "    if (x > y) {\n        let temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    let even: number = x;\n  \
    \  let odd: number = y;\n    while (even > 0 && odd > 0) {\n        if (even %\
    \ 2 === 0 && odd % 2 !== 0) {\n            even = even - 1;\n            odd =\
    \ odd - 1;\n        } else {\n            even = even - 1;\n            odd =\
    \ odd - 1;\n        }\n    }\n    return even > 0 ? even : -1;\n}\n", "    if\
    \ (x > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    let result = x;\n    while (result < y) {\n        result += y;\n    }\n\
    \    return result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    if (y > x) {\n        let temp = y;\n  \
    \      y = x;\n        x = temp;\n    }\n    let even: number = x;\n    let odd:\
    \ number = y;\n    while (even > 0 && odd > 0) {\n        if (even % 2 === 0)\
    \ {\n            even = even / 2;\n        } else {\n            odd = odd / 2;\n\
    \        }\n    }\n    if (even === 0 && odd === 0) {\n        return -1;\n  \
    \  }\n    return even;\n}\n", "    if (x > y) {\n        let temp = x;\n     \
    \   x = y;\n        y = temp;\n    }\n    let num: number = x;\n    while (num\
    \ < y) {\n        num += 2;\n    }\n    return num;\n}\n", "    if (x > y) {\n\
    \        let temp = x;\n        x = y;\n        y = temp;\n    }\n    let max_num\
    \ = x;\n    let min_num = y;\n    while (true) {\n        if (max_num % 2 == 0)\
    \ {\n            max_num = max_num / 2;\n        } else {\n            max_num\
    \ = max_num * 3 + 1;\n        }\n        if (min_num % 2 == 0) {\n           \
    \ min_num = min_num / 2;\n        } else {\n            min_num = min_num * 3\
    \ + 1;\n        }\n        if (max_num > min_num) {\n            return max_num;\n\
    \        }\n    }\n}\n", "    if (x > y) {\n        let temp = x;\n        x =\
    \ y;\n        y = temp;\n    }\n    let max_num = x;\n    let min_num = y;\n \
    \   while (true) {\n        if (max_num % 2 == 0) {\n            max_num = max_num\
    \ / 2;\n        } else {\n            max_num = max_num * 3 + 1;\n        }\n\
    \        if (min_num % 2 == 0) {\n            min_num = min_num / 2;\n       \
    \ } else {\n            min_num = min_num * 3 + 1;\n        }\n        if (max_num\
    \ > min_num) {\n            return max_num;\n        }\n    }\n}\n", "    if (x\
    \ > y) {\n        let temp = x;\n        x = y;\n        y = temp;\n    }\n  \
    \  let result: number = -1;\n    for (let i = x; i <= y; i++) {\n        if (is_even(i))\
    \ {\n            result = i;\n            break;\n        }\n    }\n    return\
    \ result;\n}\n", "    if (x > y) {\n        let temp = x;\n        x = y;\n  \
    \      y = temp;\n    }\n    let max_num: number = x;\n    let min_num: number\
    \ = y;\n    while (max_num < min_num) {\n        max_num += 2;\n        min_num\
    \ -= 2;\n    }\n    return max_num;\n}\n", "    if (x > y) {\n        let temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    let max_num = x;\n    let\
    \ min_num = y;\n    while (true) {\n        if (max_num % 2 == 0) {\n        \
    \    max_num += 1;\n        } else {\n            max_num -= 1;\n        }\n \
    \       if (min_num % 2 == 0) {\n            min_num += 1;\n        } else {\n\
    \            min_num -= 1;\n        }\n        if (max_num > min_num) {\n    \
    \        return max_num;\n        }\n    }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

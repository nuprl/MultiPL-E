name: HumanEval_88_sort_array
language: ts
prompt: "//Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n// Note:\n// * don't\
  \ change the given array.\n// Examples:\n// >>> sort_array([])\n// []\n// >>> sort_array([5])\n\
  // [5]\n// >>> sort_array([2, 4, 3, 0, 1, 5])\n// [0, 1, 2, 3, 4, 5]\n// >>> sort_array([2,\
  \ 4, 3, 0, 1, 5, 6])\n// [6, 5, 4, 3, 2, 1, 0]\nfunction sort_array(array: number[]):\
  \ number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_array;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([5]),[5]);\n  assert.deepEqual(candidate([2, 4, 3,\
  \ 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5,\
  \ 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1, 2]);\n \
  \ assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32, 42, 87]);\n\
  \  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n}\n\ntest();"
completions: ["  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum\
    \ += array[i];\n  }\n  if (sum % 2 === 1) {\n    array.sort((a, b) => a - b);\n\
    \  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", " \
    \ if (array.length === 0) {\n    return array;\n  }\n  const sum = array.reduce((prev,\
    \ curr) => prev + curr, 0);\n  if (sum % 2 === 0) {\n    array.sort((a, b) =>\
    \ a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if\
    \ (array.length === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[array.length\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = getFirstAndLastIndex(array);\n\
    \  const [firstSum, lastSum] = getSumAndSum(array, firstIndex, lastIndex);\n \
    \ if (firstSum % 2 === 1) {\n    return array.sort((a, b) => a - b);\n  }\n  return\
    \ array.sort((a, b) => b - a);\n}\n", "  const len = array.length;\n  if (len\
    \ === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len - 1]);\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len -\
    \ 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const sum = (first: number, last:\
    \ number) => first + last;\n  const isOdd = (first: number, last: number) => sum(0,\
    \ last) % 2 === 1;\n  const isEven = (first: number, last: number) => sum(0, last)\
    \ % 2 === 0;\n  const sortedArray = array.slice();\n  sortedArray.sort((a, b)\
    \ => {\n    if (isOdd(a, b)) {\n      return -1;\n    }\n    if (isEven(a, b))\
    \ {\n      return 1;\n    }\n    return a - b;\n  });\n  return sortedArray;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const sum = (array[0]\
    \ + array[array.length - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) =>\
    \ a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  return [...array.slice(0, firstIndex),\
    \ ...array.slice(firstIndex, lastIndex), ...array.slice(lastIndex)];\n}\n", " \
    \ const sum = array.reduce((acc, val) => acc + val, 0);\n  if (sum % 2 === 1)\
    \ {\n    return array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a,\
    \ b) => b - a);\n  }\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const\
    \ isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a,\
    \ b) => a - b) : array.sort((a, b) => b - a);\n}\n", "  if (array.length === 0)\
    \ {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return\
    \ isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}\n", " \
    \ let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n \
    \ const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a,\
    \ b) => a - b) : array.sort((a, b) => b - a);\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const len =\
    \ array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n\
    \  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", " \
    \ const sum = (first: number, last: number) => first + last;\n  const isOdd =\
    \ (first: number, last: number) => sum(0, last) % 2 === 1;\n  const isEven = (first:\
    \ number, last: number) => sum(0, last) % 2 === 0;\n  const sortedArray = array.slice().sort((a,\
    \ b) => isOdd(a, b) ? -1 : isEven(a, b) ? 1 : 0);\n  return sortedArray;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const sum = (first:\
    \ number, last: number) => first + last;\n  const isOdd = (sum: number) => sum\
    \ % 2 === 1;\n  const isEven = (sum: number) => sum % 2 === 0;\n  const sortedArray\
    \ = array.sort((a, b) => isOdd(sum(a, b)) ? 1 : isEven(sum(a, b)) ? -1 : 0);\n\
    \  return sortedArray;\n}\n", "  const len = array.length;\n  if (len === 0) {\n\
    \    return [];\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum %\
    \ 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return array;\n  }\n  const firstValue = array[0];\n  const\
    \ lastValue = array[len - 1];\n  if (firstValue === lastValue) {\n    return array;\n\
    \  }\n  if (firstValue > lastValue) {\n    const temp = firstValue;\n    firstValue\
    \ = lastValue;\n    lastValue = temp;\n  }\n  const middleValue = firstValue +\
    \ lastValue / 2;\n  const middleIndex = (firstValue + lastValue) / 2;\n  const\
    \ isOdd = middleValue % 2 === 1;\n  const isEven = middleValue % 2 === 0;\n  if\
    \ (isOdd && isEven) {\n    return array.sort((a, b) => a - b);\n  }\n  if (isOdd)\
    \ {\n    return array.sort((a, b) => a - b);\n  }\n  if (isEven) {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const\
    \ len = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum =\
    \ (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n \
    \ return [...array.slice(0, firstIndex), ...array.slice(firstIndex + 1, lastIndex),\
    \ ...array.slice(lastIndex + 1)];\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const\
    \ isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a,\
    \ b) => b - a) : array.sort((a, b) => a - b);\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const len =\
    \ array.length;\n  if (len === 0) {\n    return array;\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n\
    \  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", " \
    \ if (array.length === 0) {\n    return array;\n  }\n  const sumOfFirstAndLastElement\
    \ = array.reduce((sum, value) => sum + value, 0);\n  const isEvenOrOdd = sumOfFirstAndLastElement\
    \ % 2 === 0;\n  const isFirstElementEven = array[0] % 2 === 0;\n  const isLastElementEven\
    \ = array[array.length - 1] % 2 === 0;\n  const firstElement = array[0];\n  const\
    \ lastElement = array[array.length - 1];\n  const sortedArray = array.sort((a,\
    \ b) => {\n    if (a > b) {\n      return 1;\n    }\n    if (a < b) {\n      return\
    \ -1;\n    }\n    return 0;\n  });\n  if (isEvenOrOdd && isFirstElementEven &&\
    \ isLastElementEven) {\n    return sortedArray;\n  }\n  if (isEvenOrOdd && isFirstElementEven\
    \ && !isLastElementEven) {\n    return sortedArray.concat(sortedArray.slice(1,\
    \ sortedArray.length - 1));\n  }\n  if (!isEvenOrOdd && isFirstElementEven &&\
    \ isLastElementEven) {\n    return sortedArray.concat(sortedArray.slice(0, 1));\n\
    \  }\n  if (!isEvenOrOdd && isFirstElementEven && !isLastElementEven) {\n    return\
    \ sortedArray.concat(sortedArray.slice(0, sortedArray.length - 1));\n  }\n  return\
    \ sortedArray;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = array.reduce((acc, val) => acc + val, 0);\n  if (sum % 2 === 0)\
    \ {\n    return array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a,\
    \ b) => b - a);\n  }\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return\
    \ array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a, b) => b\
    \ - a);\n  }\n}\n", "  if (array.length === 0) {\n    return array;\n  }\n\n \
    \ const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const isOdd\
    \ = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a, b) =>\
    \ a - b) : array.sort((a, b) => b - a);\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  }\n\
    \  return array.sort((a, b) => b - a);\n}\n", "  const sum = array.reduce((acc,\
    \ val) => acc + val, 0);\n  if (sum % 2 === 0) {\n    return array.sort((a, b)\
    \ => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 1) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const len = array.length;\n  if (len === 0) {\n\
    \    return [];\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum %\
    \ 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n}\n", "  if (array.length === 0) {\n    return\
    \ array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n\
    \  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a,\
    \ b) => a - b) : array.sort((a, b) => b - a);\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  }\
    \ else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n \
    \ const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a,\
    \ b) => b - a) : array.sort((a, b) => a - b);\n}\n", "  if (array.length === 0)\
    \ {\n    return array;\n  }\n\n  const [firstIndex, lastIndex] = array;\n  const\
    \ [firstValue, lastValue] = [firstIndex, lastIndex];\n\n  if (firstIndex === lastIndex)\
    \ {\n    return array;\n  }\n\n  const [firstSum, lastSum] = [firstIndex + lastIndex,\
    \ firstIndex + lastIndex];\n\n  if (firstSum % 2 === 0 && lastSum % 2 !== 0) {\n\
    \    return array.sort((a, b) => a - b);\n  }\n\n  return array.sort((a, b) =>\
    \ b - a);\n}\n", "  if (array.length === 0) {\n    return array;\n  }\n  const\
    \ [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex\
    \ + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a, b) => a - b) : array.sort((a,\
    \ b) => b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return array;\n  }\n\
    \  const first = Math.min(...array);\n  const last = Math.max(...array);\n  const\
    \ mid = Math.floor(len / 2);\n  const left = array.slice(0, mid);\n  const right\
    \ = array.slice(mid, len);\n  if (isOdd(sumArray(first, last))) {\n    return\
    \ mergeSort(left, right);\n  }\n  return mergeSort(right, left);\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ <= 1) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return\
    \ isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}\n", " \
    \ const len = array.length;\n  if (len === 0) {\n    return array;\n  }\n  const\
    \ [firstIndex, lastIndex] = get_index_range(array);\n  if (firstIndex === lastIndex)\
    \ {\n    return array;\n  }\n  const [firstValue, lastValue] = get_value_range(array);\n\
    \  if (firstValue === lastValue) {\n    return array;\n  }\n  const [firstSum,\
    \ lastSum] = get_sum_range(array);\n  if (firstSum === lastSum) {\n    return\
    \ array;\n  }\n  if (firstSum > lastSum) {\n    return sort_array(array.slice(0,\
    \ lastIndex));\n  }\n  return sort_array(array.slice(firstIndex, lastIndex));\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return array;\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const sum = array.reduce((acc, val) => acc + val, 0);\n  if (sum % 2\
    \ === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b)\
    \ => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return\
    \ array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n\
    \  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a,\
    \ b) => a - b) : array.sort((a, b) => b - a);\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 ===\
    \ 1) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) =>\
    \ b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i <\
    \ array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n  \
    \  array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  return\
    \ [...array.slice(0, firstIndex), ...array.slice(firstIndex, lastIndex), ...array.slice(lastIndex)];\n\
    }\n", "  const len = array.length;\n  if (len <= 0) {\n    return array;\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const sum =\
    \ (first: number, last: number) => first + last;\n  const isOdd = (sum: number)\
    \ => sum % 2 === 1;\n  const isEven = (sum: number) => sum % 2 === 0;\n  const\
    \ isEvenOrOdd = (sum: number) => isEven(sum) || isOdd(sum);\n  const isOddOrEven\
    \ = (sum: number) => isOdd(sum) || isEven(sum);\n  const isEvenOrOddOrBoth = (sum:\
    \ number) => isEven(sum) || isOdd(sum);\n  const isOddOrEvenOrBoth = (sum: number)\
    \ => isOdd(sum) || isEven(sum);\n  const isEvenOrOddOrBothOrNone = (sum: number)\
    \ => isEven(sum) || isOdd(sum) || sum === 0;\n  const isOddOrEvenOrBothOrNone\
    \ = (sum: number) => isOdd(sum) || isEven(sum) || sum === 0;\n  const isEvenOrOddOrBothOrNoneOrZero\
    \ = (sum: number) => isEven(sum) || isOdd(sum) || sum === 0;\n  const isOddOrEvenOrBothOrNoneOrZero\
    \ = (sum: number) => isOdd(sum) || isEven(sum) || sum === 0;\n  const isEvenOrOddOrBothOrNoneOrZeroOrNaN\
    \ = (sum: number) => isEven(sum) || isOdd(sum) || sum === 0;\n  const isOddOrEvenOrBothOrNoneOrZeroOrNaN\
    \ = (sum: number) => isOdd(sum) || isEven(sum) || sum === 0;\n  const isEvenOrOddOrBothOrNoneOrZeroOrNaNOrNaN\
    \ = (sum: number) => isEven(sum) || isOdd(sum) || sum === 0;\n  const isOddOrEvenOrBothOrNoneOrZeroOrNaNOrNaN\
    \ = (sum: number) => isOdd(sum) || isEven(sum) || sum === 0;\n  const isEvenOrOddOrBothOrNoneOrZeroOrNaNOrNaNOrNaN\
    \ = (sum: number) => isEven(sum) || isOdd(sum) || sum === 0;\n  const isOddOrEvenOrBothOrNoneOrZeroOrNaNOrNaNOrNaN\
    \ = (sum: number) => isOdd(sum) || isEven(sum) || sum === 0;\n  const isEvenOrOddOrBothOrNoneOrZeroOrNaNOrNaNOrNaN\
    \ = (sum: number) => isEven(sum) || isO", "  if (array.length === 0) {\n    return\
    \ array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n\
    \  if (firstIndex === lastIndex) {\n    return array;\n  }\n  const isOdd = (firstIndex\
    \ + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a, b) => a - b) : array.sort((a,\
    \ b) => b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex + lastIndex)\
    \ % 2 === 1;\n  return isOdd ? array.sort((a, b) => a - b) : array.sort((a, b)\
    \ => b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const sumFirstIndex = firstIndex\
    \ + lastIndex;\n  const sumLastIndex = firstIndex + lastIndex;\n  const isOdd\
    \ = sumFirstIndex % 2 === 1;\n  const isEven = sumLastIndex % 2 === 0;\n\n  if\
    \ (isOdd) {\n    return array.sort((a, b) => a - b);\n  }\n\n  if (isEven) {\n\
    \    return array.sort((a, b) => b - a);\n  }\n\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[array.length\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n\n  const sum = array.reduce((acc, curr) => acc + curr, 0);\n  const isOdd\
    \ = sum % 2 === 1;\n  const isEven = sum % 2 === 0;\n\n  if (isOdd) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n\n  return\
    \ array;\n}\n", "  if (array.length === 0) {\n    return array;\n  }\n\n  const\
    \ sum = array.reduce((sum, value) => sum + value, 0);\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len <= 1) {\n    return array;\n  }\n\
    \  const mid = Math.floor(len / 2);\n  const left = array.slice(0, mid);\n  const\
    \ right = array.slice(mid);\n  const sumLeft = left.reduce((sum, num) => sum +\
    \ num, 0);\n  const sumRight = right.reduce((sum, num) => sum + num, 0);\n  if\
    \ (sumLeft % 2 === 1) {\n    return sort_array(left).concat(sort_array(right));\n\
    \  }\n  if (sumRight % 2 === 0) {\n    return sort_array(right).concat(sort_array(left));\n\
    \  }\n  return sort_array(left).concat(sort_array(right));\n}\n", "  const len\
    \ = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum = Math.sum(array);\n\
    \  const evenSum = sum % 2 === 0;\n  const oddSum = sum % 2 === 1;\n  if (evenSum)\
    \ {\n    return array.sort((a, b) => a - b);\n  }\n  if (oddSum) {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a, b) =>\
    \ a - b);\n  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd\
    \ ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}\n", "  let sum\
    \ = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const sum = (first: number, last:\
    \ number) => first + last;\n  const odd = (first: number, last: number) => first\
    \ % 2 === 1;\n  const even = (first: number, last: number) => first % 2 === 0;\n\
    \  const compare = (a: number, b: number) => {\n    if (sum(a, b) === 0) {\n \
    \     return 0;\n    }\n    if (odd(a, b)) {\n      return 1;\n    }\n    return\
    \ -1;\n  };\n  return array.sort(compare);\n}\n", "  if (array.length === 0) {\n\
    \    return array;\n  }\n\n  const sumOfFirstAndLastElement = array.reduce((sum,\
    \ value) => sum + value, 0);\n  const isOdd = sumOfFirstAndLastElement % 2 ===\
    \ 1;\n\n  return isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) => b\
    \ - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n \
    \   sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a\
    \ - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length === 0) {\n    return array;\n  }\n  const sum = (array[0]\
    \ + array[array.length - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) =>\
    \ a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if\
    \ (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2\
    \ === 1;\n  return isOdd ? array.sort((a, b) => b - a) : array.sort((a, b) =>\
    \ a - b);\n}\n", "  if (array.length === 0) {\n    return array;\n  }\n  const\
    \ [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex\
    \ + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a, b) => a - b) : array.sort((a,\
    \ b) => b - a);\n}\n", "  if (array.length === 0) {\n    return array;\n  }\n\n\
    \  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const isOdd\
    \ = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a, b) =>\
    \ a - b) : array.sort((a, b) => b - a);\n}\n", "  let sum = 0;\n  for (let i =\
    \ 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0)\
    \ {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b\
    \ - a);\n  }\n  return array;\n}\n", "  const sum = (first: number, last: number)\
    \ => first + last;\n  const isOdd = (first: number, last: number) => sum(1, last)\
    \ % 2 === 1;\n  const isEven = (first: number, last: number) => sum(1, last) %\
    \ 2 === 0;\n  return array.sort((a, b) => {\n    if (isOdd(a, b)) {\n      return\
    \ -1;\n    }\n    if (isEven(a, b)) {\n      return 1;\n    }\n    return a -\
    \ b;\n  });\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n\
    \    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a\
    \ - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const\
    \ len = array.length;\n  if (len === 0) {\n    return array;\n  }\n  const sum\
    \ = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return array;\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return\
    \ array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a, b) => b\
    \ - a);\n  }\n}\n", "  const len = array.length;\n  if (len === 0) {\n    return\
    \ array;\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0)\
    \ {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b\
    \ - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if (len <=\
    \ 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len - 1]);\n \
    \ if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  }\n  return\
    \ array.sort((a, b) => b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return array;\n  }\n  const mid = Math.floor(len / 2);\n\
    \  const left = array.slice(0, mid);\n  const right = array.slice(mid);\n  const\
    \ leftSum = left\n    .map((num) => num + 0)\n    .reduce((acc, num) => acc +\
    \ num, 0);\n  const rightSum = right\n    .map((num) => num + 0)\n    .reduce((acc,\
    \ num) => acc + num, 0);\n  if (leftSum % 2 === 1) {\n    return sort_array(left).concat(right);\n\
    \  }\n  if (rightSum % 2 === 1) {\n    return left.concat(sort_array(right));\n\
    \  }\n  return left.concat(right);\n}\n", "  const len = array.length;\n  if (len\
    \ === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len - 1]);\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  if (firstIndex\
    \ === lastIndex) {\n    return array;\n  }\n  if (firstIndex % 2 === 1) {\n  \
    \  return array.sort((a, b) => b - a);\n  }\n  return array.sort((a, b) => a -\
    \ b);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n   \
    \ sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a -\
    \ b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  if (firstIndex === lastIndex) {\n    return\
    \ array;\n  }\n  if (firstIndex % 2 === 1) {\n    return array.sort((a, b) =>\
    \ b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const sortedArray = array.slice();\n  const sumOfFirstIndex = array.reduce((sum,\
    \ value) => sum + value, 0);\n  const sumOfLastIndex = array.reduce((sum, value)\
    \ => sum + value, 0);\n  if (sumOfFirstIndex % 2 === 1) {\n    sortedArray.sort((a,\
    \ b) => a - b);\n  } else {\n    sortedArray.sort((a, b) => b - a);\n  }\n  return\
    \ sortedArray;\n}\n", "  if (array.length === 0) {\n    return array;\n  }\n \
    \ const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  if (firstIndex\
    \ === lastIndex) {\n    return array;\n  }\n  if (firstIndex % 2 === 1) {\n  \
    \  return array.sort((a, b) => b - a);\n  }\n  return array.sort((a, b) => a -\
    \ b);\n}\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n\
    \  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n   \
    \ array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else\
    \ {\n    return array.sort((a, b) => b - a);\n  }\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum %\
    \ 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 1) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const len = array.length;\n  if (len === 0) {\n\
    \    return array;\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 1) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const len = array.length;\n  if (len === 0) {\n\
    \    return array;\n  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const sum = (first: number, last: number) => first\
    \ + last;\n  const isOdd = (first: number, last: number) => sum(0, last) % 2 ===\
    \ 1;\n  const isEven = (first: number, last: number) => sum(0, last) % 2 === 0;\n\
    \  const sortedArray = array.sort((a, b) => isOdd(a, b) ? -1 : isEven(a, b) ?\
    \ 1 : 0);\n  return sortedArray;\n}\n", "  const len = array.length;\n  if (len\
    \ === 0) {\n    return [];\n  }\n  if (len === 1) {\n    return array;\n  }\n\
    \  const mid = Math.floor(len / 2);\n  const left = array.slice(0, mid);\n  const\
    \ right = array.slice(mid);\n  const leftSum = left\n    .map((v) => v)\n    .reduce((acc,\
    \ v) => acc + v, 0);\n  const rightSum = right\n    .map((v) => v)\n    .reduce((acc,\
    \ v) => acc + v, 0);\n  const isOdd = leftSum % 2 === 1;\n  const isEven = rightSum\
    \ % 2 === 0;\n  if (isOdd || isEven) {\n    return sort_array(left).concat(sort_array(right));\n\
    \  }\n  return left.concat(right);\n}\n", "  let sum = 0;\n  for (let i = 0; i\
    \ < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const sum = (arr: number[]) => arr.reduce((acc,\
    \ curr) => acc + curr, 0);\n  const isOdd = (arr: number[]) => sum( arr ) % 2\
    \ === 1;\n  const isEven = (arr: number[]) => sum( arr ) % 2 === 0;\n  const sortedArray\
    \ = array.sort((a, b) => isEven(a) - isEven(b) || isOdd(a) - isOdd(b));\n  return\
    \ sortedArray;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  if (array.length <= 1) {\n    return array;\n  }\n  const sum = (array[0]\
    \ + array[array.length - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n  const sum = Math.sum(array);\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len < 2) {\n    return array;\n  }\n  const sum = (array[0] + array[len - 1]);\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  const len = array.length;\n  if (len === 0) {\n\
    \    return array;\n  }\n  const sum = array.reduce((prev, curr) => prev + curr,\
    \ 0);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else\
    \ {\n    return array.sort((a, b) => b - a);\n  }\n}\n", "  if (array.length ===\
    \ 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n \
    \ return [...array.slice(0, firstIndex), ...array.slice(firstIndex + 1, lastIndex),\
    \ ...array.slice(lastIndex + 1)];\n}\n", "  const sum = (first: number, last:\
    \ number) => first + last;\n  const isOdd = (first: number, last: number) => sum(1,\
    \ last) % 2 === 1;\n  const isEven = (first: number, last: number) => sum(1, last)\
    \ % 2 === 0;\n  const isOddEven = (first: number, last: number) => isOdd(first,\
    \ last) || isEven(first, last);\n  const isOddEvenReverse = (first: number, last:\
    \ number) => isEven(first, last) || isOdd(first, last);\n  const isOddEvenReverseReverse\
    \ = (first: number, last: number) => isOdd(first, last) || isEven(first, last);\n\
    \  const isOddEvenReverseReverseReverseReverse = (first: number, last: number)\
    \ => isEven(first, last) || isOdd(first, last);\n  const isOddEvenReverseReverseReverseReverseReverse\
    \ = (first: number, last: number) => isOdd(first, last) || isEven(first, last);\n\
    \  const isOddEvenReverseReverseReverseReverseReverseReverse = (first: number,\
    \ last: number) => isEven(first, last) || isOdd(first, last);\n  const isOddEvenReverseReverseReverseReverseReverseReverseReverse\
    \ = (first: number, last: number) => isOdd(first, last) || isEven(first, last);\n\
    \  const isOddEvenReverseReverseReverseReverseReverseReverseReverseReverse = (first:\
    \ number, last: number) => isEven(first, last) || isOdd(first, last);\n  const\
    \ isOddEvenReverseReverseReverseReverseReverseReverseReverse = (first: number,\
    \ last: number) => isOdd(first, last) || isEven(first, last);\n  const isOddEvenReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = (first: number, last: number) => isEven(first, last) || isOdd(first, last);\n\
    \  const isOddEvenReverseReverseReverseReverseReverseReverseReverseReverseReverse\
    \ = (first: number, last: number) => isOdd(first, last) || isEven(first, last);\n\
    \  const isOddEvenReverseReverseReverseReverseReverseReverseReverseReverse = (first:\
    \ number, last: number) => isEven(first, last) || isOdd(first, last);\n  const\
    \ isOddEvenReverseReverseReverseReverseReverseReverseReverseReverse = (first:\
    \ number, last: number) => isOdd(first, last) || isEven(first, last);\n  const\
    \ isOddEvenReverseReverseReverseReverseReverseReverseReverseReverseReverse = (first:\
    \ number, last: number) => isEven(first, last) || isOdd(first, ", "  const len\
    \ = array.length;\n  if (len === 0) {\n    return array;\n  }\n  const [first,\
    \ ...rest] = array;\n  const [sum, ...rest2] = array;\n  const [last, ...rest3]\
    \ = array;\n  if (sum % 2 === 0) {\n    return rest3.concat(first).concat(rest).concat(last);\n\
    \  }\n  return rest2.concat(first).concat(rest).concat(last);\n}\n", "  let sum\
    \ = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n  if\
    \ (len === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len -\
    \ 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0;\
    \ i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n\
    \    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if\
    \ (array.length === 0) {\n    return array;\n  }\n\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2\
    \ === 1;\n  return isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) =>\
    \ b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n\
    \    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a\
    \ - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const sum = (first:\
    \ number, last: number) => first + last;\n  const isOdd = (first: number, last:\
    \ number) => sum(0, last) % 2 === 1;\n  const isEven = (first: number, last: number)\
    \ => sum(0, last) % 2 === 0;\n  return array.sort((a, b) => {\n    if (isOdd(a,\
    \ b)) {\n      return -1;\n    }\n    if (isEven(a, b)) {\n      return 1;\n \
    \   }\n    return a - b;\n  });\n}\n", "  let sum = 0;\n  for (let i = 0; i <\
    \ array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n  \
    \  array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n\
    \  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return array;\n\
    \  }\n\n  const sum = array.reduce((sum, value) => sum + value, 0);\n  if (sum\
    \ % 2 === 0) {\n    return array.sort((a, b) => a - b);\n  } else {\n    return\
    \ array.sort((a, b) => b - a);\n  }\n}\n", "  const sum = (first: number, last:\
    \ number) => first + last;\n  const isOdd = (first: number, last: number) => sum(0,\
    \ last) % 2 === 1;\n  const isEven = (first: number, last: number) => sum(0, last)\
    \ % 2 === 0;\n  const sorted = array.slice().sort((a, b) => {\n    if (isOdd(a,\
    \ b)) {\n      return -1;\n    }\n    if (isEven(a, b)) {\n      return 1;\n \
    \   }\n    return a - b;\n  });\n  return sorted;\n}\n", "  if (array.length <\
    \ 2) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  return [...array.slice(0, firstIndex), ...array.slice(firstIndex,\
    \ lastIndex), ...array.slice(lastIndex)];\n}\n", "  let sum = 0;\n  for (let i\
    \ = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 ===\
    \ 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) =>\
    \ b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return\
    \ array;\n  }\n\n  const sumArray = array.reduce((sum, value) => {\n    return\
    \ sum + value;\n  }, 0);\n\n  if (sumArray % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n\n  return array;\n\
    }\n", "  if (array.length <= 1) {\n    return array;\n  }\n  const [firstIndex,\
    \ lastIndex] = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex + lastIndex)\
    \ % 2 === 1;\n  return isOdd ? array.sort((a, b) => a - b) : array.sort((a, b)\
    \ => b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if\
    \ (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2\
    \ === 1;\n  return isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) =>\
    \ b - a);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n\
    \    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a\
    \ - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return array;\n  }\n  const sum = (array[0] + array[len\
    \ - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n\
    \    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n\
    \  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum\
    \ % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n\n  const [firstIndex, lastIndex] = array.sort((a, b) =>\
    \ a - b);\n\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n\n  if\
    \ (firstIndex % 2 === 0 && lastIndex % 2 === 0) {\n    return array.sort((a, b)\
    \ => b - a);\n  }\n\n  return array.sort((a, b) => a - b);\n}\n", "  const len\
    \ = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) =>\
    \ a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", " \
    \ const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n  const\
    \ sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n  const sum = (first: number,\
    \ last: number) => first + last;\n  const isOdd = (first: number, last: number)\
    \ => sum(0, last) % 2 === 1;\n  const isEven = (first: number, last: number) =>\
    \ sum(0, last) % 2 === 0;\n  const isSumEven = isEven;\n  const isSumOdd = isOdd;\n\
    \  const isFirstOdd = (first: number, last: number) => first % 2 === 1;\n  const\
    \ isLastEven = (first: number, last: number) => last % 2 === 0;\n  const isFirstEven\
    \ = (first: number, last: number) => first % 2 === 0;\n  const isLastOdd = (first:\
    \ number, last: number) => last % 2 === 1;\n  const isFirstSumEven = isFirstEven;\n\
    \  const isFirstSumOdd = isFirstOdd;\n  const isLastSumEven = isLastEven;\n  const\
    \ isLastSumOdd = isLastOdd;\n  const isFirstSumEvenAndLastSumOdd = (first: number,\
    \ last: number) => isFirstSumEven(first, last) && isLastSumOdd(first, last);\n\
    \  const isFirstSumOddAndLastSumEven = (first: number, last: number) => isFirstSumOdd(first,\
    \ last) && isLastSumEven(first, last);\n  const isLastSumEvenAndFirstSumOdd =\
    \ (first: number, last: number) => isLastSumEven(first, last) && isFirstSumOdd(first,\
    \ last);\n  const isLastSumOddAndFirstSumEven = (first: number, last: number)\
    \ => isLastSumOdd(first, last) && isFirstSumEven(first, last);\n  const isFirstSumEvenAndLastSumOddAndLastSumEven\
    \ = (first: number, last: number) => isFirstSumEven(first, last) && isLastSumOdd(first,\
    \ last) && isLastSumEven(first, last);\n  const isFirstSumOddAndLastSumEvenAndLastSumOdd\
    \ = (first: number, last: number) => isFirstSumOdd(first, last) && isLastSumEven(first,\
    \ last) && isLastSumOdd(first, last);\n  const isFirstSumEvenAndLastSumOddAndFirstSumOdd\
    \ = (first: number, last: number) => isFirstSumEven(first, last) && isLastSumOdd(first,\
    \ last) && isFirstSumOdd(first, last);\n  const isFirstSumOddAndLastSumEven",
  "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  if (firstIndex === lastIndex) {\n    return\
    \ array;\n  }\n  if (firstIndex % 2 === 1) {\n    return array.sort((a, b) =>\
    \ b - a);\n  }\n  return array.sort((a, b) => a - b);\n}\n", "  const len = array.length;\n\
    \  if (len === 0) {\n    return [];\n  }\n  if (len === 1) {\n    return array;\n\
    \  }\n  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n   \
    \ return array.sort((a, b) => a - b);\n  } else {\n    return array.sort((a, b)\
    \ => b - a);\n  }\n}\n", "  if (array.length === 0) {\n    return array;\n  }\n\
    \n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n  const isOdd\
    \ = (firstIndex + lastIndex) % 2 === 1;\n  return isOdd ? array.sort((a, b) =>\
    \ a - b) : array.sort((a, b) => b - a);\n}\n", "  let sum = 0;\n  for (let i =\
    \ 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0)\
    \ {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) => b\
    \ - a);\n  }\n  return array;\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  const sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 1) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  let sum = 0;\n  for (let i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a,\
    \ b) => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const\
    \ sum = (first: number, last: number) => first + last;\n  const isOdd = (first:\
    \ number, last: number) => sum(1, last) % 2 === 1;\n  const isEven = (first: number,\
    \ last: number) => sum(1, last) % 2 === 0;\n  const sortedArray = array.sort((a,\
    \ b) => isEven(a, b) ? -1 : isOdd(a, b) ? 1 : 0);\n  return sortedArray;\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length\
    \ === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a,\
    \ b) => a - b);\n  const isOdd = (firstIndex + lastIndex) % 2 === 1;\n  return\
    \ isOdd ? array.sort((a, b) => a - b) : array.sort((a, b) => b - a);\n}\n", " \
    \ const sum = (first: number, last: number) => first + last;\n  const odd = (first:\
    \ number, last: number) => first % 2 === 1;\n  const even = (first: number, last:\
    \ number) => first % 2 === 0;\n  const compare = (a: number, b: number) => {\n\
    \    if (odd(a, b)) {\n      return -1;\n    }\n    if (even(a, b)) {\n      return\
    \ 1;\n    }\n    return sum(a, b);\n  };\n  return array.sort(compare);\n}\n",
  "  if (array.length === 0) {\n    return array;\n  }\n  const [firstIndex, lastIndex]\
    \ = array.sort((a, b) => a - b);\n  if (firstIndex === lastIndex) {\n    return\
    \ array;\n  }\n  return [...array.slice(0, firstIndex), ...array.slice(firstIndex\
    \ + 1, lastIndex), ...array.slice(lastIndex + 1)];\n}\n", "  let sum = 0;\n  for\
    \ (let i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum %\
    \ 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length <= 1) {\n   \
    \ return array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a\
    \ - b);\n  const sumFirstIndex = firstIndex + lastIndex;\n  const sumLastIndex\
    \ = firstIndex + lastIndex;\n  if (sumFirstIndex % 2 === 1) {\n    return array.sort((a,\
    \ b) => a - b);\n  }\n  return array.sort((a, b) => b - a);\n}\n", "  const len\
    \ = array.length;\n  if (len < 2) {\n    return array;\n  }\n  const sum = (array[0]\
    \ + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a, b) =>\
    \ a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n", " \
    \ const len = array.length;\n  if (len === 0) {\n    return array;\n  }\n  const\
    \ sum = (array[0] + array[len - 1]);\n  if (sum % 2 === 0) {\n    return array.sort((a,\
    \ b) => a - b);\n  } else {\n    return array.sort((a, b) => b - a);\n  }\n}\n",
  "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  const sum = (arr:\
    \ number[]) => arr.reduce((acc, val) => acc + val, 0);\n  const isOdd = (sum:\
    \ number) => sum % 2 === 1;\n  const isEven = (sum: number) => sum % 2 === 0;\n\
    \  const sortedArray = array.sort((a, b) => isOdd(sum(a)) ? 1 : isEven(sum(b))\
    \ ? -1 : 0);\n  return sortedArray;\n}\n", "  const sortedArray = array.slice();\n\
    \  const sumOfFirstElement = sortedArray.reduce((sum, value) => sum + value, 0);\n\
    \  const sumOfLastElement = sortedArray.reduce((sum, value) => sum + value, 0);\n\
    \  const isOdd = sumOfFirstElement % 2 === 1;\n  const isEven = sumOfLastElement\
    \ % 2 === 0;\n  if (isOdd === isEven) {\n    return sortedArray;\n  }\n  return\
    \ isOdd ? sortedArray.sort((a, b) => a - b) : sortedArray.sort((a, b) => b - a);\n\
    }\n", "  const len = array.length;\n  if (len === 0) {\n    return [];\n  }\n\
    \  let sum = 0;\n  for (let i = 0; i < len; i++) {\n    sum += array[i];\n  }\n\
    \  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a,\
    \ b) => b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n  \
    \  return array;\n  }\n\n  const [firstIndex, lastIndex] = array.sort((a, b) =>\
    \ a - b);\n\n  if (firstIndex === lastIndex) {\n    return array;\n  }\n\n  const\
    \ isOdd = (firstIndex + lastIndex) % 2 === 1;\n\n  return isOdd ? array.sort((a,\
    \ b) => b - a) : array.sort((a, b) => a - b);\n}\n", "  let sum = 0;\n  for (let\
    \ i = 0; i < array.length; i++) {\n    sum += array[i];\n  }\n  if (sum % 2 ===\
    \ 0) {\n    array.sort((a, b) => a - b);\n  } else {\n    array.sort((a, b) =>\
    \ b - a);\n  }\n  return array;\n}\n", "  if (array.length === 0) {\n    return\
    \ array;\n  }\n  const [firstIndex, lastIndex] = array.sort((a, b) => a - b);\n\
    \  if (firstIndex === lastIndex) {\n    return array;\n  }\n  if (firstIndex %\
    \ 2 === 1) {\n    return array.sort((a, b) => b - a);\n  }\n  return array.sort((a,\
    \ b) => a - b);\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++)\
    \ {\n    sum += array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b)\
    \ => a - b);\n  } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum +=\
    \ array[i];\n  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n \
    \ } else {\n    array.sort((a, b) => b - a);\n  }\n  return array;\n}\n", "  let\
    \ sum = 0;\n  for (let i = 0; i < array.length; i++) {\n    sum += array[i];\n\
    \  }\n  if (sum % 2 === 0) {\n    array.sort((a, b) => a - b);\n  } else {\n \
    \   array.sort((a, b) => b - a);\n  }\n  return array;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_93_encode
language: ts
prompt: "//Write a function that takes a message, and encodes in such a \n// way that\
  \ it swaps case of all letters, replaces all vowels in \n// the message with the\
  \ letter that appears 2 places ahead of that \n// vowel in the english alphabet.\
  \ \n// Assume only letters. \n// Examples:\n// >>> encode(\"test\")\n// \"TGST\"\
  \n// >>> encode(\"This is a message\")\n// \"tHKS KS C MGSSCGG\"\nfunction encode(message:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = encode;\n  assert.deepEqual(candidate(\"TEST\"),\"\
  tgst\");\n  assert.deepEqual(candidate(\"Mudasir\"),\"mWDCSKR\");\n  assert.deepEqual(candidate(\"\
  YES\"),\"ygs\");\n  assert.deepEqual(candidate(\"This is a message\"),\"tHKS KS\
  \ C MGSSCGG\");\n  assert.deepEqual(candidate(\"I DoNt KnOw WhAt tO WrItE\"),\"\
  k dQnT kNqW wHcT Tq wRkTg\");\n}\n\ntest();"
completions: ["    let result: string = \"\";\n    for (let i = 0; i < message.length;\
    \ i++) {\n        let letter = message[i];\n        if (letter === \"a\" || letter\
    \ === \"e\" || letter === \"i\" || letter === \"o\" || letter === \"u\") {\n \
    \           result += letter;\n        } else {\n            let nextLetter =\
    \ message[(i + 1) % (message.length)];\n            if (nextLetter === \"a\" ||\
    \ nextLetter === \"e\" || nextLetter === \"i\" || nextLetter === \"o\" || nextLetter\
    \ === \"u\") {\n                result += nextLetter;\n            } else {\n\
    \                let nextVowel = message[(i + 2) % (message.length)];\n      \
    \          if (nextVowel === \"a\" || nextVowel === \"e\" || nextVowel === \"\
    i\" || nextVowel === \"o\" || nextVowel === \"u\") {\n                    result\
    \ += nextVowel;\n                } else {\n                    result += letter.toUpperCase();\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n",
  "    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    let vowels: string\
    \ = \"aeiou\";\n    let result: string = \"\";\n    for (let i = 0; i < message.length;\
    \ i++) {\n        let letter = message[i];\n        let index = alphabet.indexOf(letter);\n\
    \        if (index != -1) {\n            let nextIndex = index + 1;\n        \
    \    if (nextIndex < alphabet.length) {\n                let nextLetter = alphabet[nextIndex];\n\
    \                result += nextLetter;\n            }\n        }\n    }\n    for\
    \ (let i = 0; i < message.length; i++) {\n        let letter = message[i];\n \
    \       let index = vowels.indexOf(letter);\n        if (index != -1) {\n    \
    \        let nextIndex = index + 1;\n            if (nextIndex < vowels.length)\
    \ {\n                let nextLetter = vowels[nextIndex];\n                result\
    \ += nextLetter;\n            }\n        }\n    }\n    return result;\n}\n", " \
    \   let result = \"\";\n    for (let i = 0; i < message.length; i++) {\n     \
    \   let letter = message[i];\n        if (letter === \"a\" || letter === \"e\"\
    \ || letter === \"i\" || letter === \"o\" || letter === \"u\") {\n           \
    \ result += letter;\n        }\n        else {\n            let index = alphabet.indexOf(letter);\n\
    \            if (index > -1) {\n                result += alphabet[index + 2];\n\
    \            }\n            else {\n                result += letter;\n      \
    \      }\n        }\n    }\n    return result;\n}\n", "  let result = \"\";\n\
    \  for (let i = 0; i < message.length; i++) {\n    const letter = message[i];\n\
    \    const vowels = \"aeiouAEIOU\";\n    const index = vowels.indexOf(letter);\n\
    \    if (index > -1) {\n      result += vowels[index + 2];\n    } else {\n   \
    \   result += letter;\n    }\n  }\n  return result;\n}\n", "    let result = \"\
    \";\n    for (let i = 0; i < message.length; i++) {\n        let letter = message[i];\n\
    \        if (letter === letter.toUpperCase()) {\n            result += letter.toUpperCase();\n\
    \        } else {\n            let index = alphabet.indexOf(letter);\n       \
    \     if (index === -1) {\n                result += letter;\n            } else\
    \ {\n                result += alphabet[index + 1];\n            }\n        }\n\
    \    }\n    return result;\n}\n", "  let result = \"\";\n  for (let i = 0; i <\
    \ message.length; i++) {\n    let letter = message[i];\n    if (letter === \"\
    a\" || letter === \"e\" || letter === \"i\" || letter === \"o\" || letter ===\
    \ \"u\") {\n      result += letter;\n    } else {\n      result += getLetterForVowel(letter);\n\
    \    }\n  }\n  return result;\n}\n", "  let newMessage = \"\";\n  for (let i =\
    \ 0; i < message.length; i++) {\n    let letter = message[i];\n    if (letter\
    \ === \"a\" || letter === \"e\" || letter === \"i\" || letter === \"o\" || letter\
    \ === \"u\") {\n      newMessage += letter;\n    } else if (letter === \"A\" ||\
    \ letter === \"E\" || letter === \"I\" || letter === \"O\" || letter === \"U\"\
    ) {\n      newMessage += letter.toUpperCase();\n    } else {\n      newMessage\
    \ += letter;\n    }\n  }\n  return newMessage;\n}\n", "    let result = \"\";\n\
    \    for (let i = 0; i < message.length; i++) {\n        let letter = message[i];\n\
    \        if (letter === letter.toUpperCase()) {\n            result += letter.toUpperCase();\n\
    \        } else {\n            result += letter.toLowerCase();\n        }\n  \
    \  }\n    return result;\n}\n", "  let newMessage = \"\";\n  for (let i = 0; i\
    \ < message.length; i++) {\n    let letter = message[i];\n    let nextLetter =\
    \ message[i + 1];\n    if (letter === \"a\" || letter === \"e\" || letter ===\
    \ \"i\" || letter === \"o\" || letter === \"u\") {\n      newMessage += letter;\n\
    \      i++;\n    } else if (letter === \"A\" || letter === \"E\" || letter ===\
    \ \"I\" || letter === \"O\" || letter === \"U\") {\n      newMessage += letter;\n\
    \      i++;\n    } else if (letter === \"b\" || letter === \"c\" || letter ===\
    \ \"d\" || letter === \"f\" || letter === \"g\" || letter === \"h\" || letter\
    \ === \"j\" || letter === \"k\" || letter === \"l\" || letter === \"m\" || letter\
    \ === \"n\" || letter === \"p\" || letter === \"q\" || letter === \"r\" || letter\
    \ === \"s\" || letter === \"t\" || letter === \"v\" || letter === \"w\" || letter\
    \ === \"x\" || letter === \"y\" || letter === \"z\") {\n      newMessage += letter;\n\
    \      i++;\n    } else {\n      newMessage += letter;\n    }\n  }\n  return newMessage;\n\
    }\n", "    let newMessage = message;\n    for (let i = 0; i < message.length;\
    \ i++) {\n        const letter = message[i];\n        newMessage = newMessage.replace(letter,\
    \ letter.toUpperCase());\n    }\n    for (let i = 0; i < newMessage.length; i++)\
    \ {\n        const letter = newMessage[i];\n        const index = letter.charCodeAt(0)\
    \ - 97;\n        const letter2 = String.fromCharCode(index + 2);\n        newMessage\
    \ = newMessage.replace(letter, letter2);\n    }\n    return newMessage;\n}\n",
  "    let result: string = \"\";\n    for (let i = 0; i < message.length; i++) {\n\
    \        let letter = message[i];\n        if (letter === \"a\" || letter ===\
    \ \"e\" || letter === \"i\" || letter === \"o\" || letter === \"u\") {\n     \
    \       result += letter;\n        } else {\n            let index = alphabet.indexOf(letter);\n\
    \            let nextLetter = alphabet[(index + 1) % alphabet.length];\n     \
    \       result += nextLetter;\n        }\n    }\n    return result;\n}\n", " \
    \ let result = \"\";\n  for (let i = 0; i < message.length; i++) {\n    let letter\
    \ = message[i];\n    if (letter === \"a\" || letter === \"e\" || letter === \"\
    i\" || letter === \"o\" || letter === \"u\") {\n      result += letter;\n    }\
    \ else if (letter === \"A\" || letter === \"E\" || letter === \"I\" || letter\
    \ === \"O\" || letter === \"U\") {\n      result += letter.toUpperCase();\n  \
    \  } else {\n      result += letter.charCodeAt(0) - 97;\n    }\n  }\n  return\
    \ result;\n}\n", "    let result = \"\";\n    for (let i = 0; i < message.length;\
    \ i++) {\n        let letter = message[i];\n        let index = letter.charCodeAt(0)\
    \ - 97;\n        if (index >= 0) {\n            result += letter.toUpperCase();\n\
    \        } else {\n            result += letter;\n        }\n    }\n    return\
    \ result;\n}\n", "  let result = \"\";\n  for (let i = 0; i < message.length;\
    \ i++) {\n    let letter = message[i];\n    if (letter === \"a\" || letter ===\
    \ \"e\" || letter === \"i\" || letter === \"o\" || letter === \"u\") {\n     \
    \ result += letter;\n    } else {\n      let index = alphabet.indexOf(letter);\n\
    \      let nextLetter = alphabet[index + 1];\n      result += nextLetter;\n  \
    \  }\n  }\n  return result;\n}\n", "  let result = \"\";\n  for (let i = 0; i\
    \ < message.length; i++) {\n    let letter = message[i];\n    if (letter === \"\
    a\" || letter === \"e\" || letter === \"i\" || letter === \"o\" || letter ===\
    \ \"u\") {\n      result += letter;\n    } else {\n      result += getVowel(letter);\n\
    \    }\n  }\n  return result;\n}\n", "  let newMessage = message;\n  for (let\
    \ i = 0; i < newMessage.length; i++) {\n    let letter = newMessage.charAt(i);\n\
    \    let nextLetter = newMessage.charAt(i + 1);\n    if (letter === 'a' || letter\
    \ === 'e' || letter === 'i' || letter === 'o' || letter === 'u') {\n      newMessage\
    \ = newMessage.replace(letter, nextLetter);\n    }\n  }\n  return newMessage;\n\
    }\n", "  let result = \"\";\n  for (let i = 0; i < message.length; i++) {\n  \
    \  let letter = message[i];\n    if (letter === \"a\" || letter === \"e\" || letter\
    \ === \"i\" || letter === \"o\" || letter === \"u\") {\n      result += letter;\n\
    \    } else {\n      let index = alphabet.indexOf(letter);\n      result += alphabet[(index\
    \ + 1) % alphabet.length];\n    }\n  }\n  return result;\n}\n", "    let result\
    \ = \"\";\n    for (let i = 0; i < message.length; i++) {\n        let letter\
    \ = message[i];\n        if (letter === \"a\" || letter === \"e\" || letter ===\
    \ \"i\" || letter === \"o\" || letter === \"u\") {\n            result += letter;\n\
    \        } else {\n            let vowelIndex = alphabet.indexOf(letter);\n  \
    \          let vowel = alphabet[vowelIndex + 1];\n            result += vowel;\n\
    \        }\n    }\n    return result;\n}\n", "  let result = \"\";\n  for (let\
    \ i = 0; i < message.length; i++) {\n    let letter = message[i];\n    let index\
    \ = alphabet.indexOf(letter);\n    if (index === -1) {\n      result += letter;\n\
    \    } else {\n      let nextLetter = alphabet[index + 1];\n      result += nextLetter;\n\
    \    }\n  }\n  return result;\n}\n", "  let result = \"\";\n  for (let i = 0;\
    \ i < message.length; i++) {\n    let letter = message[i];\n    if (letter ===\
    \ \"a\") {\n      letter = \"t\";\n    } else if (letter === \"e\") {\n      letter\
    \ = \"k\";\n    } else if (letter === \"i\") {\n      letter = \"s\";\n    } else\
    \ if (letter === \"o\") {\n      letter = \"c\";\n    } else if (letter === \"\
    u\") {\n      letter = \"g\";\n    }\n    result += letter;\n  }\n  return result;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

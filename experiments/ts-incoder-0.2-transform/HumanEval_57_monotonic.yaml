name: HumanEval_57_monotonic
language: ts
prompt: "//Return True is list elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// true\n// >>> monotonic([1, 20, 4, 10])\n// false\n\
  // >>> monotonic([4, 1, 0, -10])\n// true\nfunction monotonic(l: number[]): boolean\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = monotonic;\n  assert.deepEqual(candidate([1, 2, 4,\
  \ 10]),true);\n  assert.deepEqual(candidate([1, 2, 4, 20]),true);\n  assert.deepEqual(candidate([1,\
  \ 20, 4, 10]),false);\n  assert.deepEqual(candidate([4, 1, 0, -10]),true);\n  assert.deepEqual(candidate([4,\
  \ 1, 1, 0]),true);\n  assert.deepEqual(candidate([1, 2, 3, 2, 5, 60]),false);\n\
  \  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n  assert.deepEqual(candidate([9,\
  \ 9, 9, 9]),true);\n}\n\ntest();"
completions: ["  let i = 0;\n  let j = 1;\n  let k = 0;\n  while (j < l.length) {\n\
    \    if (l[j] < l[i]) {\n      i++;\n    } else if (l[j] > l[i]) {\n      j++;\n\
    \    } else {\n      k++;\n    }\n  }\n  return k === i;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    if (l[i] < n) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    if (l[i]\
    \ > l[j]) {\n      i++;\n    } else if (l[i] < l[j]) {\n      j--;\n    } else\
    \ {\n      i++;\n      j--;\n    }\n  }\n  return i === j;\n}\n", "  let prev:\
    \ number[] = [];\n  let cur: number[] = [];\n  for (let i = 0; i < l.length; i++)\
    \ {\n    cur[i] = l[i];\n    if (cur[i] < prev[i]) {\n      return true;\n   \
    \ }\n    prev[i] = cur[i];\n  }\n  return false;\n}\n", "  let i = 0;\n  let j\
    \ = l.length - 1;\n  while (i < j) {\n    if (l[i] > l[j]) {\n      return true;\n\
    \    }\n    if (l[i] < l[j]) {\n      return false;\n    }\n    i++;\n    j--;\n\
    \  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const n = l.length;\n  if (n === 1) {\n    return l[0] >= l[1];\n  }\n  const\
    \ m = l[n - 1];\n  for (let i = n - 2; i >= 0; --i) {\n    const a = l[i];\n \
    \   const b = l[i + 1];\n    if (a < b && b < m) {\n      m = b;\n    }\n  }\n\
    \  return a >= m && m >= b;\n}\n", "  let i = 0;\n  let j = l.length - 1;\n  while\
    \ (i < j) {\n    if (l[i] > l[j]) {\n      i++;\n    } else if (l[i] < l[j]) {\n\
    \      j--;\n    } else {\n      i++;\n      j--;\n    }\n  }\n  return i ===\
    \ j;\n}\n", "  let n = l.length;\n  if (n === 0) return false;\n  if (n === 1)\
    \ return true;\n  if (l[0] > l[1]) return true;\n  if (l[0] === l[1]) return true;\n\
    \  for (let i = 1; i < n; ++i) {\n    if (l[i] > l[i - 1]) return false;\n  }\n\
    \  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const\
    \ firstValue = l[0];\n  const lastValue = l[l.length - 1];\n  for (let i = 1;\
    \ i < l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue <\
    \ firstValue) {\n      return false;\n    }\n    if (currentValue > lastValue)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let i = 0;\n  let\
    \ j = l.length - 1;\n  while (i < j) {\n    if (l[i] > l[j]) {\n      i++;\n \
    \   } else if (l[i] < l[j]) {\n      j--;\n    } else {\n      return true;\n\
    \    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const firstValue = l[0];\n  for (let i = 1; i < l.length; i++) {\n   \
    \ const currentValue = l[i];\n    if (currentValue < firstValue) {\n      return\
    \ false;\n    }\n    if (currentValue > firstValue) {\n      return true;\n  \
    \  }\n  }\n  return false;\n}\n", "  let i = 0;\n  let j = l.length - 1;\n  while\
    \ (i < j) {\n    if (l[i] > l[j]) {\n      i++;\n    } else if (l[i] < l[j]) {\n\
    \      j--;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n",
  "  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let\
    \ i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const first = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const current\
    \ = l[i];\n    if (current < first) {\n      return true;\n    }\n    if (current\
    \ > first) {\n      return false;\n    }\n  }\n  return false;\n}\n", "  let i\
    \ = 0;\n  let j = 0;\n  let k = 0;\n  while (i < l.length) {\n    if (l[i] < l[j])\
    \ {\n      k = j;\n      j = i;\n      i = k;\n    } else if (l[i] > l[j]) {\n\
    \      k = j;\n      j = i;\n      i = k;\n    } else {\n      i++;\n      j++;\n\
    \    }\n  }\n  return i === j;\n}\n", "  let i = 0;\n  let j = l.length - 1;\n\
    \  while (i < j) {\n    const m = (i + j) >> 1;\n    if (l[m] < l[i]) j = m;\n\
    \    else i = m;\n  }\n  return l[j] < l[i];\n}\n", "  let i = 0;\n  let j = l.length\
    \ - 1;\n  while (i < j) {\n    if (l[i] > l[j]) {\n      return true;\n    }\n\
    \    if (l[i] < l[j]) {\n      return false;\n    }\n    i++;\n    j--;\n  }\n\
    \  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const\
    \ n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n   \
    \   return false;\n    }\n  }\n  return true;\n}\n", "  const n = l.length;\n\
    \  if (n === 0) return false;\n  if (n === 1) return true;\n  const p = l[n -\
    \ 1];\n  for (let i = n - 2; i >= 0; i--) {\n    if (l[i] < p && l[i + 1] > p)\
    \ return true;\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  const n = l.length;\n  if (n === 1) {\n    return l[0] >= l[1];\n\
    \  }\n  let i = 0;\n  let j = n - 1;\n  while (i < j) {\n    const m = (i + j)\
    \ >> 1;\n    if (l[m] < l[m + 1]) {\n      j = m;\n    } else {\n      i = m +\
    \ 1;\n    }\n  }\n  return l[i] >= l[i + 1];\n}\n", "  let i = 0;\n  let j = l.length\
    \ - 1;\n  while (i < j) {\n    if (l[i] < l[j]) {\n      i++;\n    } else if (l[i]\
    \ > l[j]) {\n      j--;\n    } else {\n      i++;\n      j--;\n    }\n  }\n  return\
    \ i === j;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const firstValue\
    \ = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < firstValue)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n", "  let i = 0;\n  let\
    \ j = l.length - 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n    if (l[m]\
    \ < l[i]) j = m;\n    else i = m;\n  }\n  return l[j] === l[i];\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const firstValue = l[0];\n  for (let i =\
    \ 1; i < l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue\
    \ < firstValue) {\n      return false;\n    }\n    if (currentValue > firstValue)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let i = 0;\n  let\
    \ j = l.length - 1;\n  while (i < j) {\n    if (l[i] < l[j]) {\n      i++;\n \
    \   } else if (l[i] > l[j]) {\n      j--;\n    } else {\n      i++;\n      j--;\n\
    \    }\n  }\n  return i === j;\n}\n", "  let i = 0;\n  let j = 0;\n  let k = 0;\n\
    \  while (i < l.length) {\n    if (l[i] < l[j]) {\n      if (l[i] > l[k]) {\n\
    \        return false;\n      }\n      k = i;\n    } else {\n      if (l[j] >\
    \ l[k]) {\n        return false;\n      }\n      k = j;\n    }\n    i++;\n   \
    \ j++;\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  let firstValue = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const\
    \ currentValue = l[i];\n    if (currentValue < firstValue) {\n      return false;\n\
    \    }\n    if (currentValue > firstValue) {\n      return true;\n    }\n  }\n\
    \  return false;\n}\n", "  let i = 0;\n  let j = l.length - 1;\n  while (i < j)\
    \ {\n    const m = (i + j) >> 1;\n    if (l[m] < l[i]) j = m;\n    else i = m;\n\
    \  }\n  return l[j] < l[i];\n}\n", "  let i = 0;\n  let j = l.length - 1;\n  while\
    \ (i < j) {\n    if (l[i] <= l[j]) {\n      i++;\n    } else {\n      j--;\n \
    \   }\n  }\n  return i === j;\n}\n", "  let i = 0;\n  let j = l.length - 1;\n\
    \  while (i < j) {\n    if (l[i] > l[j]) {\n      i++;\n    } else if (l[i] <\
    \ l[j]) {\n      j--;\n    } else {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const first\
    \ = l[0];\n  const last = l[l.length - 1];\n  if (first < last) {\n    return\
    \ false;\n  }\n  for (let i = 1; i < l.length; i++) {\n    const current = l[i];\n\
    \    if (current < first) {\n      return false;\n    }\n    if (current > last)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let i = 0;\n  let\
    \ j = l.length - 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n    if (l[m]\
    \ < l[i]) j = m;\n    else i = m;\n  }\n  return l[i] < l[l.length - 1];\n}\n",
  "  let i = 0;\n  let j = 0;\n  let k = 0;\n  while (i < l.length) {\n    if (l[i]\
    \ < l[j]) {\n      k = j;\n      j = i;\n      i = k;\n    } else if (l[i] > l[j])\
    \ {\n      k = j;\n      j = i;\n      i = k;\n    } else {\n      i++;\n    \
    \  j++;\n    }\n  }\n  return j - i === 0;\n}\n", "  if (l.length === 0) {\n \
    \   return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length; i++)\
    \ {\n    const m = l[i];\n    if (m <= n) {\n      return false;\n    }\n    n\
    \ = m;\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n\n  const firstValue = l[0];\n  for (let i = 1; i < l.length; i++) {\n \
    \   const currentValue = l[i];\n    if (currentValue < firstValue) {\n      return\
    \ false;\n    }\n  }\n\n  return true;\n}\n", "  const n = l.length;\n  if (n\
    \ === 0) return false;\n  if (n === 1) return true;\n  if (l[0] < l[1]) return\
    \ true;\n  if (l[0] > l[1]) return false;\n  for (let i = 1; i < n; ++i) {\n \
    \   if (l[i] < l[i - 1]) return false;\n    if (l[i] > l[i - 1]) return true;\n\
    \  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length ===\
    \ 0) {\n    return false;\n  }\n  const firstValue = l[0];\n  for (let i = 1;\
    \ i < l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue <\
    \ firstValue) {\n      return false;\n    }\n    if (currentValue > firstValue)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n", "  const n = l.length;\n\
    \  if (n < 2) {\n    return true;\n  }\n  const a = l[n - 1];\n  for (let i =\
    \ n - 2; i >= 0; i--) {\n    const b = l[i];\n    if (a > b) {\n      return false;\n\
    \    }\n    a = b;\n  }\n  return true;\n}\n", "  let isIncreasing = true;\n \
    \ let isDecreasing = true;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i]\
    \ > l[i + 1]) {\n      isIncreasing = false;\n    }\n    if (l[i] < l[i + 1])\
    \ {\n      isDecreasing = false;\n    }\n  }\n  return isIncreasing || isDecreasing;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const first = l[0];\n  let last = 0;\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const current = l[i];\n    if (current < first) {\n      return\
    \ false;\n    }\n    if (current > last) {\n      return true;\n    }\n    last\
    \ = current;\n  }\n  return false;\n}\n", "  let i = 0;\n  let j = 1;\n  while\
    \ (i < l.length && j < l.length) {\n    if (l[i] < l[j]) {\n      i++;\n    }\
    \ else if (l[i] > l[j]) {\n      j++;\n    } else {\n      i++;\n      j++;\n\
    \    }\n  }\n  return i === l.length;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  const firstValue = l[0];\n  for (let i = 1; i < l.length; i++)\
    \ {\n    const currentValue = l[i];\n    if (currentValue < firstValue) {\n  \
    \    return false;\n    }\n    if (currentValue > firstValue) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  let firstValue = l[0];\n  for (let i = 1; i < l.length; i++)\
    \ {\n    const currentValue = l[i];\n    if (currentValue < firstValue) {\n  \
    \    return false;\n    }\n    if (currentValue > firstValue) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  let first = l[0];\n  let last = l[l.length - 1];\n  for (let\
    \ i = 1; i < l.length; i++) {\n    const current = l[i];\n    if (current < first)\
    \ {\n      return false;\n    }\n    if (current > last) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
    \ < n) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l.length;\n  if (n === 1) {\n\
    \    return l[0] >= 0;\n  }\n  const m = l[n - 1];\n  for (let i = n - 2; i >=\
    \ 0; i--) {\n    if (l[i] < m && l[i + 1] > m) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const firstValue = l[0];\n  let lastValue = firstValue;\n  for (let i = 1;\
    \ i < l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue <\
    \ firstValue) {\n      return false;\n    }\n    if (currentValue > lastValue)\
    \ {\n      return true;\n    }\n    lastValue = currentValue;\n  }\n  return false;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    const currentValue = l[i];\n    if\
    \ (currentValue < firstValue) {\n      return true;\n    } else if (currentValue\
    \ > firstValue) {\n      return false;\n    }\n  }\n  return false;\n}\n", " \
    \ if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let\
    \ i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  let i = 0;\n  let j = l.length - 1;\n  while (i\
    \ < j) {\n    const m = (i + j) >> 1;\n    if (l[m] < l[i]) j = m;\n    else i\
    \ = m;\n  }\n  return l[j] > l[i];\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n   \
    \ const m = l[i];\n    if (m <= n) {\n      return false;\n    }\n    n = m;\n\
    \  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const first = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const current\
    \ = l[i];\n    if (current < first) {\n      return false;\n    }\n    if (current\
    \ > first) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  const\
    \ n = l.length;\n  if (n === 0) {\n    return false;\n  }\n  const firstValue\
    \ = l[0];\n  for (let i = 1; i < n; ++i) {\n    const currentValue = l[i];\n \
    \   if (currentValue < firstValue) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  let i = 0;\n  let j = 1;\n  let k = l.length - 1;\n  while (i\
    \ < k && j < k) {\n    if (l[i] < l[j]) {\n      i++;\n    } else if (l[i] > l[j])\
    \ {\n      j++;\n    } else {\n      i++;\n      j++;\n    }\n  }\n  return i\
    \ === k && j === k;\n}\n", "  const n = l.length;\n  if (n === 0) return false;\n\
    \  if (n === 1) return true;\n  const p = l[0];\n  for (let i = 1; i < n; ++i)\
    \ {\n    if (l[i] <= p) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (l.length === 0) {\n    return false;\n  }\n  const n = l.length;\n  const\
    \ m = l[n - 1];\n  for (let i = n - 2; i >= 0; --i) {\n    const a = l[i];\n \
    \   const b = l[i + 1];\n    if (a < b) {\n      return a <= m;\n    }\n    if\
    \ (a > b) {\n      return a >= m;\n    }\n  }\n  return false;\n}\n", "  let i\
    \ = 0;\n  let j = 0;\n  let k = 0;\n  while (i < l.length) {\n    if (l[i] < l[j])\
    \ {\n      k = i;\n    } else {\n      j = i;\n    }\n    i++;\n  }\n  return\
    \ k === i;\n}\n", "  let n = l.length;\n  if (n <= 1) {\n    return true;\n  }\n\
    \  for (let i = 1; i < n; ++i) {\n    if (l[i - 1] > l[i]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  let i = 0;\n  let j = l.length - 1;\n  while\
    \ (i < j) {\n    if (l[i] <= l[j]) {\n      i++;\n    } else {\n      j--;\n \
    \   }\n  }\n  return i === j;\n}\n", "  let i = 0;\n  let j = l.length - 1;\n\
    \  while (i < j) {\n    const m = (i + j) >> 1;\n    if (l[m] < l[m + 1]) {\n\
    \      j = m;\n    } else {\n      i = m + 1;\n    }\n  }\n  return l[i] < l[l.length\
    \ - 1];\n}\n", "  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n   \
    \ if (l[i] > l[j]) {\n      return true;\n    }\n    if (l[i] < l[j]) {\n    \
    \  return false;\n    }\n    i++;\n    j--;\n  }\n  return false;\n}\n", "  let\
    \ n = l.length;\n  if (n < 2) return false;\n  let i = 0;\n  let j = n - 1;\n\
    \  while (i < j) {\n    if (l[i] <= l[j]) {\n      i++;\n    } else {\n      j--;\n\
    \    }\n  }\n  return j > i;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  let first = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
    \ < first) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const m = l[i];\n    if (m <= n) {\n      return false;\n    }\n\
    \    n = m;\n  }\n  return true;\n}\n", "  let i = 0;\n  let j = 1;\n  let k =\
    \ 0;\n  while (j < l.length) {\n    if (l[j] < l[i]) {\n      i++;\n    } else\
    \ if (l[j] > l[i]) {\n      j++;\n    } else {\n      k++;\n    }\n  }\n  return\
    \ k === i;\n}\n", "  const n = l.length;\n  if (n === 0) return false;\n  if (n\
    \ === 1) return true;\n  const p = l[0];\n  for (let i = 1; i < n; ++i) {\n  \
    \  if (l[i] <= p) return false;\n    if (l[i] > p) p = l[i];\n  }\n  return true;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    const m = l[i];\n    if (m <= n) {\n \
    \     return false;\n    }\n    n = m;\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n  for (let i = 1;\
    \ i < l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue <\
    \ firstValue) {\n      return false;\n    }\n    if (currentValue > firstValue)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let i = 0;\n  let\
    \ j = l.length - 1;\n  let k = l[0];\n  while (i < j) {\n    if (l[i] < k && k\
    \ < l[j]) {\n      return true;\n    }\n    if (l[i] > k && k < l[j]) {\n    \
    \  return false;\n    }\n    i++;\n    j--;\n  }\n  return false;\n}\n", "  let\
    \ n = l.length;\n  if (n < 2) {\n    return true;\n  }\n  let first = 0;\n  let\
    \ last = n - 1;\n  let mid = 0;\n  while (first < last) {\n    mid = first + ((last\
    \ - first) >> 1);\n    if (l[mid] < l[first]) {\n      first = mid + 1;\n    }\
    \ else {\n      last = mid - 1;\n    }\n  }\n  return l[first] === l[last];\n\
    }\n", "  const n = l.length;\n  if (n === 0) return false;\n  if (n === 1) return\
    \ true;\n  const p = l[0], s = l[1];\n  for (let i = 2; i < n; ++i) {\n    const\
    \ q = l[i];\n    if (p < q) continue;\n    if (p > q) return false;\n    if (s\
    \ - q < 0) return true;\n    if (s - q > 0) return false;\n  }\n  return false;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  let firstVal = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    if (l[i] < firstVal) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  let i = 0;\n  let j = l.length\
    \ - 1;\n  while (i < j) {\n    if (l[i] > l[j]) {\n      return true;\n    }\n\
    \    if (l[i] < l[j]) {\n      return false;\n    }\n    i++;\n    j--;\n  }\n\
    \  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const\
    \ firstValue = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const currentValue\
    \ = l[i];\n    if (currentValue < firstValue) {\n      return false;\n    }\n\
    \    if (currentValue > firstValue) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n", "  const n = l.length;\n  if (n <= 1) return true;\n  for (let\
    \ i = 1; i < n; ++i) {\n    if (l[i - 1] > l[i]) return false;\n  }\n  return\
    \ true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  let isIncreasing = true;\n  let isDecreasing\
    \ = true;\n  for (let i = 0; i < l.length; i++) {\n    const x = l[i];\n    if\
    \ (x < l[i - 1]) {\n      isDecreasing = false;\n    } else if (x > l[i - 1])\
    \ {\n      isIncreasing = false;\n    } else {\n      isIncreasing = isDecreasing\
    \ = true;\n      break;\n    }\n  }\n  return isIncreasing || isDecreasing;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    const currentValue = l[i];\n    if\
    \ (currentValue < firstValue) {\n      return false;\n    }\n    if (currentValue\
    \ > firstValue) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  if\
    \ (l.length === 0) {\n    return false;\n  }\n  const firstValue = l[0];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    if (l[i] < firstValue) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  let firstVal = l[0];\n  let lastVal = l[0];\n  for (let i = 1;\
    \ i < l.length; i++) {\n    if (l[i] < firstVal) {\n      firstVal = l[i];\n \
    \   }\n    if (l[i] > lastVal) {\n      lastVal = l[i];\n    }\n  }\n  return\
    \ firstVal <= lastVal;\n}\n", "  const n = l.length;\n  if (n === 0) return false;\n\
    \  const firstValue = l[0];\n  for (let i = 1; i < n; ++i) {\n    const currentValue\
    \ = l[i];\n    if (currentValue < firstValue) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length ===\
    \ 0) {\n    return false;\n  }\n  const firstValue = l[0];\n  for (let i = 1;\
    \ i < l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue <\
    \ firstValue) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  let\
    \ i = 0;\n  let j = l.length - 1;\n  let k = l[0];\n  while (i < j) {\n    if\
    \ (l[i] < k) {\n      i++;\n    } else if (l[j] > k) {\n      j--;\n    } else\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n", "  if (l.length ===\
    \ 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    if (l[i] < n) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    if (l[i]\
    \ <= l[j]) {\n      i++;\n    } else {\n      j--;\n    }\n  }\n  return j ===\
    \ i;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l.length;\n\
    \  if (n === 1) {\n    return l[0] >= l[1];\n  }\n  let i = 0;\n  let j = n -\
    \ 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n    if (l[m] < l[i]) {\n\
    \      j = m;\n    } else {\n      i = m;\n    }\n  }\n  return l[i] > l[n - 1];\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l.length;\n\
    \  if (n === 1) {\n    return l[0] >= l[1];\n  }\n  let i = 0;\n  let j = n -\
    \ 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n    if (l[m] < l[i]) {\n\
    \      j = m;\n    } else {\n      i = m;\n    }\n  }\n  return l[i] > l[n - 1];\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    if (l[i] < firstValue) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  let first = l[0];\n  for (let i = 1; i < l.length; i++) {\n \
    \   const current = l[i];\n    if (current < first) {\n      return false;\n \
    \   }\n    if (current > first) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n", "  let i = 0;\n  let j = 0;\n  let k = 0;\n  while (i < l.length && j <\
    \ l.length) {\n    if (l[i] < l[j]) {\n      i++;\n    } else if (l[i] > l[j])\
    \ {\n      j++;\n    } else {\n      k++;\n    }\n  }\n  return k === l.length;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  const firstValue = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    const currentValue = l[i];\n    if\
    \ (currentValue < firstValue) {\n      return false;\n    }\n    if (currentValue\
    \ > firstValue) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let\
    \ i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    if (l[i] > l[j]) {\n\
    \      return true;\n    }\n    if (l[i] < l[j]) {\n      return false;\n    }\n\
    \    i++;\n    j--;\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n  \
    \  return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length; i++)\
    \ {\n    const m = l[i];\n    if (m <= n) {\n      return false;\n    }\n    n\
    \ = m;\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
    \ < n) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const m = l[i];\n    if (m > n) {\n      return false;\n    }\n\
    \    n = m;\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const firstValue = l[0];\n  for (let i = 1; i < l.length; i++) {\n   \
    \ const currentValue = l[i];\n    if (currentValue < firstValue) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  const firstValue = l[0];\n  for (let i = 1; i < l.length; i++)\
    \ {\n    if (l[i] < firstValue) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  let firstValue = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const\
    \ currentValue = l[i];\n    if (currentValue < firstValue) {\n      return false;\n\
    \    }\n    if (currentValue > firstValue) {\n      return true;\n    }\n  }\n\
    \  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const\
    \ n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const m = l[i];\n   \
    \ if (m <= n) {\n      return false;\n    }\n    n = m;\n  }\n  return true;\n\
    }\n", "  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    const m =\
    \ (i + j) >> 1;\n    if (l[m] < l[i]) j = m;\n    else i = m;\n  }\n  return l[j]\
    \ < l[i];\n}\n", "  const n = l.length;\n  if (n === 0) return false;\n  const\
    \ m = l[0];\n  for (let i = 1; i < n; ++i) {\n    if (l[i] <= m) return false;\n\
    \  }\n  return true;\n}\n", "  const n = l.length;\n  if (n === 0) {\n    return\
    \ false;\n  }\n  const firstValue = l[0];\n  for (let i = 1; i < n; ++i) {\n \
    \   const currentValue = l[i];\n    if (currentValue < firstValue) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  const n = l.length;\n  if (n ===\
    \ 0) {\n    return false;\n  }\n  const firstValue = l[0];\n  for (let i = 1;\
    \ i < n; ++i) {\n    const currentValue = l[i];\n    if (currentValue < firstValue)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length ===\
    \ 0) {\n    return false;\n  }\n  const first = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const current = l[i];\n    if (current < first) {\n      return\
    \ true;\n    } else if (current > first) {\n      return false;\n    }\n  }\n\
    \  return false;\n}\n", "  const n = l.length;\n  if (n <= 1) {\n    return true;\n\
    \  }\n  let prev = l[0];\n  for (let i = 1; i < n; ++i) {\n    if (l[i] < prev)\
    \ {\n      return false;\n    }\n    prev = l[i];\n  }\n  return true;\n}\n",
  "  if (l.length === 0) {\n    return false;\n  }\n  const first = l[0];\n  for (let\
    \ i = 1; i < l.length; i++) {\n    const current = l[i];\n    if (current < first)\
    \ {\n      return false;\n    }\n    if (current > first) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  let firstValue = l[0];\n  let lastValue = l[0];\n  for (let i = 1; i <\
    \ l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue < firstValue)\
    \ {\n      firstValue = currentValue;\n    }\n    if (currentValue > lastValue)\
    \ {\n      lastValue = currentValue;\n    }\n  }\n  return firstValue === lastValue;\n\
    }\n", "  let n = l.length;\n  if (n === 0) return false;\n  if (n === 1) return\
    \ true;\n  let i = 0;\n  let x = 0;\n  while (i < n) {\n    x = l[i++];\n    if\
    \ (x < l[i - 1]) {\n      return false;\n    }\n    if (x > l[i - 1]) {\n    \
    \  return true;\n    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n\
    \    return false;\n  }\n  const firstValue = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const currentValue = l[i];\n    if (currentValue < firstValue) {\n\
    \      return false;\n    }\n    if (currentValue > firstValue) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n   \
    \ if (l[i] < n) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if\
    \ (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue\
    \ < firstValue) {\n      return true;\n    }\n    if (currentValue > firstValue)\
    \ {\n      return false;\n    }\n  }\n  return false;\n}\n", "  if (l.length ===\
    \ 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    if (l[i] < n) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l.length;\n\
    \  const m = l[n - 1];\n  for (let i = n - 2; i >= 0; i--) {\n    if (l[i] < m\
    \ && l[i + 1] > m) {\n      return false;\n    }\n  }\n  return true;\n}\n", " \
    \ if (l.length === 0) {\n    return false;\n  }\n  const first = l[0];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    const current = l[i];\n    if (current\
    \ < first) {\n      return true;\n    }\n    if (current > first) {\n      return\
    \ false;\n    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  const n = l.length;\n  if (n === 1) {\n    return l[0] >= 0;\n\
    \  }\n  const m = l[n - 1];\n  for (let i = n - 2; i >= 0; i--) {\n    if (l[i]\
    \ < m && l[i + 1] > m) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  let prev: number[] = [];\n  let cur: number[] = [];\n  let i = 0;\n  let len\
    \ = l.length;\n  while (i < len) {\n    cur[i] = l[i++];\n    if (cur[i] !== prev[i])\
    \ {\n      if (prev.length > 0) {\n        if (cur.length > 0) {\n          if\
    \ (cur[cur.length - 1] < prev[prev.length - 1]) {\n            return true;\n\
    \          }\n        } else {\n          return true;\n        }\n      } else\
    \ {\n        return true;\n      }\n    }\n    prev[i] = cur[i];\n  }\n  return\
    \ false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n =\
    \ l[0];\n  for (let i = 1; i < l.length; i++) {\n    const m = l[i];\n    if (m\
    \ <= n) {\n      return false;\n    }\n    n = m;\n  }\n  return true;\n}\n",
  "  if (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    if (l[i] < firstValue) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  const n = l.length;\n  if (n ===\
    \ 0) {\n    return false;\n  }\n  const a0 = l[n - 1];\n  const a1 = l[n - 2];\n\
    \  return a0 > a1 || a0 === a1 && monotonic(l.slice(0, n - 1));\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l.length;\n  if (n === 1) {\n\
    \    return l[0] >= 0;\n  }\n  let i = 0;\n  let j = n - 1;\n  while (i < j) {\n\
    \    const m = (i + j) >> 1;\n    if (l[m] < 0 || l[m] > l[j]) {\n      j = m;\n\
    \    } else {\n      i = m + 1;\n    }\n  }\n  return l[i] < 0;\n}\n", "  const\
    \ n = l.length;\n  if (n <= 1) {\n    return true;\n  }\n  for (let i = 1; i <\
    \ n; ++i) {\n    if (l[i - 1] >= l[i]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const first\
    \ = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < first) {\n \
    \     return false;\n    }\n  }\n  return true;\n}\n", "  let i = 0;\n  let j\
    \ = 0;\n  let monotonic = false;\n  while (i < l.length) {\n    if (l[i] < l[j])\
    \ {\n      i++;\n    } else if (l[i] > l[j]) {\n      j++;\n    } else {\n   \
    \   monotonic = true;\n      i++;\n      j++;\n    }\n  }\n  return monotonic;\n\
    }\n", "  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    const m =\
    \ (i + j) >> 1;\n    if (l[m] < l[i]) j = m;\n    else i = m;\n  }\n  return l[j]\
    \ < l[i];\n}\n", "  const n = l.length;\n  if (n === 0) {\n    return false;\n\
    \  }\n  if (n === 1) {\n    return l[0] >= l[1];\n  }\n  let i = 0;\n  let j =\
    \ n - 1;\n  while (i < j) {\n    const m = l[i];\n    const n = l[j];\n    if\
    \ (m > n) {\n      i++;\n    } else if (m === n) {\n      i++;\n      j--;\n \
    \   } else if (m > n) {\n      j--;\n    } else {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const m = l[i];\n\
    \    if (m > n) {\n      return false;\n    } else if (m === n) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  const n = l.length;\n  if (n ===\
    \ 0) {\n    return false;\n  }\n  let i = 0;\n  let j = n - 1;\n  while (i < j)\
    \ {\n    const m = (i + j) >> 1;\n    if (l[m] < l[i]) {\n      j = m;\n    }\
    \ else {\n      i = m;\n    }\n  }\n  return l[i] < l[n - 1];\n}\n", "  let i\
    \ = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n\
    \    if (l[i] < l[m]) {\n      j = m;\n    } else {\n      i = m;\n    }\n  }\n\
    \  return l[i] < l[j];\n}\n", "  let isIncreasing = true;\n  let isDecreasing\
    \ = true;\n  for (let i = 0; i < l.length; i++) {\n    const x = l[i];\n    if\
    \ (x < l[i - 1]) {\n      isDecreasing = false;\n    } else if (x > l[i - 1])\
    \ {\n      isIncreasing = false;\n    } else {\n      isIncreasing = isDecreasing\
    \ = true;\n    }\n  }\n  return isIncreasing || isDecreasing;\n}\n", "  let i\
    \ = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    if (l[i] > l[j]) {\n \
    \     return true;\n    }\n    if (l[i] < l[j]) {\n      return false;\n    }\n\
    \    i++;\n    j--;\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n  \
    \  return false;\n  }\n  const first = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    if (l[i] < first) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  const n = l.length;\n  if (n === 0) return true;\n  if (n === 1) return\
    \ false;\n  const p = l[0];\n  for (let i = 1; i < n; ++i) {\n    if (l[i] <=\
    \ p) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  let first = l[0];\n  for (let i = 1; i <\
    \ l.length; i++) {\n    const current = l[i];\n    if (current < first) {\n  \
    \    return false;\n    }\n    if (current > first) {\n      return true;\n  \
    \  }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const m =\
    \ l[i];\n    if (m <= n) {\n      return false;\n    }\n    n = m;\n  }\n  return\
    \ true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  let firstValue\
    \ = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < firstValue)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n", "  let i = 0;\n  let\
    \ j = l.length - 1;\n  while (i < j) {\n    if (l[i] <= l[j]) {\n      i++;\n\
    \    } else {\n      j--;\n    }\n  }\n  return i !== j;\n}\n", "  let i = 0;\n\
    \  let j = l.length - 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n   \
    \ if (l[m] < l[m + 1]) {\n      j = m;\n    } else {\n      i = m + 1;\n    }\n\
    \  }\n  return l[j] > l[0];\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
    \ < n) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    if (l[i] < n) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    const m =\
    \ (i + j) >> 1;\n    if (l[m] < l[m + 1]) {\n      j = m;\n    } else {\n    \
    \  i = m + 1;\n    }\n  }\n  return l[i] < l[l.length - 1];\n}\n", "  const n\
    \ = l.length;\n  if (n <= 1) {\n    return true;\n  }\n  const p = l[n - 1];\n\
    \  for (let i = n - 2; i >= 0; i--) {\n    if (l[i] < p) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const first = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const\
    \ current = l[i];\n    if (current < first) {\n      return false;\n    }\n  \
    \  if (current > first) {\n      return true;\n    }\n  }\n  return false;\n}\n",
  "  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    if (l[i] < l[j])\
    \ {\n      i++;\n    } else if (l[i] > l[j]) {\n      j--;\n    } else {\n   \
    \   i++;\n      j--;\n    }\n  }\n  return i === j;\n}\n", "  if (l.length ===\
    \ 0) {\n    return false;\n  }\n  const n = l.length;\n  const m = l[n - 1];\n\
    \  for (let i = n - 2; i >= 0; i--) {\n    if (l[i] < m && l[i + 1] > m) {\n \
    \     return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length === 0)\
    \ {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    if (l[i] < n) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    const currentValue = l[i];\n    if\
    \ (currentValue < firstValue) {\n      return true;\n    }\n    if (currentValue\
    \ > firstValue) {\n      return false;\n    }\n  }\n  return false;\n}\n", " \
    \ let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    const m = (i + j)\
    \ >> 1;\n    if (l[i] < l[m]) {\n      j = m;\n    } else {\n      i = m;\n  \
    \  }\n  }\n  return l[i] < l[l.length - 1];\n}\n", "  let i = 0;\n  let j = l.length\
    \ - 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n    if (l[m] < l[m + 1])\
    \ {\n      j = m;\n    } else {\n      i = m + 1;\n    }\n  }\n  return l[j] <\
    \ l[0];\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l.length;\n\
    \  if (n === 1) {\n    return l[0] >= l[1];\n  }\n  let i = 0;\n  let j = n -\
    \ 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n    if (l[m] < l[i]) {\n\
    \      j = m;\n    } else {\n      i = m;\n    }\n  }\n  return l[i] > l[n - 1];\n\
    }\n", "  const n = l.length;\n  if (n <= 1) {\n    return false;\n  }\n  let i\
    \ = 0;\n  let j = n - 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n   \
    \ if (l[m] < l[i]) {\n      j = m;\n    } else {\n      i = m;\n    }\n  }\n \
    \ return l[j] > l[i];\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const n = l.length;\n  if (n === 0) {\n    return true;\n  }\n  const firstValue\
    \ = l[0];\n  for (let i = 1; i < n; ++i) {\n    const currentValue = l[i];\n \
    \   if (currentValue < firstValue) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    const m = l[i];\n    if (m <= n)\
    \ {\n      return false;\n    }\n    n = m;\n  }\n  return true;\n}\n", "  if\
    \ (l.length === 0) {\n    return false;\n  }\n  const first = l[0];\n  for (let\
    \ i = 1; i < l.length; i++) {\n    const current = l[i];\n    if (current < first)\
    \ {\n      return false;\n    }\n    if (current > first) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const first = l[0];\n  let last;\n  for (let i = 1; i < l.length; i++)\
    \ {\n    const current = l[i];\n    if (current < first) {\n      return false;\n\
    \    }\n    if (current > last) {\n      return true;\n    }\n    last = current;\n\
    \  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const first = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const current\
    \ = l[i];\n    if (current < first) {\n      return false;\n    }\n    if (current\
    \ > first) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const m = l[i];\n    if (m > n) {\n      return false;\n    } else\
    \ if (m === n) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  if\
    \ (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i\
    \ = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n", "  let prev: number[]\
    \ = [];\n  let curr = [0];\n  for (let i = 0; i < l.length; i++) {\n    if (l[i]\
    \ > curr[curr.length - 1]) {\n      curr.push(l[i]);\n    } else if (l[i] < prev[prev.length\
    \ - 1]) {\n      curr.push(l[i]);\n    } else {\n      curr.push(prev[prev.length\
    \ - 1]);\n    }\n    prev = curr;\n  }\n  return curr.length === l.length;\n}\n",
  "  if (l.length === 0) {\n    return false;\n  }\n  const firstValue = l[0];\n \
    \ for (let i = 1; i < l.length; i++) {\n    const currentValue = l[i];\n    if\
    \ (currentValue < firstValue) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const n = l.length;\n  if (n === 1) {\n    return l[0] >= l[1];\n  }\n\
    \  const m = l[n - 1];\n  for (let i = n - 2; i >= 0; --i) {\n    if (l[i] < m\
    \ && l[i + 1] > m) {\n      return false;\n    }\n  }\n  return true;\n}\n", " \
    \ if (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n  let\
    \ lastValue = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const currentValue\
    \ = l[i];\n    if (currentValue < firstValue) {\n      firstValue = currentValue;\n\
    \    }\n    if (currentValue > lastValue) {\n      lastValue = currentValue;\n\
    \    }\n  }\n  return firstValue === lastValue;\n}\n", "  if (l.length === 0)\
    \ {\n    return false;\n  }\n  const first = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const current = l[i];\n    if (current < first) {\n      return\
    \ false;\n    } else if (current > first) {\n      return true;\n    }\n  }\n\
    \  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n  const\
    \ n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const m = l[i];\n   \
    \ if (m > n) {\n      return false;\n    } else if (m === n) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const n = l.length;\n  if (n === 0) {\n    return true;\n  }\n  const\
    \ m = l[0];\n  for (let i = 1; i < n; ++i) {\n    const m = l[i];\n    if (m <=\
    \ m) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    if (l[i] < n) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  let prev: number[] = [];\n  let curr = l;\n  let next: number[] = [];\n\
    \  while (curr.length > 0) {\n    if (curr[0] < prev[0]) {\n      return true;\n\
    \    }\n    if (curr[0] > prev[0]) {\n      return false;\n    }\n    prev = curr;\n\
    \    curr = next;\n    next = [];\n    for (let i = 0; i < curr.length; i++) {\n\
    \      if (curr[i] > prev[i]) {\n        next.push(curr[i]);\n      }\n    }\n\
    \  }\n  return false;\n}\n", "  let isIncreasing = true;\n  let isDecreasing =\
    \ true;\n  for (let i = 0; i < l.length; i++) {\n    const x = l[i];\n    if (x\
    \ < l[i - 1]) {\n      isDecreasing = false;\n    } else if (x > l[i - 1]) {\n\
    \      isIncreasing = false;\n    } else {\n      isIncreasing = isDecreasing\
    \ = true;\n    }\n  }\n  return isIncreasing || isDecreasing;\n}\n", "  let i\
    \ = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    const m = (i + j) >> 1;\n\
    \    if (l[m] < l[i]) j = m;\n    else i = m;\n  }\n  return l[j] < l[i];\n}\n",
  "  let i = 0;\n  let j = l.length - 1;\n  while (i < j) {\n    if (l[i] <= l[j])\
    \ {\n      i++;\n    } else {\n      j--;\n    }\n  }\n  return j - i < 1;\n}\n",
  "  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let\
    \ i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  const n = l.length;\n  if (n === 0) {\n    return\
    \ false;\n  }\n  if (n === 1) {\n    return l[0] >= l[1];\n  }\n  const m = l[n\
    \ - 1];\n  for (let i = n - 2; i >= 0; i--) {\n    const a = l[i];\n    const\
    \ b = l[i + 1];\n    if (a < m && b > m) {\n      return false;\n    }\n    if\
    \ (a > m && b < m) {\n      return true;\n    }\n  }\n  return false;\n}\n", " \
    \ if (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n  let\
    \ lastValue = l[0];\n  for (let i = 1; i < l.length; i++) {\n    const currentValue\
    \ = l[i];\n    if (currentValue < firstValue) {\n      firstValue = currentValue;\n\
    \    }\n    if (currentValue > lastValue) {\n      lastValue = currentValue;\n\
    \    }\n  }\n  return firstValue === lastValue;\n}\n", "  if (l.length === 0)\
    \ {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const m = l[i];\n    if (m > n) {\n      return false;\n    } else\
    \ if (m === n) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let\
    \ i = 0;\n  let j = 1;\n  let k = l.length;\n  while (i < k) {\n    if (l[i] <\
    \ l[j]) {\n      i++;\n    } else if (l[i] > l[j]) {\n      j++;\n    } else {\n\
    \      i++;\n      j++;\n    }\n    if (i === k) {\n      return true;\n    }\n\
    \  }\n  return false;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n", "  let i = 0;\n  let\
    \ j = l.length - 1;\n  while (i < j) {\n    if (l[i] > l[j]) {\n      i++;\n \
    \   } else if (l[i] < l[j]) {\n      j--;\n    } else {\n      i++;\n      j--;\n\
    \    }\n  }\n  return i === j;\n}\n", "  let prev: number[] = [];\n  let curr\
    \ = [0];\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] !== prev[i]) {\n\
    \      if (curr[0] > l[i]) {\n        return false;\n      }\n      curr.unshift(l[i]);\n\
    \    } else {\n      curr.shift();\n    }\n    prev = l[i];\n  }\n  return true;\n\
    }\n", "  let n = l.length;\n  if (n === 0) return false;\n  if (n === 1) return\
    \ true;\n  if (l[0] < l[1]) return true;\n  if (l[0] > l[1]) return false;\n \
    \ for (let i = 2; i < n; ++i) {\n    if (l[i] < l[i - 1]) return false;\n    if\
    \ (l[i] > l[i - 1]) return true;\n  }\n  return false;\n}\n", "  let prev: number[]\
    \ = [];\n  let curr = [0];\n  for (let i = 0; i < l.length; i++) {\n    if (l[i]\
    \ > prev[prev.length - 1]) {\n      curr.push(l[i]);\n    } else {\n      prev.pop();\n\
    \      curr.push(l[i]);\n    }\n  }\n  return curr.length === prev.length;\n}\n",
  "  if (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue\
    \ < firstValue) {\n      return false;\n    }\n    if (currentValue > firstValue)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n", "  let isIncreasing\
    \ = true;\n  let isDecreasing = true;\n  for (let i = 0; i < l.length; i++) {\n\
    \    if (l[i] < l[i - 1]) {\n      isDecreasing = false;\n    }\n    if (l[i]\
    \ > l[i - 1]) {\n      isIncreasing = false;\n    }\n  }\n  return isIncreasing\
    \ || isDecreasing;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n \
    \ const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length === 0)\
    \ {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const m = l[i];\n    if (m <= n) {\n      return false;\n    }\n\
    \    n = m;\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  let firstValue = l[0];\n  let lastValue = l[0];\n  for (let i = 1; i <\
    \ l.length; i++) {\n    const currentValue = l[i];\n    if (currentValue < firstValue)\
    \ {\n      firstValue = currentValue;\n    }\n    if (currentValue > lastValue)\
    \ {\n      lastValue = currentValue;\n    }\n  }\n  return firstValue <= lastValue;\n\
    }\n", "  const n = l.length;\n  if (n === 0) return false;\n  if (n === 1) return\
    \ true;\n  const p = l[0], s = l[1], i = 2;\n  while (i < n) {\n    const m =\
    \ l[i];\n    if (m > p && m > s) return false;\n    if (m > p) return false;\n\
    \    if (m > s) return true;\n    i++;\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    if (l[i] < n) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n", "  if (l.length === 0) {\n    return false;\n  }\n  let firstValue = l[0];\n\
    \  for (let i = 1; i < l.length; i++) {\n    if (l[i] < firstValue) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return\
    \ false;\n  }\n  const first = l[0];\n  for (let i = 1; i < l.length; i++) {\n\
    \    if (l[i] < first) {\n      return false;\n    }\n  }\n  return true;\n}\n",
  "  if (l.length === 0) {\n    return false;\n  }\n  const n = l.length;\n  if (n\
    \ === 1) {\n    return l[0] >= 0;\n  }\n  const m = l[n - 1];\n  for (let i =\
    \ n - 2; i >= 0; --i) {\n    if (l[i] < m && l[i + 1] > m) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n\
    \  }\n  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i]\
    \ < n) {\n      return false;\n    }\n  }\n  return true;\n}\n", "  if (l.length\
    \ === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let i = 1; i < l.length;\
    \ i++) {\n    const m = l[i];\n    if (m > n) {\n      return false;\n    } else\
    \ if (m === n) {\n      return true;\n    }\n  }\n  return false;\n}\n", "  if\
    \ (l.length === 0) {\n    return false;\n  }\n\n  let prev = l[0];\n  for (let\
    \ i = 1; i < l.length; i++) {\n    const curr = l[i];\n    if (curr !== prev)\
    \ {\n      return true;\n    }\n    prev = curr;\n  }\n  return false;\n}\n",
  "  if (l.length === 0) {\n    return false;\n  }\n  const n = l[0];\n  for (let\
    \ i = 1; i < l.length; i++) {\n    if (l[i] < n) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n", "  if (l.length === 0) {\n    return false;\n  }\n\
    \  const n = l[0];\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < n)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

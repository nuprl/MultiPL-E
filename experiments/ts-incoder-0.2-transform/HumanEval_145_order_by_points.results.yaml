language: ts
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => n.toString());\n  const sums = digits.map(d\
    \ => d.split('').reduce((acc, cur) => acc + +cur, 0));\n  const order = sums.map((sum,\
    \ index) => [sum, index]);\n  return order.sort((a, b) => a[0] - b[0]).map(a =>\
    \ a[1]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  2,\n  3,\n  4\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n \
    \ -12,\n  11\n]\n    at test (/tmp/tmp56n64_c8.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp56n64_c8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 1, 2,\
    \ 3, 4 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\n\
    Node.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ [];\n  }\n  const digits = nums.map(x => parseInt(x, 10));\n  const sums = digits.map(x\
    \ => x * x);\n  const sorted = sums.sort((a, b) => a - b);\n  const index = new\
    \ Array(len).fill(0);\n  for (let i = 0; i < len; i++) {\n    index[sorted[i]]\
    \ = i;\n  }\n  return nums.map((x, i) => index[i]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp26w_cwpz.ts(15,41): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''string''.

    ../../../../../tmp/tmp26w_cwpz.ts(18,32): error TS2339: Property ''fill'' does
    not exist on type ''any[]''.

    '
  timestamp: 1659738701
- exit_code: 1
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => parseInt(n.toString(), 10));\n  const\
    \ sum_digits = digits.reduce((sum, n) => sum + n, 0);\n  const digits_len = digits.length;\n\
    \  const result = [];\n  for (let i = 0; i < len; i++) {\n    const num = nums[i];\n\
    \    const digit = digits[i];\n    if (sum_digits - digit < 0) {\n      result.push(num);\n\
    \      continue;\n    }\n    for (let j = digits_len - 1; j >= 0; j--) {\n   \
    \   const left = digits[j];\n      const right = sum_digits - left - digit;\n\
    \      if (right > 0) {\n        result.push(num);\n        break;\n      }\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmp4y9uqxiw.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4y9uqxiw.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738701
- exit_code: 1
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => Math.abs(n));\n  const sum_digits\
    \ = digits.reduce((sum, n) => sum + n, 0);\n  const digits_len = digits.length;\n\
    \  const result = [];\n  for (let i = 0; i < len; i++) {\n    const digit = digits[i];\n\
    \    if (digit === sum_digits) {\n      result.push(nums[i]);\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpl4a9s6kp.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl4a9s6kp.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => n.toString()).map(Number);\n  const\
    \ sums = digits.map(d => d.reduce((a, b) => a + b, 0));\n  const order = sums.map((s,\
    \ i) => [s, i]);\n  return order.sort((a, b) => a[0] - b[0]).map(a => a[1]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp_0bdbne.ts(16,34): error TS2339: Property ''reduce''
    does not exist on type ''number''.

    '
  timestamp: 1659738701
- exit_code: 1
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const sums = nums.map(n => n.toString().split('').reduce((acc,\
    \ c) => acc + +c, 0));\n  return nums.sort((a, b) => sums[a] - sums[b]);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpb8pss6c6.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb8pss6c6.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ [];\n  }\n  const digits = nums.map(n => n.toString()).map(Number);\n  const\
    \ sums = digits.map(d => d.reduce((acc, d) => acc + d, 0));\n  const order = sums.map((s,\
    \ i) => [s, i]);\n  return order.sort((a, b) => a[0] - b[0]).map(a => a[1]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4s4ogfjt.ts(16,34): error TS2339: Property ''reduce''
    does not exist on type ''number''.

    '
  timestamp: 1659738701
- exit_code: 1
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => n % 10);\n  const sum_digits = digits.reduce((sum,\
    \ digit) => sum + digit, 0);\n  const digits_len = digits.length;\n  const result\
    \ = [];\n  for (let i = 0; i < len; i++) {\n    const digit = digits[i];\n   \
    \ if (digit === sum_digits) {\n      result.push(nums[i]);\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  -12\n]\n\n\
    should loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test\
    \ (/tmp/tmpc0egl43p.js:30:12)\n    at Object.<anonymous> (/tmp/tmpc0egl43p.js:37:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12 ],\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => n.toString()).join('');\n  const\
    \ map = new Map<string, number>();\n  for (let i = 0; i < digits.length; i++)\
    \ {\n    const digit = digits[i];\n    const index = map.get(digit);\n    if (index\
    \ === undefined) {\n      map.set(digit, i);\n    } else {\n      map.set(digit,\
    \ index + 1);\n    }\n  }\n  const result = [];\n  for (const [key, value] of\
    \ map.entries()) {\n    result.push(nums[value]);\n  }\n  return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcz1rkzsy.ts(16,19): error TS2552: Cannot find name
    ''Map''. Did you mean ''map''?

    '
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => n.toString()).map(Number);\n  const\
    \ sums = digits.map(d => d.reduce((a, b) => a + b, 0));\n  const sorted = sums.sort((a,\
    \ b) => a - b);\n  const index = sums.indexOf(sorted[0]);\n  return nums.map((n,\
    \ i) => i === index ? n : sorted[i]);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmiq0o59z.ts(16,34): error TS2339: Property ''reduce''
    does not exist on type ''number''.

    '
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ [];\n  }\n  const digits = nums.map(num => num.toString().split('').reduce((acc,\
    \ cur) => acc + +cur, 0));\n  const sums = digits.map(d => d.reduce((acc, cur)\
    \ => acc + cur, 0));\n  const sorted = sums.map((sum, index) => [sum, index]);\n\
    \  sorted.sort((a, b) => a[0] - b[0]);\n  return sorted.map(a => nums[a[1]]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwvzzye11.ts(16,34): error TS2339: Property ''reduce''
    does not exist on type ''number''.

    '
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => n.toString());\n  const sums = digits.map(n\
    \ => Number(n));\n  const len = sums.length;\n  const result = new Array(len);\n\
    \  for (let i = 0; i < len; i++) {\n    result[i] = sums[i];\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7cltynai.ts(11,9): error TS2451: Cannot redeclare
    block-scoped variable ''len''.

    ../../../../../tmp/tmp7cltynai.ts(17,9): error TS2451: Cannot redeclare block-scoped
    variable ''len''.

    '
  timestamp: 1659738701
- exit_code: 1
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => n.toString()).map(Number);\n  const\
    \ sums = digits.map(n => n.toString().split('').map(Number).reduce((a, b) => a\
    \ + b));\n  const sorted = sums.map(n => [n, nums.indexOf(n)]).sort((a, b) =>\
    \ a[1] - b[1]);\n  return sorted.map(n => nums[n[1]]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  undefined,\n\
    \  undefined,\n  undefined,\n  undefined,\n  1\n]\n\nshould loosely deep-equal\n\
    \n[\n  -1,\n  -11,\n  1,\n  -12,\n  11\n]\n    at test (/tmp/tmpoiexr_lr.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmpoiexr_lr.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ undefined,\
    \ undefined, undefined, undefined, 1 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738701
- exit_code: 1
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => n.toString());\n  const sums = digits.map(d\
    \ => d.split('').reduce((acc, cur) => acc + +cur, 0));\n  const order = sums.map((sum,\
    \ index) => ({ sum, index }));\n  const orders = order.sort((a, b) => a.sum -\
    \ b.sum);\n  return orders.map(o => nums[o.index]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmprkwwu_zd.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprkwwu_zd.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => Math.abs(n));\n  const sum_digits\
    \ = digits.reduce((sum, n) => sum + n);\n  const digits_len = digits.length;\n\
    \  const sum_digits_len = sum_digits.length;\n  const result = [];\n  for (let\
    \ i = 0; i < len; i += 1) {\n    const num = nums[i];\n    const digit = digits[i];\n\
    \    if (sum_digits === digit) {\n      result.push(num);\n      continue;\n \
    \   }\n    const index = sum_digits_len - digit;\n    if (index >= 0) {\n    \
    \  result.push(nums[index]);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0cwpjoiu.ts(18,37): error TS2339: Property ''length''
    does not exist on type ''number''.

    '
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  const points = new Array(len);\n\
    \  for (let i = 0; i < len; i++) {\n    const num = nums[i];\n    const digits\
    \ = num.toString().split('').reverse();\n    const sum = 0;\n    for (let j =\
    \ 0; j < digits.length; j++) {\n      sum += digits[j] * Math.pow(10, j);\n  \
    \  }\n    points[i] = sum;\n  }\n  points.sort((a, b) => a - b);\n  return points.map(i\
    \ => nums[i]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp92gqjzyw.ts(18,7): error TS2588: Cannot assign to
    ''sum'' because it is a constant.

    ../../../../../tmp/tmp92gqjzyw.ts(18,14): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const sums = nums.map(n => n.toString().split('').map(Number).reduce((a,\
    \ b) => a + b));\n  const orders = sums.map(sums => sums.sort((a, b) => a - b));\n\
    \  return orders.map(order => order.map(num => nums.indexOf(num)));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxopcz0x6.ts(12,40): error TS2339: Property ''sort''
    does not exist on type ''number''.

    '
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(x => parseInt(x, 10));\n  const sums =\
    \ digits.map(x => x + '');\n  const indexes = sums.map((x, i) => i);\n  const\
    \ sorted = indexes.sort((a, b) => sums[a] - sums[b]);\n  return nums.map((x, i)\
    \ => sorted[i]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp285tpa3t.ts(15,41): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''string''.

    ../../../../../tmp/tmp285tpa3t.ts(18,41): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp285tpa3t.ts(18,51): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659738701
- exit_code: 2
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => n.toString()).sort();\n  const sums\
    \ = digits.map(n => Number(n));\n  const len = sums.length;\n  const index = new\
    \ Array(len).fill(0);\n  for (let i = 0; i < len; i++) {\n    index[sums[i]] =\
    \ i;\n  }\n  return nums.map((n, i) => index[sums[i]]);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0ftiqngs.ts(11,9): error TS2451: Cannot redeclare
    block-scoped variable ''len''.

    ../../../../../tmp/tmp0ftiqngs.ts(17,9): error TS2451: Cannot redeclare block-scoped
    variable ''len''.

    ../../../../../tmp/tmp0ftiqngs.ts(18,32): error TS2339: Property ''fill'' does
    not exist on type ''any[]''.

    '
  timestamp: 1659738701
- exit_code: 1
  program: "//Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums:\
    \ number[]): number[] {\n  const len = nums.length;\n  if (len === 0) {\n    return\
    \ nums;\n  }\n  const digits = nums.map(n => parseInt(n.toString(), 10));\n  const\
    \ sums = digits.map(d => d.toString().split('').map(Number).reduce((a, b) => a\
    \ + b, 0));\n  const sorted = sums.map((s, i) => [s, i]);\n  sorted.sort((a, b)\
    \ => a[0] - b[0]);\n  const res = [];\n  for (let i = 0; i < len; i++) {\n   \
    \ res.push(nums[sorted[i][1]]);\n  }\n  return res;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  1,\n  11,\n\
    \  -1,\n  -11,\n  -12\n]\n\nshould loosely deep-equal\n\n[\n  -1,\n  -11,\n  1,\n\
    \  -12,\n  11\n]\n    at test (/tmp/tmpohnl9pr8.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpohnl9pr8.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738701

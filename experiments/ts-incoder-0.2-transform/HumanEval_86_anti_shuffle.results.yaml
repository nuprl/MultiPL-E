language: ts
name: HumanEval_86_anti_shuffle
results:
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2').replace(/\\s+/g, ' ').trim();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpys5n6l1v.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys5n6l1v.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H i',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738844
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(\" \");\n  const new_words = [];\n  for (let i =\
    \ 0; i < words.length; i++) {\n    const word = words[i];\n    const new_word\
    \ = word;\n    for (let j = 0; j < word.length; j++) {\n      const char = word.charAt(j);\n\
    \      const ascii = char.charCodeAt(0);\n      if (ascii < 65 || ascii > 90)\
    \ {\n        new_word += char;\n      }\n    }\n    new_words.push(new_word);\n\
    \  }\n  return new_words.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa5lan9l8.ts(23,9): error TS2588: Cannot assign to
    ''new_word'' because it is a constant.

    '
  timestamp: 1659738895
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  let words = s.split(\" \");\n  let new_word = \"\";\n  for (let i = 0;\
    \ i < words.length; i++) {\n    let char = words[i].charCodeAt(0);\n    if (char\
    \ > 96 && char < 123) {\n      new_word += words[i].toUpperCase();\n    } else\
    \ if (char > 64 && char < 91) {\n      new_word += words[i].toLowerCase();\n \
    \   } else {\n      new_word += words[i];\n    }\n  }\n  return new_word;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"\
    ),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hi'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmppxk6_j5q.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppxk6_j5q.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hi',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738895
- exit_code: 0
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result = [];\n  for (let i = 0; i\
    \ < words.length; i++) {\n    const word = words[i];\n    const chars = word.split('');\n\
    \    chars.sort((a, b) => {\n      const aCode = a.charCodeAt(0);\n      const\
    \ bCode = b.charCodeAt(0);\n      if (aCode > bCode) {\n        return 1;\n  \
    \    } else if (aCode < bCode) {\n        return -1;\n      } else {\n       \
    \ return 0;\n      }\n    });\n    result.push(chars.join(''));\n  }\n  return\
    \ result.join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738895
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.split(' ').sort().join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpn5ck8rkp.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpn5ck8rkp.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738844
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"\
    Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpj53yxv_n.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpj53yxv_n.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738844
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([A-Z])/g, function ($1) {\n    return $1.toUpperCase();\n\
    \  }).replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpp4c7_029.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpp4c7_029.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738844
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  let new_s = \"\";\n  for (let i = 0; i < s.length; i++) {\n    let char\
    \ = s.charAt(i);\n    if (char === \" \") {\n      new_s += \"!\";\n    } else\
    \ {\n      new_s += char;\n    }\n  }\n  return new_s;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmpy2lj9xh3.js:30:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpy2lj9xh3.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738895
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2')\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n' H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpiubis3q7.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpiubis3q7.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: ' H i',\n\
    \  expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738852
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(\" \");\n  const result: string = words.reduce((acc,\
    \ word) => {\n    const newWord = word;\n    for (let i = 0; i < word.length;\
    \ i++) {\n      const char = word.charCodeAt(i);\n      if (char > 96 && char\
    \ < 123) {\n        newWord += String.fromCharCode(char - 32);\n      } else {\n\
    \        newWord += word[i];\n      }\n    }\n    return acc + newWord;\n  },\
    \ \"\");\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppd6qhpzp.ts(20,9): error TS2588: Cannot assign to
    ''newWord'' because it is a constant.

    ../../../../../tmp/tmppd6qhpzp.ts(22,9): error TS2588: Cannot assign to ''newWord''
    because it is a constant.

    '
  timestamp: 1659738895
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([a-z])/g,\
    \ ' $1 $2').replace(/\\s+/g, ' ').trim();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'H i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpys5n6l1v.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpys5n6l1v.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'H i',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738844
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([A-Z])/g, function ($1) {\n    return $1.toLowerCase();\n\
    \  }).replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hi'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpkvwhreum.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkvwhreum.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hi',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738851
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  let new_s = \"\";\n  for (let i = 0; i < s.length; i++) {\n    let char\
    \ = s[i];\n    let ascii = char.charCodeAt(0);\n    if (ascii < 65 || ascii >\
    \ 90) {\n      new_s += char;\n    } else {\n      let index = Math.floor(Math.random()\
    \ * 26);\n      let new_char = String.fromCharCode(index + 65);\n      new_s +=\
    \ new_char;\n    }\n  }\n  return new_s;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Gi'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpk0m90k4j.js:32:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk0m90k4j.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Gi',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738895
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result = [];\n  for (let i = 0; i\
    \ < words.length; i++) {\n    const word = words[i];\n    const index = word.length\
    \ - 1;\n    for (let j = 0; j < index; j++) {\n      result.push(word.substring(0,\
    \ j) + word.substring(j + 1, word.length));\n    }\n  }\n  return result.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'i'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpcysltr45.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcysltr45.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'i',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738896
- exit_code: 2
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  const words = s.split(' ');\n  const result: string = words[0];\n  for\
    \ (let i = 1; i < words.length; i++) {\n    const word = words[i];\n    const\
    \ index = result.length - 1;\n    const char = result[index];\n    const nextChar\
    \ = word[index];\n    if (char > nextChar) {\n      result += word;\n    } else\
    \ {\n      result = result.slice(0, index) + nextChar + result.slice(index + 1);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpey85f8sn.ts(22,7): error TS2588: Cannot assign to
    ''result'' because it is a constant.

    ../../../../../tmp/tmpey85f8sn.ts(24,7): error TS2588: Cannot assign to ''result''
    because it is a constant.

    '
  timestamp: 1659738895
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/[a-z]+/g, function (m) {\n    return m.split('').sort().join('');\n\
    \  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Hello Wdlor!!!'\n\
    \nshould loosely deep-equal\n\n'Hello !!!Wdlor'\n    at test (/tmp/tmpnx817vad.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnx817vad.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hello Wdlor!!!',\n\
    \  expected: 'Hello !!!Wdlor',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738896
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  return s.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/([A-Z])([A-Z][a-z])/g,\
    \ '$1 $2').replace(/\\s+/g, ' ').split(' ').sort().join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\"\
    );\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp0g0srtby.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp0g0srtby.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738895
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  let words: string[] = s.split(\" \");\n  let new_words: string[] = [];\n\
    \  for (let i = 0; i < words.length; i++) {\n    let char = words[i].charCodeAt(0);\n\
    \    if (char >= 65 && char <= 90) {\n      new_words.push(words[i].toUpperCase());\n\
    \    } else if (char >= 97 && char <= 122) {\n      new_words.push(words[i].toLowerCase());\n\
    \    } else {\n      new_words.push(words[i]);\n    }\n  }\n  return new_words.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = anti_shuffle;\n  assert.deepEqual(candidate(\"\
    Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"\
    number\"),\"bemnru\");\n  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'HI'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmp2df3l7bi.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2df3l7bi.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'HI',\n  expected:\
    \ 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738895
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  let new_s = \"\";\n  for (let i = 0; i < s.length; i++) {\n    let c =\
    \ s.charAt(i);\n    if (c === \" \") {\n      new_s += \"!\";\n    } else {\n\
    \      new_s += c;\n    }\n  }\n  return new_s;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = anti_shuffle;\n  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'hello'\n\nshould\
    \ loosely deep-equal\n\n'ehllo'\n    at test (/tmp/tmp7h7zvy40.js:30:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp7h7zvy40.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'hello',\n\
    \  expected: 'ehllo',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738896
- exit_code: 1
  program: "//Write a function that takes a string and returns an ordered version\
    \ of it.\n// Ordered version of string, is a string where all words (separated\
    \ by space)\n// are replaced by a new word where all the characters arranged in\n\
    // ascending order based on ascii value.\n// Note: You should keep the order of\
    \ words and blank spaces in the sentence.\n// For example:\n// >>> anti_shuffle(\"\
    Hi\")\n// \"Hi\"\n// >>> anti_shuffle(\"hello\")\n// \"ehllo\"\n// >>> anti_shuffle(\"\
    Hello World!!!\")\n// \"Hello !!!Wdlor\"\nfunction anti_shuffle(s: string): string\
    \ {\n  let words = s.split(' ');\n  let result = '';\n  for (let i = 0; i < words.length;\
    \ i++) {\n    let word = words[i];\n    let ascii = word.charCodeAt(0);\n    if\
    \ (ascii >= 65 && ascii <= 90) {\n      result += word.slice(0, 1) + 'a' + word.slice(1)\
    \ + ' ';\n    } else if (ascii >= 97 && ascii <= 122) {\n      result += word.slice(0,\
    \ 1) + 'A' + word.slice(1) + ' ';\n    } else {\n      result += word + ' ';\n\
    \    }\n  }\n  return result.trim();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = anti_shuffle;\n\
    \  assert.deepEqual(candidate(\"Hi\"),\"Hi\");\n  assert.deepEqual(candidate(\"\
    hello\"),\"ehllo\");\n  assert.deepEqual(candidate(\"number\"),\"bemnru\");\n\
    \  assert.deepEqual(candidate(\"abcd\"),\"abcd\");\n  assert.deepEqual(candidate(\"\
    Hello World!!!\"),\"Hello !!!Wdlor\");\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"Hi. My name is Mister Robot. How are you?\"\
    ),\".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'Hai'\n\nshould\
    \ loosely deep-equal\n\n'Hi'\n    at test (/tmp/tmpsl2zfj6a.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsl2zfj6a.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'Hai',\n \
    \ expected: 'Hi',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738895

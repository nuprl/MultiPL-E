name: HumanEval_97_multiply
language: r
prompt: "# Complete the function that takes two integers and returns \n# the product\
  \ of their unit digits.\n# Assume the input is always valid.\n# Examples:\n# >>>\
  \ multiply(148, 412)\n# 16\n# >>> multiply(19, 28)\n# 72\n# >>> multiply(2020, 1851)\n\
  # 0\n# >>> multiply(14, -15)\n# 20\nmultiply <- function(a, b) {"
tests: "test_humaneval <- function() {\ncandidate <- multiply\n    if(!identical(candidate(148,\
  \ 412), 16)){quit('no', 1)}\n    if(!identical(candidate(19, 28), 72)){quit('no',\
  \ 1)}\n    if(!identical(candidate(2020, 1851), 0)){quit('no', 1)}\n    if(!identical(candidate(14,\
  \ -15), 20)){quit('no', 1)}\n    if(!identical(candidate(76, 67), 42)){quit('no',\
  \ 1)}\n    if(!identical(candidate(17, 27), 49)){quit('no', 1)}\n    if(!identical(candidate(0,\
  \ 1), 0)){quit('no', 1)}\n    if(!identical(candidate(0, 0), 0)){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: ["\n    a = a %% 10\n    b = b %% 10\n    return(a * b)\n}\n", "\n  a\
    \ <- abs(a)\n  b <- abs(b)\n  (a %% 10) * (b %% 10)\n}\na <- 148\nb <- 412\nmultiply(a,\
    \ b)\n", "\n  return(abs(a)%%10 * abs(b)%%10)\n}", "\n\tstr_a <- strsplit(as.character(a),\
    \ split = \"\")[[1]][1]\n\tstr_b <- strsplit(as.character(b), split = \"\")[[1]][1]\n\
    \tas.numeric(str_a) * as.numeric(str_b)\n}\nmultiply(19, 28)\n", "\n    a <- abs(a);\
    \ b <- abs(b)\n    strtoi(substring(a, nchar(a), nchar(a))) *\n        strtoi(substring(b,\
    \ nchar(b), nchar(b)))\n}\nmultiply(148, 412)\n", "\n  ab <- a * b\n  ab <- abs(ab)\n\
    \  ab <- as.character(ab)\n  ab <- substr(ab, nchar(ab), nchar(ab))\n  ab <- as.numeric(ab)\n\
    \  ab\n}\n \nmultiply <- function(a, b) {\n  (a * b)%%10\n}\n ", "\n  (a %% 10)\
    \ * (b %% 10)\n}", "\n    z <- a*b\n    y <- abs(z)\n    y <- substr(y, nchar(y),\
    \ nchar(y))\n    y <- as.numeric(y)\n    return(y)\n}\n", "\n  (a %% 10) * (b\
    \ %% 10)\n}\n\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14,\
    \ -15)\n", "\n    str_a <- strsplit(as.character(a), \"\")[[1]][1]\n    str_b\
    \ <- strsplit(as.character(b), \"\")[[1]][1]\n    as.numeric(str_a) * as.numeric(str_b)\n\
    }", "\n  if (a < 0) a <- -a\n  if (b < 0) b <- -b\n  return( (a %% 10) * (b %%\
    \ 10) )\n}\n\nmultiply(2020, 1851)\n", "\n  # your code goes here\n  pro <- a*b\n\
    \  pro_lst <- strsplit(pro, \"\")\n  res <- pro_lst[[1]][length(pro_lst[[1]])]\n\
    \  as.numeric(res)\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\n\
    multiply(14, -15)\n", "\n    return(unit(a) * unit(b))\n}\nunit <- function(num)\
    \ {\n    if (num < 0) {\n        num = -num\n    }\n    while (num >= 10) {\n\
    \        num = num % 10\n    }\n    return(num)\n}", "\n  abs(a * b) %% 10\n}\n\
    multiply <- function(a, b) {\n  abs(a * b) %/% 10 %*% 10\n}\nmultiply <- function(a,\
    \ b) {\n  r <- a * b\n  if (r < 0) r <- -r\n  r %% 10\n}\nmultiply <- function(a,\
    \ b) {\n  a*b%%10\n}\n", "\n\treturn(abs(a) %% 10 * abs(b) %% 10)\n}\n", "\n \
    \   ab <- a * b\n    ans <- ab %% 10\n    ans\n}\n", "\n    n <- a * b\n    c(sum(as.numeric(strsplit(n,\
    \ '')[[1]])), '\\n')\n}\nprint(multiply(148, 412))\nprint(multiply(19, 28))\n\
    print(multiply(2020, 1851))\nprint(multiply(14, -15))\n", "\n  a <- as.integer(abs(a))\n\
    \  b <- as.integer(abs(b))\n  # return a*b %% 10\n  # return (a %/% 10) * (b %/%\
    \ 10)\n  return((a %/% 10) * (b %/% 10))\n}\n\na <- c(148, 19, 2020, 14)\nb <-\
    \ c(412, 28, 1851, -15)\n\nfor (i in 1:length(a)) {\n  print(multiply(a[i], b[i]))\n\
    }\n", "\n  # your code goes here\n  pos_a <- abs(a)\n  pos_b <- abs(b)\n  pos_a_l\
    \ <- as.character(pos_a)\n  pos_b_l <- as.character(pos_b)\n  a <- as.numeric(substr(pos_a_l,\
    \ nchar(pos_a_l), nchar(pos_a_l)))\n  b <- as.numeric(substr(pos_b_l, nchar(pos_b_l),\
    \ nchar(pos_b_l)))\n  return(a*b)\n}\n", "\n  abs(a * b) %% 10\n}\nmultiply <-\
    \ function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n  abs(a\
    \ * b) %% 10\n}\nmultiply <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply\
    \ <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n \
    \ abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply\
    \ <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n \
    \ abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply\
    \ <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n \
    \ abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply\
    \ <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n \
    \ abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply\
    \ <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n \
    \ abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply\
    \ <- function(a, b) {\n  abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n \
    \ abs(a * b) %% 10\n}\nmultiply <- function(a, b) {\n  abs(a * b", "\n  if (a\
    \ > 0) a <- a%%10\n  if (b > 0) b <- b%%10\n  return(a*b)\n}\nprint(multiply(148,\
    \ 412))\nprint(multiply(19, 28))\nprint(multiply(2020, 1851))\nprint(multiply(14,\
    \ -15))\n", "\n    (a %% 10) * (b %% 10)\n}", "\n  a <- abs(a)\n  b <- abs(b)\n\
    \  (a %% 10) * (b %% 10)\n}\n", "\n  a <- abs(a)\n  b <- abs(b)\n  return((a %/%\
    \ 10) * (b %/% 10))\n}\n\nprint(multiply(148, 412))\n\nprint(multiply(19, 28))\n\
    \nprint(multiply(2020, 1851))\n\nprint(multiply(14, -15))\n\nprint(multiply(19,\
    \ -28))\n\nprint(multiply(-19, 28))\n\nprint(multiply(-19, -28))\n\n", "\n   \
    \ abs(a) %% 10 * abs(b) %% 10\n}\n", "\n  a %/% 10 * (b %/% 10)\n}", "\n  # Write\
    \ your code here\n  prod(c(a%%10, b%%10))\n}\n\nmultiply(20, 5)\n", "\n\tmult\
    \ <- a * b\n\tres <- mult %% 10\n\treturn(res)\n}\n", "\n  a <- abs(a)\n  b <-\
    \ abs(b)\n  a*b %% 10\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020,\
    \ 1851)\nmultiply(14, -15)\n", "\n  lastDigit <- function(x) {\n    x %/% 10 -\
    \ (x %/% 100) * 10\n  }\n  lastDigit(a) * lastDigit(b)\n}\nmultiply(19, 28)\n",
  "\n    a = abs(a)\n    b = abs(b)\n    a = toString(a)\n    b = toString(b)\n  \
    \  a = substring(a, nchar(a), nchar(a))\n    b = substring(b, nchar(b), nchar(b))\n\
    \    a = as.integer(a)\n    b = as.integer(b)\n    a * b\n}\nmultiply(148, 412)\n\
    multiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n", "\n    #..your code\
    \ here\n    a <- abs(a)\n    b <- abs(b)\n    a <- as.integer(a %% 10)\n    b\
    \ <- as.integer(b %% 10)\n    return(a * b)\n}", "\n  a <- abs(a)\n  b <- abs(b)\n\
    \  return(a %/% 10 * b %/% 10)\n}\n", "\n   \n    as.numeric(strsplit(paste(a,b),\
    \ \"\")[[1]][-1])\n    \n}\nmultiply(2020, 1851)\n", "\n  product(unlist(strsplit(as.character(a),\
    \ \"\")), \n          unlist(strsplit(as.character(b), \"\")))\n}\n", "\n\t#convert\
    \ to numeric\n\ta <- as.numeric(a)\n\tb <- as.numeric(b)\n\ta <- abs(a)\n\tb <-\
    \ abs(b)\n\t#get the last numbers\n\ta <- as.numeric(substr(a, nchar(a), nchar(a)))\n\
    \tb <- as.numeric(substr(b, nchar(b), nchar(b)))\n\t#multiply them\n\tm <- a *\
    \ b\n\t#return\n\treturn(m)\n}\n", "\n    a %/% 10 * (b %/% 10)\n}\n", "\n  a\
    \ <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n  b <- b %% 10\n  return(a * b)\n\
    }\n", "\n  modulus <- function(x) abs(x)%%10\n  modulus(a) * modulus(b)\n}\n ",
  "\n  a <- abs(a)\n  b <- abs(b)\n  (a %% 10) * (b %% 10)\n}\n\nmultiply(2020, 1851)\n",
  "\n    return(as.integer(strsplit(as.character(a), \"\")[[1]][length(strsplit(as.character(a),\
    \ \"\")[[1]])])) * as.integer(strsplit(as.character(b), \"\")[[1]][length(strsplit(as.character(b),\
    \ \"\")[[1]])]))\n}\nmultiply <- function(a, b) {\n    return(as.integer(strsplit(as.character(a),\
    \ \"\")[[1]][length(strsplit(as.character(a), \"\")[[1]])])) * as.integer(strsplit(as.character(b),\
    \ \"\")[[1]][length(strsplit(as.character(b), \"\")[[1]])]))\n}\n", "\n  digits\
    \ <- function(n) {\n    a <- abs(n)\n    c(a %% 10, a %/% 10)\n  }\n  x <- digits(a)\n\
    \  y <- digits(b)\n  (x[1] * y[1]) %% 10\n}\nmultiply(19, 28)\n", "\n    a_unit\
    \ <- abs(a) %% 10\n    b_unit <- abs(b) %% 10\n    return(a_unit * b_unit)\n}\n\
    \na <- readline(prompt=\"Enter first integer: \")\nb <- readline(prompt=\"Enter\
    \ second integer: \")\na <- as.integer(a)\nb <- as.integer(b)\n\nmessage(paste(\"\
    Unit digit product: \", multiply(a, b)))\n", "\n  as.integer(strsplit(as.character(a\
    \ * b), \"\")[[1]][1])\n}\n", "\n    abs(a) %% 10 * abs(b) %% 10\n}\n", "\n  if\
    \ (a < 0) a <- -a\n  if (b < 0) b <- -b\n  return( (a %% 10) * (b %% 10) )\n}\n\
    \ntest.equals(multiply(19, 28), 72)\ntest.equals(multiply(2020, 1851), 0)\ntest.equals(multiply(14,\
    \ -15), 20)\n ", "\n    return(as.integer(as.character(a)[length(a)]) * as.integer(as.character(b)[length(b)]))\n\
    }", "\n  return(abs(a)%%10 * abs(b)%%10)\n}", "\n    a_units <- a %% 10\n    b_units\
    \ <- b %% 10\n    a_units * b_units\n}\na <- sample(1:10000,1)\nb <- sample(1:10000,1)\n\
    print(a)\nprint(b)\nprint(multiply(a,b))\n", "\n  unit <- function(x) {\n    abs(x)\
    \ %% 10\n  }\n  unit(a) * unit(b)\n}\n", "\n  a_last <- tail(strsplit(a, \"\"\
    )[[1]], 1)\n  b_last <- tail(strsplit(b, \"\")[[1]], 1)\n  a_last * b_last\n}",
  "\n  abs(a) * abs(b) %% 10\n}\n", "\n  prod(c(a, b) %% 10)\n}\n", "\n    abs(a)\
    \ %% 10 * abs(b) %% 10\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020,\
    \ 1851)\nmultiply(14, -15)\n", "\n    a <- abs(a)\n    b <- abs(b)\n    a <- a%%10\n\
    \    b <- b%%10\n    a*b\n}\nmultiply(14, -15)\n", "\n  return((abs(a) %% 10)\
    \ * (abs(b) %% 10))\n}", "\n  a <- abs(a)\n  b <- abs(b)\n  prod(strsplit(paste(a,\
    \ b, sep = \"\"), \"\")[[1]][-1])\n}", "\n    ab <- abs(a) * abs(b)\n    as.integer(substring(ab,\
    \ nchar(ab), nchar(ab)))\n}\nmultiply <- function(a, b) {\n    a <- abs(a)\n \
    \   b <- abs(b)\n    as.integer(substring(a*b, nchar(a*b), nchar(a*b)))\n}\n",
  "\n    a*b %% 10\n}\n", "\n  return(a %% 10 * b %% 10)\n}\n\nmultiply(2020, 1851)\n",
  "\n  stopifnot(is.integer(a), is.integer(b))\n  return(abs(a%%10) * abs(b%%10))\n\
    }\nmultiply(19, 28)\n", "\n    (a*b) %% 10\n}\nmultiply(148, 412)\nmultiply(19,\
    \ 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n", "\n    return( (a%%10) * (b%%10)\
    \ )\n}\nmultiply(148, 412)\n", "\n  a = abs(a); b = abs(b)\n  return(a %% 10 *\
    \ b %% 10)\n}\nmultiply <- function(a, b) {\n  a = abs(a); b = abs(b)\n  return(round(log10(a)\
    \ + log10(b)))\n}\nmultiply <- function(a, b) {\n  a = abs(a); b = abs(b)\n  return(as.integer(strsplit(as.character(a),\
    \ \"\")[[1]][length(a)] * strsplit(as.character(b), \"\")[[1]][length(b)]))\n\
    }\n", "\n  abs(a * b) %% 10\n}\nmultiply(148, 412)\n", "\n    if (a < 0) {\n \
    \       a <- -a\n    }\n    if (b < 0) {\n        b <- -b\n    }\n    return (a\
    \ %% 10) * (b %% 10)\n}\n", "\n  unlist(strsplit(as.character(a * b), \"\"))[nchar(as.character(a\
    \ * b))] %>% as.numeric()\n}\n", "\n    abs(a) %% 10 * abs(b) %% 10\n}\nmultiply(148,\
    \ 412)\n", "\n  a <- abs(a); b <- abs(b)\n  a <- a %% 10; b <- b %% 10\n  a *\
    \ b\n}\n", "\n  a_last_digit <- a %/% 10\n  b_last_digit <- b %/% 10\n  (a_last_digit\
    \ * b_last_digit) %% 10\n}\n", "\n  a <- abs(a)\n  b <- abs(b)\n  return(a %%\
    \ 10 * b %% 10)\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\n\
    multiply(14, -15)\n", "\n    abs(a) * abs(b) %% 10\n}", "\n    return(abs(a)%%10\
    \ * abs(b)%%10)\n}\n\ntest <- function(testName, inputs, outputs, func) {\n  \
    \  cat(testName, \"\\n\")\n    message <- \"\"\n    for (i in 1:length(inputs))\
    \ {\n        input <- inputs[[i]]\n        output <- outputs[[i]]\n        if\
    \ (all.equal(func(input[[1]], input[[2]]), output)) {\n            message <-\
    \ paste0(message, \"[\u2713] \")\n        } else {\n            message <- paste0(message,\
    \ \"[x] \")\n        }\n    }\n    cat(message, \"\\n\\n\")\n}\n", "\n  a %% 10\
    \ * b %% 10\n}\n\nmultiply(2020, 1851)\n", "\n    if (a < 0) a <- -a\n    if (b\
    \ < 0) b <- -b\n    a%%10 * b%%10\n}\n", "\n  a <- abs(a)\n  b <- abs(b)\n  a\
    \ <- a - floor(a / 10) * 10\n  b <- b - floor(b / 10) * 10\n  return(a * b)\n\
    }\nmultiply(2020, 1851)\n", "\n  stopifnot(is.integer(a), is.integer(b))\n  abs(a\
    \ * b) %% 10\n}\n\nprint(multiply(148, 412))\nprint(multiply(19, 28))\nprint(multiply(2020,\
    \ 1851))\nprint(multiply(14, -15))\n\n'''\n\n\ndef multiply(a, b):\n    return\
    \ abs(a * b) % 10\n\n\nprint(multiply(148, 412))\nprint(multiply(19, 28))\nprint(multiply(2020,\
    \ 1851))\nprint(multiply(14, -15))", "\n  return(as.integer(strsplit(as.character(a*b),'')[[1]][length(strsplit(as.character(a*b),'')[[1]])]))\n\
    }\n", "\n  units_product(a, b)\n}\n\nunits_product <- function(a, b) {\n  return\
    \ (abs(a) %% 10) * (abs(b) %% 10)\n}\n", "\n  a <- a %/% 10\n  b <- b %/% 10\n\
    \  a * b\n}\n", "\n  if (a < 0) a <- a * -1\n  if (b < 0) b <- b * -1\n  c(a,\
    \ b) %>% unit() %>% prod()\n}\n\nunit <- function(x) {\n  x %>% strsplit(\"\"\
    ) %>% unlist() %>% as.numeric()\n}\n\nprod <- function(x) {\n  result <- 1\n \
    \ for (i in x) {\n    result <- result * i\n  }\n  result\n}\nunit(145)\nprod(unit(145))\n",
  "\n  a_last <- a %% 10\n  b_last <- b %% 10\n  result <- a_last * b_last\n  return(result)\n\
    }\nmultiply(148, 412)\n", "\n  prod(as.numeric(strsplit(as.character(c(a, b)),\
    \ \"\")[[1]])%%10)\n}\n", "\n  # write your code here\n  res = a * b\n  x = res\
    \ %/% 10\n  res = res - x * 10\n  return(res)\n}\n", "\n    abs(a) %% 10 * abs(b)\
    \ %% 10\n}\n", "\n\tabs(a %% 10) * abs(b %% 10)\n}\nmultiply(148, 412)\nmultiply(19,\
    \ 28)\nmultiply(2020, 1851)\nmultiply(14, -15)", "\n    return(abs(a) %% 10 *\
    \ abs(b) %% 10)\n}\n\nprint(multiply(148, 412))\nprint(multiply(19, 28))\nprint(multiply(2020,\
    \ 1851))\nprint(multiply(14, -15))\n", "\n  a <- as.integer(a%%10)\n  b <- as.integer(b%%10)\n\
    \  a*b\n}\ntest_that(\"test 2\", {\n  expect_equal(multiply(148, 412), 16)\n \
    \ expect_equal(multiply(19, 28), 72)\n  expect_equal(multiply(2020, 1851), 0)\n\
    \  expect_equal(multiply(14, -15), 20)\n})", "\n    return(a%%10 * b%%10)\n}\n\
    multiply(148, 412)\n", "\n    a <- abs(a)\n    b <- abs(b)\n    (a %% 10) * (b\
    \ %% 10)\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14,\
    \ -15)\n", "\n  abs(a*b) %% 10\n}\n", "\n  a <- a%%10\n  b <- b%%10\n  return(a*b)\n\
    }\n\nprint(multiply(148, 412))\nprint(multiply(19, 28))\nprint(multiply(2020,\
    \ 1851))\nprint(multiply(14, -15))\n", "\n    a <- abs(a)\n    b <- abs(b)\n \
    \   return( (a%%10) * (b%%10) )\n}\n", "\n  return((a %% 10) * (b %% 10))\n}\n\
    \nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n",
  "\n  c(a, b) %/% 10 * (a %% 10) * (b %% 10)\n}", "\n  a <- abs(a)\n  b <- abs(b)\n\
    \  (a %% 10) * (b %% 10)\n}\n\nprint(multiply(148, 412))\nprint(multiply(19, 28))\n\
    print(multiply(2020, 1851))\nprint(multiply(14, -15))\n", "\n    abs(a) * abs(b)\
    \ %% 10\n}\n", "\n    prod(abs(as.integer(strsplit(as.character(c(a, b)), \"\"\
    )[[1]])))\n}\n", "\n  as.integer(as.character(a)[nchar(a)]) * as.integer(as.character(b)[nchar(b)])\n\
    }\n", "\n    d1 <- abs(a)%%10\n    d2 <- abs(b)%%10\n    return(d1*d2)\n}\nmultiply(2020,\
    \ 1851)\nmultiply(14, -15)\n", "\n  a <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n\
    \  b <- b %% 10\n  return(a * b)\n}\n\na <- 20 %/% 2\ncat(paste(a, \"\\n\"))\n\
    \na <- 20 %% 2\ncat(paste(a, \"\\n\"))\n\na <- -20 %% 2\ncat(paste(a, \"\\n\"\
    ))\n", "\n  a <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n  b <- b %% 10\n  return(a\
    \ * b)\n}\n", "\n  a <- abs(a)\n  b <- abs(b)\n  return(as.integer(a %% 10) *\
    \ as.integer(b %% 10))\n}", "\n    a<- abs(a)\n    b<- abs(b)\n    a<- a%%10\n\
    \    b<- b%%10\n    return(a*b)\n}\nmultiply(148, 412)\n", "\n  if (a < 0) a =\
    \ -a\n  if (b < 0) b = -b\n  paste0(as.integer(substring(a, nchar(a), nchar(a))),\
    \ as.integer(substring(b, nchar(b), nchar(b)))) %>%\n    as.integer()\n}\n", "\n\
    \  if (abs(a) > 9) a <- as.integer(substr(a, nchar(a), nchar(a)))\n  if (abs(b)\
    \ > 9) b <- as.integer(substr(b, nchar(b), nchar(b)))\n  a * b\n}\nmultiply(148,\
    \ 412)\n", "\n    a <- abs(a)\n    b <- abs(b)\n    unit_digit <- function(num)\
    \ {\n        num <- num%%10\n        num\n    }\n    unit_digit(a) * unit_digit(b)\n\
    }\n\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14,\
    \ -15)\n", "\n  a <- abs(a)\n  b <- abs(b)\n  a <- as.character(a)\n  b <- as.character(b)\n\
    \  a <- as.numeric(substr(a, nchar(a), nchar(a)))\n  b <- as.numeric(substr(b,\
    \ nchar(b), nchar(b)))\n  c <- a * b\n  c\n}\n\nmultiply <- function(a, b) {\n\
    \  paste0(a, b) %>% strsplit(\"\") %>% \n    lapply(function(x) as.numeric(x))\
    \ %>% \n    do.call(Map, \"*\") %>% \n    Reduce(\"*\")\n}\n\nmultiply <- function(a,\
    \ b) {\n  a <- abs(a)\n  b <- abs(b)\n  as.numeric(substring(a, nchar(a), nchar(a)))\
    \ * as.numeric(substring(b, nchar(b), nchar(b)))\n}\n\nmultiply <- function(a,\
    \ b) {\n  abs(a)%%10 * abs(b)%%10\n}\n\nmultiply <- function(a, b) {\n  a <- abs(a)\n\
    \  b <- abs(b)\n  a <- gsub(\".*(\\\\d)$\", \"\\\\1\", a)\n  b <- gsub(\".*(\\\
    \\d)$\", \"\\\\1\", b)\n  a <- as.numeric(a)\n  b <- as.numeric(b)\n  a * b\n\
    }\n\nmultiply <- function(a, b) {\n  as.numeric(substring(a, nchar(a), nchar(a)))\
    \ * as.numeric(substring(b, nchar(b), nchar(b)))\n}\n\nmultiply <- function(a,\
    \ b) {\n  as.numeric(substring(a, nchar(a), nchar(a))) * as.numeric(substring(b,\
    \ nchar(b), nchar(b)))\n}\n", "\n    a = abs(a)\n    b = abs(b)\n    prod(a %%\
    \ 10, b %% 10)\n}\na = 148\nb = 412\na = abs(a)\nb = abs(b)\na %% 10\nb %% 10\n\
    \nprod(a %% 10, b %% 10)\n\na = 19\nb = 28\na = abs(a)\nb = abs(b)\na %% 10\n\
    b %% 10\n\nprod(a %% 10, b %% 10)\n\na = 2020\nb = 1851\na = abs(a)\nb = abs(b)\n\
    a %% 10\nb %% 10\n\nprod(a %% 10, b %% 10)\n\na = 14\nb = -15\na = abs(a)\nb =\
    \ abs(b)\na %% 10\nb %% 10\n\nprod(a %% 10, b %% 10)", "\n  a <- abs(a)\n  b <-\
    \ abs(b)\n  a %/% 10 * b %/% 10\n}\n\nmultiply <- function(a, b) {\n  a <- abs(a)\n\
    \  b <- abs(b)\n  a <- a - 10 * floor(a / 10)\n  b <- b - 10 * floor(b / 10)\n\
    \  a * b\n}\n", "\n  a <- abs(a)\n  b <- abs(b)\n  a_units <- a %% 10\n  b_units\
    \ <- b %% 10\n  a_units * b_units\n}\n", "\n    # your code here\n    if (a <\
    \ 0) {\n        a = -a\n    }\n    if (b < 0) {\n        b = -b\n    }\n    return(a%%10\
    \ * b%%10)\n}\na <- 5\nb <- -5\na*b\nmultiply(a, b)\n", "\n  as.integer(paste(tail(as.character(a),\
    \ 1), \n                   tail(as.character(b), 1), sep = \"\"))\n}\n", "\n \
    \ digits <- function(n) {\n    n <- abs(n)\n    n %/% 10 %% 10\n  }\n  c(digits(a),\
    \ digits(b)) %>% prod\n}\nmultiply <- function(a, b) {\n  c(as.integer(substr(a,\
    \ nchar(a), nchar(a))),\n    as.integer(substr(b, nchar(b), nchar(b)))) %>% prod\n\
    }\nmultiply <- function(a, b) {\n  a <- abs(a)\n  b <- abs(b)\n  a <- a%%10\n\
    \  b <- b%%10\n  a*b\n}\nmultiply <- function(a, b) {\n  prod(c(tail(a,1),tail(b,1)))\n\
    }", "\n  a*b - (a*b %/% 10) * 10\n}\n", "\n    a %/% 10 * (b %/% 10)\n}\n ", "\n\
    \  return (a %% 10) * (b %% 10)\n}\nmultiply(124, 256)\n", "\n  if (b == 0 | a\
    \ == 0) {\n    return(0)\n  } else {\n    if (a < 0) {\n      a <- -a\n    }\n\
    \    if (b < 0) {\n      b <- -b\n    }\n    return(mod(a, 10) * mod(b, 10))\n\
    \  }\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14,\
    \ -15)\n", "\n    c <- a * b\n    as.integer(substr(as.character(c), nchar(c),\
    \ nchar(c)))\n}\n", "\n    a <- abs(a)\n    b <- abs(b)\n    i <- 1\n    while\
    \ (a>=10){\n        a <- a%/%10\n        i <- i + 1\n    }\n    j <- 1\n    while\
    \ (b>=10){\n        b <- b%/%10\n        j <- j + 1\n    }\n    c <- a*b\n   \
    \ return(c%%10)\n}", "\n  #your code here\n  (a%%10)*(b%%10)\n}\n\na = multiply(148,\
    \ 412)\na\nb = multiply(19, 28)\nb\nc = multiply(2020, 1851)\nc\nd = multiply(14,\
    \ -15)\nd\n", "\n  prod(c(a, b) %% 10)\n}\n", "\n    return(as.integer(substr(a,\
    \ nchar(a), nchar(a))) * as.integer(substr(b, nchar(b), nchar(b))))\n}", "\n \
    \ a <- abs(a)\n  b <- abs(b)\n  answer <- (a %% 10) * (b %% 10)\n  return(answer)\n\
    }", "\n  last <- function(n) {\n    if (n > 0) {\n      n %% 10\n    } else {\n\
    \      n %/% 10 * -1\n    }\n  }\n  last(a) * last(b)\n}\n", "\n  ab <- as.integer(a*b)\n\
    \  a <- as.integer(a)\n  b <- as.integer(b)\n  r <- paste(strsplit(as.character(ab),\
    \ \"\")[[1]], collapse = \"\")\n  r <- as.integer(r)\n  r\n}\n\nmultiply(148,\
    \ 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n", "\n  a<-abs(a)\n\
    \  b<-abs(b)\n  a_mod <- as.integer(a%%10)\n  b_mod <- as.integer(b%%10)\n  a_mod*b_mod\n\
    }\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n",
  "\n  a %/% 10 * (b %/% 10)\n}\nmultiply(19, 28)\n", "\n  abs(a)%%10 * abs(b)%%10\n\
    }\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n",
  "\n  abs(a) %% 10 * abs(b) %% 10\n}", "\n  return(floor(abs(a) %% 10 * abs(b) %%\
    \ 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n}\n\nmultiply <- function(a, b) {\n  return(floor(abs(a) %% 10 * abs(b)\
    \ %% 10))\n", "\n\tres <- a * b\n\tres <- res %% 10\n\treturn(res)\n}\nmultiply(148,\
    \ 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n\n", "\n  a\
    \ <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n  b <- b %% 10\n  return(a * b)\n\
    }\n", "\n  a_last <- as.integer(substr(a, nchar(a), nchar(a)))\n  b_last <- as.integer(substr(b,\
    \ nchar(b), nchar(b)))\n  a_last * b_last\n}\nmultiply(148, 412)\nmultiply(19,\
    \ 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n", "\n  prod(str_sub(c(a, b),\
    \ -1) %>% as.numeric())\n}\n", "\n    i = abs(a)\n    j = abs(b)\n    (i %/% 10)\
    \ * (j %/% 10)\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\n\
    multiply(14, -15)\n", "\n    # Iterative answer\n    # prod <- 1\n    # while\
    \ (a > 0) {\n    #     prod <- prod * (a %% 10)\n    #     a <- a %/% 10\n   \
    \ # }\n    # while (b > 0) {\n    #     prod <- prod * (b %% 10)\n    #     b\
    \ <- b %/% 10\n    # }\n    # prod\n    \n    # Recursive answer\n    if (a ==\
    \ 0) {\n        return(0)\n    }\n    if (b == 0) {\n        return(0)\n    }\n\
    \    return((a %% 10) * (b %% 10) * multiply(a %/% 10, b %/% 10))\n}\na <- c(148,\
    \ 19, 2020, 14)\nb <- c(412, 28, 1851, -15)\nmapply(multiply, a, b)\n", "\n  a\
    \ <- abs(a)\n  b <- abs(b)\n  last_a <- as.numeric(substr(a, nchar(a), nchar(a)))\n\
    \  last_b <- as.numeric(substr(b, nchar(b), nchar(b)))\n  last_a * last_b\n}\n\
    multiply(2, 3)\n\nmultiply(148, 412)\n\nmultiply(19, 28)\n\nmultiply(2020, 1851)\n\
    \nmultiply(14, -15)\n", "\n    a %/% 10 * (b %/% 10)\n}\nmultiply(148, 412)\n\
    multiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n", "\n    if (a < 0){\n\
    \        a = -a\n    }\n    if (b < 0){\n        b = -b\n    }\n    x = a%%10\n\
    \    y = b%%10\n    x*y\n}\nmultiply(14, -15)\n", "\n    a <- abs(a)\n    b <-\
    \ abs(b)\n    a %/% 10 * b %/% 10\n}\n", "\n  a <- abs(a)\n  b <- abs(b)\n  a\
    \ <- as.integer(substr(a, nchar(a), nchar(a)))\n  b <- as.integer(substr(b, nchar(b),\
    \ nchar(b)))\n  a * b\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020,\
    \ 1851)\nmultiply(14, -15)\n", "\n  abs(a) * abs(b) %% 10\n}\nmultiply(1,2)\n",
  "\n  a <- abs(a)\n  b <- abs(b)\n  # a %% 10 is the unit digit of a\n  # b %% 10\
    \ is the unit digit of b\n  (a %% 10) * (b %% 10)\n}\n\ntest_equal(multiply(148,\
    \ 412), 16)\ntest_equal(multiply(19, 28), 72)\ntest_equal(multiply(2020, 1851),\
    \ 0)\ntest_equal(multiply(14, -15), 20)\ntest_equal(multiply(-14, -15), 20)\n\
    test_equal(multiply(-14, 15), 20)\ntest_equal(multiply(14, -15), 20)\ntest_equal(multiply(0,\
    \ 15), 0)\ntest_equal(multiply(14, 0), 0)\ntest_equal(multiply(0, 0), 0)\ntest_equal(multiply(10,\
    \ 15), 0)\ntest_equal(multiply(15, 10), 0)\n ", "\n  a <- abs(a)\n  b <- abs(b)\n\
    \  a <- a %% 10\n  b <- b %% 10\n  a * b\n}\nmultiply <- function(a, b) {\n  a\
    \ <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n  b <- b %% 10\n  a * b\n}\nmultiply\
    \ <- function(a, b) {\n  a <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n  b <- b\
    \ %% 10\n  a * b\n}\nmultiply <- function(a, b) {\n  a <- abs(a)\n  b <- abs(b)\n\
    \  a <- a %% 10\n  b <- b %% 10\n  a * b\n}\nmultiply <- function(a, b) {\n  a\
    \ <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n  b <- b %% 10\n  a * b\n}\nmultiply\
    \ <- function(a, b) {\n  a <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n  b <- b\
    \ %% 10\n  a * b\n}\nmultiply <- function(a, b) {\n  a <- abs(a)\n  b <- abs(b)\n\
    \  a <- a %% 10\n  b <- b %% 10\n  a * b\n}\nmultiply <- function(a, b) {\n  a\
    \ <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n  b <- b %% 10\n  a * b\n}\nmultiply\
    \ <- function(a, b) {\n  a <- abs(a)\n  b <- abs(b)\n  a <- a %% 10\n  b <- b\
    \ %% 10\n  a * b\n}\nmultiply <- function(a, b) {\n  a <- abs(a)\n  b <- abs(b)\n\
    \  a <- a %% 10\n  b <- b %% 10\n  a * b\n}\nmultiply <- function(a, b) {\n  a\
    \ <- abs(a)\n  b <- abs(b)\n  a <- a", "\n  a <- abs(a)\n  b <- abs(b)\n  (a %%\
    \ 10) * (b %% 10)\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\n\
    multiply(14, -15)\n", "\n  a <- abs(a)\n  b <- abs(b)\n  a_last <- as.numeric(substr(a,\
    \ nchar(a), nchar(a)))\n  b_last <- as.numeric(substr(b, nchar(b), nchar(b)))\n\
    \  return(a_last * b_last)\n}\nmultiply(19, 28)\n", "\n  function(x) {\n    if\
    \ (x < 0) {\n      x = abs(x)\n    }\n    return(x - x%%10)%%10\n  }(a) * function(x)\
    \ {\n    if (x < 0) {\n      x = abs(x)\n    }\n    return(x - x%%10)%%10\n  }(b)\n\
    }\n", "\n    a*b %% 10\n}\n", "\n  return(a%%10 * b%%10)\n}\nmultiply(0,0)\n",
  "\n  (abs(a)%%10)*(abs(b)%%10)\n}\nmultiply <- function(a, b) {\n  a <- abs(a)\n\
    \  b <- abs(b)\n  i <- a%%10\n  j <- b%%10\n  i*j\n}\nmultiply <- function(a,\
    \ b) {\n  a <- abs(a)\n  b <- abs(b)\n  (a%%10)*(b%%10)\n}", "\n    # Your code\
    \ here\n}\n", "\n    return(mod(a, 10) * mod(b, 10))\n}\nmultiply(14, -15)\n",
  "\n    # TODO return their product of the unit digits\n    # hint: use modulo and\
    \ div operators\n    a %/% 10 * b %/% 10\n}\n", "\n  a_units = a %% 10\n  b_units\
    \ = b %% 10\n  a_units * b_units\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020,\
    \ 1851)\nmultiply(14, -15)\n", "\n  # your code here\n  a %/% 10 * b %/% 10\n\
    }\nlibrary(testthat)\ntest_that(\"multiply works for some examples\", {\n  expect_equal(multiply(148,\
    \ 412), 16)\n  expect_equal(multiply(19, 28), 72)\n  expect_equal(multiply(2020,\
    \ 1851), 0)\n  expect_equal(multiply(14, -15), 20)\n})\n ", "\n  a %/% 10 * (b\
    \ %/% 10)\n}\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14,\
    \ -15)\n", "\n  prod(strsplit(paste(c(a, b), collapse = \"\"),\"\")[[1]][str_length(strsplit(paste(c(a,\
    \ b), collapse = \"\"),\"\")[[1]]) == 1]) \n}\n\nmultiply(148, 412)\n\nmultiply(19,\
    \ 28)\n\nmultiply(2020, 1851)\n\nmultiply(14, -15)\n", "\n  a = as.integer(a)\n\
    \  b = as.integer(b)\n  if (a < 0) a = -a\n  if (b < 0) b = -b\n  return(mod(a,\
    \ 10) * mod(b, 10))\n}\n\nmultiply(148, 412)\nmultiply(19, 28)\nmultiply(2020,\
    \ 1851)\nmultiply(14, -15)\n", "\n  units <- function(x) {\n    x <- abs(x)\n\
    \    if (x < 10) {\n      x\n    } else {\n      x %/% 10\n    }\n  }\n  units(a)\
    \ * units(b)\n}\nmultiply <- function(a, b) {\n  abs(a) %% 10 * abs(b) %% 10\n\
    }\n", "\n  a <- abs(a)\n  b <- abs(b)\n  (a %% 10) * (b %% 10)\n}\n", "\n    (a\
    \ %% 10) * (b %% 10)\n}\n", "\n  function(x) {\n    x <- abs(x)\n    while (x\
    \ > 9) x <- x %% 10\n    x\n  }(a) * function(x) {\n    x <- abs(x)\n    while\
    \ (x > 9) x <- x %% 10\n    x\n  }(b)\n}\n", "\n  a %/% 10 * (b %/% 10)\n}\nmultiply\
    \ <- function(a, b) {\n  paste0(a, b) %>% \n    strsplit(\"\") %>% \n    unlist()\
    \ %>% \n    Reduce(*)\n}\n", "\n    a <- abs(a)\n    b <- abs(b)\n    a <- a%%10\n\
    \    b <- b%%10\n    out <- a*b\n    out\n}", "\n    a <- a %% 10\n    b <- b\
    \ %% 10\n    a * b\n}\n", "\n  return(abs(a*b) %% 10)\n}\n", "\n  (a %% 10) *\
    \ (b %% 10)\n}\n\nmultiply <- function(a, b) {\n  a <- abs(a)\n  b <- abs(b)\n\
    \  (a %% 10) * (b %% 10)\n}\n\nmultiply <- function(a, b) {\n  (a * b) %% 10\n\
    }\nmultiply <- function(a, b) {\n  (a * b) %% 10\n}\n", "\n    if (abs(a %/% 10)\
    \ < 1) a <- a * 10\n    if (abs(b %/% 10) < 1) b <- b * 10\n    if (abs(a * b)\
    \ < 10) return(a * b)\n    abs(a * b) %% 10\n}\n", "\n  (abs(a) %% 10) * (abs(b)\
    \ %% 10)\n}", "\n    return(abs(a) * abs(b) %% 10)\n}", "\n  ab <- a * b\n  ab\
    \ <- abs(ab)\n  ab %% 10\n}", "\n    prod(abs(c(a, b)) %% 10)\n}", "\n    if (a\
    \ == 0 | b == 0) return(0)\n    if (a < 0) {\n        a = -a\n    }\n    if (b\
    \ < 0) {\n        b = -b\n    }\n    a <- a%%10\n    b <- b%%10\n    return(a*b)\n\
    }\n ", "\n  a <- abs(a)\n  b <- abs(b)\n  a <- a - 10 * floor(a / 10)\n  b <-\
    \ b - 10 * floor(b / 10)\n  a * b\n}\nmultiply(2020, 1851)\n", "\n  digits <-\
    \ unlist(strsplit(paste(a, b), \"\"))\n  prod(as.numeric(digits))\n}\n", "\n \
    \   as.integer(substr(a, nchar(a), nchar(a))) * as.integer(substr(b, nchar(b),\
    \ nchar(b)))\n}\nmultiply(148, 412)\n\nmultiply <- function(a, b) {\n    abs(a)\
    \ %% 10 * abs(b) %% 10\n}\nmultiply(148, 412)\n\nmultiply <- function(a, b) {\n\
    \    c(a, b) %% 10 * c(a, b) %% 10\n}\nmultiply(148, 412)\n\nmultiply <- function(a,\
    \ b) {\n    a = abs(a)\n    b = abs(b)\n    while(a >= 10) a = a %/% 10\n    while(b\
    \ >= 10) b = b %/% 10\n    a * b\n}\nmultiply(148, 412)\n\nmultiply <- function(a,\
    \ b) {\n    as.integer(tail(as.character(a), 1)) * as.integer(tail(as.character(b),\
    \ 1))\n}\nmultiply(148, 412)\n\nmultiply <- function(a, b) {\n    (a %% 10) *\
    \ (b %% 10)\n}\nmultiply(148, 412)\n\nmultiply <- function(a, b) {\n    a = abs(a)\n\
    \    b = abs(b)\n    a = a - (a %/% 10) * 10\n    b = b - (b %/% 10) * 10\n  \
    \  a * b\n}\nmultiply(148, 412)\n\nmultiply <- function(a, b) {\n    a = abs(a)\n\
    \    b = abs(b)\n    c(a, b) = c(a, b) - (c(a, b) %/% 10) * 10\n    a * b\n}\n\
    multiply(148, 412)\n\nmultiply <- function(a, b) {\n    a = abs(a)\n    b = abs(b)\n\
    \    a = a - a %/% 10 * 10\n    b = b - b %/% 10 * 10\n    a * b", "\n  a <- abs(a)\n\
    \  b <- abs(b)\n  (a %% 10) * (b %% 10)\n}\nmultiply(2020, 1851)\n", "\n    #\
    \ convert to character\n    a <- as.character(a)\n    b <- as.character(b)\n \
    \   # return product of unit digits\n    return(as.numeric(substr(a, nchar(a),\
    \ nchar(a))) * \n           as.numeric(substr(b, nchar(b), nchar(b))))\n}\n\n\
    multiply(148, 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)",
  "\n    a %/% 10 * (b %/% 10)\n}\n ", "\n    if (a < 0) {\n        a = -a\n    }\n\
    \    if (b < 0) {\n        b = -b\n    }\n    return(a%%10 * b%%10)\n}\n", "\n\
    \  a * b %% 10\n}\n\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n",
  "\n  last.digit <- function(x) x %% 10\n  last.digit(a) * last.digit(b)\n}\n\na\
    \ = sample(0:20, 1)\nb = sample(0:20, 1)\ncat(sprintf(\">>> multiply(%d, %d)\\\
    n%d\\n\", a, b, multiply(a, b)))\n", "\n    # your code here\n    lastdigit <-\
    \ function(x) {\n        return(x %/% 10)\n    }\n    if (a < 0) {\n        a\
    \ <- -a\n    }\n    if (b < 0) {\n        b <- -b\n    }\n    a <- lastdigit(a)\n\
    \    b <- lastdigit(b)\n    return(a * b)\n}\nmultiply(148, 412)\nmultiply(19,\
    \ 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n", "\n  x <- a %% 10\n  y <- b\
    \ %% 10\n  prod <- x * y\n  return(prod)\n}\nmultiply(148, 412)\n\nmultiply(19,\
    \ 28)\n\nmultiply(2020, 1851)\n\nmultiply(14, -15)\n", "\n    c <- a * b\n   \
    \ abs(c) %/% 10^((nchar(abs(c)))-1)\n}\nmultiply(148, 412)\nmultiply(19, 28)\n\
    multiply(2020, 1851)\nmultiply(14, -15)\n", "\n    prod(c(abs(a), abs(b)) %% 10)\n\
    }\n", "\n  a <- as.integer(as.character(a)[length(a)])\n  b <- as.integer(as.character(b)[length(b)])\n\
    \  return(a*b)\n}\n", "\n    return(abs(a) * abs(b) %% 10)\n}\n\na <- readline(\"\
    Enter a: \")\nb <- readline(\"Enter b: \")\nprint(multiply(a, b))\n", "\n  a <-\
    \ abs(a)\n  b <- abs(b)\n  res <- a %% 10 * b %% 10\n  return(res)\n}\nmultiply(148,\
    \ 412)\nmultiply(19, 28)\nmultiply(2020, 1851)\nmultiply(14, -15)\n", "\n    return\
    \ (as.integer(as.character(a)[nchar(a)]) * as.integer(as.character(b)[nchar(b)]))\n\
    }\n", "\n  abs(a)%%10 * abs(b)%%10\n}\n\ntest_that(\"multiply() works\", {\n \
    \ expect_equal(multiply(14, -15), 20)\n  expect_equal(multiply(148, 412), 16)\n\
    \  expect_equal(multiply(19, 28), 72)\n  expect_equal(multiply(2020, 1851), 0)\n\
    })\n", "\n  a <- abs(a)\n  b <- abs(b)\n  a_unit <- a %% 10\n  b_unit <- b %%\
    \ 10\n  a_unit * b_unit\n}\n", "\n    a = abs(a)\n    b = abs(b)\n    prod(a %%\
    \ 10, b %% 10)\n}\n", "\n  abs(a * b) %% 10\n}\n", "\n    unit_digit <- function(x)\
    \ {\n        if (x < 0) {\n            x <- -x\n        }\n        x %% 10\n \
    \   }\n    unit_digit(a) * unit_digit(b)\n}\nmultiply(148, 412)\n", "\n    abs(a)\
    \ * abs(b) %% 10\n}\n", "\n    unit_digit <- function(num) {\n        mod <- num\
    \ %% 10\n        if (mod < 0) {\n            mod <- mod + 10\n        }\n    \
    \    return(mod)\n    }\n    return(unit_digit(a) * unit_digit(b))\n}\ncat(multiply(148,\
    \ 412), \"\\n\")\ncat(multiply(19, 28), \"\\n\")\ncat(multiply(2020, 1851), \"\
    \\n\")\ncat(multiply(14, -15), \"\\n\")\n", "\n  sa <- as.character(a)\n  sb <-\
    \ as.character(b)\n  sa <- sa[nchar(sa)]\n  sb <- sb[nchar(sb)]\n  ans <- as.integer(sa)\
    \ * as.integer(sb)\n  return(as.integer(ans))\n}\ntest_that('Solution', {\n  expect_equal(multiply(148,\
    \ 412), 16)\n  expect_equal(multiply(19, 28), 72)\n  expect_equal(multiply(2020,\
    \ 1851), 0)\n  expect_equal(multiply(14, -15), 20)\n})\nprint(\"Success!\")\n",
  "\n  unit <- function(x) { as.integer(x%%10) }\n  unit(a) * unit(b)\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_102_choose_num
language: r
prompt: "# This function takes two positive numbers x and y and returns the\n# biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n# there's no such\
  \ number, then the function should return -1.\n# For example:\n# >>> choose_num(12,\
  \ 15)\n# 14\n# >>> choose_num(13, 12)\n# -1\nchoose_num <- function(x, y) {"
tests: "test_humaneval <- function() {\ncandidate <- choose_num\n    if(!identical(candidate(12,\
  \ 15), 14)){quit('no', 1)}\n    if(!identical(candidate(13, 12), -1)){quit('no',\
  \ 1)}\n    if(!identical(candidate(33, 12354), 12354)){quit('no', 1)}\n    if(!identical(candidate(5234,\
  \ 5233), -1)){quit('no', 1)}\n    if(!identical(candidate(6, 29), 28)){quit('no',\
  \ 1)}\n    if(!identical(candidate(27, 10), -1)){quit('no', 1)}\n    if(!identical(candidate(7,\
  \ 7), -1)){quit('no', 1)}\n    if(!identical(candidate(546, 546), 546)){quit('no',\
  \ 1)}\n}\ntest_humaneval()"
completions: ["\n    # fill in with code\n    for (i in x:y) {\n        if (i %% 2\
    \ == 0) {\n            return(i)\n        }\n    }\n    return(-1)\n}", "\n  if(x\
    \ > y) {\n    return(-1)\n  }\n  else if(x %% 2 == 0) {\n    return(x)\n  }\n\
    \  else if(y %% 2 == 0) {\n    return(y)\n  }\n  else {\n    return(-1)\n  }\n\
    }\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  if (y % 2 == 0) {\n    return(y)\n\
    \  } else if (x % 2 == 0) {\n    return(x)\n  } else {\n    return(-1)\n  }\n\
    }\n", "\n    # write your code here\n    \n}\n ", "\n  # YOUR CODE HERE\n  if(x<y){\n\
    \    if(x%2==0){\n      return(x)\n    }\n    else{\n      return(x+1)\n    }\n\
    \  }\n  else{\n    return(-1)\n  }\n}\n ", "\n    if (y <= x) {\n        return(-1)\n\
    \    }\n    else {\n        evens <- seq(x, y, by = 2)\n        return(evens[length(evens)])\n\
    \    }\n}\n\nchoose_num(13,12)\nchoose_num(12, 15)\n", "\n    stopifnot(all(c(x,\
    \ y) > 0), isTRUE(x <= y))\n\n    if (x %% 2 == 0) {\n        return(x)\n    }\
    \ else {\n        x <- x + 1\n    }\n\n    if (x <= y) {\n        return(x)\n\
    \    } else {\n        return(-1)\n    }\n}\n", "\n  # Start with x and continue\
    \ to increase it by 1 until it is bigger than y\n  for (i in x:y) {\n    # Check\
    \ if i is even\n    if (i %% 2 == 0) {\n      # return i if it is\n      return(i)\n\
    \    }\n  }\n  # If we got here then we couldn't find an even number in the range\
    \ so we\n  # return -1\n  return(-1)\n}\n", "\n  if (x > y) {\n    return(-1)\n\
    \  } else {\n    for (n in seq(x, y)) {\n      if (n %% 2 == 0) {\n        return(n)\n\
    \      }\n    }\n    return(-1)\n  }\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n",
  "\n  num <- -1\n  for (i in x:y) {\n    if (i %% 2 == 0)\n      num <- i\n  }\n\
    \  return(num)\n}\n", "\n  if (x > y) {\n    return(-1)\n  } else {\n    for (i\
    \ in seq(x, y)) {\n      if (i %% 2 == 0) {\n        return(i)\n      } \n   \
    \ }\n    return(-1)\n  }\n}\n", "\n    x_mod <- x %% 2\n    y_mod <- y %% 2\n\
    \    if (x == y) {\n        if (x_mod == 0) {\n            return(x)\n       \
    \ } else {\n            return(-1)\n        }\n    } else if (x < y) {\n     \
    \   max_num <- x\n        if (x_mod == 0) {\n            for (i in seq(from =\
    \ x, to = y, by = 2)) {\n                if (i > max_num) {\n                \
    \    max_num <- i\n                }\n            }\n            return(max_num)\n\
    \        } else {\n            for (i in seq(from = x+1, to = y, by = 2)) {\n\
    \                if (i > max_num) {\n                    max_num <- i\n      \
    \          }\n            }\n            return(max_num)\n        }\n    } else\
    \ {\n        max_num <- y\n        if (y_mod == 0) {\n            for (i in seq(from\
    \ = y, to = x, by = 2)) {\n                if (i > max_num) {\n              \
    \      max_num <- i\n                }\n            }\n            return(max_num)\n\
    \        } else {\n            for (i in seq(from = y+1, to = x, by = 2)) {\n\
    \                if (i > max_num) {\n                    max_num <- i\n      \
    \          }\n            }\n            return(max_num)\n        }\n    }\n}\n",
  "\n  if (x <= y && y > 0 && x > 0) {\n    z <- x:y\n    for (i in z) {\n      if\
    \ (i %% 2 == 0) {\n        return(i)\n      }\n    }\n    return(-1)\n  }\n  return(-1)\n\
    }\n\n", "\n  # Enter your code here.\n  if(x==y){\n    if(x%%2==0){\n      return(x)\n\
    \    }else{\n      return(-1)\n    }\n  }else{\n    seq_num<-seq(min(x,y),max(x,y))\n\
    \    result<-seq_num[seq_num%%2==0]\n    if(length(result)==0){\n      return(-1)\n\
    \    }else{\n      return(max(result))\n    }\n  }\n}\n", "\n  # your code goes\
    \ here\n  if (y < x){\n    return(-1)\n  } else {\n    if (y%%2==0){\n      return(y)\n\
    \    } else {\n      return(y-1)\n    }\n  }\n}\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\n", "\n  if (x > y) {\n    return(-1)\n  }\n  else {\n    return(max(which(x:y\
    \ %% 2 == 0)))\n  }\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  is_even\
    \ <- function(num) {\n    if (num %% 2 == 0) {\n      return(TRUE)\n    } else\
    \ {\n      return(FALSE)\n    }\n  }\n  if (x > y) {\n    return(-1)\n  } else\
    \ if (x == y) {\n    if (is_even(x)) {\n      return(x)\n    } else {\n      return(-1)\n\
    \    }\n  } else {\n    i <- x\n    while (i <= y) {\n      if (is_even(i)) {\n\
    \        return(i)\n      }\n      i <- i + 1\n    }\n    return(-1)\n  }\n}\n\
    choose_num(12, 15)\nchoose_num(13, 12)\n", "\n    if (x > y) {\n        return(-1)\n\
    \    }\n    else {\n        for (i in y:x) {\n            if (i %% 2 == 0) {\n\
    \                return(i)\n            }\n        }\n        return(-1)\n   \
    \ }\n}\nchoose_num(13, 12)\n", "\n  if (x > y) {\n    return (-1)\n  }\n  if (x\
    \ %% 2 == 0) {\n    return (x)\n  }\n  return (choose_num(x + 1, y))\n}\n", "\n\
    \  if(x < 0 | y < 0) {stop(\"x and y need to be positive\")}\n  if(x > y) {stop(\"\
    x cannot be greater than y\")}\n  i <- seq(x, y)\n  if (i == 0) {\n    print(\"\
    -1\")\n  } else {\n    print(max(i[i %% 2 == 0]))\n  }\n}\nchoose_num(0, 0)\n\
    choose_num(12, 15)\nchoose_num(12, 16)\nchoose_num(13, 12)\n\nchoose_num(-1, 1)\n",
  "\n  numbers <- seq(x, y)\n  numbers <- numbers[numbers %% 2 == 0]\n  if(length(numbers)\
    \ == 0) {\n    return(-1)\n  } else {\n    return(max(numbers))\n  }\n}\n", "\n\
    \    # YOUR CODE HERE\n}\n ", "\n    z <- x:y\n    if (any(is.na(z))) {\n    \
    \    return(-1)\n    }\n    else {\n        z <- z[z %% 2 == 0]\n        if (length(z)\
    \ == 0) {\n            return(-1)\n        }\n        else {\n            return(max(z))\n\
    \        }\n    }\n}", "\n  # Check that the two numbers are positive and start\
    \ with the smallest\n  if (x <= 0 || y <= 0)\n    return(-1)\n  else if (x > y)\
    \ {\n    temp <- x\n    x <- y\n    y <- temp\n  }\n  # Step through possible\
    \ numbers and return biggest even one\n  for (i in x:y) {\n    if (i %% 2 == 0)\n\
    \      return(i)\n  }\n  # No even numbers in range, so return -1\n  return(-1)\n\
    }\n", "\n  cat(\"choose_num() not yet implemented\")\n}\n\nchoose_num(12, 15)\n\
    choose_num(13, 12)\n ", "\n  x <- as.integer(x)\n  y <- as.integer(y)\n  my_nums\
    \ <- seq(x, y)\n  my_nums <- my_nums[my_nums %% 2 == 0]\n  return(if (length(my_nums)\
    \ > 0) {max(my_nums)} else {-1})\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n",
  "\n    if(y < x) {\n        return(-1)\n    }\n    else {\n        for(i in x:y)\
    \ {\n            if(i %% 2 == 0) {\n                return(i)\n            }\n\
    \        }\n        return(-1)\n    }\n}\nchoose_num(13, 12)\n", "\n    if (x>y)\n\
    \    {\n      return(-1)\n    }\n    else if (x%%2==0)\n    {\n      return(x)\n\
    \    }\n    else\n    {\n      return(x+1)\n    }\n}", "\n  # YOU DO IT\n}\nx\
    \ <- choose_num(12, 15)\nif (x != 14) {\n  stop(\"Expected 14, got \", x)\n}\n\
    x <- choose_num(13, 12)\nif (x != -1) {\n  stop(\"Expected -1, got \", x)\n}\n\
    x <- choose_num(10, 10)\nif (x != 10) {\n  stop(\"Expected 10, got \", x)\n}\n\
    x <- choose_num(10, 11)\nif (x != 10) {\n  stop(\"Expected 10, got \", x)\n}\n\
    x <- choose_num(10, 12)\nif (x != 10) {\n  stop(\"Expected 10, got \", x)\n}\n\
    x <- choose_num(13, 15)\nif (x != 14) {\n  stop(\"Expected 14, got \", x)\n}\n\
    x <- choose_num(12, 14)\nif (x != 12) {\n  stop(\"Expected 12, got \", x)\n}\n\
    x <- choose_num(13, 13)\nif (x != -1) {\n  stop(\"Expected -1, got \", x)\n}\n\
    x <- choose_num(13, 14)\nif (x != 14) {\n  stop(\"Expected 14, got \", x)\n}\n\
    x <- choose_num(13, 15)\nif (x != 14) {\n  stop(\"Expected 14, got \", x)\n}\n\
    x <- choose_num(13, 16)\nif (x != 14) {\n  stop(\"Expected 14, got \", x)\n}\n\
    x <- choose_num(13, 17)\nif (x != 14) {\n  stop(\"Expected 14, got \", x)\n}\n\
    x <- choose_num(13, 18)\nif (x != 14) {\n  stop(\"Expected 14, got \", x)\n}\n\
    x <- choose_num(13, 19)\nif (x != 14) {\n  stop(\"Expected 14, got \", x)\n}\n\
    x <- choose_num(13, 20)\nif (x != 14) {\n  stop(\"Expected 14, got \", x)\n}\n\
    x <- choose", "\n  if (x > y) {\n    max <- x\n    min <- y\n  } else {\n    max\
    \ <- y\n    min <- x\n  }\n  for (i in seq(min, max)) {\n    if (i %% 2 == 0)\
    \ {\n      return(i)\n    }\n  }\n  return(-1)\n}\n", "\n  if (x > y) {\n    return(-1)\n\
    \  }\n  bigEven <- -1\n  for (i in x:y) {\n    if (i %% 2 == 0) {\n      bigEven\
    \ <- i\n    }\n  }\n  return(bigEven)\n}", "\n  # Your code goes here.\n}\n",
  "\n\tif (x == y){ #  If x == y, it returns x (y) unless its not even\n\t\tif (x\
    \ %% 2 == 0){\n\t\t\tx\n\t\t} else {\n\t\t\t-1\n\t\t}\n\t} else if (x > y){ #\
    \ If x > y, it will repeat the previous condition with x and y swapped\n\t\tchoose_num(y,\
    \ x)\n\t} else { # If none of the above, it will find the biggest even integer\
    \ in between x and y and return it\n\t\teven_nums <- c()\n\t\tfor (i in seq(x,\
    \ y)){\n\t\t\tif (i %% 2 == 0){\n\t\t\t\teven_nums <- c(even_nums, i)\n\t\t\t\
    }\n\t\t}\n\t\tif (length(even_nums) == 0){\n\t\t\t-1\n\t\t} else {\n\t\t\tmax(even_nums)\n\
    \t\t}\n\t}\n}\n", "\n  if (x > y) {\n    return(-1)\n  }\n  for (i in seq(x, y))\
    \ {\n    if (i %% 2 == 0) {\n      return(i)\n    }\n  }\n  return(-1)\n}\n",
  "\n  # YOUR CODE HERE\n}\n", "\n  even_nums <- c()\n  for (i in c(x:y)) {\n    if\
    \ (i %% 2 == 0) {\n      even_nums <- c(even_nums, i)\n    }\n  }\n  if (length(even_nums)\
    \ == 0) {\n    return(-1)\n  } else {\n    return(max(even_nums))\n  }\n}\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)\n", "\n    # YOUR CODE HERE\n    if( x == NULL | y ==\
    \ NULL){\n        return(-1)\n    }\n    if( x > y){\n        return(-1)\n   \
    \ }\n    if( x % 2 == 0){\n        x\n    }else{\n        x + 1\n    }\n}\n",
  "\n  max_even <- -1\n  for (i in x:y) {\n    if (is_even(i) && i > max_even) {\n\
    \      max_even <- i\n    }\n  }\n  return(max_even)\n}\n", "\n  # YOUR CODE HERE\n\
    \  if(is.na(x) || is.na(y)) {\n    return(-1)\n  }\n  if(x > y) {\n    return(-1)\n\
    \  }\n  if(y - x < 1) {\n    return(-1)\n  }\n  if(is.integer(x) && is.integer(y))\
    \ {\n    if(x%%2 == 0) {\n      return(x)\n    }\n    else {\n      if(y%%2 ==\
    \ 0) {\n        return(y)\n      }\n      else {\n        return(-1)\n      }\n\
    \    }\n  }\n  else {\n    return(-1)\n  }\n}\n", "\n    if (x > y) {\n      \
    \  return(-1)\n    } else {\n        for (i in y:x) {\n            if (i %% 2\
    \ == 0) {\n                return(i)\n            }\n        }\n        return(-1)\n\
    \    }\n}\n\nprint(choose_num(12, 15))\nprint(choose_num(13, 12))\n", "\n  if\
    \ (x > y) {\n    message(\"The first number should be smaller than the second\
    \ one\")\n    return(NULL)\n  }\n  if (x %% 2 == 0) {\n    out <- x\n  } else\
    \ {\n    out <- x + 1\n  }\n  for (n in out:y) {\n    if (n %% 2 == 0) {\n   \
    \   return(n)\n    }\n  }\n  return(-1)\n}\n\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\n", "\n    if (x > y) {\n        return(-1)\n    }\n    for (i in x:y) {\n\
    \        if (i %% 2 == 0) {\n            return(i)\n        }\n    }\n    return(-1)\n\
    }\n", "\n  x <- x - (x %% 2) # make x even\n  x <- x + 2 # make x a multiple of\
    \ 2\n  y <- y - (y %% 2) # make y even\n  if (x <= y) {\n    y\n  } else {\n \
    \   -1\n  }\n}\n", "\n    if (x <= y) {\n        if (x %% 2 == 0) {\n        \
    \    x\n        } else {\n            x + 1\n        }\n    } else {\n       \
    \ -1\n    }\n}\nchoose_num(13, 12)\n", "\n  for (i in x:y) {\n    if (i %% 2 ==\
    \ 0)\n      return(i)\n  }\n  return(-1)\n}", "\n    big_even <- 0\n    for (i\
    \ in x:y) {\n        if (i %% 2 == 0) {\n            big_even <- i\n        }\n\
    \    }\n    if (big_even == 0) {\n        return(-1)\n    } else {\n        return(big_even)\n\
    \    }\n}\nchoose_num(13, 12)\n", "\n  max_even <- -1 # if nothing found, then\
    \ -1\n  for (k in x:y) {\n    if (k %% 2 == 0) {\n      max_even <- k\n    }\n\
    \  }\n  return(max_even)\n}\n", "\n    if(x > y) {\n        return(-1)\n    }\n\
    \    if((x+1) % 2 == 0) {\n        x = x + 1\n    }\n    if((y-1) % 2 == 0) {\n\
    \        y = y - 1\n    }\n    if(x > y) {\n        return(-1)\n    }\n    return(y)\n\
    }\n", "\n    # YOUR CODE HERE\n    x <- min(x, y)\n    y <- max(x, y)\n    for\
    \ (i in y:x) {\n        if(i %% 2 == 0) {\n            return(i)\n        }\n\
    \    }\n    return(-1)\n}\ntest_that(\"Test choose_num()\", {\n    expect_equal(choose_num(12,\
    \ 15), 14)\n    expect_equal(choose_num(13, 12), -1)\n    expect_equal(choose_num(2,\
    \ 2), 2)\n    expect_equal(choose_num(13, 13), -1)\n})\n ", "\n  if(is.integer(x)\
    \ && is.integer(y)){\n    return(max(seq(x, y)[seq(x, y) %% 2 == 0]))\n  }\n \
    \ else{\n    return(-1)\n  }\n}\n  ", "\n  if (x > y) {\n    return (-1)\n  }\
    \ else {\n    even_nums <- c()\n    for (i in x:y) {\n      if (i %% 2 == 0) {\n\
    \        even_nums <- c(even_nums, i)\n      }\n    }\n    return (max(even_nums))\n\
    \  }\n}\n\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  if (x > y) {\n    return(-1)\n\
    \  }\n  num <- 0\n  for (i in x:y) {\n    if (i %% 2 == 0) {\n      num <- i\n\
    \    }\n  }\n  if (num == 0) {\n    return(-1)\n  }\n  return(num)\n}\n", "\n\
    \  \n  if (x % 2 == 0) {\n    print(x)\n  } else if (x + 1 == y && x + 1 % 2 ==\
    \ 0) {\n    print(x + 1)\n  } else if (x + 1 == y && x + 1 % 2 != 0) {\n    print(-1)\n\
    \  } else {\n    choose_num(x + 1, y)\n  }\n  \n}\n\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\n", "\n  if (y < x) {\n    return(-1)\n  }\n  for (i in y:x) {\n    if (i\
    \ %% 2 == 0) {\n      return(i)\n    }\n  }\n  return(-1)\n}\nchoose_num(12, 15)\n\
    choose_num(13, 12)\n", "\n  if (x < y) {\n    for (i in x:y) {\n      if (i %%\
    \ 2 == 0) {\n        return(i)\n      }\n    }\n  } else {\n    return(-1)\n \
    \ }\n}\n", "\n  # Your code here.\n  largest <- -1\n  if (x %% 2 == 0) {\n   \
    \ largest <- x\n  } else {\n    x <- x + 1\n  }\n  if (y %% 2 == 0) {\n    if\
    \ (largest == -1 || y > largest) {\n      largest <- y\n    }\n  }\n  largest\n\
    }\nchoose_num(13, 12)\nchoose_num(12, 15)\n ", "\n  # TODO: remove this line and\
    \ implement the function\n  }\n", "\n  if(x<=y){\n    if(x %% 2 == 0) {\n    \
    \  return(x)\n    } else {\n      return(choose_num(x+1, y))\n    }\n  } else\
    \ {\n    return(-1)\n  }\n}\n", "\n  # current_num is the current number that\
    \ we're checking\n  current_num <- x\n  while (current_num <= y) {\n    # If current_num\
    \ is divisible by 2, then it's even\n    if (current_num %% 2 == 0) {\n      return(current_num)\n\
    \    }\n    current_num <- current_num + 1\n  }\n  return(-1)\n}\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)\n", "\n  \n  # Initialize a vector for storing the possible\
    \ results\n  even_vector <- c()\n  \n  # We want to iterate through the range\
    \ [x, y] to see if any of\n  # the numbers are even. If there are any even numbers,\
    \ then we want\n  # to store them in our even_vector.\n  for (i in seq(x, y))\
    \ {\n    if (i %% 2 == 0) {\n      even_vector <- c(even_vector, i)\n    }\n \
    \ }\n  \n  # If there are any even numbers in the range [x, y], then we want to\n\
    \  # return the largest even number.\n  if (length(even_vector) > 0) {\n    return(max(even_vector))\n\
    \  } else {\n    return(-1)\n  }\n}\n ", "\n    if(x > y) {\n        return(-1)\n\
    \    } else {\n        if((x %% 2) == 0) {\n            return(x)\n        } else\
    \ {\n            return(choose_num(x + 1, y))\n        }\n    }\n}\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)\n", "\n    if(x > y) {\n        return(-1)\n    } else\
    \ {\n        for(i in x:y) {\n            if(i %% 2 == 0) {\n                return(i)\n\
    \            }\n        }\n        return(-1)\n    }\n}\n", "\n    ## your code\
    \ goes here\n    if(x>y){\n        return(-1)\n    }\n    # if((x-2)%2 != 0){\n\
    \    #     x = x+1\n    # }\n    # if((y-2)%2 != 0){\n    #     y = y-1\n    #\
    \ }\n    for(i in seq(x,y,2)){\n        if(i % 2 == 0){\n            return(i)\n\
    \        }\n    }\n    return(-1)\n}\n ", "\n    if (x > y) {\n        return\
    \ (-1)\n    }\n    if (x % 2 == 0) {\n        return (x)\n    }\n    return (choose_num(x\
    \ + 1, y))\n}\n", "\n    # your code here\n}\n ", "\n  if ( x > y) {\n    return(-1)\n\
    \  }\n  else {\n    for ( i in x:y ) {\n      if ( i %% 2 == 0 ) {\n        return(i)\n\
    \      }\n    }\n    return(-1)\n  }\n}\n \nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\n", "\n    x <- as.integer(x)\n    y <- as.integer(y)\n    if (y < x) {\n\
    \        return(-1)\n    }\n    for (z in seq(x, y)) {\n        if (z %% 2 ==\
    \ 0) {\n            return(z)\n        }\n    }\n    return(-1)\n}\n", "\n  if(x\
    \ > y) {\n    return(-1)\n  }\n  if(x %% 2 == 0) {\n    return(x)\n  }\n  return(choose_num(x\
    \ + 1, y))\n}\n", "\n  # Your code here\n  if(x > y){\n    return(-1)\n  }\n \n\
    \  if(x %% 2 == 0){\n    return(x)\n  }\n \n  return(choose_num(x+1, y))\n}\n\
    \ \nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  if(x > y) {\n    return(-1)\n\
    \  } else {\n    for(i in (x:y)) {\n      if(i %% 2 == 0) {\n        return(i)\n\
    \      }\n    }\n    return(-1)\n  }\n}", "\n    if (y - x < 1) {\n        return(-1)\n\
    \    } else {\n        z <- x\n        if (z %% 2 != 0) {\n            z <- z\
    \ + 1\n        }\n        return(z)\n    }\n}\n", "\n  x <- max(c(x, y))\n  y\
    \ <- min(c(x, y))\n  while (x >= y) {\n    if (x %% 2 == 0) {\n      return(x)\n\
    \    }\n    x <- x - 1\n  }\n  return(-1)\n}\n\n", "\n  # Replace the next line\
    \ with your code\n  even_numbers <- seq(x, y, by = 2)\n  if (length(even_numbers)\
    \ == 0) {\n    -1\n  } else {\n    even_numbers[length(even_numbers)]\n  }\n}\n",
  "\n    if (x < y){\n        for (i in y:x){\n            if (i %% 2 == 0){\n   \
    \             return(i)\n            }\n        }\n    } else if (x > y){\n  \
    \      for (i in x:y){\n            if (i %% 2 == 0){\n                return(i)\n\
    \            }\n        }\n    } else {\n        return(x)\n    }\n    return(-1)\n\
    }\n", "\n    #first line will choose even number between x and y, if there are\
    \ no\n    #even numbers it will return -1\n    if (x %% 2 == 0 & y %% 2 == 0){\n\
    \      if(x < y){\n        x \n      }else{\n        y\n      }\n    }else if\
    \ (x %% 2 == 0 & y %% 2 != 0){\n      if(x < y - 1){\n        x\n      }else{\n\
    \        y - 1\n      }\n    }else if (x %% 2 != 0 & y %% 2 == 0){\n      if(x\
    \ + 1 < y){\n        x + 1\n      }else{\n        y\n      }\n    }else{\n   \
    \   if(x + 1 < y - 1){\n        x + 1\n      }else{\n        y - 1\n      }\n\
    \    }\n}\n", "\n  # Your code here\n  if(x%%2 == 0){\n    return(x)\n  }else{\n\
    \    return(choose_num(x+1, y))\n  }\n}\ntest_that(\"choose_num returns the biggest\
    \ even number in the range\", {\n  expect_equal(choose_num(12, 15), 14)\n  expect_equal(choose_num(13,\
    \ 12), -1)\n})\n ", "\n  # Fill in the function\n}\n", "\n  even_nums <- seq(x,\
    \ y, by = 2)\n  if(y %% 2 == 0) {\n    return(even_nums[length(even_nums)])\n\
    \  } else {\n    return(-1)\n  }\n}\n", "\n    range <- y:x\n    x1 <- which(range\
    \ %% 2 == 0)\n    if (length(x1) == 0) {\n        y <- -1\n    } else {\n    \
    \    y <- max(range[x1])\n    }\n    return(y)\n}\n", "\n  if (x == y) {\n   \
    \ return(-1)\n  }\n  for (i in x:y) {\n    if (i %% 2 == 0) {\n      return(i)\n\
    \    }\n  }\n  return(-1)\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n \
    \ if(x %in% seq(y, y-y %% 2, -2)){\n    y\n  } else if(x %in% seq(y-2, y-y %%\
    \ 2, -2)){\n    y-2\n  } else {\n    -1\n  }\n}\n", "\n\t# YOUR CODE HERE\n\t\
    if (x<y){\n\t\tif (x%%2==0){\n\t\t\tfor (i in x:y){\n\t\t\t\tif (i%%2==0){\n\t\
    \t\t\t\treturn(i)\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tfor (i in x+1:y){\n\t\
    \t\t\tif (i%%2==0){\n\t\t\t\t\treturn(i)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\
    \t\treturn(-1)\n\t}\n}", "\n  even <- function(n) {\n    # If n is even, return\
    \ n.\n    if (n %% 2 == 0) return(n)\n    # Otherwise, return FALSE\n    return(FALSE)\n\
    \  }\n  # Reduce x:y to just the even values.\n  numbers <- x:y\n  result <- Filter(even,\
    \ numbers)\n  # If there's no even values in x:y, return -1\n  if (length(result)\
    \ == 0) return(-1)\n  # Otherwise, return the last even value.\n  return(result[length(result)])\n\
    }\n", "\n\tif (x > y)\n\t\treturn(-1)\n\t\n\teven_vec <- seq(x, y, by = 2)\n\t\
    if (length(even_vec) == 0)\n\t\treturn(-1)\n\t\n\treturn(even_vec[length(even_vec)])\n\
    }\n", "\n\tif(x %% 2 == 0){\n\t\tx\n\t}else{\n\t\tx + 1\n\t}\n}\nchoose_num(13,\
    \ 15)\n", "\n\tchoose_num <- (floor(y/2) * 2)\n\tif(x > choose_num) return(-1)\n\
    \treturn(choose_num)\n}\n", "\n  # Your code here\n}\n", "\n  if (y < x) return(-1)\n\
    \  z <- seq(x, y)\n  z <- z[(z %% 2 == 0)]\n  if (length(z) == 0) return(-1)\n\
    \  return(max(z))\n}\n", "\n  if (x > y) {\n    return (-1)\n  }\n  for (i in\
    \ seq(x, y)) {\n    if (i %% 2 == 0) {\n      return (i)\n    }\n  }\n  return\
    \ (-1)\n}\n\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  if (x > y) {\n  \
    \  # swap numbers so x <= y\n    tmp <- x\n    x <- y\n    y <- tmp\n  }\n  if\
    \ (y < 0) {\n    return (-1)\n  }\n  if (x % 2 == 0) {\n    return (x)\n  }\n\
    \  if (y % 2 == 0) {\n    return (y)\n  }\n  return (-1)\n}\n", "\n    # YOUR\
    \ CODE HERE\n}\n", "\n\t# Put your code here!\n}\n", "\n    if (y < x){\n    \
    \    return(-1)\n    }\n    else if (x%2 == 0){\n        return(x)\n    }\n  \
    \  else{\n        return(x+1)\n    }\n}\n", "\n  if (x > y) {\n    return(-1)\n\
    \  }\n  for (i in x:y) {\n    if (i %% 2 == 0) {\n      return(i)\n    }\n  }\n\
    \  return(-1)\n}\n", "\n  if (x>y){\n    return(-1)\n  }\n  else if(y %% 2 !=\
    \ 0){\n    y <- y-1\n  }\n  while(x <= y){\n    if(x %% 2 == 0){\n      return(x)\n\
    \    }\n    x <- x+1\n  }\n  return(-1)\n}\n\n", "\n  x <- as.integer(x)\n  y\
    \ <- as.integer(y)\n  if(x > y) {\n    -1\n  } else {\n    if(y %% 2 == 0) {\n\
    \      y\n    } else {\n      y - 1\n    }\n  }\n}\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\nchoose_num(12, 13)\n", "\n  # your code here\n}", "\n  if (x <= y) {\n\
    \    if (x %% 2 == 0) {\n      return(x)\n    } else {\n      return(choose_num(x\
    \ + 1, y))\n    }\n  } else {\n    return(-1)\n  }\n}", "\n    stopifnot(x >=\
    \ 0, y >= 0)\n    return(max(seq(x, y)[(x:y) %% 2 == 0]))\n}\n", "\n  if (x >\
    \ y) {\n    return (-1)\n  }\n  else {\n    for (i in x:y) {\n      if (i %% 2\
    \ == 0) {\n        return (i)\n      }\n    }\n    return (-1)\n  }\n}\nx <- 12\n\
    y <- 15\nchoose_num(x, y)\n\nx <- 13\ny <- 12\nchoose_num(x, y)\n ", "\n\tif(y\
    \ - x < 0) return(-1)\n\telse {\n\t\treturn(choose_num_helper(x, y))\n\t}\n}\n\
    \nchoose_num_helper <- function(x, y) {\n\tif(x > y) return(-1)\n\telse if(x %%\
    \ 2 == 0) return(x)\n\telse return(choose_num_helper(x + 1, y))\n}\n", "\n   \
    \ biggest = -1\n    for (i in x:y) {\n        if (i %% 2 == 0) {\n           \
    \ if (i > biggest) {\n                biggest = i\n            }\n        }\n\
    \    }\n    return(biggest)\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n\
    \  #####################\n  # WRITE YOUR CODE HERE\n  #####################\n}",
  "\n  if(x > y) {\n    return(-1)\n  }\n  else if(x == y) {\n    if(x %% 2 == 0)\
    \ {\n      return(x)\n    }\n    else {\n      return(-1)\n    }\n  }\n  else\
    \ {\n    if(x %% 2 == 0) {\n      return(x)\n    }\n    else {\n      return(choose_num(x\
    \ + 1, y))\n    }\n  }\n}\n\n", "\n  # You can add your code here\n  list = c()\n\
    \  for (i in x:y) {\n    if (i %% 2 == 0) {\n      list = c(list, i)\n    }\n\
    \  }\n  if (length(list) > 0) {\n    return(max(list))\n  } else {\n    return(-1)\n\
    \  }\n}\n", "\n  # Fill in your code here!\n  if (x %% 2 == 0) {\n    return(x)\n\
    \  } else if (y %% 2 == 0) {\n    return(y)\n  } else {\n    return(-1)\n  }\n\
    }\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  if (x > y) {\n    return(-1)\n\
    \  } else {\n    if (x %% 2 == 0) {\n      return(x)\n    } else {\n      return(choose_num(x\
    \ + 1, y))\n    }\n  }\n}\nchoose_num(13, 12)\n", "\n  for (i in x:y) {\n    if\
    \ (i %% 2 == 0)\n      print(i)\n  }\n  -1\n}\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\n", "\n  if (x %% 2 == 0) {\n    return(x)\n  } else if (y %% 2 == 0) {\n\
    \    return(y)\n  } else {\n    return(-1)\n  }\n}\n", "\n  if(x > y){\n    return(-1)\n\
    \  }\n  else if(x <= y){\n    if(x%%2==0){\n      return(x)\n    }\n    else if(x%%2==1){\n\
    \      x <- x+1\n      return(x)\n    }\n  }\n}\n", "\n    # your code here\n\
    \    stopifnot(x <= y)\n    all_evens <- seq(from = x, to = y, by = 2)\n    if\
    \ (length(all_evens) > 0) {\n        return(all_evens[length(all_evens)])\n  \
    \  } else {\n        return(-1)\n    }\n}\n", "\n    if (x > y) {\n        return\
    \ (-1)\n    }\n    for (i in x:y) {\n        if (i %% 2 == 0) {\n            return\
    \ (i)\n        }\n    }\n    return (-1)\n}", "\n    if (x > y) return(-1)\n \
    \   num <- x\n    while (num <= y) {\n        if (num %% 2 == 0) return(num)\n\
    \        num <- num + 1\n    }\n    return(-1)\n}\n\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\n ", "\n  if (x == y) {\n    if ((x %% 2) == 0) {\n      return(x)\n   \
    \ } else {\n      return(-1)\n    }\n  } else if (x > y) {\n    return(-1)\n \
    \ } else {\n    for (i in seq(x, y)) {\n      if ((i %% 2) == 0) {\n        return(i)\n\
    \      }\n    }\n    return(-1)\n  }\n}\n", "\n  if (y %% 2 == 0) {\n    return(y)\n\
    \  } else if (x %% 2 == 0) {\n    return(x)\n  } else {\n    return(-1)\n  }\n\
    }\n", "\n  if (x > y) {\n    return(-1)\n  } else {\n    return(max(seq(from =\
    \ x, to = y, by = 2)))\n  }\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n\
    \    if (x %% 2 == 0) {\n        if (y > x) {\n            y\n        } else {\n\
    \            x\n        }\n    } else {\n        if (y > x + 1) {\n          \
    \  y - 1\n        } else {\n            -1\n        }\n    }\n}\n\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)\n", "\n    if (y <= x) {\n        return(-1)\n    }\n\
    \    else {\n        for (x in x:y) {\n            if (x %% 2 == 0) {\n      \
    \          return(x)\n            }\n        }\n    }\n}\n\nchoose_num(12, 15)\n\
    choose_num(13, 12)\n", "\n  for (i in x:y) {\n    if (i %% 2 == 0) {\n      return(i)\n\
    \    }\n  }\n  return(-1)\n}\n\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n\
    \  m <- min(x, y)\n  n <- max(x, y)\n  for (k in n:m) {\n    if (k %% 2 == 0)\
    \ {\n      return(k)\n    }\n  }\n  return(-1)\n}\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\n", "\n\tlength_of_range <- y - x + 1\n\tif (length_of_range %/% 2 == 0)\
    \ {\n\t\tif (x %/% 2 == 0) {\n\t\t\tlargest_even <- y - 1\n\t\t} else {\n\t\t\t\
    largest_even <- y - 2\n\t\t}\n\t} else {\n\t\tif (x %/% 2 == 0) {\n\t\t\tlargest_even\
    \ <- y - 2\n\t\t} else {\n\t\t\tlargest_even <- y - 3\n\t\t}\n\t}\n\tif (largest_even\
    \ < x) {\n\t\tlargest_even <- -1\n\t}\n\treturn(largest_even)\n}", "\n  if (x\
    \ > y) {\n    return(-1)\n  }\n  even_nums <- seq(x, y, by = 2)\n  big_even <-\
    \ even_nums[length(even_nums)]\n  return(big_even)\n}\nchoose_num(13, 12)\n",
  "\n  if (x > y) {\n    return(-1)\n  } else {\n    for (i in x:y) {\n      if (i\
    \ %% 2 == 0) {\n        return(i)\n      }\n    }\n    return(-1)\n  }\n}\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)\n", "\n  max_even <- -1\n  for (num in x:y) {\n    if\
    \ (num %% 2 == 0 && num > max_even) {\n      max_even <- num\n    }\n  }\n  return(max_even)\n\
    }\n\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  if(x < y && x%%2 == 0) {\n\
    \    return(x)\n  } else if(x < y && x%%2 != 0) {\n    return(x+1)\n  } else if(x\
    \ == y && x%%2 == 0) {\n    return(x)\n  } else if(x == y && x%%2 != 0) {\n  \
    \  return(-1)\n  } else {\n    return(-1)\n  }\n}\n\nprint(choose_num(12, 15))\n\
    print(choose_num(13, 12))\nprint(choose_num(20, 20))\nprint(choose_num(19, 19))\n",
  "\n    if (x > y) {\n        return(-1)\n    } else {\n        for (number in seq(x,\
    \ y)) {\n            if (number %% 2 == 0) {\n                return(number)\n\
    \            }\n        }\n        return(-1)\n    }\n}\n\nchoose_num(11, 15)\n\
    choose_num(13, 12)\n", "\n    evens <- seq(x, y, by = 2)\n    if(length(evens)\
    \ == 0) {\n        return(-1)\n    } else {\n        return(evens[length(evens)])\n\
    \    }\n}\n\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  # Your code here!\n\
    \  if(x==y){\n    if(x %% 2 == 0){\n      return(x)\n    }else{\n      return(-1)\n\
    \    }\n  }else{\n    if(x>y){\n      temp <- x\n      x <- y\n      y <- temp\n\
    \    }\n    while(x<=y){\n      if(x %% 2 == 0){\n        return(x)\n      }\n\
    \      x <- x + 1\n    }\n    return(-1)\n  }\n}\n", "\n  if (x < 0 | y < 0) {\n\
    \    print(\"Both arguments must be positive\")\n  } else if (x == y) {\n    #\
    \ We want to know if the number is even first\n    if (x %% 2 == 0) {\n      print(x)\n\
    \    } else {\n      print(-1)\n    }\n  } else if (x < y) {\n    for (i in x:y)\
    \ {\n      if (i %% 2 == 0) {\n        print(i)\n        break\n      } else {\n\
    \        print(-1)\n      }\n    }\n  } else {\n    print(\"The first argument\
    \ must be smaller than the second argument\")\n  }\n}\n", "\n    if(x > y) {\n\
    \        return(-1)\n    }\n    return(x)\n}\n", "\n  if(x>y) return(-1)\n  if(x%%2==0)\
    \ return(x)\n  return(choose_num(x+1, y))\n}\n", "\n    (x:y)[(x:y) %% 2 == 0][length(x:y)]\n\
    }\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  i <- y\n  while (i >= x) {\n\
    \    if (i %% 2 == 0) {\n      return(i)\n    }\n    i <- i - 1\n  }\n  return(-1)\n\
    }\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n    x <- as.integer(x)\n    y\
    \ <- as.integer(y)\n    if (x > y) {\n        stop(\"Argument 'x' should be smaller\
    \ than argument 'y'.\")\n    }\n    for (i in seq(x, y)) {\n        if (i %% 2\
    \ == 0) {\n            return(i)\n        }\n    }\n    return(-1)\n}\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)\n", "\n  if (x < y) {\n    x = seq(x, y)\n    x = x[x\
    \ %% 2 == 0]\n    if (length(x) == 0) {\n      return(-1)\n    } else {\n    \
    \  return(max(x))\n    }\n  } else {\n    return(-1)\n  }\n}\n", "\n    # Define\
    \ the condition of returning -1\n    if(x > y) {\n        return(-1)\n    }\n\
    \    # Define the condition of returning the biggest even integer number\n   \
    \ # that is in the range [x, y] inclusive.\n    else {\n        vec <- c(x:y)\n\
    \        vec_even <- vec[vec %% 2 == 0]\n        max(vec_even)\n    }\n}\n", "\n\
    \  if (x > y) {\n    return(-1)\n  } else {\n    for (i in seq(x, y)) {\n    \
    \  if (i %% 2 == 0) {\n        return(i)\n      }\n    }\n    return(-1)\n  }\n\
    }\n", "\n    if (x > y) {\n        return(-1)\n    }\n    for (i in (y:x)) {\n\
    \        if (i %% 2 == 0) {\n            return(i)\n        }\n    }\n    return(-1)\n\
    }\n", "\n  if (x > y) {\n    return(-1)\n  } else {\n    if (y % 2 == 0) {\n \
    \     return(y)\n    } else {\n      return(y - 1)\n    }\n  }\n}\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)\n ", "\n  max = -1\n  for (i in x:y) {\n    if (i %%\
    \ 2 == 0) {\n      if (i > max) {\n        max = i\n      }\n    }\n  }\n  return(max)\n\
    }\n\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  # YOUR CODE HERE\n  if (x\
    \ > y) {\n    return(-1)\n  }\n  else {\n    for (i in y:x) {\n      if (i %%\
    \ 2 == 0) {\n        return(i)\n      }\n    }\n  }\n  return(-1)\n}\n", "\n \
    \   # YOUR CODE HERE\n    if (x%%2 == 0){\n      return(max(seq(x,y,2)))\n   \
    \ } else {\n      return(max(seq(x+1,y,2)))\n    }\n}\n\nchoose_num(12, 15)\n\
    choose_num(13, 12)\n", "\n  # Complete this function\n  x<-x%%2\n  y<-y%%2\n \
    \ if(x==0){\n    return(max(seq(x,y,2)))\n  }\n  if(y==0){\n    return(max(seq(x+1,y,2)))\n\
    \  }\n  return(-1)\n}\n", "\n  if (x > y) {\n    return(-1)\n  }\n  else {\n \
    \   if (x %% 2 == 0) {\n      return(x)\n    }\n    else {\n      return(choose_num(x\
    \ + 1, y))\n    }\n  }\n}\n", "\n  if(x>y){\n    print(-1)\n  }\n  else{\n   \
    \ if(x %% 2 == 0){\n      if(y %% 2 == 0){\n        print(y)\n      }\n      else{\n\
    \        print(y-1)\n      }\n    }\n    else{\n      if(y %% 2 == 0){\n     \
    \   print(y)\n      }\n      else{\n        print(y-1)\n      }\n    }\n  }\n\
    }\n\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  big <- -1\n  if (x > y) {\n\
    \    return(big)\n  }\n  for (i in x:y) {\n    if (i %% 2 == 0) {\n      big <-\
    \ i\n    }\n  }\n  return(big)\n}\n\n", "\n    if(x > y) {\n        return(-1)\n\
    \    } else {\n        max_even_num <- -1\n        for(i in x:y) {\n         \
    \   if(i %% 2 == 0) {\n                max_even_num <- i\n            }\n    \
    \    }\n        return(max_even_num)\n    }\n}\n", "\n  # This body is a stub!\
    \ Please update it.\n  (x+y)/2\n}\n", "\n  # Your code here\n}\n", "\n    if (x\
    \ > y) {\n        return(-1)\n    } else {\n        if (x %% 2 == 0) {\n     \
    \       return(x)\n        } else {\n            return(x + 1)\n        }\n  \
    \  }\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  evens <- seq(x, y, by\
    \ = 2)\n  if(is.null(evens)) {\n    return(-1)\n  } else {\n    return(evens[length(evens)])\n\
    \  }\n}\n\nchoose_num(2, 3)\nchoose_num(100, 200)\nchoose_num(100, 201)\nchoose_num(200,\
    \ 300)\nchoose_num(201, 300)\n\nchoose_num(1, 10)\nchoose_num(3, 3)\nchoose_num(100,\
    \ 100)\nchoose_num(12, 15)\nchoose_num(13, 12)\nchoose_num(15, 12)\n", "\n  start\
    \ <- x\n  if (x %% 2 == 1) {\n    start <- x + 1\n  }\n  end <- y\n  if (y %%\
    \ 2 == 1) {\n    end <- y - 1\n  }\n  if (start > end) {\n    return(-1)\n  }\n\
    \  return(end)\n}\n\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  if (x > y)\
    \ {\n    return(-1)\n  } else {\n    if (x%%2 != 0) {\n      x <- x + 1\n    }\n\
    \    while (x <= y) {\n      return(x)\n      x <- x + 2\n    }\n  }\n}\nchoose_num(13,\
    \ 12)\n ", "\n  # Put your code here\n}\n", "\n    if (x > y) {\n        return(-1)\n\
    \    }\n    if (x %% 2 == 0) {\n        return(x)\n    }\n    choose_num(x + 1,\
    \ y)\n}\n\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  if (y < x) {\n    return(-1)\n\
    \  }\n  for (z in seq(x, y)) {\n    if (z %% 2 == 0) {\n      return(z)\n    }\n\
    \  }\n  return(-1)\n}\n", "\n    n <- x\n    while (n <= y) {\n        if (n %%\
    \ 2 == 0) {\n            return(n)\n        }\n        n <- n + 1\n    }\n   \
    \ return(-1)\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n    if (y <= x)\
    \ {\n        return(-1)\n    }\n    if (y == x + 1) {\n        if (y %% 2 == 0)\
    \ {\n            return(y)\n        } else {\n            return(-1)\n       \
    \ }\n    }\n    if (y %% 2 == 0) {\n        return(y)\n    } else {\n        return(choose_num(x,\
    \ y - 1))\n    }\n}\n", "\n    # YOUR CODE HERE\n    x <- min(x, y)\n    y <-\
    \ max(x, y)\n    for (i in x:y) {\n        if (i %% 2 == 0) {\n            return(i)\n\
    \        }\n    }\n    return(-1)\n}\n", "\n  # YOUR CODE HERE\n  d = y - x\n\
    \  if (d == 0){\n    return(-1)\n  }\n  else{\n    if (d % 2 == 0){\n      return(d\
    \ + x)\n    }\n    else{\n      return(d + x - 1)\n    }\n  }\n}\n", "\n  ## Implementation\
    \ of the choose_num function goes here\n  evens <- seq(x, y, by = 2)\n  if(length(evens)\
    \ == 0) {\n    return(print(-1))\n  } else {\n    return(print(evens[length(evens)]))\n\
    \  }\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  ## Add your code here\
    \ ##\n  choose_num <- function(x, y) {\n  if (x==y) {\n    return(x)\n  }\n  else\
    \ if (x > y) {\n    return(-1)\n  }\n  else {\n    for (i in (x+1):y) {\n    \
    \  if (i %% 2 == 0) {\n        return(i)\n      }\n    }\n    return(-1)\n  }\n\
    }\n}\n\n\n", "\n    if (x > y) {\n        return(-1)\n    }\n    else {\n    \
    \    for (i in y:x) {\n            if (i %% 2 == 0) {\n                return(i)\n\
    \            }\n        }\n        return(-1)\n    }\n}\nchoose_num(13, 12)\n\
    choose_num(12, 15)\nchoose_num(12, 13)\n", "\n\tevens <- seq(x, y, by = 2)\n\t\
    if (length(evens) > 0) {\n\t\treturn(evens[length(evens)])\n\t} else {\n\t\treturn(-1)\n\
    \t}\n}\n", "\n  # YOUR CODE HERE\n}\n", "\n  # your code here\n}\n", "\n    for\
    \ (i in (x:y)) {\n        if (i %% 2 == 0) {\n            return(i)\n        }\n\
    \    }\n    return(-1)\n}\n", "\n  if (x>y)\n    return(-1)\n  for (number in\
    \ (y:x)) {\n    if (number %% 2 == 0)\n      return(number)\n  }\n  return(-1)\n\
    }\n", "\n    if(x>y) {\n        return(-1)\n    }\n    else {\n        if(x%%2==0)\
    \ {\n            return(x)\n        }\n        else {\n            if(y%%2==0)\
    \ {\n                return(y)\n            }\n            else {\n          \
    \      return(-1)\n            }\n        }\n    }\n}\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\n", "\n  # if x is greater than y, return -1\n  if (x > y) {\n    return(-1)\n\
    \  }\n  # create a list of all the integers between x and y\n  my_list <- x:y\n\
    \  # loop through the list and find the first even integer\n  for (i in my_list)\
    \ {\n    if (i %% 2 == 0) {\n      return(i)\n    }\n  }\n  # return -1 if we\
    \ could not find an even integer\n  return(-1)\n}\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)", "\n  if(x > y) {\n    return(-1)\n  }\n  for(i in seq(x, y)) {\n    if(i\
    \ %% 2 == 0) {\n      return(i)\n    }\n  }\n  return(-1)\n}\nchoose_num(1, 1)\n\
    choose_num(1, 2)\nchoose_num(1, 3)\nchoose_num(3, 1)\n", "\n    # your code here\n\
    }", "\n  ### Your code goes here ###\n}\n ", "\n    # Your solution goes here\n\
    \    if (x % 2 == 0) {\n        return(x)\n    } else if (y % 2 == 0) {\n    \
    \    return(y)\n    } else {\n        return(-1)\n    }\n}\n ", "\n  stopifnot(x\
    \ >= 0, y >= 0)\n  if(x > y) return(-1)\n  if(x %% 2 == 0) return(x)\n  if(y %%\
    \ 2 == 0) return(y)\n  return(-1)\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n",
  "\n    if (x > y) {\n        max(x, y)\n    } else {\n        if (x %% 2 == 0) {\n\
    \            return(x)\n        } else {\n            return(x+1)\n        }\n\
    \    }\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n ", "\n    # Insert your code\
    \ here.\n}\n", "\n  if (x > y) {\n    return (-1)\n  }\n  if (x %% 2 == 0) {\n\
    \    z <- x\n  } else {\n    z <- x + 1\n  }\n  if (z > y) {\n    return (-1)\n\
    \  }\n  return (z)\n}\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n  # Your\
    \ code here\n}", "\n  result <- -1\n  for (num in seq(x, y)) {\n    if (num %%\
    \ 2 == 0) {\n      result <- num\n    }\n  }\n  return(result)\n}", "\n    # Your\
    \ code here\n}\n ", "\n    min(seq(x, y), seq(y, x)[y %% 2 == 0])\n}\n", "\n \
    \ ret_val <- -1\n  for (i in x:y) {\n    if (i %% 2 == 0 && i > ret_val) {\n \
    \     ret_val <- i\n    }\n  }\n  return(ret_val)\n}\n", "\n  # Check which is\
    \ the biggest and smallest number\n  smallest <- min(x, y)\n  biggest <- max(x,\
    \ y)\n  # Check if the second number is bigger than first and also if it is even\n\
    \  # and whether the number is divisible by 2\n  if (biggest > smallest && biggest\
    \ %% 2 == 0) {\n    return(biggest)\n  }\n  # Check if the second number is bigger\
    \ than first but the number is odd\n  # so we subtract 1 from it and check if\
    \ it is divisible by 2\n  if (biggest > smallest && biggest %% 2 != 0) {\n   \
    \ new_biggest <- biggest - 1\n    if (new_biggest %% 2 == 0) {\n      return(new_biggest)\n\
    \    }\n  }\n  # If no even number is found in the range, then return -1\n  return(-1)\n\
    }\nchoose_num(12, 15)\nchoose_num(13, 12)\n", "\n    if (x > y) {\n        return(-1)\n\
    \    } else {\n        largest <- -1\n        while (x <= y) {\n            if\
    \ (x %% 2 == 0) {\n                largest <- x\n            }\n            x\
    \ <- x + 1\n        }\n        return(largest)\n    }\n}\n", "\n  \n  ## <Your\
    \ code here>\n  \n}\n ", "\n    if(y < x) return(-1)\n    if(y %% 2 == 0) return(y)\n\
    \    if(x %% 2 == 0) return(x)\n    choose_num(x + 1, y - 1)\n}\nchoose_num(12,\
    \ 15)\nchoose_num(13, 12)\n", "\n  # If x is even, then we set x_even to x, otherwise\
    \ to x+1.\n  x_even <- x + (x %% 2)\n  # If y is even, then we set y_even to y,\
    \ otherwise to y-1.\n  y_even <- y - (y %% 2)\n  # If x_even is less than or equal\
    \ to y_even, then we return y_even.\n  # Otherwise, return -1.\n  if (x_even <=\
    \ y_even) {\n    return(y_even)\n  } else {\n    return(-1)\n  }\n}\n", "\n  if(x\
    \ > y) {\n    if(!is.even(x)) {\n      return(-1)\n    } else {\n      return(x)\n\
    \    }\n  } else {\n    while(x <= y) {\n      if(is.even(x)) {\n        return(x)\n\
    \      }\n      x <- x + 1\n    }\n    return(-1)\n  }\n}\n", "\n  if (x < y)\
    \ {\n    if (x %% 2 == 0) {\n      return(x)\n    } else {\n      return(choose_num(x\
    \ + 1, y))\n    }\n  } else if (x > y) {\n    if (y %% 2 == 0) {\n      return(y)\n\
    \    } else {\n      return(choose_num(x, y - 1))\n    }\n  } else {\n    if (x\
    \ %% 2 == 0) {\n      return(x)\n    } else {\n      return(-1)\n    }\n  }\n\
    }\nchoose_num(12, 15)\nchoose_num(13, 12)\n \n", "\n  t <- min(x, y)\n  while\
    \ (t <= max(x, y)) {\n    if (t %% 2 == 0) {\n      return(t)\n    }\n    t <-\
    \ t + 1\n  }\n  return(-1)\n}\n", "\n  for (i in x:y) {\n    if (i %% 2 == 0)\
    \ {\n      return(i)\n    }\n  }\n  return(-1)\n}\n\nchoose_num(12, 15)\nchoose_num(13,\
    \ 12)\n", "\n  if(x > y){\n    return(-1)\n  }\n  else{\n    while(x % 2 != 0){\n\
    \      x <- x + 1\n    }\n    return(x)\n  }\n}\n", "\n  min <- min(x, y)\n  max\
    \ <- max(x, y)\n  result <- 0\n  for (i in min:max) {\n    if (i %% 2 == 0) {\n\
    \      result <- i\n    }\n  }\n  if (result == 0) {\n    return(-1)\n  } else\
    \ {\n    return(result)\n  }\n}\n", "\n\t# TODO: write your code here\n\ta <-\
    \ seq(x,y)\n\tfor (i in a) {\n\t\tif (i %% 2 == 0) {\n\t\t\tz <- i\n\t\t}\n\t\
    }\n\tif (exists(\"z\")) {\n\t\treturn(z)\n\t} else {\n\t\treturn(-1)\n\t}\n}\n\
    choose_num(12, 15)\nchoose_num(13, 12)\n", "\n  # TODO: your code here\n}\n",
  "\n    while (x <= y) {\n        if (x %% 2 == 0) {\n            return(x)\n   \
    \     }\n        x <- x + 1\n    }\n    return(-1)\n}\ntest_that(\"test_choose_num\"\
    , {\n    expect_equal(choose_num(10, 20), 10)\n    expect_equal(choose_num(20,\
    \ 15), 20)\n    expect_equal(choose_num(15, 20), 16)\n    expect_equal(choose_num(11,\
    \ 11), -1)\n    expect_equal(choose_num(17, 11), -1)\n})\n ", "\n    x:y\n   \
    \ c_num = x\n    while (c_num <= y){\n        if (c_num %% 2 == 0){\n        \
    \    return(c_num)\n        }\n        c_num = c_num + 1\n    }\n    return(-1)\n\
    }\n", "\n    # your code here\n    evens <- seq(x, y, by = 2)\n    if(any(evens)){\n\
    \        return(evens[length(evens)])\n    }\n    return(-1)\n}\n", "\n  max_num\
    \ <- -1\n  for (i in x:y) {\n    if (i %% 2 == 0) {\n      if (i > max_num) {\n\
    \        max_num <- i\n      }\n    }\n  }\n  return(max_num)\n}\n\nchoose_num(5,\
    \ 11)\n"]
stop_tokens:
- "\n#"
- "\n```"

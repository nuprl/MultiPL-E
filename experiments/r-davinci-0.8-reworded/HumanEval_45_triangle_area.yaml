name: HumanEval_45_triangle_area
language: r
prompt: "# Given length of a side and high return area for a triangle.\n# >>> triangle_area(5,\
  \ 3)\n# 7.5\ntriangle_area <- function(a, h) {"
tests: "test_humaneval <- function() {\ncandidate <- triangle_area\n    if(!identical(candidate(5,\
  \ 3), 7.5)){quit('no', 1)}\n    if(!identical(candidate(2, 2), 2.0)){quit('no',\
  \ 1)}\n    if(!identical(candidate(10, 8), 40.0)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  a * h / 2\n}\n", "\n    return(a * h / 2)\n}\ntriangle_area(5,\
    \ 3)\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n", "\n    0.5 * a * h\n}\n\n\
    triangle_area(5, 3)\n", "\n    0.5 * a * h\n}\ntriangle_area(5, 3)", "\n\t\n\t\
    area <- (a * h) / 2\n\treturn(area)\n}\n", "\n  a * h / 2\n}\n", "\n\ta * h /\
    \ 2\n}\n", "\n  (a * h) / 2\n}\n", "\n    area <- a * h / 2\n    return(area)\n\
    }", "\n  a * h / 2\n}\n", "\n  a * h / 2\n}\n", "\n    return(a * h / 2)\n}\n\
    triangle_area(5, 3)\n", "\n    a * h / 2\n}\n", "\n    return(a * h / 2)\n}\n\n\
    triangle_area(5, 3)\n", "\n    return(a * h / 2)\n}\n", "\n    a * h / 2\n}\n",
  "\n    a * h / 2\n}\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n", "\n  a * h /\
    \ 2\n}\n", "\n  a * h / 2\n}", "\n  1/2 * a * h\n}", "\n    a * h / 2\n}\n", "\n\t\
    return(a * h / 2)\n}\n", "\n    return(a * h / 2)\n}", "\n    a * h / 2\n}\n",
  "\n    a * h / 2\n}\n\nprint(triangle_area(10, 5))\nprint(triangle_area(5, 3))\n",
  "\n    a * h / 2\n}\n", "\n  return (0.5 * a * h)\n}\n", "\n    a * h / 2\n}\n",
  "\n  (a * h) / 2\n}\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n", "\n  return(0.5\
    \ * a * h)\n}\n", "\n    a * h / 2\n}\n", "\n  if (a <= 0 || h <= 0) stop(\"Length\
    \ of a side and high have to be greater than 0.\")\n  return (a * h / 2)\n}\n",
  "\n    a * h / 2\n}\n", "\n    a * h / 2\n}\n", "\n    return(a * h / 2)\n}\n",
  "\n  a * h / 2\n}", "\n  res <- a * h / 2\n  return(res)\n}\n", "\n  0.5 * a * h\n\
    }\ntriangle_area(5, 3)\n", "\n  return(a * h * 0.5)\n}\ntriangle_area(5, 3)\n ",
  "\n  (a * h) / 2\n}\n", "\n  (a * h) / 2\n}\n", "\n  a * h / 2\n}\n", "\n    return(a\
    \ * h / 2)\n}\n", "\n  a * h / 2\n}\n", "\n  a * h / 2\n}\n", "\n  a * h / 2\n\
    }\n", "\n  area <- (a * h) / 2\n  return(area)\n}\n", "\n  return (0.5 * a * h)\n\
    }\n", "\n\ta * h / 2\n}", "\n  a * h / 2\n}\n", "\n  (a * h) / 2\n}\n", "\n  \
    \  a * h / 2\n}\n", "\n  return(a * h / 2)\n}\ntriangle_area(5, 3)\n", "\n  return(a\
    \ * h / 2)\n}\ntriangle_area(5, 3)\n", "\n  return(a * h / 2)\n}\n ", "\n    if\
    \ (nargs() == 1) {\n        # Calculator expects single argument as vector.\n\
    \        h <- a[2]\n        a <- a[1]\n    }\n    if (missing(a) || missing(h))\
    \ {\n        stop(\"Missing required parameters.\", call. = FALSE)\n    }\n  \
    \  a * h / 2\n}\n", "\n  a * h / 2\n}\n", "\n  return (a * h / 2)\n}\ntriangle_area(5,\
    \ 3)\n", "\n  return(0.5 * a * h)\n}\ntriangle_area(5, 3)\n ", "\n    a * h /\
    \ 2\n}\ntriangle_area(5, 3)\n", "\n  a * h / 2\n}\n", "\n  return(a * h / 2)\n\
    }\n", "\n    a * h / 2\n}\n", "\n  return (a * h / 2)\n}", "\n\ta * h / 2\n}\n",
  "\n    a * h / 2\n}\ntriangle_area(5, 3)\n", "\n  a * h / 2\n}\n", "\n  return(a\
    \ * h / 2)\n}\n", "\n  a * h / 2\n}\n", "\n  0.5 * a * h\n}\n", "\n  a * h / 2\n\
    }\n", "\n  a * h / 2\n}\n", "\n  area <- 0.5 * a * h\n  return(area)\n}\n", "\n\
    \    # a is base, h is high\n    (a * h) / 2\n}\n", "\n  a * h / 2\n}\n", "\n\
    \  return(0.5 * a * h)\n}\n", "\n    return((a * h) / 2)\n}\ntriangle_area(5,\
    \ 3)\n", "\n    return(0.5 * a * h)\n}\n", "\n    (a * h) / 2\n}\n", "\n  a *\
    \ h / 2\n}\n", "\n    a * h / 2\n}\n", "\n\ta * h / 2\n}\ntriangle_area(5, 3)\n",
  "\n  return (a * h / 2)\n}\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n", "\n  return(0.5\
    \ * a * h)\n}\ntriangle_area(5, 3)\n", "\n  a * h / 2\n}\n", "\n  a * h / 2\n}",
  "\n    (a * h) / 2\n}\n", "\n    a * h / 2\n}\n", "\n  a * h / 2\n}", "\n    (a\
    \ * h) / 2\n}\ntriangle_area(5, 3)\n", "\n  return(a * h / 2)\n}\n", "\n    a\
    \ * h / 2\n}\n", "\n  a * h / 2\n}\n", "\n  (a * h) / 2\n}\n", "\n  (a * h) /\
    \ 2\n}\n", "\n  area <- 0.5 * a * h\n  return(area)\n}\n", "\n  a * h / 2\n}\n\
    \ntriangle_area(5, 3)", "\n  return(a * h / 2)\n}\n", "\n  a * h / 2\n}\n", "\n\
    \    return(a * h / 2)\n}\n", "\n    return (a * h / 2)\n}\n ", "\n  a * h / 2\n\
    }\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n", "\n    return(0.5 * a * h)\n\
    }\ntriangle_area(5, 3)\n", "\n  if (length(a) != length(h))\n    stop(\"Two parameters\
    \ should have the same length!\")\n  output <- numeric(length(a))\n  for (i in\
    \ seq_along(a)) {\n    output[i] <- (a[i] * h[i]) / 2\n  }\n  return(output)\n\
    }\ntriangle_area(5, 3)\n", "\n  ## a - length of side\n  ## h - height\n  a *\
    \ h / 2\n}", "\n  return(1/2 * a * h)\n}\n", "\n    return(a * h / 2)\n}\ntriangle_area(5,\
    \ 3)\n", "\n    area <- a * h / 2\n    return(area)\n}\n", "\n    a * h / 2\n\
    }\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n", "\n  a * h / 2\n}", "\n    a\
    \ * h / 2\n}\n", "\n  a * h / 2\n}", "\n  a * h / 2\n}\n", "\n  return (a * h\
    \ / 2)\n}\n", "\n\ta * h / 2\n}\n", "\n  .5 * a * h\n}\n", "\n  (a * h) / 2\n}",
  "\n  return (a * h / 2)\n}\n", "\n  0.5 * a * h\n}\ntriangle_area(5, 3)\n ", "\n\
    \    round(0.5 * a * h, 1)\n}\n", "\n  a * h / 2\n}\n", "\n  return(a * h / 2)\n\
    }\ntriangle_area(5, 3)\n", "\n  return(0.5 * a * h)\n}\n", "\n    0.5 * a * h\n\
    }\n", "\n    a * h / 2\n}\n", "\n    a * h / 2\n}\n", "\n  a * h / 2\n}\n", "\n\
    \  return(a * h / 2)\n}\ntriangle_area(5, 3)\n", "\n  # a - side length\n  # h\
    \ - height\n  # area of triangle\n\n  #2 * a * h / 2\n  a * h\n}\ntriangle_area(5,\
    \ 3)\n", "\n  area <- a * h / 2\n  return(area)\n}\n", "\n    return (a * h /\
    \ 2)\n}\ntriangle_area(5, 3)\n", "\n    a * h / 2\n}\ntriangle_area(5, 3)\n",
  "\n  return (a * h / 2)\n}\n\nprint(\"Hello World!\")\nprint(triangle_area(5, 3))\n\
    print(1 + 2 * 3)\nprint(c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))\n", "\n\
    \    area <- a * h / 2\n    return(area)\n}\n", "\n  a * h / 2\n}", "\n  a * h\
    \ / 2\n}", "\n  a * h / 2\n}\n", "\n    0.5 * a * h\n}\n", "\n\t# Function body\n\
    \treturn(a * h / 2)\n}\n\ntriangle_area(5, 3)\n", "\n    a * h / 2\n}\ntriangle_area(5,\
    \ 3)\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n", "\n    return(a * h / 2)\n\
    }\n", "\n    0.5 * a * h\n}\ntriangle_area(5, 3)\n", "\n    a * h / 2\n}\ntriangle_area(5,\
    \ 3)\n", "\n    return(a * h / 2)\n}\n", "\n    return(0.5 * a * h)\n}\n", "\n\
    \    a * h / 2\n}\ntriangle_area(5, 3)\n", "\n    0.5 * a * h\n}\n\ntriangle_area(5,\
    \ 3)", "\n    return(1/2 * a * h)\n}\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n",
  "\n\ta * h / 2\n}\n", "\n  return(a * h / 2)\n}\n", "\n  a * h / 2\n}\n", "\n  0.5\
    \ * a * h\n}\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n ", "\n    return(a *\
    \ h / 2)\n}\ntriangle_area(5, 3)\n", "\n    a * h / 2\n}\n", "\n    a * h / 2\n\
    }", "\n    area <- a * h / 2\n    return(area)\n}\n", "\n  a * h / 2\n}", "\n\
    \    a * h / 2\n}\n", "\n    a * h / 2\n}\n", "\n    return(a * h / 2)\n}\ntriangle_area(5,\
    \ 3)\n", "\n    return(0.5 * a * h)\n}\nprint(triangle_area(5, 3))\n", "\n  return(0.5\
    \ * a * h)\n}\n", "\n  a * h / 2\n}\n", "\n    a * h / 2\n}\n", "\n    return\
    \ (a * h / 2)\n}\nprint(triangle_area(5, 3))\n", "\n  a * h / 2\n}\n", "\n  a\
    \ * h / 2\n}\ntriangle_area(5, 3)", "\n\t0.5 * a * h\n}\ntriangle_area(5, 3)",
  "\n  0.5 * a * h\n}\n", "\n  a * h / 2\n}\n", "\n    return(a * h / 2)\n}\n", "\n\
    \    a * h / 2\n}\n", "\n    (a * h) / 2\n}\ntriangle_area(5, 3)", "\n  return(a\
    \ * h / 2)\n}\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n", "\n  a * h / 2\n\
    }\n", "\n    a * h / 2\n}\n", "\n  a * h / 2\n}\n", "\n    a * h / 2\n}\ntriangle_area(5,\
    \ 3)\n", "\n  a * h / 2\n}\n", "\n    area <- a * h / 2\n    return(area)\n}\n",
  "\n    a * h / 2\n}\n", "\n  return(a * h / 2)\n}\n", "\n  a * h / 2\n}", "\n  return(a\
    \ * h / 2)\n}\ntriangle_area(5, 3)\n", "\n  a * h / 2\n}\ntriangle_area(5, 3)\n",
  "\n  return (a * h / 2)\n}\n", "\n  # fill in here\n}", "\n    return(a * h / 2)\n\
    }\n\ntriangle_area(5, 3)\n", "\n  return (a * h) / 2\n}\n ", "\n    a * h / 2\n\
    }\n"]
stop_tokens:
- "\n#"
- "\n```"

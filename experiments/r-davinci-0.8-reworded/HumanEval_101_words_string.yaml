name: HumanEval_101_words_string
language: r
prompt: "# You will be given a string of words separated by commas or spaces. Your\
  \ task is\n# to split the string into words and return a vector of the words.\n\
  # For example:\n# >>> words_string('Hi, my name is John')\n# c('Hi', 'my', 'name',\
  \ 'is', 'John')\n# >>> words_string('One, two, three, four, five, six')\n# c('One',\
  \ 'two', 'three', 'four', 'five', 'six')\nwords_string <- function(s) {"
tests: "test_humaneval <- function() {\ncandidate <- words_string\n    if(!identical(candidate('Hi,\
  \ my name is John'), c('Hi', 'my', 'name', 'is', 'John'))){quit('no', 1)}\n    if(!identical(candidate('One,\
  \ two, three, four, five, six'), c('One', 'two', 'three', 'four', 'five', 'six'))){quit('no',\
  \ 1)}\n    if(!identical(candidate('Hi, my name'), c('Hi', 'my', 'name'))){quit('no',\
  \ 1)}\n    if(!identical(candidate('One,, two, three, four, five, six,'), c('One',\
  \ 'two', 'three', 'four', 'five', 'six'))){quit('no', 1)}\n    if(!identical(candidate(''),\
  \ c())){quit('no', 1)}\n    if(!identical(candidate('ahmed     , gamal'), c('ahmed',\
  \ 'gamal'))){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n    s = gsub(\" \", \",\", s)\n    return(strsplit(s, \",\")[[1]])\n\
    }\n", "\n  return(unlist(strsplit(s, \"[ ,]+\")))\n}\n", "\n    s <- gsub(\"[\
    \ ]+\", \" \", s)\n    s <- gsub(\"[,]+\", \" \", s)\n    unlist(strsplit(s, \"\
    \ \"))\n}", "\n  s <- as.character(s)\n  return(strsplit(s, \"[[:space:],]+\"\
    )[[1]])\n}\n\n", "\n    strsplit(s, split = \"[, ]\")[[1]]\n}\n", "\n    str_split(s,\
    \ '\\\\s+')[[1]]\n}\nwords_string('Hi, my name is John')\n", "\n  # Replace the\
    \ empty quotes with your code.\n  \"\"\n}", "\n  strsplit(s, split = \"[[:space:],]+\"\
    )[[1]]\n}\n", "\n  s <- gsub(\"[, ]+\", \" \", s)\n  return(strsplit(s, \" \"\
    )[[1]])\n}\n", "\n  unlist(strsplit(s, \" |,\"))\n}\n", "\n  # your code here\n\
    }\n", "\n  # YOUR CODE HERE\n}\n", "\n\treturn(strsplit(s, \" |,\")[[1]])\n}\n",
  "\n  return(unlist(strsplit(s, ' |,')))\n}\n", "\n  # TODO: Complete the function\n\
    \  words <- unlist(strsplit(s, \"[, ]\"))\n  return(words)\n}", "\n    split <-\
    \ strsplit(s, ' ')\n    unlist(split)\n}\n", "\n    words <- strsplit(s, split\
    \ = '[ ,]+')\n    return(words[[1]])\n}\n", "\n  strsplit(s, split=',| ')[[1]]\n\
    }\n", "\n  strsplit(s, '[, ]')[[1]]\n}\n", "\n  # change the string into a vector\
    \ of strings\n  v <- unlist(strsplit(s, split = ' ', fixed = TRUE))\n  v <- unlist(strsplit(s,\
    \ split = ',', fixed = TRUE))\n  # remove any '' elements\n  v <- v[v != '']\n\
    \  # return the vector\n  return(v)\n}"]
stop_tokens:
- "\n#"
- "\n```"

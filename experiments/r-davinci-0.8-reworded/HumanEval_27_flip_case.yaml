name: HumanEval_27_flip_case
language: r
prompt: "# For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n# >>> flip_case('Hello')\n# 'hELLO'\nflip_case <- function(string)\
  \ {"
tests: "test_humaneval <- function() {\ncandidate <- flip_case\n    if(!identical(candidate(''),\
  \ '')){quit('no', 1)}\n    if(!identical(candidate('Hello!'), 'hELLO!')){quit('no',\
  \ 1)}\n    if(!identical(candidate('These violent delights have violent ends'),\
  \ 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  #TODO: Flip case in string\n  return(string)\n}\n", "\n  string\
    \ <- ifelse(string == tolower(string), toupper(string), tolower(string))\n  return(string)\n\
    }", "\n  flipped <- str_replace_all(string, \"[a-z]\", function(x) str_to_upper(x))\n\
    \  flipped <- str_replace_all(flipped, \"[A-Z]\", function(x) str_to_lower(x))\n\
    \  return(flipped)\n}\n\nflip_case(\"The Quick Brown Fox\")\n", "\n  # type your\
    \ code here\n  string <- strsplit(string,split=\"\")[[1]]\n  string <- sapply(string,function(x)\
    \ {\n    if (is.na(grepl(\"[[:lower:]]\",x))) {\n      return(x)\n    } else {\n\
    \      return(toupper(x))\n    }\n  })\n  paste(string,collapse=\"\")\n}\n\nflip_case('Hello')\n",
  "\n  string_chars <- unlist(strsplit(string, \"\"))\n  to_upper <- which(string_chars\
    \ %in% letters[lower.case])\n  to_lower <- which(string_chars %in% letters[upper.case])\n\
    \  string_chars[to_upper] <- toupper(string_chars[to_upper])\n  string_chars[to_lower]\
    \ <- tolower(string_chars[to_lower])\n  return(paste(string_chars, collapse =\
    \ \"\"))\n}\n", "\n    string <- gsub(\"[a-z]\", \"[A-Z]\", string)\n    string\
    \ <- gsub(\"[A-Z]\", \"[a-z]\", string)\n    return(string)\n}\n", "\n    return(gsub('[[:upper:]]',\
    \ '{{}}', tolower(string), fixed = TRUE))\n}\n", "\n  s <- strsplit(string, \"\
    \")[[1]]\n  for (i in 1:length(s)) {\n    if (s[i] == toupper(s[i])) {\n     \
    \ s[i] <- tolower(s[i])\n    } else {\n      s[i] <- toupper(s[i])\n    }\n  }\n\
    \  return(paste(s, collapse = \"\"))\n}\n\nflip_case(\"Hello\")\nflip_case(\"\
    hELLO\")\n", "\n  string <- strsplit(string, split = \"\")[[1]]\n  res <- []\n\
    \  for (letter in string) {\n    if (letter %in% LETTERS) {\n      res <- c(res,\
    \ tolower(letter))\n    } else {\n      res <- c(res, toupper(letter))\n    }\n\
    \  }\n  res <- paste(res, collapse = \"\")\n  return(res)\n}\nflip_case('Hello')\n",
  "\n  \n  # Init the result string\n  result <- \"\"\n  \n  # Loop the string\n \
    \ for (i in 1:nchar(string)) {\n    \n    # Get the current character\n    char\
    \ <- substr(string, i, i)\n    \n    # If the character is uppercase, flip it\
    \ to lowercase\n    if (char %in% letters) {\n      char <- tolower(char)\n  \
    \  }\n    \n    # If the character is lowercase, flip it to uppercase\n    else\
    \ if (char %in% LETTERS) {\n      char <- toupper(char)\n    }\n    \n    # Append\
    \ the character to the result string\n    result <- paste(result, char, sep =\
    \ \"\")\n  }\n  \n  # Return the result string\n  return(result)\n}\n", "\n  \
    \  toupper(string) <- strtrim(tolower(string))\n    return(string)\n}\n\nstring\
    \ <- \"Hello\"\nflip_case(string)", "\n  sapply(string, function(x) {\n    ifelse(x\
    \ == toupper(x), tolower(x), toupper(x))\n  })\n}\nflip_case('Hello')\n", "\n\
    \    # write your code here\n    string <- strsplit(string, split = \"\")[[1]]\n\
    \    # print(string)\n    string <- toupper(string)\n    string <- tolower(string)\n\
    \    string <- paste(string, collapse = \"\")\n    return(string)\n}\nflip_case(\"\
    Hello\")\n", "\n  \n  ### Replace with your code ###\n  \n}", "\n  gsub(\"[a-z]\"\
    , function(x) {\n    if (x == toupper(x)) {\n      return(tolower(x))\n    } else\
    \ {\n      return(toupper(x))\n    }\n  }, string)\n}\n\nflip_case(\"Hello\")\n",
  "\n    flip_case <- charToRaw(string)\n    vector_flip_case <- xcharToRaw(string)\n\
    \    vector_flip_case\n    for (i in 1:length(flip_case)) {\n        if (flip_case[i]\
    \ >= 65 && flip_case[i] <= 90) {\n            vector_flip_case[i] <- flip_case[i]\
    \ + 32\n        } else if (flip_case[i] >= 97 && flip_case[i] <= 122) {\n    \
    \        vector_flip_case[i] <- flip_case[i] - 32\n        }\n    }\n    rawToChar(vector_flip_case)\n\
    }\nflip_case('Hello')\n", "\n  str_to_upper(string)\n}\n", "\n  string <- strsplit(string,\
    \ \"\")[[1]]\n  for (i in 1:length(string)) {\n    if (string[i] %in% letters)\
    \ {\n      if (string[i] == toupper(string[i])) {\n        string[i] <- tolower(string[i])\n\
    \      } else {\n        string[i] <- toupper(string[i])\n      }\n    }\n  }\n\
    \  out <- paste(string, collapse = \"\")\n  return(out)\n}\n", "\n  pattern <-\
    \ \"[a-z]\"\n  string <- stringr::str_replace_all(string, pattern, toupper(string))\n\
    \  pattern <- \"[A-Z]\"\n  string <- stringr::str_replace_all(string, pattern,\
    \ tolower(string))\n  return(string)\n}\n\nflip_case('Hello')\n", "\n  swapper\
    \ <- function(x) {\n    if (x >= 'a' && x <= 'z') {\n      return(toupper(x))\n\
    \    } else if (x >= 'A' && x <= 'Z') {\n      return(tolower(x))\n    } else\
    \ {\n      return(x)\n    }\n  }\n  return(sapply(string, swapper))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

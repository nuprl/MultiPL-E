name: HumanEval_71_triangle_area
language: r
prompt: "# Given the lengths of the three sides of a triangle. Return the area of\n\
  # the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n# Otherwise return -1\n# Three sides make a valid triangle when the sum of any\
  \ two sides is greater \n# than the third side.\n# Example:\n# >>> triangle_area(3,\
  \ 4, 5)\n# 6.0\n# >>> triangle_area(1, 2, 10)\n# -1\ntriangle_area <- function(a,\
  \ b, c) {"
tests: "test_humaneval <- function() {\ncandidate <- triangle_area\n    if(!identical(candidate(3,\
  \ 4, 5), 6.0)){quit('no', 1)}\n    if(!identical(candidate(1, 2, 10), -1)){quit('no',\
  \ 1)}\n    if(!identical(candidate(4, 8, 5), 8.18)){quit('no', 1)}\n    if(!identical(candidate(2,\
  \ 2, 2), 1.73)){quit('no', 1)}\n    if(!identical(candidate(1, 2, 3), -1)){quit('no',\
  \ 1)}\n    if(!identical(candidate(10, 5, 7), 16.25)){quit('no', 1)}\n    if(!identical(candidate(2,\
  \ 6, 3), -1)){quit('no', 1)}\n    if(!identical(candidate(1, 1, 1), 0.43)){quit('no',\
  \ 1)}\n    if(!identical(candidate(2, 2, 10), -1)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  if(a + b > c && a + c > b && b + c > a) {\n    return(sqrt((a +\
    \ b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4)\n  } else {\n    return(-1)\n\
    \  }\n}\ntriangle_area(3, 4, 5)\ntriangle_area(1, 2, 10)\n", "\n  if (a + b <=\
    \ c || a + c <= b || b + c <= a) {\n    return(-1)\n  } else {\n    return(round(sqrt((a\
    \ + b + c) * (-a + b + c) * (a - b + c) * (a + b - c)) / 4, 2))\n  }\n}\n", "\n\
    \  if (a + b > c & a + c > b & b + c > a) {\n    area <- sqrt((a + b + c) * (a\
    \ + b - c) * (a - b + c) * (-a + b + c)) / 4\n    return(round(area, 2))\n  }\
    \ else {\n    return(-1)\n  }\n}\ntriangle_area(3, 4, 5)\ntriangle_area(1, 2,\
    \ 10)\n", "\n  a + b > c & a + c > b & b + c > a\n  s <- (a + b + c) / 2\n  area\
    \ <- sqrt(s * (s - a) * (s - b) * (s - c))\n  return(round(area, 2))\n}\n\ntriangle_area(3,\
    \ 4, 5)\n\ntriangle_area(1, 2, 10)\n", "\n  if (a + b > c & a + c > b & b + c\
    \ > a) {\n    return (1/2 * a * b)\n  } else {\n    return (-1)\n  }\n}\n", "\n\
    \  # replace with your solution\n}\n", "\n    if ((a + b > c) & (a + c > b) &\
    \ (b + c > a)){\n        return(round(sqrt((a + b + c) * (-a + b + c) * (a - b\
    \ + c) * (a + b - c)) / 4, digits = 2))\n    } else {\n        return(-1)\n  \
    \  }\n}\n\n", "\n    if (a + b > c && a + c > b && b + c > a) {\n        return(round(sqrt((a\
    \ + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4, 2))\n    } else {\n\
    \        return(-1)\n    }\n}\ntriangle_area(3, 4, 5)\ntriangle_area(1, 2, 10)\n",
  "\n  # write your solution here\n  return(-1)\n}", "\n  s <- (a + b + c) / 2\n \
    \ if (s - a >= b & s - a >= c & s - b >= a & s - b >= c & s - c >= a & s - c >=\
    \ b) {\n    return(sqrt(s * (s - a) * (s - b) * (s - c)))\n  } else {\n    return(-1)\n\
    \  }\n}\n", "\n  # write your code here\n}", "\n  if(a + b > c & a + c > b & b\
    \ + c > a) {\n    sqrt(\n      (a + b + c)*\n      (a + b - c)*\n      (a - b\
    \ + c)*\n      (-a + b + c)\n    )/4\n  } else {\n    -1\n  }\n}\n", "\n  if(a\
    \ + b > c & a + c > b & b + c > a) {\n    return(sqrt((a + b + c) * (-a + b +\
    \ c) * (a - b + c) * (a + b - c)) / 4)\n  } else {\n    return(-1)\n  }\n}\n",
  "\n  if ((a+b>c) & (a+c>b) & (b+c>a)) {\n    area <- sqrt((a+b+c)*(a+b-c)*(a+c-b)*(b+c-a))/4\n\
    \    return(round(area, 2))\n  } else {\n    return(-1)\n  }\n}\n", "\n    if\
    \ ((a+b)>c & (a+c)>b & (b+c)>a) {\n        area<-sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4\n\
    \        #return(round(area,2))\n        return(area)\n    } else {\n        return(-1)\n\
    \    }\n}\n", "\n\t#if any of the sides is negative or\n\t#the sum of the two\
    \ smallest sides is less than the third side\n\tif (a < 0 | b < 0 | c < 0 | a\
    \ + b < c | a + c < b | b + c < a) {\n\t\t-1\n\t}\n\telse {\n\t\t# compute the\
    \ area of the triangle\n\t\ts <- (a + b + c) / 2\n\t\tsqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n\t}\n}\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1,\
    \ 2, 10))\n", "\n  if (a + b > c & a + c > b & b + c > a) {\n    s <- a + b +\
    \ c\n    area <- sqrt(s * (s - a) * (s - b) * (s - c))\n    return(round(area,\
    \ 2))\n  } else {\n    return(-1)\n  }\n}", "\n  if(!(a + b > c & a + c > b &\
    \ b + c > a)){\n    return(-1)\n  }\n  s <- (a + b + c) / 2\n  sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n}\ntriangle_area(1, 2, 10)\ntriangle_area(3, 4, 5)\n",
  "\n  if (a + b > c && a + c > b && b + c > a) {\n    p <- (a + b + c) / 2\n    return(sqrt(p\
    \ * (p - a) * (p - b) * (p - c)))\n  } else {\n    return(-1)\n  }\n}\ntriangle_area(3,\
    \ 4, 5)\ntriangle_area(1, 2, 10)\n", "\n  sides <- c(a, b, c)\n  if (any(sides\
    \ <= 0)) {\n    return(-1)\n  } else if ((sides[1] + sides[2]) < sides[3]) {\n\
    \    return(-1)\n  } else if ((sides[1] + sides[3]) < sides[2]) {\n    return(-1)\n\
    \  } else if ((sides[2] + sides[3]) < sides[1]) {\n    return(-1)\n  } else {\n\
    \    p <- (a + b + c) / 2\n    area <- sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    return(round(area, 2))\n  }\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

name: HumanEval_92_any_int
language: r
prompt: "# Create a function that takes 3 numbers.\n# Returns true if one of the numbers\
  \ is equal to the sum of the other two, and all numbers are integers.\n# Returns\
  \ false in any other cases.\n# Examples\n# >>> any_int(5, 2, 7)\n# TRUE\n# >>> any_int(3,\
  \ 2, 2)\n# FALSE\n# >>> any_int(3, -2, 1)\n# TRUE\n# >>> any_int(3.6, -2.2, 2)\n\
  # FALSE\nany_int <- function(x, y, z) {"
tests: "test_humaneval <- function() {\ncandidate <- any_int\n    if(!identical(candidate(2,\
  \ 3, 1), TRUE)){quit('no', 1)}\n    if(!identical(candidate(2.5, 2, 3), FALSE)){quit('no',\
  \ 1)}\n    if(!identical(candidate(1.5, 5, 3.5), FALSE)){quit('no', 1)}\n    if(!identical(candidate(2,\
  \ 6, 2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(4, 2, 2), TRUE)){quit('no',\
  \ 1)}\n    if(!identical(candidate(2.2, 2.2, 2.2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(-4,\
  \ 6, 2), TRUE)){quit('no', 1)}\n    if(!identical(candidate(2, 1, 1), TRUE)){quit('no',\
  \ 1)}\n    if(!identical(candidate(3, 4, 7), TRUE)){quit('no', 1)}\n    if(!identical(candidate(3.0,\
  \ 4, 7), FALSE)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n    ## Function code goes here\n}\n", "\n    # return (all(is.integer(x,\
    \ y, z)) && x + y == z) || (all(is.integer(x, y, z)) && x + z == y) || (all(is.integer(x,\
    \ y, z)) && y + z == x)\n    # return (is.integer(x) && is.integer(y) && is.integer(z))\
    \ && (x + y == z || x + z == y || y + z == x)\n    # all(is.integer(x, y, z))\
    \ && \n    return x + y == z || x + z == y || y + z == x\n}", "\n  if (!is.integer(x)\
    \ | !is.integer(y) | !is.integer(z)) {\n    return(FALSE)\n  }\n  if (x == (y\
    \ + z) | y == (x + z) | z == (x + y)) {\n    return(TRUE)\n  }\n  return(FALSE)\n\
    }\n\ntest_that(\"any_int returns TRUE for integer inputs with x = sum of others\"\
    , {\n  expect_true(any_int(5, 2, 7))\n})\n\ntest_that(\"any_int returns TRUE for\
    \ integer inputs with y = sum of others\", {\n  expect_true(any_int(3, 2, 2))\n\
    })\n\ntest_that(\"any_int returns TRUE for integer inputs with z = sum of others\"\
    , {\n  expect_true(any_int(3, -2, 1))\n})\n\ntest_that(\"any_int returns FALSE\
    \ for integer inputs with no x + y == z\", {\n  expect_false(any_int(3, 2, 1))\n\
    })\n\ntest_that(\"any_int returns FALSE for integer inputs with x > sum of others\"\
    , {\n  expect_false(any_int(3, 2, -1))\n})\n\ntest_that(\"any_int returns FALSE\
    \ for integer inputs with y > sum of others\", {\n  expect_false(any_int(2, 3,\
    \ -1))\n})\n\ntest_that(\"any_int returns FALSE for integer inputs with z > sum\
    \ of others\", {\n  expect_false(any_int(2, -1, 3))\n})\n\ntest_that(\"any_int\
    \ returns FALSE for non-integer inputs\", {\n  expect_false(any_int(2.2, 2, 1))\n\
    \  expect_false(any_int(2, 2.2, 1))\n  expect_false(any_int(2, 2, 1.2))\n})\n",
  "\n    if(all(is.integer(x), is.integer(y), is.integer(z))) {\n        if(any(x\
    \ == (y + z), y == (x + z), z == (x + y))) {\n            return(TRUE)\n     \
    \   } else {\n            return(FALSE)\n        }\n    } else {\n        return(FALSE)\n\
    \    }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n    if (is.integer(x) && is.integer(y) && is.integer(z)) {\n\
    \        if (x == y + z | y == x + z | z == x + y) {\n            return(TRUE)\n\
    \        } else {\n            return(FALSE)\n        }\n    } else {\n      \
    \  return(FALSE)\n    }\n}", "\n  if (isTRUE(any(is.integer(x, y, z)))) {\n  \
    \  if (x == y + z | y == x + z | z == x + y) {\n      return (TRUE)\n    } else\
    \ {\n      return (FALSE)\n    }\n  } else {\n    return (FALSE)\n  }\n}\nany_int(3,\
    \ -2, 1)\n", "\n    if(x == y + z | y == x + z | z == x + y){\n        return(TRUE)\n\
    \    }\n    else{\n        return(FALSE)\n    }\n}\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    if (x + y == z) {\n        return(TRUE)\n\
    \    } else if (x + z == y) {\n        return(TRUE)\n    } else if (y + z == x)\
    \ {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\nany_int(2,\
    \ 5, 7)\n", "\n    if (x == y + z | y == x + z | z == x + y) {\n        return(TRUE)\n\
    \    } else {\n        return(FALSE)\n    }\n}", "\n  if (is.integer(x) == TRUE\
    \ & is.integer(y) == TRUE & is.integer(z) == TRUE) {\n    if (x == y + z | y ==\
    \ x + z | z == x + y) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n\
    \    }\n  } else {\n    return(FALSE)\n  }\n}\n", "\n    any(x, y, z)\n}\n", "\n\
    \  if (((x == y + z) | (y == x + z) | (z == x + y)) & all(is.integer(c(x, y, z))))\
    \ {\n    print(\"TRUE\")\n  } else {\n    print(\"FALSE\")\n  }\n}\n", "\n   \
    \ (x == y + z | y == x + z | z == x + y) & is.integer(x) & is.integer(y) & is.integer(z)\n\
    }\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n",
  "\n    if (((x == y + z) | (y == x + z) | (z == x + y)) & is.integer(x) & is.integer(y)\
    \ & is.integer(z)) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n\
    \    }\n}\n ", "\n  stopifnot(is.numeric(x), is.numeric(y), is.numeric(z))\n \
    \ if (all(is.integer(x), is.integer(y), is.integer(z))) {\n    if (x == y + z\
    \ || y == x + z || z == x + y) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n\
    \    }\n  } else {\n    return(FALSE)\n  }\n}\ntest_that(\"any_int works correctly\"\
    , {\n  expect_true(any_int(5, 2, 7))\n  expect_false(any_int(3, 2, 2))\n  expect_true(any_int(3,\
    \ -2, 1))\n  expect_false(any_int(3.6, -2.2, 2))\n})\n", "\n\tif ((x == y + z)\
    \ || (y == x + z) || (z == x + y)) {\n\t\treturn (TRUE)\n\t} else {\n\t\treturn\
    \ (FALSE)\n\t}\n}\n", "\n  if(any(!is.integer(c(x, y, z)))) {\n    return(FALSE)\n\
    \  }\n  else if(x == (y + z) | y == (x + z) | z == (x + y)) {\n    return(TRUE)\n\
    \  }\n  else {\n    return(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\n\
    any_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n ", "\n    if(!is.integer(x) | !is.integer(y)\
    \ | !is.integer(z)) {\n        return(FALSE)\n    }\n    if(x == (y + z) | y ==\
    \ (x + z) | z == (x + y)) {\n        return(TRUE)\n    }\n    return(FALSE)\n}",
  "\n  if (all(is.integer(x), is.integer(y), is.integer(z))) {\n    return(ifelse(\n\
    \      x == y + z | y == x + z | z == x + y,\n      TRUE,\n      FALSE\n    ))\n\
    \  } else {\n    return(FALSE)\n  }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  is.integer(x) & is.integer(y) & is.integer(z)\
    \ & ( (x == y + z) | (y == x + z) | (z == x + y) )\n}", "\n  if (x == (y + z)\
    \ || y == (x + z) || z == (x + y))\n    return(TRUE)\n  else if (any(class(x)\
    \ != \"integer\" & class(y) != \"integer\" & class(z) != \"integer\"))\n    return(FALSE)\n\
    \  else\n    return(TRUE)\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    sum_of_two <- x + y\n    if ((is.integer(x)\
    \ & is.integer(y) & is.integer(z)) & ((sum_of_two == z) | (sum_of_two == x) |\
    \ (sum_of_two == y))) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n\
    \    }\n}", "\n  if (all(typeof(x, y, z) == \"integer\")) {\n    if (x + y ==\
    \ z || x + z == y || y + z == x) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n\
    \    }\n  } else {\n    return(FALSE)\n  }\n}\nany_int(3, -2, 1)\n", "\n    sum_of_two\
    \ <- x + y + z - max(x, y, z)\n    if (sum_of_two == max(x, y, z)) {\n       \
    \ return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n\nany_int(5, 2,\
    \ 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if(x\
    \ %in% c(x+y,x+z,y+z) & is.integer(x) & is.integer(y) & is.integer(z)) {\n   \
    \ print(\"TRUE\")\n  } else {\n    print(\"FALSE\")\n  }\n}\nany_int(5, 2, 7)\n\
    any_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  is_integer(x)\
    \ & is_integer(y) & is_integer(z) &\n    (x == y + z | y == x + z | z == x + y)\n\
    }\n", "\n    if (isTRUE(all.equal(x, y + z)) & isTRUE(is.integer(x)) & isTRUE(is.integer(y))\
    \ & isTRUE(is.integer(z))) {\n        return(TRUE)\n    } else if (isTRUE(all.equal(y,\
    \ x + z)) & isTRUE(is.integer(x)) & isTRUE(is.integer(y)) & isTRUE(is.integer(z)))\
    \ {\n        return(TRUE)\n    } else if (isTRUE(all.equal(z, x + y)) & isTRUE(is.integer(x))\
    \ & isTRUE(is.integer(y)) & isTRUE(is.integer(z))) {\n        return(TRUE)\n \
    \   } else {\n        return(FALSE)\n    }\n}\nany_int(3, -2, 1)\n", "\n  if(all(is.integer(x),\
    \ is.integer(y), is.integer(z))) {\n    if(x + y == z | x + z == y | y + z ==\
    \ x) {\n      TRUE\n    } else {\n      FALSE\n    }\n  } else {\n    FALSE\n\
    \  }\n}\nany_int(3, -2, 1)\n", "\n    if(x == y + z || y == x + z || z == x +\
    \ y) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n",
  "\n    all(is.integer(x), is.integer(y), is.integer(z)) && (x == y + z || y == x\
    \ + z || z == x + y)\n}\nany_int(3, 2, 2)\n\nany_int(3, -2, 1)\n\nany_int(3.6,\
    \ -2.2, 2)\n", "\n  if (is.integer(x) & is.integer(y) & is.integer(z)) {\n   \
    \ if (x == (y + z) | y == (x + z) | z == (x + y)) {\n      return(TRUE)\n    }\
    \ else {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n}\n\n\
    any_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if ((!is.integer(x)) || (!is.integer(y))\
    \ || (!is.integer(z))) {\n    FALSE\n  } else if ((x == (y + z)) || (y == (x +\
    \ z)) || (z == (x + y))) {\n    TRUE\n  } else {\n    FALSE\n  }\n}", "\n    if(is.integer(x)\
    \ & is.integer(y) & is.integer(z)) {\n        if((x == y + z) | (y == x + z) |\
    \ (z == x + y)) {\n            return(TRUE)\n        } else {\n            return(FALSE)\n\
    \        }\n    } else {\n        return(FALSE)\n    }\n}\n", "\n  is.integer(x)\
    \ && is.integer(y) && is.integer(z) && (x == y + z || y == x + z || z == x + y)\n\
    }\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n",
  "\n  if(is.integer(x) & is.integer(y) & is.integer(z)) {\n    if(x == (y + z) |\
    \ y == (x + z) | z == (x + y)) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n\
    \    }\n  } else {\n    return(FALSE)\n  }\n}\n", "\n  if ((x + y == z) | (x +\
    \ z == y) | (y + z == x)) {\n    return (TRUE)\n  } else {\n    return (FALSE)\n\
    \  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n    if(is.integer(x) & is.integer(y) & is.integer(z)) {\n  \
    \      if(x == (y + z) | y == (x + z) | z == (x + y)) {\n            return(TRUE)\n\
    \        } else {\n            return(FALSE)\n        }\n    } else {\n      \
    \  return(FALSE)\n    }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n", "\n  if (is.integer(x) && is.integer(y) && is.integer(z))\
    \ {\n    if ((x == y + z) || (y == x + z) || (z == x + y)) {\n      TRUE\n   \
    \ } else {\n      FALSE\n    }\n  } else {\n    FALSE\n  }\n}\n\nany_int(3, -2,\
    \ 1)\n", "\n    if (is.integer(x) & is.integer(y) & is.integer(z)) {\n       \
    \ if ((x + y == z) | (x + z == y) | (y + z == x)) {\n            print(\"TRUE\"\
    )\n        } else {\n            print(\"FALSE\")\n        }\n    } else {\n \
    \       print(\"FALSE\")\n    }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if(!all(typeof(x) == \"integer\", typeof(y)\
    \ == \"integer\", typeof(z) == \"integer\")) return(FALSE)\n  if(any(x == y +\
    \ z, y == x + z, z == x + y)) return(TRUE)\n  return(FALSE)\n}\n\nany_int(5, 2,\
    \ 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n ", "\n  is_integer\
    \ <- is.integer(x) & is.integer(y) & is.integer(z)\n  is_equal <- (x == y + z)\
    \ | (y == x + z) | (z == x + y)\n  if (is_integer & is_equal) return(TRUE)\n \
    \ return(FALSE)\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\n\
    any_int(3.6, -2.2, 2)\n", "\n  if ((is.integer(x) && is.integer(y) && is.integer(z))\
    \ &&\n      ((x + y == z) || (x + z == y) || (y + z == x))) {\n    return(TRUE)\n\
    \  } else {\n    return(FALSE)\n  }\n}", "\n  if(is.integer(x) & is.integer(y)\
    \ & is.integer(z)) {\n    if(x == y + z | y == x + z | z == x + y) {\n      return(TRUE)\n\
    \    } else {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n\
    }\n\nany_int(5, 2, 7)\n\nany_int(3, 2, 2)\n\nany_int(3, -2, 1)\n\nany_int(3.6,\
    \ -2.2, 2)\n\n", "\n  one_match <- function(x, y, z) {\n    if (x == y + z) {\n\
    \      return(TRUE)\n    } else if (y == x + z) {\n      return(TRUE)\n    } else\
    \ if (z == x + y) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n \
    \   }\n  }\n  if (is.integer(x) & is.integer(y) & is.integer(z)) {\n    return(one_match(x,\
    \ y, z))\n  } else {\n    return(FALSE)\n  }\n}\n", "\n  if ((x + y == z || x\
    \ + z == y || y + z == x) &&\n      (is.integer(x) & is.integer(y) & is.integer(z)))\
    \ {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n", "\n  if (x ==\
    \ y + z | y == x + z | z == x + y) {\n    if (is.integer(x) & is.integer(y) &\
    \ is.integer(z)) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n  \
    \  }\n  } else {\n    return(FALSE)\n  }\n}\n\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n", "\n  x_equal <- x == y + z\n  y_equal <- y ==\
    \ x + z\n  z_equal <- z == x + y\n  if(x_equal | y_equal | z_equal) {\n    if(is.integer(x)\
    \ & is.integer(y) & is.integer(z)) {\n      return(TRUE)\n    } else {\n     \
    \ return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n}\nany_int(5, 2, 7)\n\
    any_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  # checking\
    \ that the values provided are numeric and integers\n  if (is.numeric(x) & is.numeric(y)\
    \ & is.numeric(z)) {\n    # we are using the int_ vector to help us identify if\
    \ the values supplied are integers\n    int_ <- vector(\"logical\", 3)\n    int_[1]\
    \ <- is.integer(x)\n    int_[2] <- is.integer(y)\n    int_[3] <- is.integer(z)\n\
    \    # are all of the values supplied integers?\n    if(all(int_)) {\n      #\
    \ we are using the sum_ vector to help us identify if the sum of one value and\
    \ the other two equals to one of the values supplied\n      sum_ <- vector(\"\
    logical\", 3)\n      sum_[1] <- x == (y + z)\n      sum_[2] <- y == (x + z)\n\
    \      sum_[3] <- z == (x + y)\n      # does the sum of one value and the other\
    \ two equals to one of the values supplied?\n      if(any(sum_)) {\n        #\
    \ if yes, return TRUE\n        return(TRUE)\n      } else {\n        # if no,\
    \ return FALSE\n        return(FALSE)\n      }\n    } else {\n      # if no, return\
    \ FALSE\n      return(FALSE)\n    }\n  } else {\n    # if no, return FALSE\n \
    \   return(FALSE)\n  }\n}\n", "\n    if ((x == y + z | y == x + z | z == x + y)\
    \ & is.integer(x) & is.integer(y) & is.integer(z)) {\n        return(TRUE)\n \
    \   } else {\n        return(FALSE)\n    }\n}\n", "\n  if(all(class(x)=='integer',\
    \ class(y)=='integer', class(z)=='integer')) {\n    if((x+y)==z || (x+z)==y ||\
    \ (y+z)==x) {\n      TRUE\n    } else {\n      FALSE\n    }\n  } else {\n    FALSE\n\
    \  }\n}\n", "\n    if (isTRUE(all.equal(x, y + z)) | isTRUE(all.equal(y, x + z))\
    \ | isTRUE(all.equal(z, x + y))) {\n        return(TRUE)\n    } else {\n     \
    \   return(FALSE)\n    }\n}\n", "\n    int_check <- FALSE\n    if (is.integer(x)\
    \ && is.integer(y) && is.integer(z)) {\n        int_check <- TRUE\n    }\n   \
    \ sum_check <- FALSE\n    if (x == (y + z) || y == (x + z) || z == (x + y)) {\n\
    \        sum_check <- TRUE\n    }\n    return (int_check & sum_check)\n}\n", "\n\
    \  if(is.integer(x) && is.integer(y) && is.integer(z)){\n    if(x == y + z ||\
    \ y == x + z || z == x + y){\n      return(TRUE)\n    }\n    else{\n      return(FALSE)\n\
    \    }\n  }\n  else{\n    return(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\nany_int(3,\
    \ 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if (is.integer(x) &\
    \ is.integer(y) & is.integer(z)) {\n    if ((x == y + z) | (y == x + z) | (z ==\
    \ x + y)) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  }\
    \ else {\n    return(FALSE)\n  }\n}", "\n    if (x == y + z | y == x + z | z ==\
    \ x + y) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n\
    }\n\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)", "\n  if ((x == y + z) || (y ==\
    \ x + z) || (z == x + y))\n    return(TRUE)\n  else\n    return(FALSE)\n}\n\n\
    any_int(1, 2, 2)\nany_int(1, 2, 3)\nany_int(1, 2, 4)\nany_int(1, 4, 3)\nany_int(4,\
    \ 1, 3)\n", "\n    if(is.integer(x) && is.integer(y) && is.integer(z)) {\n   \
    \     if(x == y + z || y == x + z || z == x + y) {\n            return(TRUE)\n\
    \        } else {\n            return(FALSE)\n        }\n    } else {\n      \
    \  return(FALSE)\n    }\n}\n", "\n  if (is.integer(x) & is.integer(y) & is.integer(z))\
    \ {\n    if (x == y + z) {\n      return(TRUE)\n    } else if (y == x + z) {\n\
    \      return(TRUE)\n    } else if (z == x + y) {\n      return(TRUE)\n    } else\
    \ {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n}\n", "\n\
    \    if (all(class(x) == \"integer\", class(y) == \"integer\", class(z) == \"\
    integer\")) {\n        if (x == (y + z) | y == (x + z) | z == (x + y)) {\n   \
    \         return(TRUE)\n        } else {\n            return(FALSE)\n        }\n\
    \    } else {\n        return(FALSE)\n    }\n}", "\n    x + y == z | y + z ==\
    \ x | x + z == y & (is.integer(x) & is.integer(y) & is.integer(z))\n}\nany_int(3,\
    \ 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    if (((x == y + z)\
    \ | (y == x + z) | (z == x + y)) & (is.integer(x) & is.integer(y) & is.integer(z)))\
    \ {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\nany_int(3,\
    \ 2, 2)\n", "\n  if(is.integer(x) & is.integer(y) & is.integer(z)) {\n    if(x\
    \ == y + z) {\n      return(TRUE)\n    } else if(y == x + z) {\n      return(TRUE)\n\
    \    } else if(z == x + y) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n\
    \    }\n  } else {\n    return(FALSE)\n  }\n}\nany_int(3, -2, 1)", "\n  #check\
    \ that all are integers\n  if (!(is.integer(x) & is.integer(y) & is.integer(z)))\
    \ {\n    return(FALSE)\n  }\n  #check that 1 is the sum of the other 2\n  else\
    \ if ((x == y + z) | (y == x + z) | (z == x + y)) {\n    return(TRUE)\n  }\n \
    \ else {\n    return(FALSE)\n  }\n}\n", "\n    if(!(x %in% c(1:10)) || !(y %in%\
    \ c(1:10)) || !(z %in% c(1:10))) return(FALSE)\n    if(x == y+z || y == x+z ||\
    \ z == x+y) return(TRUE)\n    return(FALSE)\n}\nx <- 3\ny <- -2\nz <- 1\nany_int(x,\
    \ y, z)\n", "\n  if(is.integer(x) && is.integer(y) && is.integer(z)) {\n    if((x\
    \ + y == z) || (x + z == y) || (y + z == x)) {\n      return(TRUE)\n    } else\
    \ {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n}\nany_int(5,\
    \ 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  \
    \  if (x == y + z || y == x + z || z == x + y) {\n        if (class(x) == \"integer\"\
    \ && class(y) == \"integer\" && class(z) == \"integer\") {\n            return(TRUE)\n\
    \        }\n    }\n    return(FALSE)\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\n\
    any_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n ", "\n  if (x == (y + z) || y == (x\
    \ + z) || z == (x + y)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n \
    \ }\n}\n", "\n  if(is.integer(x) & is.integer(y) & is.integer(z)){\n    if(x ==\
    \ y + z | y == x + z | z == x + y){\n      return(TRUE)\n    } else {\n      return(FALSE)\n\
    \    }\n  } else {\n    return(FALSE)\n  }\n}", "\n    if (!(is.integer(x) &&\
    \ is.integer(y) && is.integer(z))) return(FALSE)\n    if (x + y == z) return(TRUE)\n\
    \    if (x + z == y) return(TRUE)\n    if (y + z == x) return(TRUE)\n    return(FALSE)\n\
    }\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n\tif (\n\t\
    \t\tis.integer(x) &\n\t\t\tis.integer(y) &\n\t\t\tis.integer(z) &\n\t\t\t((x ==\
    \ y + z) | (y == x + z) | (z == x + y))\n\t) return(TRUE)\n\telse return(FALSE)\n\
    }\n\ntest_that(\"any_int works\", {\n\texpect_equal(any_int(5, 2, 7), TRUE)\n\t\
    expect_equal(any_int(3, 2, 2), FALSE)\n\texpect_equal(any_int(3, -2, 1), TRUE)\n\
    \texpect_equal(any_int(3.6, -2.2, 2), FALSE)\n})", "\n  if (is.integer(x) & is.integer(y)\
    \ & is.integer(z)) {\n    if (x == y + z) {\n      return(TRUE)\n    } else if\
    \ (y == x + z) {\n      return(TRUE)\n    } else if (z == x + y) {\n      return(TRUE)\n\
    \    } else {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n\
    }\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2,\
    \ 2)\n", "\n  x <- as.integer(x)\n  y <- as.integer(y)\n  z <- as.integer(z)\n\
    \  return( x == y + z | y == x + z | z == x + y )\n}\n\nany_int(5, 2, 7)\nany_int(3,\
    \ 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if ((x==y+z) | (y==x+z)\
    \ | (z==x+y)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}", "\n\
    \    if (is.integer(x) & is.integer(y) & is.integer(z)) {\n        if (x == y\
    \ + z | y == x + z | z == x + y) {\n            return(TRUE)\n        } else {\n\
    \            return(FALSE)\n        }\n    } else {\n        return(FALSE)\n \
    \   }\n}\n", "\n  if(class(x) == \"integer\" & class(y) == \"integer\" & class(z)\
    \ == \"integer\") {\n    if(x == y + z | y == x + z | z == x + y) {\n      return(TRUE)\n\
    \    } else {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n\
    }\n\nany_int(1,2,3)\nany_int(3,2,2)\nany_int(3,-2,1)\nany_int(3.6,-2.2,2)\n",
  "\n  if (is.integer(x) & is.integer(y) & is.integer(z)) {\n    if (x == y + z |\
    \ y == x + z | z == x + y) {\n      print(TRUE)\n    } else {\n      print(FALSE)\n\
    \    }\n  } else {\n    print(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2,\
    \ 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    if (x == (y + z) | y\
    \ == (x + z) | z == (x + y)) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n\
    \    }\n}\n\nany_int(1, 1, 2)\nany_int(5, -2, 7)\nany_int(5, 2, 7)\nany_int(3,\
    \ 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    if (x + y == z |\
    \ x + z == y | y + z == x) {\n        if (is.integer(x) & is.integer(y) & is.integer(z))\
    \ {\n            print(TRUE)\n        } else {\n            print(FALSE)\n   \
    \     }\n    } else {\n        print(FALSE)\n    }\n}", "\n    if (x == y + z\
    \ || y == x + z || z == x + y) {\n        return(TRUE)\n    } else {\n       \
    \ return(FALSE)\n    }\n}", "\n  if (is.integer(x) & is.integer(y) & is.integer(z))\
    \ {\n    if (x == y + z | y == x + z | z == x + y) {\n      TRUE\n    } else {\n\
    \      FALSE\n    }\n  } else {\n    FALSE\n  }\n}\n", "\n  if (is.integer(x)\
    \ & is.integer(y) & is.integer(z)) {\n    x + y == z | x + z == y | y + z == x\n\
    \  } else {\n    FALSE\n  }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if(all(is.integer(x), is.integer(y),\
    \ is.integer(z))) {\n    if(x == y + z | y == x + z | z == x + y) {\n      print(TRUE)\n\
    \    } else {\n      print(FALSE)\n    }\n  } else {\n    print(FALSE)\n  }\n\
    }\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2,\
    \ 2)\n", "\n    if (is.integer(x) & is.integer(y) & is.integer(z)){\n        if\
    \ ((x == y + z) | (y == x + z) | (z == x + y)){\n            return(TRUE)\n  \
    \      } else {\n            return(FALSE)\n        }\n    } else {\n        return(FALSE)\n\
    \    }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n    if (x == y + z | y == x + z | z == x + y) {\n        if\
    \ (is.integer(x) & is.integer(y) & is.integer(z)) {\n            print(T)\n  \
    \      } else {\n            print(F)\n        }\n    } else {\n        print(F)\n\
    \    }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n  if (x == y + z || y == x + z || z == x + y) {\n    TRUE\n\
    \  } else {\n    FALSE\n  }\n}\n\nany_int(3,2,2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n  is_integer <- all(c(x, y, z) %% 1 == 0)\n  any_two_sum_remainder\
    \ <- x == y + z | y == x + z | z == x + y\n  is_integer & any_two_sum_remainder\n\
    }\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2,\
    \ 2)\n ", "\n    if (x == y + z | y == x + z | z == x + y) {\n        return(TRUE)\n\
    \    } else {\n        return(FALSE)\n    }\n}\nany_int(5, 2, 7)\nany_int(3, 2,\
    \ 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    # Create a vector to\
    \ store our logical value\n    result <- c()\n    # Store our sum into a variable\n\
    \    sum <- x + y + z\n    # Check if any of the input numbers are equal to our\
    \ sum divided by two\n    result <- any(x == sum / 2 | y == sum / 2 | z == sum\
    \ / 2)\n    # Check if any of the numbers are integers\n    result <- result &\
    \ any(x == floor(x) | y == floor(y) | z == floor(z))\n    # Return our logical\
    \ result\n    return(result)\n}", "\n  if (isTRUE(all(is.integer(x), is.integer(y),\
    \ is.integer(z)))){\n    return(as.logical(x == y + z || x == y - z || y == x\
    \ + z || y == x - z || z == x + y || z == x - y))\n  }\n  else return(FALSE)\n\
    }\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if (((x\
    \ + y) == z) | ((x + z) == y) | ((y + z) == x)) {\n    TRUE\n  } else {\n    FALSE\n\
    \  }\n}", "\n  all(is.integer(x), is.integer(y), is.integer(z)) & (x == y + z\
    \ | y == x + z | z == x + y)\n}\nany_int(3, -2, 1)\n", "\n  if ((x + y == z) |\
    \ (x + z == y) | (y + z == x)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n\
    \  }\n}\n\ntestthat::expect_true(any_int(5, 2, 7))\ntestthat::expect_false(any_int(3,\
    \ 2, 2))\ntestthat::expect_true(any_int(3, -2, 1))\ntestthat::expect_false(any_int(3.6,\
    \ -2.2, 2))\n", "\n  if (x + y == z || x + z == y || y + z == x) {\n    return(TRUE)\n\
    \  } else {\n    return(FALSE)\n  }\n}", "\n\tsum_xy <- x + y\n\tsum_yz <- y +\
    \ z\n\tsum_xz <- x + z\n\tif ((x == sum_yz || y == sum_xz || z == sum_xy) && is.integer(x)\
    \ && is.integer(y) && is.integer(z)) {\n\t\tx <- T\n\t} else {\n\t\tx <- F\n\t\
    }\n\treturn(x)\n}\n", "\n    is.integer(x) & is.integer(y) & is.integer(z) &\n\
    \        ((x == y + z) | (y == x + z) | (z == x + y))\n}\nany_int(5, 2, 7)\n",
  "\n    if (isTRUE(all.equal(x, y + z)) | isTRUE(all.equal(y, x + z)) | isTRUE(all.equal(z,\
    \ x + y))) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n\
    }\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if ((x\
    \ == y + z) | (y == x + z) | (z == x + y)) {\n    return(TRUE)\n  } else {\n \
    \   return(FALSE)\n  }\n}\n", "\n  if (isTRUE(all(is.integer(x), is.integer(y),\
    \ is.integer(z)))) {\n    if ((x == y + z) | (y == x + z) | (z == x + y)) {\n\
    \      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else {\n  \
    \  return(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n", "\n  is_integer(x) & is_integer(y) & is_integer(z)\
    \ & ((x == y + z) | (y == x + z) | (z == x + y))\n}\n", "\n  ints <- c(x, y, z)\n\
    \  if ((is.integer(ints[1]) == TRUE) & (is.integer(ints[2]) == TRUE) & (is.integer(ints[3])\
    \ == TRUE)) {\n    if ((ints[1] == (ints[2] + ints[3])) | (ints[2] == (ints[1]\
    \ + ints[3])) | (ints[3] == (ints[1] + ints[2]))) {\n      return(TRUE)\n    }\
    \ else {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n}\n\
    any_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n",
  "\n    if (x == y + z | y == x + z | z == x + y) {\n        if (is.integer(x) &\
    \ is.integer(y) & is.integer(z)) {\n            return(TRUE)\n        }\n    }\n\
    \    return(FALSE)\n}\n\nany_int(3, -2, 1)\n", "\n    if(x == y + z | y == x +\
    \ z | z == x + y) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n\
    \    }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n    if (x == y + z) return(TRUE)\n    if (y == x + z) return(TRUE)\n\
    \    if (z == x + y) return(TRUE)\n    return(FALSE)\n}\n\nany_int(3, -2, 1)\n",
  "\n    # a <- x + y == z | y + z == x | x + z == y\n    # b <- is.integer(x) & is.integer(y)\
    \ & is.integer(z)\n    # return(a & b)\n    return((x + y == z | y + z == x |\
    \ x + z == y) & (is.integer(x) & is.integer(y) & is.integer(z)))\n}\nany_int(5,\
    \ 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  \
    \  int_check <- isTRUE(all.equal(x, floor(x)) & all.equal(y, floor(y)) & all.equal(z,\
    \ floor(z)))\n    x + y == z | x + z == y | y + z == x\n}\nany_int(5, 2, 7)\n",
  "\n  if (is.integer(x) && is.integer(y) && is.integer(z)) {\n    if (x == y + z\
    \ | y == x + z | z == x + y) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n\
    \    }\n  } else {\n    return(FALSE)\n  }\n}\nany_int(5, 2, 7)\nany_int(3, 2,\
    \ 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    if(is.integer(x) &&\
    \ is.integer(y) && is.integer(z)) {\n        if(x + y == z || x + z == y || y\
    \ + z == x) {\n            return(TRUE)\n        } else {\n            return(FALSE)\n\
    \        }\n    } else {\n        return(FALSE)\n    }\n}\n\nany_int(5, 2, 7)\n\
    any_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  sum(!is.integer(c(x,\
    \ y, z))) == 0 && (x == y + z || y == x + z || z == x + y)\n}\nany_int(3, -2,\
    \ 1)\n", "\n    if(is.integer(x) && is.integer(y) && is.integer(z)) {\n      \
    \  if((x == y + z) || (y == x + z) || (z == x + y)) {\n            return(TRUE)\n\
    \        } else {\n            return(FALSE)\n        }\n    } else {\n      \
    \  return(FALSE)\n    }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n \n", "\n    any(x == (y + z), y == (x + z), z ==\
    \ (x + y)) & all(is.integer(x), is.integer(y), is.integer(z))\n}\n", "\n  if(all(is.integer(x),\
    \ is.integer(y), is.integer(z))) {\n    if(x == y + z || y == x + z || z == x\
    \ + y) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else\
    \ {\n    return(FALSE)\n  }\n}\n", "\n    if (x == y + z | y == x + z | z == x\
    \ + y) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n",
  "\n  if(is.integer(x) & is.integer(y) & is.integer(z)){\n    if(x == y + z | y ==\
    \ x + z | z == x + y){\n      return(TRUE)\n    }\n    else{\n      return(FALSE)\n\
    \    }\n  }\n  else{\n    return(FALSE)\n  }\n}\n\nany_int(3, -2, 1)\n", "\n \
    \ ints <- all(is_integer(x), is_integer(y), is_integer(z))\n  sums <- (x == y\
    \ + z) | (y == x + z) | (z == x + y)\n  ints & sums\n}\nany_int(5, 2, 7)\nany_int(3,\
    \ 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    if (x %in% c(x +\
    \ y, x + z, y + z) & all(is.integer(c(x, y, z)))) {\n        return(TRUE)\n  \
    \  } else {\n        return(FALSE)\n    }\n}\nany_int(5, 2, 7)\nany_int(3, 2,\
    \ 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if ((x == y + z || y ==\
    \ x + z || z == x + y) && is.integer(x) && is.integer(y) && is.integer(z)) {\n\
    \    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\n\
    any_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if ((x ==\
    \ y + z) | (y == x + z) | (z == x + y)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n\
    \  }\n}", "\n    sum1 <- y + z\n    sum2 <- x + z\n    sum3 <- x + y\n    if (sum1\
    \ == x | sum2 == y | sum3 == z) {\n        return(TRUE)\n    } else {\n      \
    \  return(FALSE)\n    }\n}\n", "\n    # The function takes 3 arguments and returns\
    \ a single boolean value.\n    # TRUE or FALSE\n    # Check that all inputs are\
    \ integers\n    if (!all(is.integer(c(x, y, z)))) {\n        return(FALSE)\n \
    \   }\n    # Check if the sum of any 2 equals the 3rd\n    if (y+z == x | x+z\
    \ == y | x+y == z) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n\
    \    }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n    if (x == y + z || y == x + z || z == x + y) {\n        return(TRUE)\n\
    \    } else {\n        return(FALSE)\n    }\n}", "\n    if ((x == y + z | y ==\
    \ x + z | z == x + y) & is.integer(x) & is.integer(y) & is.integer(z)) {\n   \
    \     return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\nany_int(5,\
    \ 2, 7)\n\nany_int(3, 2, 2)\n\nany_int(3, -2, 1)\n\nany_int(3.6, -2.2, 2)", "\n\
    \    n <- c(x, y, z)\n    if (all(n == round(n))) {\n        return(any(x == y\
    \ + z) | any(y == x + z) | any(z == x + y))\n    } else {\n        return(FALSE)\n\
    \    }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n  x_y_sum <- x + y\n  y_z_sum <- y + z\n  x_z_sum <- x + z\n\
    \  logical_vec <- c(x_y_sum == z, y_z_sum == x, x_z_sum == y)\n  logical_vec\n\
    }\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n",
  "\n    if (is.integer(x) & is.integer(y) & is.integer(z)) {\n        if (x == y\
    \ + z | y == x + z | z == x + y) {\n            return(TRUE)\n        } else {\n\
    \            return(FALSE)\n        }\n    } else {\n        return(FALSE)\n \
    \   }\n}", "\n    if(is.integer(x) & is.integer(y) & is.integer(z)) {\n      \
    \  if(x==y+z | y==x+z | z==x+y) {\n            return(TRUE)\n        } else {\n\
    \            return(FALSE)\n        }\n    } else {\n        return(FALSE)\n \
    \   }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n  stopifnot(is.numeric(x), is.numeric(y), is.numeric(z))\n \
    \ if ((x == y + z) | (y == x + z) | (z == x + y)) {\n    if (all(is.integer(x),\
    \ is.integer(y), is.integer(z))) {\n      return(TRUE)\n    }\n  }\n  return(FALSE)\n\
    }\n", "\n  if(is.integer(x) && is.integer(y) && is.integer(z)) {\n    if(x ==\
    \ y + z | y == x + z | z == x + y) {\n      return(TRUE)\n    } else {\n     \
    \ return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n}\n", "\n    if (is.integer(x)\
    \ && is.integer(y) && is.integer(z)) {\n        if ((x == y + z) || (y == x +\
    \ z) || (z == x + y)) {\n            return(TRUE)\n        } else {\n        \
    \    return(FALSE)\n        }\n    } else {\n        return(FALSE)\n    }\n}\n\
    any_int(1,3,3)\nany_int(3,2,2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n\
    \    if(is.integer(x) & is.integer(y) & is.integer(z)) {\n        return(any(x\
    \ == y + z | x == z + y | y == x + z | y == z + x | z == x + y | z == y + x))\n\
    \    } else {\n        return(FALSE)\n    }\n}\n", "\n  if (is.integer(x) == FALSE\
    \ | is.integer(y) == FALSE | is.integer(z) == FALSE) {\n    return(FALSE)\n  }\n\
    \  else if (x == y + z | y == x + z | z == x + y) {\n    return(TRUE)\n  }\n \
    \ else {\n    return(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  # you have to implement this function\n\
    \  # NOTE: You must use the is.integer() function\n}", "\n\t#is.integer function\
    \ will return TRUE if the class is integer and FALSE otherwise\n\tif (is.integer(x)\
    \ & is.integer(y) & is.integer(z)) {\n\t\t# + will return TRUE only if at least\
    \ one of its arguments is TRUE\n\t\tif ((x == y + z) | (y == x + z) | (z == x\
    \ + y)) {\n\t\t\treturn(TRUE)\n\t\t} else {\n\t\t\treturn(FALSE)\n\t\t}\n\t} else\
    \ {\n\t\treturn(FALSE)\n\t}\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    if (((x == y + z) || (y == x + z) ||\
    \ (z == x + y)) && ((is.integer(x) && is.integer(y) && is.integer(z)) == TRUE))\
    \ {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}", "\n\
    \    if (!is.integer(x)) {\n        return(FALSE)\n    }\n    if (!is.integer(y))\
    \ {\n        return(FALSE)\n    }\n    if (!is.integer(z)) {\n        return(FALSE)\n\
    \    }\n    if (x == (y + z)) {\n        return(TRUE)\n    }\n    if (y == (x\
    \ + z)) {\n        return(TRUE)\n    }\n    if (z == (x + y)) {\n        return(TRUE)\n\
    \    }\n    return(FALSE)\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if(!all(!is.na(x), !is.na(y), !is.na(z))){\n\
    \    return(FALSE)\n  } else if (any(!is.numeric(x), !is.numeric(y), !is.numeric(z))){\n\
    \    return(FALSE)\n  } else if (any(!is.integer(x), !is.integer(y), !is.integer(z))){\n\
    \    return(FALSE)\n  } else {\n    return(x == y + z | y == x + z | z == x +\
    \ y)\n  }\n}\n\n", "\n  if ((x + y == z) || (x + z == y) || (y + z == x)) {\n\
    \    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\n\
    any_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    if ((x ==\
    \ y + z) || (y == x + z) || (z == x + y)) {\n        return(TRUE)\n    } else\
    \ {\n        return(FALSE)\n    }\n}\n", "\n\t# create an output variable\n\t\
    out <- FALSE\n\t# check if the input variable are integer\n\tif( all(is.integer(x),\
    \ is.integer(y), is.integer(z)) ) {\n\t\t# loop over to check if the input variable\
    \ is equal to the sum of the other two, and all numbers are integers\n\t\tfor(i\
    \ in x) {\n\t\t\tfor(j in y) {\n\t\t\t\tfor(k in z) {\n\t\t\t\t\tif( (i + j ==\
    \ k) | (i + k == j) | (j + k == i) ) {\n\t\t\t\t\t\tout <- TRUE\n\t\t\t\t\t}\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t# return the result\n\treturn(out)\n}", "\n\
    \    if(!is.integer(x) | !is.integer(y) | !is.integer(z)){\n        return(FALSE)\n\
    \    } else {\n        return(sum(x, y, z) == x | sum(x, y, z) == y | sum(x, y,\
    \ z) == z)\n    }\n}\n", "\n  if (!is.integer(x) | !is.integer(y) | !is.integer(z))\
    \ {\n    return(FALSE)\n  } else if (x == y + z | y == x + z | z == x + y) {\n\
    \    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n", "\n  if(is.integer(x)\
    \ == FALSE | is.integer(y) == FALSE | is.integer(z) == FALSE) {\n    return(FALSE)\n\
    \  }\n  if(x == (y + z) | y == (x + z) | z == (x + y)) {\n    return(TRUE)\n \
    \ }\n  return(FALSE)\n}\n", "\n    if(is.integer(x) & is.integer(y) & is.integer(z)){\n\
    \        if(x == y + z | y == x + z | z == x + y){\n            return(TRUE)\n\
    \        } else {\n            return(FALSE)\n        }\n    } else {\n      \
    \  return(FALSE)\n    }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n ", "\n  if (is.integer(x) & is.integer(y) & is.integer(z))\
    \ {\n    if (x == y + z | y == x + z | z == x + y) {\n      return(TRUE)\n   \
    \ } else {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n}\n\
    \nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if (is.integer(x) && is.integer(y)\
    \ && is.integer(z)) {\n    if (x == (y + z) || y == (x + z) || z == (x + y)) {\n\
    \      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else {\n  \
    \  return(FALSE)\n  }\n}\nany_int(3, -2, 1)\n", "\n  if( is.integer(x) & is.integer(y)\
    \ & is.integer(z) ) {\n    if ( (x == y + z) | (y == x + z) | (z == x + y) ) return(TRUE)\n\
    \    else return(FALSE)\n  } else return(FALSE)\n}\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    if ((x == y + z | y == x + z | z ==\
    \ x + y) & is.integer(x) & is.integer(y) & is.integer(z)) {\n        return (TRUE)\n\
    \    } else {\n        return (FALSE)\n    }\n}\nany_int(3, -2, 1)\n", "\n  if\
    \ (is.integer(x) & is.integer(y) & is.integer(z)) {\n    return(x==(y+z) | y==(x+z)\
    \ | z==(x+y))\n  } else {\n    return(FALSE)\n  }\n}\n", "\n  x + y == z || x\
    \ + z == y || y + z == x\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n", "\n    if (x == y + z || y == x + z || z == x\
    \ + y) {\n        if (is.integer(x) & is.integer(y) & is.integer(z)) {\n     \
    \       print(\"TRUE\")\n        } else {\n            print(\"FALSE\")\n    \
    \    }\n    } else {\n        print(\"FALSE\")\n    }\n}\n\nany_int(5, 2, 7)\n\
    any_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if(!(x %in%\
    \ class(integer)) && !(y %in% class(integer)) && !(z %in% class(integer))) {\n\
    \    return(FALSE)\n  } else if((x + y == z) || (x + z == y) || (y + z == x))\
    \ {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\nany_int(3, 2, 2)\n",
  "\n    if(all(is.integer(x), is.integer(y), is.integer(z))) {\n        if(x == y\
    \ + z | y == x + z | z == x + y) {\n            TRUE\n        } else {\n     \
    \       FALSE\n        }\n    } else {\n        FALSE\n    }\n}\nany_int(3, 2,\
    \ 2)\n", "\n    if(is.integer(x) && is.integer(y) && is.integer(z)) {\n      \
    \  if((x == y + z) || (y == x + z) || (z == x + y)) {\n            return(TRUE)\n\
    \        } else {\n            return(FALSE)\n        }\n    } else {\n      \
    \  return(FALSE)\n    }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n", "\n  intsum <- x+y+z\n  if (is.integer(x) & is.integer(y)\
    \ & is.integer(z)){\n    if ((x == intsum-y-z)|(y == intsum-x-z)|(z == intsum-x-y)){\n\
    \      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else {\n  \
    \  return(FALSE)\n  }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\n\
    any_int(3.6, -2.2, 2)\n", "\n    if (x == (y + z) || y == (x + z) || z == (x +\
    \ y)) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n\
    \nany_int(5, 2, 7)\n\nany_int(3, 2, 2)\n\nany_int(3, -2, 1)\n\nany_int(3.6, -2.2,\
    \ 2)\n", "\n  (x %in% c(x + y, x + z, y + z)) & (x + y + z == round(x + y + z))\n\
    }\n\nany_int(3, -2, 1)\n", "\n    is.integer(x) & is.integer(y) & is.integer(z)\
    \ & ((x == y + z) | (y == x + z) | (z == x + y))\n}", "\n  if (x == (y + z) ||\
    \ y == (x + z) || z == (x + y)) {\n    if (is.integer(x) && is.integer(y) && is.integer(z))\
    \ {\n      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else {\n\
    \    return(FALSE)\n  }\n}\n", "\n  # Your code here\n}\n ", "\n  x <- as.integer(x)\n\
    \  y <- as.integer(y)\n  z <- as.integer(z)\n  if (y + z == x) {\n    return(TRUE)\n\
    \  } else if (x + z == y) {\n    return(TRUE)\n  } else if (x + y == z) {\n  \
    \  return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\nany_int(5, 2, 7)\nany_int(3,\
    \ 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  \n  if (all(is.integer(x),\
    \ is.integer(y), is.integer(z))) {\n    x == y + z | y == x + z | z == x + y\n\
    \  } else {\n    return (FALSE)\n  }\n}\n", "\n    # compare if the sum of x and\
    \ y equals z\n    # check if x, y, and z are integers using is.integer\n    if\
    \ (x + y == z & is.integer(x) & is.integer(y) & is.integer(z)) {\n        return(TRUE)\n\
    \    }\n    # compare if the sum of x and z equals y\n    # check if x, y, and\
    \ z are integers using is.integer\n    else if (x + z == y & is.integer(x) & is.integer(y)\
    \ & is.integer(z)) {\n        return(TRUE)\n    }\n    # compare if the sum of\
    \ y and z equals x\n    # check if x, y, and z are integers using is.integer\n\
    \    else if (y + z == x & is.integer(x) & is.integer(y) & is.integer(z)) {\n\
    \        return(TRUE)\n    }\n    # if x + y != z and x + z != y and y + z !=\
    \ x\n    else {\n        return(FALSE)\n    }\n}", "\n    x <- as.integer(x)\n\
    \    y <- as.integer(y)\n    z <- as.integer(z)\n    return(x == (y + z) | y ==\
    \ (x + z) | z == (x + y))\n}\n", "\n  if (is.integer(x) && is.integer(y) && is.integer(z)){\n\
    \    if (x == y + z || y == x + z || z == x + y) {\n      return(TRUE)\n    }\n\
    \    else {\n      return(FALSE)\n    }\n  }\n  else {\n    return(FALSE)\n  }\n\
    }\n", "\n  if (!(is.integer(x) && is.integer(y) && is.integer(z))) {\n    return(FALSE)\n\
    \  } else if (x + y == z) {\n    return(TRUE)\n  } else if (x + z == y) {\n  \
    \  return(TRUE)\n  } else if (y + z == x) {\n    return(TRUE)\n  } else {\n  \
    \  return(FALSE)\n  }\n}\n", "\n  if (is.integer(x) && is.integer(y) && is.integer(z))\
    \ {\n    return(x == y + z | y == x + z | z == x + y)\n  } else {\n    return(FALSE)\n\
    \  }\n}\n", "\n  if(!is.integer(x) | !is.integer(y) | !is.integer(z)) {\n    return(FALSE)\n\
    \  }\n  if(x == y + z | y == x + z | z == x + y) {\n    return(TRUE)\n  }\n  else\
    \ {\n    return(FALSE)\n  }\n}", "\n    if (!(is.integer(x)) || !(is.integer(y))\
    \ || !(is.integer(z))) {\n        return(FALSE)\n    }\n    if (x + y == z ||\
    \ x + z == y || y + z == x) {\n        return(TRUE)\n    }\n    return(FALSE)\n\
    }\n", "\n    (((x == y + z) | (y == x + z) | (z == x + y)) & (is.integer(x) |\
    \ is.integer(y) | is.integer(z)))\n}\n", "\n  if (is.integer(x) & is.integer(y)\
    \ & is.integer(z)) {\n    if (x == y + z | y == x + z | z == x + y) {\n      return(TRUE)\n\
    \    } else {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n\
    }\n", "\n    result <- (x == y + z) | (y == x + z) | (z == x + y)\n    if(result)\
    \ {\n        return(TRUE)\n    } else {\n        return(FALSE)\n    }\n}\n \n\
    print(any_int(5, 2, 7))\nprint(any_int(3, 2, 2))\nprint(any_int(3, -2, 1))\nprint(any_int(3.6,\
    \ -2.2, 2))\n", "\n  if ((x + y == z || x + z == y || y + z == x) && (is.integer(x)\
    \ && is.integer(y) && is.integer(z))) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n\
    \  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n  if(!is.integer(x) | !is.integer(y) | !is.integer(z)) {\n \
    \   return(FALSE)\n  } else if(x == y + z | y == x + z | z == x + y) {\n    return(TRUE)\n\
    \  } else {\n    return(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\n\
    any_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if ( (y+z == x) | (x+z == y)\
    \ | (x+y == z) ) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n\
    any_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    # Check\
    \ if all inputs are integers\n    if (!(is.integer(x) & is.integer(y) & is.integer(z)))\
    \ {\n        return(FALSE)\n    }\n    # Check if one of the inputs is equal to\
    \ the sum of the other two\n    if ((x == y + z) | (y == x + z) | (z == x + y))\
    \ {\n        return(TRUE)\n    }\n    return(FALSE)\n}", "\n    if (x == (y +\
    \ z) & all(is.integer(c(x, y, z)))) {\n        return(TRUE)\n    } else if (y\
    \ == (x + z) & all(is.integer(c(x, y, z)))) {\n        return(TRUE)\n    } else\
    \ if (z == (x + y) & all(is.integer(c(x, y, z)))) {\n        return(TRUE)\n  \
    \  } else {\n        return(FALSE)\n    }\n}\n", "\n  if ((x == y + z || y ==\
    \ x + z || z == x + y) && is.integer(x) && is.integer(y) && is.integer(z)) {\n\
    \    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\n", "\n    # your code\
    \ here\n    if(all(class(x) == \"integer\", class(y) == \"integer\", class(z)\
    \ == \"integer\")){\n        if(any(x == y + z, y == x + z, z == x + y)) {\n \
    \           return(TRUE)\n        } else {\n            return(FALSE)\n      \
    \  }\n    } else {\n        return(FALSE)\n    }\n    \n}\nany_int(3.6, -2.2,\
    \ 2)\n", "\n  x <- as.integer(x)\n  y <- as.integer(y)\n  z <- as.integer(z)\n\
    \  if (is.integer(x) & is.integer(y) & is.integer(z)) {\n    if ((x == y + z)\
    \ | (y == x + z) | (z == x + y)) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n\
    \    }\n  } else {\n    return(FALSE)\n  }\n}\n", "\n    if (is.integer(x) & is.integer(y)\
    \ & is.integer(z)) {\n        if (x == y + z | y == x + z | z == x + y) {\n  \
    \          return(TRUE)\n        } else {\n            return(FALSE)\n       \
    \ }\n    } else {\n        return(FALSE)\n    }\n}\n", "\n  x <- 5\n  y <- 2\n\
    \  z <- 7\n  if(is.integer(x) == FALSE) {\n    return(FALSE)\n  } else if(is.integer(y)\
    \ == FALSE) {\n    return(FALSE)\n  } else if(is.integer(z) == FALSE) {\n    return(FALSE)\n\
    \  } else if((x + y) == z) {\n    return(TRUE)\n  } else if((x + z) == y) {\n\
    \    return(TRUE)\n  } else if((y + z) == x) {\n    return(TRUE)\n  } else {\n\
    \    return(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n", "\n  if (x == (y + z) || y == (x + z) || z ==\
    \ (x + y)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\nany_int(5,\
    \ 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if(is.integer(x)\
    \ & is.integer(y) & is.integer(z)) {\n    if(x == y + z) return(TRUE)\n    if(y\
    \ == x + z) return(TRUE)\n    if(z == x + y) return(TRUE)\n  }\n  return(FALSE)\n\
    }\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n",
  "\n    if(all(x, y, z == as.integer(x, y, z))) {\n        if(x == y + z | y == x\
    \ + z | z == x + y) {\n            print(\"TRUE\")\n        } else {\n       \
    \     print(\"FALSE\")\n        }\n    } else {\n        print(\"FALSE\")\n  \
    \  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n    x == y + z | x == y - z | y == x + z | y == x - z | z ==\
    \ x + y | z == x - y\n}", "\n    (x == y + z) | (y == x + z) | (z == x + y) &\
    \ is.integer(x) & is.integer(y) & is.integer(z)\n}\n", "\n  if (is.integer(x)\
    \ & is.integer(y) & is.integer(z)) {\n    if (x == y + z | y == x + z | z == x\
    \ + y) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else\
    \ {\n    return(FALSE)\n  }\n}", "\n    if (x == y + z || y == x + z || z == x\
    \ + y && is.integer(x) && is.integer(y) && is.integer(z)) {\n        TRUE\n  \
    \  } else {\n        FALSE\n    }\n}\n", "\n    if (is.integer(x) && is.integer(y)\
    \ && is.integer(z)) {\n        if (x == y + z || y == x + z || z == x + y) {\n\
    \            return(TRUE)\n        } else {\n            return(FALSE)\n     \
    \   }\n    } else {\n        return(FALSE)\n    }\n}\nany_int(3, 2, 2)\nany_int(3,\
    \ -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n  if(is.integer(x) && is.integer(y) &&\
    \ is.integer(z)) {\n    if(x == y + z | y == x + z | z == x + y) {\n      return(TRUE)\n\
    \    } else {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n  }\n\
    }\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n",
  "\n    is_int <- (is.integer(x) & is.integer(y) & is.integer(z))\n    is_sum <-\
    \ (x + y == z | x + z == y | y + z == x)\n    is_int & is_sum\n}\nany_int(5, 2,\
    \ 7)\n\nany_int(3, 2, 2)\n\nany_int(3, -2, 1)\n\nany_int(3.6, -2.2, 2)", "\n \
    \ if (is.integer(x + y + z)) {\n    if (x == y + z | y == x + z | z == x + y)\
    \ {\n      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else {\n\
    \    return(FALSE)\n  }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n", "\n  if (x == y + z | y == x + z | z == x + y)\
    \ {\n    if (x %in% integer(x) | y %in% integer(y) | z %in% integer(z)) {\n  \
    \    return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else {\n    return(FALSE)\n\
    \  }\n}\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2,\
    \ 2)", "\n\tif(class(x) == \"integer\" & class(y) == \"integer\" & class(z) ==\
    \ \"integer\") {\n\t\tif(x == y + z | y == x + z | z == x + y) {\n\t\t\treturn(TRUE)\n\
    \t\t} else {\n\t\t\treturn(FALSE)\n\t\t}\n\t} else {\n\t\treturn(FALSE)\n\t}\n\
    }\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2, 1)\nany_int(3.6, -2.2,\
    \ 2)\n", "\n    (x==y+z | y==x+z | z==x+y) & (x%%1==0 & y%%1==0 & z%%1==0)\n}\n\
    any_int(3, -2, 1)\nany_int(3.6, -2.2, 2)\n", "\n    (isTRUE(all.equal(x, y + z))\
    \ |\n    isTRUE(all.equal(y, x + z)) |\n    isTRUE(all.equal(z, x + y))) &\n \
    \   isTRUE(all(sapply(list(x, y, z), is.integer)))\n}", "\n    if (all(is.integer(x),\
    \ is.integer(y), is.integer(z))) {\n        if (x == y + z) {\n            return(TRUE)\n\
    \        } else if (y == x + z) {\n            return(TRUE)\n        } else if\
    \ (z == x + y) {\n            return(TRUE)\n        } else {\n            return(FALSE)\n\
    \        }\n    } else {\n        return(FALSE)\n    }\n}\n", "\n    if(!(is.integer(x)\
    \ & is.integer(y) & is.integer(z))) return(FALSE)\n    return(any(x==(y+z), x==(y-z),\
    \ y==(x+z), y==(x-z), z==(x+y), z==(x-y)))\n}\nany_int(3, -2, 1)\nany_int(3.6,\
    \ -2.2, 2)\n", "\n    if(length(which(c(!is.integer(x), !is.integer(y), !is.integer(z))\
    \ == TRUE)) > 0) return(FALSE)\n    return(sum(!is.na(which(c(x, y, z) == x +\
    \ y | c(x, y, z) == x + z | c(x, y, z) == y + z))) > 0)\n}\n", "\n  if (x == y\
    \ + z | y == x + z | z == x + y) {\n    if (is.integer(x) & is.integer(y) & is.integer(z))\
    \ {\n      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  } else {\n\
    \    return(FALSE)\n  }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n", "\n    if (is.integer(x) & is.integer(y) & is.integer(z))\
    \ {\n        if ((x == y + z) | (y == x + z) | (z == x + y)) {\n            return(TRUE)\n\
    \        } else {\n            return(FALSE)\n        }\n    } else {\n      \
    \  return(FALSE)\n    }\n}\n\nany_int(5, 2, 7)\nany_int(3, 2, 2)\nany_int(3, -2,\
    \ 1)\nany_int(3.6, -2.2, 2)\n"]
stop_tokens:
- "\n#"
- "\n```"

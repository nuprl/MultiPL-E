name: HumanEval_77_iscube
language: r
prompt: "# Write a function that takes an integer a and returns TRUE \n# if this ingeger\
  \ is a cube of some integer number.\n# Note: you may assume the input is always\
  \ valid.\n# Examples:\n# >>> iscube(1)\n# TRUE\n# >>> iscube(2)\n# FALSE\n# >>>\
  \ iscube(-1)\n# TRUE\n# >>> iscube(64)\n# TRUE\n# >>> iscube(0)\n# TRUE\n# >>> iscube(180)\n\
  # FALSE\niscube <- function(a) {"
tests: "test_humaneval <- function() {\ncandidate <- iscube\n    if(!identical(candidate(1),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate(2), FALSE)){quit('no', 1)}\n\
  \    if(!identical(candidate(-1), TRUE)){quit('no', 1)}\n    if(!identical(candidate(64),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate(180), FALSE)){quit('no', 1)}\n\
  \    if(!identical(candidate(1000), TRUE)){quit('no', 1)}\n    if(!identical(candidate(0),\
  \ TRUE)){quit('no', 1)}\n    if(!identical(candidate(1729), FALSE)){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: ["\n    (a == 0) || (a == 1) || (a > 0 & round(a ^ (1/3)) ^ 3 == a) ||\
    \ (a < 0 & round(a ^ (1/3)) ^ 3 == -a)\n}\n", "\n  if (a == 0) {\n    return(TRUE)\n\
    \  }\n  else if (a < 0) {\n    a <- -a\n  }\n  if (floor(a ^ (1/3)) == a ^ (1/3))\
    \ {\n    return(TRUE)\n  }\n  else {\n    return(FALSE)\n  }\n}\n", "\n  if (a\
    \ == 0) {\n    return(TRUE)\n  }\n  if (a < 0) {\n    a = -a\n  }\n  return(round(a^(1/3))^3\
    \ == a)\n}\n", "\n    if (a == 0) return(TRUE)\n    c <- round(a^(1/3))\n    if\
    \ (a == c^3) return(TRUE)\n    else return(FALSE)\n}\n", "\n    return(a == round(a^(1/3))^3)\n\
    }\niscube(2)\n", "\n    v<-floor(a^(1/3))\n    if (v==a^(1/3)) {\n        return(TRUE)\n\
    \    } else {\n        return(FALSE)\n    }\n}\n", "\n    return(a %% length(seq(0,\
    \ floor(a^(1/3)), 1)) == 0)\n}\n", "\n    if (a == 0) {\n        return(TRUE)\n\
    \    } else if (a < 0) {\n        a = -a\n    }\n    x = round(cbrt(a))\n    if\
    \ (x^3 == a) {\n        return(TRUE)\n    } else {\n        return(FALSE)\n  \
    \  }\n}\n", "\n  # Write the body of the function\n  if(a==0)\n    return(TRUE)\n\
    \  a = abs(a)\n  i = 0\n  while(i*i*i < a)\n    i = i + 1\n  if(i*i*i == a)\n\
    \    return(TRUE)\n  else\n    return(FALSE)\n}", "\n\treturn (sqrt(a) %% 1 ==\
    \ 0)\n}\n", "\n  return(any(a == 0) || length(floor(cbrt(a))) == 1)\n}", "\n \
    \   if (a == 0 | a == 1) {\n        TRUE\n    } else if (a < 0) {\n        TRUE\n\
    \    } else {\n        x <- a%%3\n        y <- a - x\n        y%%3 == 0\n    }\n\
    }\na <- seq(-200, 200)\nb <- a[iscube(a)]\nprint(b)\n", "\n  is_square <- function(n)\
    \ {\n    sqrt_n <- sqrt(n)\n    if (sqrt_n - floor(sqrt_n) == 0)\n      TRUE\n\
    \    else\n      FALSE\n  }\n  if (a == 0) {\n    TRUE\n  } else if (a < 0) {\n\
    \    is_square(-a)\n  } else {\n    is_square(a)\n  }\n}\niscube(1)\niscube(2)\n\
    iscube(-1)\niscube(64)\niscube(0)\niscube(180)\n", "\n  \n  # Your code here\n\
    \  b <- (a)^(1/3)\n  if(b %% 1 == 0) return (TRUE)\n  return (FALSE)\n}\n", "\n\
    \  \n}\n", "\n    c <- a\n    a <- abs(a)\n    for (i in 0:100) {\n        if\
    \ (a == i^3) {\n            if (c == 0) {\n                return(TRUE)\n    \
    \        } else if (c > 0) {\n                return(TRUE)\n            } else\
    \ {\n                return(FALSE)\n            }\n        }\n    }\n    return(FALSE)\n\
    }\niscube(180)\n", "\n    sqrt(a) %% 1 == 0\n}\n", "\n    cube <- function(x)\
    \ {\n        x ^ 3\n    }\n    a == cube(round(exp(log(a)/3)))\n}\niscube(-1)\n",
  "\n  if (a == 0) {\n    return(TRUE)\n  }\n  return(sqrt(a) == trunc(sqrt(a)))\n\
    }\n", "\n  # YOUR CODE HERE\n  if (a == 0 | a == 1 | a == -1){\n    return(TRUE)\n\
    \  }\n  x = ceiling(abs(a)^(1/3))\n  y = (x^3)\n  z = (x^3)*(-1)\n  if (y == a\
    \ | z == a){\n    return(TRUE)\n  }\n  else {\n    return(FALSE)\n  }\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

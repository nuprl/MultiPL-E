name: HumanEval_116_sort_array
language: js
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\nfunction sort_array(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5]);\n\
  \  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1,\
  \ 0, 2, 3, 4]),[0, 1, 2, 4, 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["  return arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x=='1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x=='1').length;\n    if(aBin\
    \ == bBin){\n      return a-b;\n    }else{\n      return aBin-bBin;\n    }\n \
    \ });\n}\n", "  return arr.sort((a,b)=>{\n    let aBin = a.toString(2);\n    let\
    \ bBin = b.toString(2);\n    let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \    let bOnes = bBin.split('').filter(x=>x==='1').length;\n    if(aOnes === bOnes){\n\
    \      return a-b;\n    }\n    return aOnes-bOnes;\n  });\n}\n", "  let sorted\
    \ = arr.sort((a,b) => {\n    let aOnes = a.toString(2).split('').filter(x => x\
    \ === '1').length;\n    let bOnes = b.toString(2).split('').filter(x => x ===\
    \ '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    } else {\n\
    \      return aOnes - bOnes;\n    }\n  });\n  return sorted;\n}\n", "    return\
    \ arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x=>x==='1').length;\n        let bOnes\
    \ = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes === bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aOnes = a.toString(2).match(/1/g).length;\n\
    \        let bOnes = b.toString(2).match(/1/g).length;\n        if(aOnes > bOnes){\n\
    \            return 1;\n        }else if(aOnes < bOnes){\n            return -1;\n\
    \        }else{\n            return a - b;\n        }\n    });\n}\n", "    let\
    \ arr1 = arr.slice();\n    arr1.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }else{\n            return a1-b1;\n\
    \        }\n    });\n    return arr1;\n}\n", "  arr.sort(function(a,b){\n    var\
    \ aBin = a.toString(2);\n    var bBin = b.toString(2);\n    var aOnes = aBin.split('').filter(function(x){return\
    \ x=='1'}).length;\n    var bOnes = bBin.split('').filter(function(x){return x=='1'}).length;\n\
    \    if(aOnes == bOnes){\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n  return arr;\n}\n", "  return arr.sort(function(a,b){\n    var a1 = a.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    var b1 = b.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    if(a1===b1){\n      return a-b;\n    }\n    return a1-b1;\n\
    \  });\n}\n", "  return arr.sort(function(a,b){\n    var a1 = a.toString(2).split('').filter(function(x){return\
    \ x==1}).length;\n    var b1 = b.toString(2).split('').filter(function(x){return\
    \ x==1}).length;\n    if(a1 == b1){\n      return a-b;\n    }else{\n      return\
    \ a1-b1;\n    }\n  });\n}\n", "  //your code here\n  return arr.sort(function(a,b){\n\
    \    var aBin = a.toString(2);\n    var bBin = b.toString(2);\n    var aOnes =\
    \ (aBin.match(/1/g) || []).length;\n    var bOnes = (bBin.match(/1/g) || []).length;\n\
    \    if(aOnes > bOnes){\n      return 1;\n    }\n    else if(aOnes < bOnes){\n\
    \      return -1;\n    }\n    else{\n      return a - b;\n    }\n  });\n}\n",
  "  return arr.sort(function(a,b){\n    var a1 = a.toString(2).match(/1/g).length;\n\
    \    var b1 = b.toString(2).match(/1/g).length;\n    if(a1 === b1){\n      return\
    \ a-b;\n    }\n    return a1-b1;\n  });\n}\n", "  return arr.sort(function(a,b){\n\
    \    var a1 = a.toString(2).split('').filter(function(x){return x == 1}).length;\n\
    \    var b1 = b.toString(2).split('').filter(function(x){return x == 1}).length;\n\
    \    if(a1 == b1){\n      return a - b;\n    }\n    return a1 - b1;\n  });\n}\n",
  "  return arr.sort(function(a,b){\n    var a1 = a.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    var b1 = b.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    if(a1===b1){\n      return a-b;\n    }\n    return a1-b1;\n\
    \  });\n}\n", "  return arr.sort(function(a,b){\n    var aOnes = a.toString(2).match(/1/g).length;\n\
    \    var bOnes = b.toString(2).match(/1/g).length;\n    if(aOnes === bOnes){\n\
    \      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "  return\
    \ arr.sort(function(a,b){\n    var a1 = a.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    var b1 = b.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    if(a1 === b1){\n      return a-b;\n    }else{\n     \
    \ return a1-b1;\n    }\n  });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split(\"\
    \").filter(y => y === \"1\").length);\n    let arr2 = arr.map(x => x.toString(2).split(\"\
    \").filter(y => y === \"1\").length);\n    arr1.sort((a,b) => a-b);\n    arr2.sort((a,b)\
    \ => a-b);\n    let arr3 = [];\n    for(let i = 0; i < arr1.length; i++){\n  \
    \      arr3.push(arr2.indexOf(arr1[i]));\n    }\n    let arr4 = [];\n    for(let\
    \ i = 0; i < arr3.length; i++){\n        arr4.push(arr[arr3[i]]);\n    }\n   \
    \ return arr4;\n}\n", "  return arr.sort(function(a,b){\n    var aOnes = a.toString(2).match(/1/g).length;\n\
    \    var bOnes = b.toString(2).match(/1/g).length;\n    if(aOnes === bOnes){\n\
    \      return a - b;\n    } else {\n      return aOnes - bOnes;\n    }\n  });\n\
    }\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin===bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "  return arr.sort(function(a,b){\n    var aBin = a.toString(2);\n\
    \    var bBin = b.toString(2);\n    var aOnes = aBin.match(/1/g);\n    var bOnes\
    \ = bBin.match(/1/g);\n    if(aOnes === null && bOnes === null){\n      return\
    \ a - b;\n    }\n    if(aOnes === null){\n      return -1;\n    }\n    if(bOnes\
    \ === null){\n      return 1;\n    }\n    if(aOnes.length === bOnes.length){\n\
    \      return a - b;\n    }\n    return aOnes.length - bOnes.length;\n  });\n\
    }\n", "    return arr.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==1).length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==1).length;\n        return\
    \ a1-b1 || a-b;\n    })\n}\n", "  return arr.sort(function(a,b){\n    var aOnes\
    \ = a.toString(2).split('1').length - 1;\n    var bOnes = b.toString(2).split('1').length\
    \ - 1;\n    if(aOnes > bOnes){\n      return 1;\n    } else if(aOnes < bOnes){\n\
    \      return -1;\n    } else {\n      return a - b;\n    }\n  });\n}\n", "  let\
    \ sorted = arr.sort((a,b) => {\n    let aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length\n    let bBinary = b.toString(2).split('').filter(x =>\
    \ x === '1').length\n    if (aBinary === bBinary) {\n      return a - b\n    }\
    \ else {\n      return aBinary - bBinary\n    }\n  })\n  return sorted\n}\n",
  "  return arr.sort(function(a,b){\n    var aOnes = a.toString(2).split('1').length\
    \ - 1;\n    var bOnes = b.toString(2).split('1').length - 1;\n    if(aOnes ===\
    \ bOnes){\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "  return arr.sort(function(a,b){\n    var aBin = a.toString(2);\n    var bBin =\
    \ b.toString(2);\n    var aOnes = aBin.split('1').length - 1;\n    var bOnes =\
    \ bBin.split('1').length - 1;\n    if(aOnes > bOnes){\n      return 1;\n    }\n\
    \    else if(aOnes < bOnes){\n      return -1;\n    }\n    else{\n      return\
    \ a - b;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin\
    \ = a.toString(2).split('').filter(x=>x==='1').length;\n        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n\
    \        if(aBin===bBin){\n            return a-b;\n        }\n        return\
    \ aBin-bBin;\n    });\n}\n", "  return arr.sort((a,b) => {\n    let aBinary =\
    \ a.toString(2);\n    let bBinary = b.toString(2);\n    let aOnes = aBinary.match(/1/g).length;\n\
    \    let bOnes = bBinary.match(/1/g).length;\n    if (aOnes === bOnes) {\n   \
    \   return a - b;\n    } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "  return arr.sort(function(a,b){\n    var a1 = a.toString(2).split('1').length\
    \ - 1;\n    var b1 = b.toString(2).split('1').length - 1;\n    if(a1 == b1){\n\
    \      return a - b;\n    }\n    return a1 - b1;\n  });\n}\n", "    let sorted\
    \ = arr.sort((a,b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        } else {\n            return aBin - bBin;\n        }\n    });\n    return\
    \ sorted;\n}\n", "    let ones = [];\n    let zeros = [];\n    let result = [];\n\
    \    for(let i = 0; i < arr.length; i++){\n        let binary = arr[i].toString(2);\n\
    \        let count = 0;\n        for(let j = 0; j < binary.length; j++){\n   \
    \         if(binary[j] === '1'){\n                count++;\n            }\n  \
    \      }\n        if(count === 0){\n            zeros.push(arr[i]);\n        }else{\n\
    \            ones.push([arr[i], count]);\n        }\n    }\n    ones.sort((a,\
    \ b) => {\n        if(a[1] === b[1]){\n            return a[0] - b[0];\n     \
    \   }else{\n            return a[1] - b[1];\n        }\n    });\n    for(let i\
    \ = 0; i < ones.length; i++){\n        result.push(ones[i][0]);\n    }\n    for(let\
    \ i = 0; i < zeros.length; i++){\n        result.push(zeros[i]);\n    }\n    return\
    \ result;\n}\n", "    return arr.sort((a,b)=>{\n        let aBinary = a.toString(2);\n\
    \        let bBinary = b.toString(2);\n        let aOnes = aBinary.match(/1/g).length;\n\
    \        let bOnes = bBinary.match(/1/g).length;\n        if(aOnes === bOnes){\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n", "  return arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin===bBin){\n\
    \      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", "    let arr1 =\
    \ arr.slice().sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ return a1-b1;\n    });\n    return arr1;\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n        if(aBin\
    \ === bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('1').length-1;\n\
    \        let bOnes = bBin.split('1').length-1;\n        if(aOnes === bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "  return arr.sort((a,b)=>{\n    let aOnes = a.toString(2).match(/1/g).length;\n\
    \    let bOnes = b.toString(2).match(/1/g).length;\n    if(aOnes > bOnes){\n \
    \     return 1;\n    }else if(aOnes < bOnes){\n      return -1;\n    }else{\n\
    \      return a - b;\n    }\n  });\n}\n", "  return arr.sort((a,b)=>{\n    let\
    \ aBin = a.toString(2).split('').filter(x=>x==='1').length;\n    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n\
    \    if(aBin === bBin){\n      return a-b;\n    }\n    return aBin-bBin;\n  });\n\
    }\n", "  return arr.sort((a,b)=>{\n    let aBin = a.toString(2);\n    let bBin\
    \ = b.toString(2);\n    let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \    let bOnes = bBin.split('').filter(x=>x==='1').length;\n    if(aOnes === bOnes){\n\
    \      return a-b;\n    }\n    return aOnes-bOnes;\n  });\n}\n", "  return arr.sort((a,b)=>{\n\
    \    let aOnes = a.toString(2).split('').filter(x=>x==='1').length;\n    let bOnes\
    \ = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aOnes === bOnes){\n\
    \      return a-b;\n    }\n    return aOnes-bOnes;\n  });\n}\n", "  return arr.sort((a,b)=>{\n\
    \    let aBin = a.toString(2).match(/1/g).length;\n    let bBin = b.toString(2).match(/1/g).length;\n\
    \    if(aBin === bBin){\n      return a-b;\n    }\n    return aBin-bBin;\n  });\n\
    }\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin === bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "  return arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin\
    \ === bBin){\n      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", " \
    \ return arr.sort((a,b)=>{\n    let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n    if(a1===b1){\n\
    \      return a-b;\n    }\n    return a1-b1;\n  });\n}\n", "  return arr.sort((a,b)=>{\n\
    \    let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n    let bBin\
    \ = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin === bBin){\n\
    \      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x=>x==='1').length;\n        let bOnes =\
    \ bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n    \
    \        return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n", " \
    \ return arr.sort((a,b) => {\n    let aOnes = countOnes(a);\n    let bOnes = countOnes(b);\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    } else {\n      return aOnes\
    \ - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let a1\
    \ = a.toString(2).split('').filter(x=>x=='1').length;\n        let b1 = b.toString(2).split('').filter(x=>x=='1').length;\n\
    \        if(a1==b1){\n            return a-b;\n        }\n        return a1-b1;\n\
    \    })\n}\n", "    return arr.sort((a,b)=>{\n        let a1 = a.toString(2).match(/1/g).length;\n\
    \        let b1 = b.toString(2).match(/1/g).length;\n        return a1 == b1 ?\
    \ a - b : a1 - b1;\n    });\n}\n", "  return arr.sort((a,b) => {\n    let aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n    let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    let sorted =\
    \ arr.sort((a,b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        } else {\n            return aBin - bBin;\n        }\n    });\n    return\
    \ sorted;\n}\n", "  let arr1 = arr.slice();\n  arr1.sort((a,b)=>{\n    let a1\
    \ = a.toString(2).split('').filter(x=>x==1).length;\n    let b1 = b.toString(2).split('').filter(x=>x==1).length;\n\
    \    if(a1==b1){\n      return a-b;\n    }\n    return a1-b1;\n  });\n  return\
    \ arr1;\n}\n", "    //your code here\n    return arr.sort((a,b)=>{\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('').filter(x=>x==='1').length;\n        let bOnes = bBin.split('').filter(x=>x==='1').length;\n\
    \        if(aOnes===bOnes){\n            return a-b;\n        }\n        return\
    \ aOnes-bOnes;\n    });\n}\n", "    return arr.sort((a,b)=>{\n        let a1 =\
    \ a.toString(2).split('').filter(x=>x==='1').length;\n        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n\
    \        if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n\
    \    });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.match(/1/g);\n  \
    \      let bOnes = bBin.match(/1/g);\n        if(aOnes && bOnes){\n          \
    \  if(aOnes.length === bOnes.length){\n                return a - b;\n       \
    \     }\n            return aOnes.length - bOnes.length;\n        }\n        if(aOnes){\n\
    \            return -1;\n        }\n        if(bOnes){\n            return 1;\n\
    \        }\n        return a - b;\n    });\n}\n", "  return arr.sort((a,b) =>\
    \ {\n    let aBin = a.toString(2).split('').filter(x => x === '1').length;\n \
    \   let bBin = b.toString(2).split('').filter(x => x === '1').length;\n    if\
    \ (aBin === bBin) {\n      return a - b;\n    } else {\n      return aBin - bBin;\n\
    \    }\n  });\n}\n", "  return arr.sort((a,b) => {\n    let aBin = a.toString(2);\n\
    \    let bBin = b.toString(2);\n    let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n    let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    } else {\n      return aOnes\
    \ - bOnes;\n    }\n  });\n}\n", "  let sorted = arr.sort((a,b) => {\n    let aBin\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n    let bBin = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n    if (aBin === bBin) {\n      return a - b;\n    }\
    \ else {\n      return aBin - bBin;\n    }\n  });\n  return sorted;\n}\n", " \
    \ return arr.sort((a,b) => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n\
    \    let aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n    if (aOnes === bOnes) {\n\
    \      return a - b;\n    } else {\n      return aOnes - bOnes;\n    }\n  });\n\
    }\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n     \
    \   let bBin = b.toString(2);\n        let aOnes = 0;\n        let bOnes = 0;\n\
    \        for(let i = 0; i < aBin.length; i++){\n            if(aBin[i] === '1'){\n\
    \                aOnes++;\n            }\n        }\n        for(let i = 0; i\
    \ < bBin.length; i++){\n            if(bBin[i] === '1'){\n                bOnes++;\n\
    \            }\n        }\n        if(aOnes === bOnes){\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x => x === '1').length;\n    if\
    \ (aBin === bBin) {\n      return a - b;\n    } else {\n      return aBin - bBin;\n\
    \    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin === bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "    return arr.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n  \
    \  });\n}\n", "  return arr.sort((a,b) => {\n    let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bOnes = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    } else\
    \ {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  if(aBin.match(/1/g) === null && bBin.match(/1/g) === null){\n            return\
    \ a - b;\n        }\n        if(aBin.match(/1/g) === null){\n            return\
    \ -1;\n        }\n        if(bBin.match(/1/g) === null){\n            return 1;\n\
    \        }\n        if(aBin.match(/1/g).length === bBin.match(/1/g).length){\n\
    \            return a - b;\n        }\n        return aBin.match(/1/g).length\
    \ - bBin.match(/1/g).length;\n    });\n}\n", "    //your code here\n    let sorted\
    \ = arr.sort((a,b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        } else {\n            return aBin - bBin;\n        }\n    });\n    return\
    \ sorted;\n}\n", "  return arr.sort((a,b) => {\n    let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bOnes = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    } else\
    \ {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aOnes = a.toString(2).split('').filter(x=>x==='1').length;\n    \
    \    let bOnes = b.toString(2).split('').filter(x=>x==='1').length;\n        if(aOnes\
    \ === bOnes){\n            return a-b;\n        }\n        return aOnes-bOnes;\n\
    \    });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.match(/1/g).length;\n\
    \        let bOnes = bBin.match(/1/g).length;\n        if(aOnes > bOnes){\n  \
    \          return 1;\n        }else if(aOnes < bOnes){\n            return -1;\n\
    \        }else{\n            return a - b;\n        }\n    });\n}\n", "  return\
    \ arr.sort((a,b) => {\n    let onesA = a.toString(2).split('').filter(x => x ===\
    \ '1').length;\n    let onesB = b.toString(2).split('').filter(x => x === '1').length;\n\
    \    if (onesA === onesB) {\n      return a - b;\n    } else {\n      return onesA\
    \ - onesB;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin\
    \ = a.toString(2).split('').filter(x=>x==='1').length;\n        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n\
    \        if(aBin===bBin){\n            return a-b;\n        }\n        return\
    \ aBin-bBin;\n    });\n}\n", "    return arr.sort((a,b)=>{\n        let aOnes\
    \ = (a.toString(2).match(/1/g) || []).length;\n        let bOnes = (b.toString(2).match(/1/g)\
    \ || []).length;\n        return aOnes === bOnes ? a - b : aOnes - bOnes;\n  \
    \  });\n}", "  return arr.sort((a,b) => {\n    let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n    if (aBin === bBin) {\n      return a - b;\n    } else\
    \ {\n      return aBin - bBin;\n    }\n  });\n}\n", "    let binArr = [];\n  \
    \  let binArr2 = [];\n    let binArr3 = [];\n    let binArr4 = [];\n    let binArr5\
    \ = [];\n    let binArr6 = [];\n    let binArr7 = [];\n    let binArr8 = [];\n\
    \    let binArr9 = [];\n    let binArr10 = [];\n    let binArr11 = [];\n    let\
    \ binArr12 = [];\n    let binArr13 = [];\n    let binArr14 = [];\n    let binArr15\
    \ = [];\n    let binArr16 = [];\n    let binArr17 = [];\n    let binArr18 = [];\n\
    \    let binArr19 = [];\n    let binArr20 = [];\n    let binArr21 = [];\n    let\
    \ binArr22 = [];\n    let binArr23 = [];\n    let binArr24 = [];\n    let binArr25\
    \ = [];\n    let binArr26 = [];\n    let binArr27 = [];\n    let binArr28 = [];\n\
    \    let binArr29 = [];\n    let binArr30 = [];\n    let binArr31 = [];\n    let\
    \ binArr32 = [];\n    let binArr33 = [];\n    let binArr34 = [];\n    let binArr35\
    \ = [];\n    let binArr36 = [];\n    let binArr37 = [];\n    let binArr38 = [];\n\
    \    let binArr39 = [];\n    let binArr40 = [];\n    let binArr41 = [];\n    let\
    \ binArr42 = [];\n    let binArr43 = [];\n    let binArr44 = [];\n    let binArr45\
    \ = [];\n    let binArr46 = [];\n    let binArr47 = [];\n    let binArr48 = [];\n\
    \    let binArr49 = [];\n    let binArr50 = [];\n    let binArr51 = [];\n    let\
    \ binArr52 = [];\n    let binArr53 = [];\n    let binArr54 = [];\n    let binArr55\
    \ = [];\n    let binArr56 = [];\n    let binArr57 = [];", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(e => e === '1').length;\n    let bOnes = bBin.split('').filter(e\
    \ => e === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n        if(aBin===bBin){\n\
    \            return a-b;\n        }\n        return aBin-bBin;\n    });\n}\n",
  "  return arr.sort((a,b) => {\n    let aOnes = a.toString(2).split('').filter(x\
    \ => x == 1).length;\n    let bOnes = b.toString(2).split('').filter(x => x ==\
    \ 1).length;\n    if (aOnes == bOnes) {\n      return a - b;\n    } else {\n \
    \     return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort((a,b) => {\n\
    \    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let aOnes =\
    \ aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let a1 = a.toString(2).split(\"\").filter(x=>x===\"1\").length;\n   \
    \     let b1 = b.toString(2).split(\"\").filter(x=>x===\"1\").length;\n      \
    \  if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n \
    \   });\n}\n", "  return arr.sort((a,b) => {\n    let aOnes = (a >>> 0).toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bOnes = (b >>> 0).toString(2).split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  //your code here\n\
    \  return arr.sort((a,b)=>{\n    let aOnes = a.toString(2).split('').filter(e=>e==='1').length;\n\
    \    let bOnes = b.toString(2).split('').filter(e=>e==='1').length;\n    if(aOnes\
    \ === bOnes){\n      return a-b;\n    }\n    return aOnes-bOnes;\n  });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin===bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "  let sorted = arr.sort((a,b) => {\n    let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n    if (aBin === bBin) {\n      return a - b;\n    } else\
    \ {\n      return aBin - bBin;\n    }\n  });\n  return sorted;\n}\n", "  return\
    \ arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin===bBin){\n\
    \      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", "    let arr1 =\
    \ arr.map(x => {\n        let bin = x.toString(2);\n        return {\n       \
    \     num: x,\n            ones: bin.split('').filter(y => y === '1').length\n\
    \        }\n    });\n    arr1.sort((a, b) => {\n        if (a.ones === b.ones)\
    \ {\n            return a.num - b.num;\n        }\n        return a.ones - b.ones;\n\
    \    });\n    return arr1.map(x => x.num);\n}\n", "  return arr.sort((a,b)=>{\n\
    \    let aBinary = a.toString(2);\n    let bBinary = b.toString(2);\n    let aOnes\
    \ = aBinary.split('').filter(x=>x==='1').length;\n    let bOnes = bBinary.split('').filter(x=>x==='1').length;\n\
    \    if(aOnes===bOnes){\n      return a-b;\n    }\n    return aOnes-bOnes;\n \
    \ });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n  \
    \  });\n}\n", "  return arr.sort((a,b)=>{\n    let aBin = a.toString(2);\n   \
    \ let bBin = b.toString(2);\n    let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \    let bOnes = bBin.split('').filter(x=>x==='1').length;\n    if(aOnes===bOnes){\n\
    \      return a-b;\n    }\n    return aOnes-bOnes;\n  });\n}\n", "  return arr.sort((a,b)=>{\n\
    \    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let aOnes =\
    \ aBin.split('').filter(x=>x==='1').length;\n    let bOnes = bBin.split('').filter(x=>x==='1').length;\n\
    \    if(aOnes>bOnes){\n      return 1;\n    }\n    else if(aOnes<bOnes){\n   \
    \   return -1;\n    }\n    else{\n      return a-b;\n    }\n  });\n}\n", "  return\
    \ arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin===bBin){\n\
    \      return a-b;\n    }else{\n      return aBin-bBin;\n    }\n  });\n}\n", " \
    \   return arr.sort((a,b)=>{\n        let aOnes = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x=>x==='1').length;\n    \
    \    if(aOnes===bOnes){\n            return a-b;\n        }\n        return aOnes-bOnes;\n\
    \    });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n  \
    \  });\n}\n", "  return arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin===bBin){\n\
    \      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x=>x==='1').length;\n        let bOnes =\
    \ bBin.split('').filter(x=>x==='1').length;\n        if(aOnes === bOnes){\n  \
    \          return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes\
    \ === bOnes){\n            return a-b;\n        }\n        return aOnes-bOnes;\n\
    \    });\n}\n", "  return arr.sort((a,b) => {\n    let aBin = a.toString(2);\n\
    \    let bBin = b.toString(2);\n    let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n    let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    } else {\n      return aOnes\
    \ - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin\
    \ = a.toString(2).split('').filter(x=>x==='1').length;\n        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n\
    \        if(aBin===bBin){\n            return a-b;\n        }else{\n         \
    \   return aBin-bBin;\n        }\n    });\n}\n", "  return arr.sort((a,b)=>{\n\
    \    let a1 = a.toString(2).split('').filter(e=>e==='1').length;\n    let b1 =\
    \ b.toString(2).split('').filter(e=>e==='1').length;\n    if(a1===b1){\n     \
    \ return a-b;\n    }\n    return a1-b1;\n  });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n        if(aBin\
    \ === bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "  //your code here\n  return arr.sort((a,b)=>{\n    let aBin\
    \ = a.toString(2);\n    let bBin = b.toString(2);\n    let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \    let bOnes = bBin.split('').filter(x=>x==='1').length;\n    if(aOnes===bOnes){\n\
    \      return a-b;\n    }\n    return aOnes-bOnes;\n  });\n}\n", "  let arr1 =\
    \ arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n  let\
    \ arr2 = arr.map(x => x.toString(2).split('').filter(x => x === '1').length);\n\
    \  arr2.sort((a,b) => a-b);\n  let arr3 = arr2.map(x => arr[arr1.indexOf(x)]);\n\
    \  return arr3;\n}\n", "    return arr.sort((a,b)=>{\n        return (a.toString(2).match(/1/g)||[]).length\
    \ - (b.toString(2).match(/1/g)||[]).length || a-b\n    })\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aOnes = (a >>> 0).toString(2).match(/1/g).length;\n    let bOnes\
    \ = (b >>> 0).toString(2).match(/1/g).length;\n    return aOnes === bOnes ? a\
    \ - b : aOnes - bOnes;\n  });\n}", "  return arr.sort((a,b)=>{\n    let aBin =\
    \ a.toString(2).split('').filter(x=>x==='1').length;\n    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n\
    \    if(aBin === bBin){\n      return a-b;\n    }\n    return aBin-bBin;\n  });\n\
    }\n", "  var arr1 = arr.slice();\n  var arr2 = arr.slice();\n  arr1.sort(function(a,b){\n\
    \    return a - b;\n  });\n  arr2.sort(function(a,b){\n    return (a.toString(2).match(/1/g)\
    \ || []).length - (b.toString(2).match(/1/g) || []).length;\n  });\n  var arr3\
    \ = [];\n  for(var i = 0; i < arr1.length; i++){\n    for(var j = 0; j < arr2.length;\
    \ j++){\n      if(arr1[i] === arr2[j]){\n        arr3.push(arr2[j]);\n       \
    \ arr2.splice(j,1);\n      }\n    }\n  }\n  return arr3;\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x=>x==='1').length;\n        let bOnes =\
    \ bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n    \
    \        return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n", " \
    \ return arr.sort((a,b)=>{\n    let aBinary = a.toString(2);\n    let bBinary\
    \ = b.toString(2);\n    let aOnes = aBinary.split('').filter(x=>x==='1').length;\n\
    \    let bOnes = bBinary.split('').filter(x=>x==='1').length;\n    if(aOnes ===\
    \ bOnes){\n      return a-b;\n    }\n    return aOnes-bOnes;\n  });\n}\n", " \
    \ return arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin\
    \ === bBin){\n      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", " \
    \ return arr.sort((a,b)=>{\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n\
    \    let aOnes = aBin.match(/1/g).length;\n    let bOnes = bBin.match(/1/g).length;\n\
    \    if(aOnes === bOnes){\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n}\n", "  return arr.sort((a,b)=>{\n    let aOnes = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let bOnes = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aOnes\
    \ === bOnes){\n      return a-b;\n    }\n    return aOnes-bOnes;\n  });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aCount = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bCount = bBin.split('').filter(x=>x==='1').length;\n        if(aCount===bCount){\n\
    \            return a-b;\n        }\n        return aCount-bCount;\n    });\n\
    }\n", "  return arr.sort(function(a,b){\n    var aBin = a.toString(2).split('').filter(function(x){return\
    \ x==1}).length;\n    var bBin = b.toString(2).split('').filter(function(x){return\
    \ x==1}).length;\n    if(aBin === bBin){\n      return a-b;\n    }\n    return\
    \ aBin-bBin;\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin === bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin === bBin){\n            return a-b;\n        }else{\n            return\
    \ aBin-bBin;\n        }\n    });\n}\n", "    return arr.sort((a,b)=>{\n      \
    \  let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('').filter(x=>x==='1').length;\n        let bOnes = bBin.split('').filter(x=>x==='1').length;\n\
    \        if(aOnes===bOnes){\n            return a-b;\n        }else{\n       \
    \     return aOnes-bOnes;\n        }\n    });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x=>x==='1').length;\n        let bOnes =\
    \ bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n    \
    \        return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n", " \
    \ let sorted = arr.sort((a,b) => {\n    let aBin = a.toString(2);\n    let bBin\
    \ = b.toString(2);\n    let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \    let bOnes = bBin.split('').filter(x => x === '1').length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    } else {\n      return aOnes - bOnes;\n\
    \    }\n  });\n  return sorted;\n}\n", "  return arr.sort(function(a,b){\n   \
    \ var aBin = a.toString(2).split('').filter(function(x){return x==='1'}).length;\n\
    \    var bBin = b.toString(2).split('').filter(function(x){return x==='1'}).length;\n\
    \    if(aBin === bBin){\n      return a-b;\n    }\n    return aBin-bBin;\n  });\n\
    }\n", "  return arr.sort((a,b) => {\n    let aBin = a.toString(2);\n    let bBin\
    \ = b.toString(2);\n    let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \    let bOnes = bBin.split('').filter(x => x === '1').length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    } else {\n      return aOnes - bOnes;\n\
    \    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n  \
    \  });\n}", "    let sorted = arr.sort(function(a,b){\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if(aBin === bBin){\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n    return sorted;\n}\n", " \
    \ return arr.sort(function(a,b){\n    var aOnes = a.toString(2).match(/1/g).length;\n\
    \    var bOnes = b.toString(2).match(/1/g).length;\n    if(aOnes === bOnes){\n\
    \      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n", "  //your\
    \ code here\n  return arr.sort(function(a,b){\n    var a1 = a.toString(2).split(\"\
    1\").length - 1;\n    var b1 = b.toString(2).split(\"1\").length - 1;\n    return\
    \ a1 - b1 || a - b;\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "  arr.sort(function(a,b){\n    var aBin = a.toString(2);\n    var bBin = b.toString(2);\n\
    \    var aOnes = aBin.split('').filter(function(x){return x==='1'}).length;\n\
    \    var bOnes = bBin.split('').filter(function(x){return x==='1'}).length;\n\
    \    if(aOnes === bOnes){\n      return a - b;\n    }\n    return aOnes - bOnes;\n\
    \  });\n  return arr;\n}\n", "    let arr2 = arr.map(x => x.toString(2));\n  \
    \  arr2.sort((a,b) => {\n        if (a.split('').filter(x => x === '1').length\
    \ === b.split('').filter(x => x === '1').length) {\n            return a - b;\n\
    \        } else {\n            return a.split('').filter(x => x === '1').length\
    \ - b.split('').filter(x => x === '1').length;\n        }\n    });\n    return\
    \ arr2.map(x => parseInt(x, 2));\n}\n", "  return arr.sort(function(a,b){\n  \
    \  var aBin = a.toString(2);\n    var bBin = b.toString(2);\n    var aOnes = aBin.split('1').length-1;\n\
    \    var bOnes = bBin.split('1').length-1;\n    if(aOnes === bOnes){\n      return\
    \ a-b;\n    }\n    return aOnes-bOnes;\n  });\n}\n", "    let arr1 = arr.slice();\n\
    \    arr1.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n  \
    \  });\n    return arr1;\n}\n", "    return arr.sort((a,b)=>{\n        let a1\
    \ = a.toString(2).split('').filter(x=>x==='1').length;\n        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n\
    \        if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n\
    \    });\n}", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin === bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "    let sorted = arr.sort((a,b) => {\n        let binaryA = a.toString(2);\n\
    \        let binaryB = b.toString(2);\n        let countA = binaryA.split('').filter(i\
    \ => i === '1').length;\n        let countB = binaryB.split('').filter(i => i\
    \ === '1').length;\n        if (countA === countB) {\n            return a - b;\n\
    \        } else {\n            return countA - countB;\n        }\n    });\n \
    \   return sorted;\n}\n", "    arr.sort(function(a,b){\n        var a1 = a.toString(2).split('1').length\
    \ - 1;\n        var b1 = b.toString(2).split('1').length - 1;\n        if(a1 ==\
    \ b1){\n            return a - b;\n        }\n        return a1 - b1;\n    });\n\
    \    return arr;\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n  \
    \  });\n}\n", "    return arr.sort((a,b)=>{\n        let aOnes = a.toString(2).split('').filter(x=>x==1).length;\n\
    \        let bOnes = b.toString(2).split('').filter(x=>x==1).length;\n       \
    \ if(aOnes == bOnes){\n            return a-b;\n        }\n        return aOnes-bOnes;\n\
    \    });\n}\n", "  let sorted = arr.sort((a,b) => {\n    let aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bBinary = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n    if (aBinary === bBinary) {\n      return a - b;\n  \
    \  } else {\n      return aBinary - bBinary;\n    }\n  });\n  return sorted;\n\
    }\n", "  return arr.sort(function(a,b){\n    var aOne = a.toString(2).split('').filter(function(x){return\
    \ x==1}).length;\n    var bOne = b.toString(2).split('').filter(function(x){return\
    \ x==1}).length;\n    if(aOne==bOne){\n      return a-b;\n    }else{\n      return\
    \ aOne-bOne;\n    }\n  });\n}\n", "  return arr.sort(function(a,b){\n    var a1\
    \ = a.toString(2).split('').filter(function(x){return x==='1'}).length;\n    var\
    \ b1 = b.toString(2).split('').filter(function(x){return x==='1'}).length;\n \
    \   if(a1 === b1){\n      return a-b;\n    }else{\n      return a1-b1;\n    }\n\
    \  });\n}\n", "  return arr.sort(function(a,b){\n    var a1 = a.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    var b1 = b.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    if(a1===b1){\n      return a-b;\n    }else{\n      return\
    \ a1-b1;\n    }\n  });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    arr2.sort((a, b) => a - b);\n    let arr3 = [];\n\
    \    for (let i = 0; i < arr2.length; i++) {\n        let index = arr1.indexOf(arr2[i]);\n\
    \        arr3.push(arr[index]);\n        arr1[index] = -1;\n    }\n    return\
    \ arr3;\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "  return arr.sort((a,b) => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n\
    \    let aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n    if (aOnes === bOnes) {\n\
    \      return a - b;\n    } else {\n      return aOnes - bOnes;\n    }\n  });\n\
    }\n", "  arr.sort(function(a,b){\n    var a_ones = a.toString(2).split('').filter(function(x){return\
    \ x == '1'}).length;\n    var b_ones = b.toString(2).split('').filter(function(x){return\
    \ x == '1'}).length;\n    if(a_ones > b_ones){\n      return 1;\n    }\n    else\
    \ if(a_ones < b_ones){\n      return -1;\n    }\n    else{\n      return a - b;\n\
    \    }\n  });\n  return arr;\n}\n", "    // your code here\n    return arr.sort((a,b)=>{\n\
    \        return (a.toString(2).match(/1/g) || []).length - (b.toString(2).match(/1/g)\
    \ || []).length || a - b;\n    });\n}\n", "  return arr.sort((a,b) => {\n    let\
    \ aBin = a.toString(2).split('').filter(x => x === '1').length;\n    let bBin\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n    if (aBin === bBin)\
    \ {\n      return a - b;\n    } else {\n      return aBin - bBin;\n    }\n  });\n\
    }\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin===bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "  return arr.sort((a,b) => {\n    let aBin = a.toString(2);\n\
    \    let bBin = b.toString(2);\n    let aOnes = aBin.split('1').length - 1;\n\
    \    let bOnes = bBin.split('1').length - 1;\n    if (aOnes > bOnes) {\n     \
    \ return 1;\n    } else if (aOnes < bOnes) {\n      return -1;\n    } else {\n\
    \      return a - b;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n    \
    \    let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x=>x==='1').length;\n        let bOnes = bBin.split('').filter(x=>x==='1').length;\n\
    \        if(aOnes===bOnes){\n            return a-b;\n        }\n        return\
    \ aOnes-bOnes;\n    });\n}\n", "  return arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x==1).length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x==1).length;\n    if(aBin ==\
    \ bBin){\n      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", "    return\
    \ arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin===bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "  //your code here\n  return arr.sort((a,b)=>{\n    let a1 =\
    \ a.toString(2).split('').filter(x=>x==='1').length;\n    let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n\
    \    return a1===b1?a-b:a1-b1;\n  });\n}\n", "  return arr.sort((a,b) => {\n \
    \   let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let aOnes =\
    \ aBin.match(/1/g).length;\n    let bOnes = bBin.match(/1/g).length;\n    if (aOnes\
    \ === bOnes) {\n      return a - b;\n    } else {\n      return aOnes - bOnes;\n\
    \    }\n  });\n}\n", "  return arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin\
    \ === bBin){\n      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", " \
    \ return arr.sort((a,b) => {\n    let aOnes = (a.toString(2).match(/1/g) || []).length;\n\
    \    let bOnes = (b.toString(2).match(/1/g) || []).length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    } else {\n      return aOnes - bOnes;\n \
    \   }\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let aOnes = a.toString(2).split('').filter(x=>x==='1').length\n\
    \        let bOnes = b.toString(2).split('').filter(x=>x==='1').length\n     \
    \   if(aOnes===bOnes){\n            return a-b\n        }\n        return aOnes-bOnes\n\
    \    })\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes\
    \ === bOnes){\n            return a-b;\n        }\n        return aOnes-bOnes;\n\
    \    });\n}\n", "    return arr.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n  \
    \  });\n}\n", "  return arr.sort((a,b)=>{\n    let aBin = a.toString(2);\n   \
    \ let bBin = b.toString(2);\n    let aOnes = aBin.match(/1/g).length;\n    let\
    \ bOnes = bBin.match(/1/g).length;\n    if(aOnes === bOnes){\n      return a-b;\n\
    \    }\n    return aOnes-bOnes;\n  });\n}\n", "  return arr.sort((a,b)=>{\n  \
    \  let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n    let bBin\
    \ = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin===bBin){\n\
    \      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x=>x==='1').length;\n        let bOnes =\
    \ bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n    \
    \        return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}", " \
    \ return arr.sort((a,b) => {\n    let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bOnes = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    } else\
    \ {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \    let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n    if\
    \ (aOnes === bOnes) {\n      return a - b;\n    } else {\n      return aOnes -\
    \ bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    arr.sort(function(a,b){\n        var a1 = a.toString(2).split('1').length -\
    \ 1;\n        var b1 = b.toString(2).split('1').length - 1;\n        if(a1 ===\
    \ b1){\n            return a - b;\n        }\n        return a1 - b1;\n    });\n\
    \    return arr;\n}\n", "  let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n  let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length).sort((a,b) => a-b);\n  let arr3 = [];\n  for (let i =\
    \ 0; i < arr2.length; i++) {\n    for (let j = 0; j < arr1.length; j++) {\n  \
    \    if (arr2[i] === arr1[j]) {\n        arr3.push(arr[j]);\n        arr1[j] =\
    \ -1;\n      }\n    }\n  }\n  return arr3;\n}\n", "  return arr.sort((a,b) =>\
    \ {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(el => el === '1').length;\n    let bOnes = bBin.split('').filter(el\
    \ => el === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n  \
    \  } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort((a,b)\
    \ => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  //your code here\n\
    \  return arr.sort((a,b)=>{\n    let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \    let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n    if(aBin\
    \ === bBin){\n      return a-b;\n    }\n    return aBin-bBin;\n  });\n}\n", " \
    \ return arr.sort((a,b) => {\n    let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bOnes = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    } else\
    \ {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "  return arr.sort(function(a,b){\n\
    \    var aBin = a.toString(2);\n    var bBin = b.toString(2);\n    var aOnes =\
    \ aBin.split('').filter(function(x){return x == '1'}).length;\n    var bOnes =\
    \ bBin.split('').filter(function(x){return x == '1'}).length;\n    if(aOnes ==\
    \ bOnes){\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "  return arr.sort(function(a,b){\n    var a_ones = a.toString(2).split('1').length-1;\n\
    \    var b_ones = b.toString(2).split('1').length-1;\n    if(a_ones > b_ones){\n\
    \      return 1;\n    }\n    else if(a_ones < b_ones){\n      return -1;\n   \
    \ }\n    else{\n      return a - b;\n    }\n  });\n}\n", "    return arr.sort((a,b)=>{\n\
    \        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n        if(aBin===bBin){\n\
    \            return a-b;\n        }\n        return aBin-bBin;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('').filter(e=>e==='1').length;\n\
    \        let bOnes = bBin.split('').filter(e=>e==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n        let\
    \ bOnes = bBin.split('1').length - 1;\n        if(aOnes === bOnes){\n        \
    \    return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", " \
    \   return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x=='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x=='1').length;\n      \
    \  if(aBin==bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes===bOnes){\n\
    \            return a-b;\n        }\n        return aOnes-bOnes;\n    });\n}\n",
  "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('').filter(x=>x==='1').length;\n\
    \        let bOnes = bBin.split('').filter(x=>x==='1').length;\n        if(aOnes\
    \ === bOnes){\n            return a-b;\n        }\n        return aOnes-bOnes;\n\
    \    });\n}\n", "    let sorted = arr.sort((a,b) => {\n        let binA = a.toString(2);\n\
    \        let binB = b.toString(2);\n        let countA = binA.split('').filter(x\
    \ => x === '1').length;\n        let countB = binB.split('').filter(x => x ===\
    \ '1').length;\n        if (countA === countB) {\n            return a - b;\n\
    \        } else {\n            return countA - countB;\n        }\n    });\n \
    \   return sorted;\n}\n", "  return arr.sort(function(a,b){\n    var aBin = a.toString(2);\n\
    \    var bBin = b.toString(2);\n    var aOnes = aBin.match(/1/g);\n    var bOnes\
    \ = bBin.match(/1/g);\n    if(aOnes === null){\n      aOnes = 0;\n    }\n    if(bOnes\
    \ === null){\n      bOnes = 0;\n    }\n    if(aOnes.length === bOnes.length){\n\
    \      return a - b;\n    }\n    return aOnes.length - bOnes.length;\n  });\n\
    }\n", "  return arr.sort(function(a,b){\n    var a1 = a.toString(2).split('1').length-1;\n\
    \    var b1 = b.toString(2).split('1').length-1;\n    if(a1 === b1){\n      return\
    \ a - b;\n    }\n    return a1 - b1;\n  });\n}\n", "  return arr.sort(function(a,b){\n\
    \    var a1 = a.toString(2).split('1').length - 1;\n    var b1 = b.toString(2).split('1').length\
    \ - 1;\n    if(a1 === b1){\n      return a - b;\n    }\n    return a1 - b1;\n\
    \  });\n}\n", "    return arr.sort((a,b)=>{\n        let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x=>x==='1').length;\n     \
    \   if(aBin===bBin){\n            return a-b;\n        }\n        return aBin-bBin;\n\
    \    });\n}\n", "  return arr.sort(function(a,b){\n    var a1 = a.toString(2).split('').filter(function(x){return\
    \ x==1}).length;\n    var b1 = b.toString(2).split('').filter(function(x){return\
    \ x==1}).length;\n    if(a1 == b1){\n      return a - b;\n    }\n    return a1\
    \ - b1;\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n  \
    \  });\n}\n", "  return arr.sort(function(a,b){\n    var a1 = a.toString(2).split('').filter(function(x){return\
    \ x == '1'}).length;\n    var b1 = b.toString(2).split('').filter(function(x){return\
    \ x == '1'}).length;\n    if(a1 == b1){\n      return a - b;\n    }\n    return\
    \ a1 - b1;\n  });\n}\n", "  return arr.sort(function(a,b){\n    var aOnes = a.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    var bOnes = b.toString(2).split('').filter(function(x){return\
    \ x==='1'}).length;\n    if(aOnes === bOnes){\n      return a-b;\n    }\n    return\
    \ aOnes-bOnes;\n  });\n}\n", "    return arr.sort((a,b)=>{\n        let a_ones\
    \ = a.toString(2).match(/1/g).length;\n        let b_ones = b.toString(2).match(/1/g).length;\n\
    \        if(a_ones === b_ones){\n            return a - b;\n        }\n      \
    \  return a_ones - b_ones;\n    });\n}\n", "    return arr.sort((a,b)=>{\n   \
    \     let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x=>x==='1').length;\n        let bOnes = bBin.split('').filter(x=>x==='1').length;\n\
    \        if(aOnes===bOnes){\n            return a-b;\n        }\n        return\
    \ aOnes-bOnes;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_84_solve
language: js
prompt: "//Given a positive integer N, return the total sum of its digits in binary.\n\
  // Example\n// Variables:\n// @N integer\n// Constraints: 0 \u2264 N \u2264 10000.\n\
  // Output:\n// a string of binary number\nfunction solve(N){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n  assert.deepEqual(candidate(150),\"\
  110\");\n  assert.deepEqual(candidate(147),\"1100\");\n  assert.deepEqual(candidate(333),\"\
  1001\");\n  assert.deepEqual(candidate(963),\"10010\");\n}\n\ntest();"
completions: ["    var sum = 0;\n    var binary = N.toString(2);\n    for(var i =\
    \ 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n  \
    \  return sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0)\n\
    }\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    // Write your code here\n    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "    return\
    \ N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "    //..\n\
    \    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "  \
    \  let sum = 0;\n    let binary = N.toString(2);\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   //..\n    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0;\
    \ i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}", "    var sum = 0;\n    var binary = N.toString(2);\n    for(var i\
    \ = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    // Write your code here\n    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0)\n\
    }", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i <\
    \ binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n \
    \   for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    let sum = 0;\n    let binary = N.toString(2);\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    var sum = 0;\n    var binary = N.toString(2);\n\
    \    for (var i = 0; i < binary.length; i++) {\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0);\n\
    }", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i <\
    \ binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    //..\n    let binary = N.toString(2);\n    let sum = 0;\n \
    \   for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum =\
    \ 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    //..\n    let sum = 0;\n    let binary = N.toString(2);\n\
    \    for (let i = 0; i < binary.length; i++) {\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    // Write your code here\n    let binary =\
    \ N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "    return\
    \ N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n}\n", "    //..\n \
    \   var binary = N.toString(2);\n    var sum = 0;\n    for (var i = 0; i < binary.length;\
    \ i++) {\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \ let binary = N.toString(2);\n  let sum = 0;\n  for(let i = 0; i < binary.length;\
    \ i++){\n    sum += parseInt(binary[i]);\n  }\n  return sum;\n}\n", "    return\
    \ N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0)\n}\n", "  \
    \  // Write your code here\n    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    //..\n    let binary = N.toString(2);\n  \
    \  let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum =\
    \ 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    //..\n    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0)\n\
    }", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i <\
    \ binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    // Write your code here\n    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n\
    }\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b));\n\
    }", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i <\
    \ binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n \
    \   for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    let binary = N.toString(2);\n    let\
    \ sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0)\n\
    }", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i <\
    \ binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    //..\n    let binary = N.toString(2);\n    let sum = 0;\n \
    \   for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let sum = 0;\n    let binary = N.toString(2);\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum =\
    \ 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    let binary = N.toString(2);\n    let\
    \ sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    //..\n    let binary = N.toString(2);\n  \
    \  let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n\
    }\n", "    let sum = 0;\n    let binary = N.toString(2);\n    for(let i = 0; i\
    \ < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    //..\n    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0)\n\
    }\n", "    //..\n    return N.toString(2).split('').reduce((a, b) => Number(a)\
    \ + Number(b), 0)\n}", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0)\n\
    }\n", "  let binary = N.toString(2);\n  let sum = 0;\n  for(let i = 0; i < binary.length;\
    \ i++){\n    sum += parseInt(binary[i]);\n  }\n  return sum;\n}\n", "    //..\n\
    \    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "  \
    \  // Write your code here\n    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    // Write your code here\n    let binary =\
    \ N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n\
    \    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "  \
    \  // Write your code here\n    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n\
    }\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    //..\n    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0)\n\
    }", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i <\
    \ binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}", "    return N.toString(2).split('').reduce((a, b) => +a + +b);\n}\n",
  "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "  \
    \  return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0)\n}",
  "    //..\n    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0;\
    \ i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i\
    \ = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n \
    \   for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum =\
    \ 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>+a+\
    \ +b);\n}\n", "    // Write your code here\n    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let sum = 0;\n    let\
    \ binary = N.toString(2);\n    for(let i = 0; i < binary.length; i++){\n     \
    \   sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    // Write your\
    \ code here\n    let binary = N.toString(2);\n    let sum = 0;\n    for(let i\
    \ = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0)\n\
    }\n", "    //..\n    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}", "    //..\n    let binary = N.toString(2);\n    let sum\
    \ = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    let binary = N.toString(2);\n    let\
    \ sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    //..\n    let binary = N.toString(2);\n  \
    \  let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    let binary = N.toString(2);\n    let\
    \ sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let sum = 0;\n    let binary = N.toString(2);\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum =\
    \ 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "  //..\n  return N.toString(2).split('').reduce((a,b)\
    \ => parseInt(a) + parseInt(b), 0)\n}", "    //..\n    return N.toString(2).split('').reduce((a,b)=>+a+\
    \ +b)\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i\
    \ = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    //..\n    let binary = N.toString(2);\n    let sum\
    \ = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n\
    }", "    //..\n    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}", "    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0)\n\
    }\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    // Write your code here\n    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n\
    \    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b));\n}",
  "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += Number(binary[i]);\n    }\n    return sum;\n}", "    let\
    \ binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "  \
    \  let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   //..\n    var binary = N.toString(2);\n    var sum = 0;\n    for (var i =\
    \ 0; i < binary.length; i++) {\n        sum += parseInt(binary[i]);\n    }\n \
    \   return sum;\n}", "    //..\n    let binary = N.toString(2);\n    let sum =\
    \ 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum =\
    \ 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    return N.toString(2).split('').reduce((a,b)=>+a+\
    \ +b);\n}", "    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n\
    }", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i <\
    \ binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    // Write your code here\n    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>{\n\
    \        return parseInt(a) + parseInt(b);\n    },0);\n}", "    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}", "    //..\n    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n\
    }", "    //..\n    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n\
    }\n", "    //..\n    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n\
    }", "    //..\n    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0);\n\
    }", "    //..\n    var bin = N.toString(2);\n    var sum = 0;\n    for (var i\
    \ = 0; i < bin.length; i++) {\n        sum += parseInt(bin[i]);\n    }\n    return\
    \ sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b));\n\
    }\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    //..\n    let binary = N.toString(2);\n    let sum\
    \ = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0);\n\
    }\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i\
    \ = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n \
    \   for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n\
    }\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n \
    \   for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum =\
    \ 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    // Write your code here\n    let binary =\
    \ N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n\
    \    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "  \
    \  return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0)\n}\n", "    return\
    \ N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n}\n", "  //..\n  return\
    \ N.toString(2).split('').reduce((a,b) => parseInt(a) + parseInt(b));\n}", " \
    \   //..\n    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b));\n\
    }", "    // Write your code here\n    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0);\n\
    }\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i\
    \ < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}", "    let sum = 0;\n    let binary = N.toString(2);\n    for(let i\
    \ = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    //..\n    let binary = N.toString(2);\n    let sum\
    \ = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    //..\n    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0)\n\
    }\n", "    // Write your code here\n    let binary = N.toString(2);\n    let sum\
    \ = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0)\n\
    }", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i <\
    \ binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    return N.toString(2).split('').reduce((a,b)=>{\n        return\
    \ parseInt(a)+parseInt(b);\n    },0);\n}\n", "    let sum = 0;\n    let binary\
    \ = N.toString(2);\n    for(let i = 0; i < binary.length; i++){\n        sum +=\
    \ parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    // Write your code\
    \ here\n    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0;\
    \ i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n    return\
    \ sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n \
    \   for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "  return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0)\n\
    }\n", "    //..\n    let binary = N.toString(2);\n    let sum = 0;\n    for(let\
    \ i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n   \
    \ for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    //..\n    let binary = N.toString(2);\n  \
    \  let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "  let sum = 0;\n  let binary = N.toString(2);\n\
    \  for (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n\
    \  }\n  return sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    //..\n    let binary = N.toString(2);\n  \
    \  let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    // Write your code here\n    let binary =\
    \ N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n\
    \    return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n}", "   \
    \ // Write your code here\n    let sum = 0;\n    let binary = N.toString(2);\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    // Write your code here\n    let binary =\
    \ N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n\
    \    let sum = 0;\n    let binary = N.toString(2);\n    for (let i = 0; i < binary.length;\
    \ i++) {\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   return N.toString(2).split('').reduce((a,b)=>a+parseInt(b),0);\n}\n", "  \
    \  return N.toString(2).split('').reduce((a,b)=>+a+ +b)\n}\n", "    let sum =\
    \ 0;\n    let binary = N.toString(2);\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n\
    \    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "  \
    \  let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   let sum = 0;\n    let binary = N.toString(2);\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   //..\n    var binary = N.toString(2);\n    var sum = 0;\n    for (var i =\
    \ 0; i < binary.length; i++) {\n        sum += parseInt(binary[i]);\n    }\n \
    \   return sum;\n}", "    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b),0)\n\
    }\n", "    //..\n    let sum = 0;\n    let binary = N.toString(2);\n    for (let\
    \ i = 0; i < binary.length; i++) {\n        sum += parseInt(binary[i]);\n    }\n\
    \    return sum;\n}\n", "    let binary = N.toString(2);\n    let sum = 0;\n \
    \   for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    //..\n    let sum = 0;\n    let binary = N.toString(2);\n\
    \    for (let i = 0; i < binary.length; i++) {\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n", "    // Write your code here\n    let binary =\
    \ N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "    let binary\
    \ = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length; i++){\n\
    \        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", "    //..\n\
    \    return N.toString(2).split('').reduce((a,b)=>parseInt(a)+parseInt(b));\n}",
  "    let binary = N.toString(2);\n    let sum = 0;\n    for(let i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}\n", " \
    \   var binary = N.toString(2);\n    var sum = 0;\n    for(var i = 0; i < binary.length;\
    \ i++){\n        sum += parseInt(binary[i]);\n    }\n    return sum;\n}", "  \
    \  // Write your code here\n    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for(let i = 0; i < binary.length; i++){\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"
